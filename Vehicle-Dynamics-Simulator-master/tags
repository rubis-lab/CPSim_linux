!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	src/tools/trackgen/easymesh.cpp	55;"	d	file:
ABS	src/drivers/human/human.h	/^	tdble	ABS;$/;"	m	struct:HumanContext
ABS_MINSPEED	src/drivers/bt/driver.cpp	/^const float Driver::ABS_MINSPEED = 3.0f;					\/\/ [m\/s] Below this speed the ABS is disabled (numeric, division by small numbers).$/;"	m	class:Driver	file:
ABS_MINSPEED	src/drivers/bt/driver.h	/^		static const float ABS_MINSPEED;$/;"	m	class:Driver
ABS_MINSPEED	src/drivers/damned/driver.cpp	/^const float Driver::ABS_MINSPEED = 3.0f;					\/\/ [m\/s] Below this speed the ABS is disabled (numeric, division by small numbers).$/;"	m	class:Driver	file:
ABS_MINSPEED	src/drivers/damned/driver.h	/^		static const float ABS_MINSPEED;$/;"	m	class:Driver
ABS_MINSPEED	src/drivers/olethros/driver.cpp	/^    const float Driver::ABS_MINSPEED = 3.0f;						\/\/\/< [m\/s] Below this speed the ABS is disabled (numeric, division by small numbers).$/;"	m	class:olethros::Driver	file:
ABS_MINSPEED	src/drivers/olethros/driver.h	/^	static const float ABS_MINSPEED;$/;"	m	class:olethros::Driver
ABS_MINSPEED	src/drivers/sparkle/driver.cpp	/^const float Driver::ABS_MINSPEED = 3.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
ABS_MINSPEED	src/drivers/sparkle/driver.h	/^		static const float ABS_MINSPEED;$/;"	m	class:Driver
ABS_RANGE	src/drivers/bt/driver.cpp	/^const float Driver::ABS_RANGE = 5.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_RANGE	src/drivers/bt/driver.h	/^		static const float ABS_RANGE ;$/;"	m	class:Driver
ABS_RANGE	src/drivers/damned/driver.cpp	/^const float Driver::ABS_RANGE = 5.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_RANGE	src/drivers/damned/driver.h	/^		static const float ABS_RANGE ;$/;"	m	class:Driver
ABS_RANGE	src/drivers/olethros/driver.cpp	/^    const float Driver::ABS_RANGE = 5.0f;						\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
ABS_RANGE	src/drivers/olethros/driver.h	/^	static const float ABS_RANGE ;$/;"	m	class:olethros::Driver
ABS_SLIP	src/drivers/bt/driver.cpp	/^const float Driver::ABS_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_SLIP	src/drivers/bt/driver.h	/^		static const float ABS_SLIP;$/;"	m	class:Driver
ABS_SLIP	src/drivers/damned/driver.cpp	/^const float Driver::ABS_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
ABS_SLIP	src/drivers/damned/driver.h	/^		static const float ABS_SLIP;$/;"	m	class:Driver
ABS_SLIP	src/drivers/olethros/driver.cpp	/^    const float Driver::ABS_SLIP = 2.0f;							\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
ABS_SLIP	src/drivers/olethros/driver.h	/^	static const float ABS_SLIP;$/;"	m	class:olethros::Driver
ABS_SLIP	src/drivers/sparkle/driver.cpp	/^const float Driver::ABS_SLIP = 0.9;							\/* [-] range [0.95..0.3] *\/$/;"	m	class:Driver	file:
ABS_SLIP	src/drivers/sparkle/driver.h	/^		static const float ABS_SLIP;$/;"	m	class:Driver
AC3D	src/tools/accc/ac3dload.cpp	36;"	d	file:
ACCELERATOR_LETGO_TIME	src/drivers/olethros/driver.cpp	/^    const float Driver::ACCELERATOR_LETGO_TIME = 0.1f;           \/\/\/< [s] Time to let go of accelerator before braking.$/;"	m	class:olethros::Driver	file:
ACCELERATOR_LETGO_TIME	src/drivers/olethros/driver.h	/^	static const float ACCELERATOR_LETGO_TIME;$/;"	m	class:olethros::Driver
ACCELINC	src/drivers/berniw/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	src/drivers/berniw2/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	src/drivers/berniw3/mycar.h	/^		double ACCELINC;								\/* increment\/decrement for acceleration [-] *\/$/;"	m	class:MyCar
ACCELINC	src/drivers/inferno/mycar.h	/^		double ACCELINC;								\/\/ Increment\/decrement for acceleration [-].$/;"	m	class:MyCar
ACCELINC	src/drivers/lliaw/mycar.h	/^		double ACCELINC;								\/\/ Increment\/decrement for acceleration [-].$/;"	m	class:MyCar
ACCELINC	src/drivers/tita/mycar.h	/^		double ACCELINC;								\/\/ Increment\/decrement for acceleration [-].$/;"	m	class:MyCar
ACCELLIMIT	src/drivers/berniw/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	src/drivers/berniw2/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	src/drivers/berniw3/mycar.h	/^		double ACCELLIMIT;								\/* maximal allowed acceleration *\/$/;"	m	class:MyCar
ACCELLIMIT	src/drivers/inferno/mycar.h	/^		double ACCELLIMIT;								\/\/ Maximal allowed acceleration.$/;"	m	class:MyCar
ACCELLIMIT	src/drivers/lliaw/mycar.h	/^		double ACCELLIMIT;								\/\/ Maximal allowed acceleration.$/;"	m	class:MyCar
ACCELLIMIT	src/drivers/tita/mycar.h	/^		double ACCELLIMIT;								\/\/ Maximal allowed acceleration.$/;"	m	class:MyCar
ACTIVE_BP_FILTER	src/modules/graphic/ssggraph/sound_defines.h	18;"	d
ACTIVE_DISTORT_FILTER	src/modules/graphic/ssggraph/sound_defines.h	19;"	d
ACTIVE_HP_FILTER	src/modules/graphic/ssggraph/sound_defines.h	17;"	d
ACTIVE_LP_FILTER	src/modules/graphic/ssggraph/sound_defines.h	16;"	d
ACTIVE_PITCH	src/modules/graphic/ssggraph/sound_defines.h	15;"	d
ACTIVE_VOLUME	src/modules/graphic/ssggraph/sound_defines.h	14;"	d
ADD_POINT	src/tools/trackgen/easymesh.cpp	1915;"	d	file:
ADVANCE	src/drivers/inferno2/inferno2.cpp	227;"	d	file:
ADVANCE2	src/drivers/inferno2/inferno2.cpp	228;"	d	file:
ADVSTEP	src/drivers/inferno2/inferno2.cpp	229;"	d	file:
AEROMAGIC	src/drivers/berniw/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	src/drivers/berniw2/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	src/drivers/berniw3/mycar.h	/^		double AEROMAGIC;								\/* aerodynamic lift factor [-] *\/$/;"	m	class:MyCar
AEROMAGIC	src/drivers/inferno/mycar.h	/^		double AEROMAGIC;								\/\/ Aerodynamic lift factor [-].$/;"	m	class:MyCar
AEROMAGIC	src/drivers/lliaw/mycar.h	/^		double AEROMAGIC;								\/\/ Aerodynamic lift factor [-].$/;"	m	class:MyCar
AEROMAGIC	src/drivers/tita/mycar.h	/^		double AEROMAGIC;								\/\/ Aerodynamic lift factor [-].$/;"	m	class:MyCar
AFFINE	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    AFFINE = TRANSLATION | LINEAR$/;"	e	enum:Transform::__anon7
AGAIN	src/drivers/inferno2/inferno2.cpp	225;"	d	file:
AGain	src/drivers/inferno2/inferno2.cpp	/^static tdble AGain[10]     = {0.008f};$/;"	v	file:
AHEAD	src/drivers/berniw/pathfinder.h	48;"	d
AHEAD	src/drivers/berniw2/pathfinder.h	48;"	d
AHEAD	src/drivers/berniw3/pathfinder.h	48;"	d
AHEAD	src/drivers/inferno/pathfinder.h	46;"	d
AHEAD	src/drivers/lliaw/pathfinder.h	46;"	d
AHEAD	src/drivers/tita/pathfinder.h	46;"	d
ALAPI	src/windows/include/AL/al.h	33;"	d
ALAPI	src/windows/include/AL/al.h	35;"	d
ALAPI	src/windows/include/AL/al.h	49;"	d
ALAPIENTRY	src/windows/include/AL/al.h	37;"	d
ALAPIENTRY	src/windows/include/AL/al.h	53;"	d
ALCAPI	src/windows/include/AL/alc.h	18;"	d
ALCAPI	src/windows/include/AL/alc.h	20;"	d
ALCAPI	src/windows/include/AL/alc.h	33;"	d
ALCAPIENTRY	src/windows/include/AL/alc.h	22;"	d
ALCAPIENTRY	src/windows/include/AL/alc.h	37;"	d
ALC_ALL_ATTRIBUTES	src/windows/include/AL/alctypes.h	132;"	d
ALC_ATTRIBUTES_SIZE	src/windows/include/AL/alctypes.h	131;"	d
ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER	src/windows/include/AL/alctypes.h	138;"	d
ALC_CAPTURE_DEVICE_SPECIFIER	src/windows/include/AL/alctypes.h	137;"	d
ALC_CAPTURE_SAMPLES	src/windows/include/AL/alctypes.h	139;"	d
ALC_CONTEXT_H_	src/windows/include/AL/alc.h	2;"	d
ALC_DEFAULT_DEVICE_SPECIFIER	src/windows/include/AL/alctypes.h	124;"	d
ALC_DEVICE_SPECIFIER	src/windows/include/AL/alctypes.h	125;"	d
ALC_EXTENSIONS	src/windows/include/AL/alctypes.h	126;"	d
ALC_FALSE	src/windows/include/AL/alctypes.h	55;"	d
ALC_FREQUENCY	src/windows/include/AL/alctypes.h	63;"	d
ALC_INVALID	src/windows/include/AL/alctypes.h	52;"	d
ALC_INVALID_CONTEXT	src/windows/include/AL/alctypes.h	102;"	d
ALC_INVALID_DEVICE	src/windows/include/AL/alctypes.h	97;"	d
ALC_INVALID_ENUM	src/windows/include/AL/alctypes.h	107;"	d
ALC_INVALID_VALUE	src/windows/include/AL/alctypes.h	112;"	d
ALC_MAJOR_VERSION	src/windows/include/AL/alctypes.h	128;"	d
ALC_MINOR_VERSION	src/windows/include/AL/alctypes.h	129;"	d
ALC_MONO_SOURCES	src/windows/include/AL/alctypes.h	78;"	d
ALC_NO_ERROR	src/windows/include/AL/alctypes.h	92;"	d
ALC_OUT_OF_MEMORY	src/windows/include/AL/alctypes.h	117;"	d
ALC_REFRESH	src/windows/include/AL/alctypes.h	68;"	d
ALC_STEREO_SOURCES	src/windows/include/AL/alctypes.h	83;"	d
ALC_SYNC	src/windows/include/AL/alctypes.h	73;"	d
ALC_TRUE	src/windows/include/AL/alctypes.h	58;"	d
ALC_VERSION_0_1	src/windows/include/AL/alc.h	11;"	d
ALCboolean	src/windows/include/AL/alctypes.h	/^typedef char ALCboolean;$/;"	t
ALCbyte	src/windows/include/AL/alctypes.h	/^typedef char ALCbyte;$/;"	t
ALCchar	src/windows/include/AL/alctypes.h	/^typedef char ALCchar;$/;"	t
ALCcontext	src/windows/include/AL/alc.h	/^ typedef struct ALCcontext_struct ALCcontext;$/;"	t	typeref:struct:ALCcontext_struct
ALCcontext	src/windows/include/AL/alctypes.h	/^typedef void ALCcontext;$/;"	t
ALCdevice	src/windows/include/AL/alc.h	/^ typedef struct ALCdevice_struct ALCdevice;$/;"	t	typeref:struct:ALCdevice_struct
ALCdevice	src/windows/include/AL/alctypes.h	/^typedef struct _AL_device ALCdevice;$/;"	t	typeref:struct:_AL_device
ALCdouble	src/windows/include/AL/alctypes.h	/^typedef double ALCdouble;$/;"	t
ALCenum	src/windows/include/AL/alctypes.h	/^typedef int ALCenum;$/;"	t
ALCfloat	src/windows/include/AL/alctypes.h	/^typedef float ALCfloat;$/;"	t
ALCint	src/windows/include/AL/alctypes.h	/^typedef int ALCint;$/;"	t
ALCshort	src/windows/include/AL/alctypes.h	/^typedef short ALCshort;$/;"	t
ALCsizei	src/windows/include/AL/alctypes.h	/^typedef unsigned int ALCsizei;$/;"	t
ALCubyte	src/windows/include/AL/alctypes.h	/^typedef unsigned char ALCubyte;$/;"	t
ALCuint	src/windows/include/AL/alctypes.h	/^typedef unsigned ALCuint;$/;"	t
ALCushort	src/windows/include/AL/alctypes.h	/^typedef unsigned short ALCushort;$/;"	t
ALCvoid	src/windows/include/AL/alctypes.h	/^typedef void ALCvoid;$/;"	t
ALIGN_CENTER	src/modules/graphic/ssggraph/grboard.cpp	472;"	d	file:
ALIGN_LEFT	src/modules/graphic/ssggraph/grboard.cpp	473;"	d	file:
ALIGN_RIGHT	src/modules/graphic/ssggraph/grboard.cpp	474;"	d	file:
ALUTAPI	src/windows/include/AL/alut.h	20;"	d
ALUTAPI	src/windows/include/AL/alut.h	32;"	d
ALUTAPIENTRY	src/windows/include/AL/alut.h	21;"	d
ALUTAPIENTRY	src/windows/include/AL/alut.h	36;"	d
AL_BITS	src/windows/include/AL/altypes.h	267;"	d
AL_BUFFER	src/windows/include/AL/altypes.h	136;"	d
AL_BUFFERS_PROCESSED	src/windows/include/AL/altypes.h	197;"	d
AL_BUFFERS_QUEUED	src/windows/include/AL/altypes.h	196;"	d
AL_BYTE_OFFSET	src/windows/include/AL/altypes.h	204;"	d
AL_CALLBACK	src/windows/include/AL/al.h	38;"	d
AL_CALLBACK	src/windows/include/AL/al.h	57;"	d
AL_CALLBACK	src/windows/include/AL/alut.h	22;"	d
AL_CALLBACK	src/windows/include/AL/alut.h	40;"	d
AL_CHANNELS	src/windows/include/AL/altypes.h	268;"	d
AL_CHANNEL_MASK	src/windows/include/AL/altypes.h	181;"	d
AL_CONE_INNER_ANGLE	src/windows/include/AL/altypes.h	88;"	d
AL_CONE_OUTER_ANGLE	src/windows/include/AL/altypes.h	95;"	d
AL_CONE_OUTER_GAIN	src/windows/include/AL/altypes.h	248;"	d
AL_DATA	src/windows/include/AL/altypes.h	270;"	d
AL_DIRECTION	src/windows/include/AL/altypes.h	118;"	d
AL_DISTANCE_MODEL	src/windows/include/AL/altypes.h	344;"	d
AL_DOPPLER_FACTOR	src/windows/include/AL/altypes.h	325;"	d
AL_DOPPLER_VELOCITY	src/windows/include/AL/altypes.h	330;"	d
AL_EXPONENT_DISTANCE	src/windows/include/AL/altypes.h	349;"	d
AL_EXPONENT_DISTANCE_CLAMPED	src/windows/include/AL/altypes.h	350;"	d
AL_EXTENSIONS	src/windows/include/AL/altypes.h	318;"	d
AL_FALSE	src/windows/include/AL/altypes.h	73;"	d
AL_FORMAT_MONO16	src/windows/include/AL/altypes.h	219;"	d
AL_FORMAT_MONO8	src/windows/include/AL/altypes.h	218;"	d
AL_FORMAT_STEREO16	src/windows/include/AL/altypes.h	221;"	d
AL_FORMAT_STEREO8	src/windows/include/AL/altypes.h	220;"	d
AL_FREQUENCY	src/windows/include/AL/altypes.h	266;"	d
AL_GAIN	src/windows/include/AL/altypes.h	149;"	d
AL_ILLEGAL_COMMAND	src/windows/include/AL/altypes.h	304;"	d
AL_ILLEGAL_ENUM	src/windows/include/AL/altypes.h	293;"	d
AL_INITIAL	src/windows/include/AL/altypes.h	188;"	d
AL_INVALID	src/windows/include/AL/altypes.h	68;"	d
AL_INVALID_ENUM	src/windows/include/AL/altypes.h	294;"	d
AL_INVALID_NAME	src/windows/include/AL/altypes.h	288;"	d
AL_INVALID_OPERATION	src/windows/include/AL/altypes.h	305;"	d
AL_INVALID_VALUE	src/windows/include/AL/altypes.h	299;"	d
AL_INVERSE_DISTANCE	src/windows/include/AL/altypes.h	345;"	d
AL_INVERSE_DISTANCE_CLAMPED	src/windows/include/AL/altypes.h	346;"	d
AL_LINEAR_DISTANCE	src/windows/include/AL/altypes.h	347;"	d
AL_LINEAR_DISTANCE_CLAMPED	src/windows/include/AL/altypes.h	348;"	d
AL_LOOPING	src/windows/include/AL/altypes.h	129;"	d
AL_MAX_DISTANCE	src/windows/include/AL/altypes.h	258;"	d
AL_MAX_GAIN	src/windows/include/AL/altypes.h	167;"	d
AL_MIN_GAIN	src/windows/include/AL/altypes.h	158;"	d
AL_NONE	src/windows/include/AL/altypes.h	70;"	d
AL_NO_ERROR	src/windows/include/AL/altypes.h	283;"	d
AL_ORIENTATION	src/windows/include/AL/altypes.h	174;"	d
AL_OUT_OF_MEMORY	src/windows/include/AL/altypes.h	311;"	d
AL_PAUSED	src/windows/include/AL/altypes.h	190;"	d
AL_PENDING	src/windows/include/AL/altypes.h	278;"	d
AL_PITCH	src/windows/include/AL/altypes.h	103;"	d
AL_PLAYING	src/windows/include/AL/altypes.h	189;"	d
AL_POSITION	src/windows/include/AL/altypes.h	115;"	d
AL_PROCESSED	src/windows/include/AL/altypes.h	279;"	d
AL_REFERENCE_DISTANCE	src/windows/include/AL/altypes.h	231;"	d
AL_RENDERER	src/windows/include/AL/altypes.h	317;"	d
AL_ROLLOFF_FACTOR	src/windows/include/AL/altypes.h	239;"	d
AL_SAMPLE_OFFSET	src/windows/include/AL/altypes.h	203;"	d
AL_SEC_OFFSET	src/windows/include/AL/altypes.h	202;"	d
AL_SIZE	src/windows/include/AL/altypes.h	269;"	d
AL_SOURCE_RELATIVE	src/windows/include/AL/altypes.h	79;"	d
AL_SOURCE_STATE	src/windows/include/AL/altypes.h	187;"	d
AL_SOURCE_TYPE	src/windows/include/AL/altypes.h	212;"	d
AL_SPEED_OF_SOUND	src/windows/include/AL/altypes.h	335;"	d
AL_STATIC	src/windows/include/AL/altypes.h	213;"	d
AL_STOPPED	src/windows/include/AL/altypes.h	191;"	d
AL_STREAMING	src/windows/include/AL/altypes.h	214;"	d
AL_TRUE	src/windows/include/AL/altypes.h	76;"	d
AL_UNDETERMINED	src/windows/include/AL/altypes.h	215;"	d
AL_UNUSED	src/windows/include/AL/altypes.h	277;"	d
AL_VELOCITY	src/windows/include/AL/altypes.h	121;"	d
AL_VENDOR	src/windows/include/AL/altypes.h	315;"	d
AL_VERSION	src/windows/include/AL/altypes.h	316;"	d
ALbitfield	src/windows/include/AL/altypes.h	/^typedef unsigned int ALbitfield;$/;"	t
ALboolean	src/windows/include/AL/altypes.h	/^typedef char ALboolean;$/;"	t
ALbyte	src/windows/include/AL/altypes.h	/^typedef char ALbyte;$/;"	t
ALchar	src/windows/include/AL/altypes.h	/^typedef char ALchar;$/;"	t
ALclampd	src/windows/include/AL/altypes.h	/^typedef ALdouble ALclampd;$/;"	t
ALclampf	src/windows/include/AL/altypes.h	/^typedef ALfloat ALclampf;$/;"	t
ALdouble	src/windows/include/AL/altypes.h	/^typedef double ALdouble;$/;"	t
ALenum	src/windows/include/AL/altypes.h	/^typedef int ALenum;$/;"	t
ALfloat	src/windows/include/AL/altypes.h	/^typedef float ALfloat;$/;"	t
ALint	src/windows/include/AL/altypes.h	/^typedef int ALint;$/;"	t
ALshort	src/windows/include/AL/altypes.h	/^typedef short ALshort;$/;"	t
ALsizei	src/windows/include/AL/altypes.h	/^typedef unsigned int ALsizei;$/;"	t
ALubyte	src/windows/include/AL/altypes.h	/^typedef unsigned char ALubyte;$/;"	t
ALuint	src/windows/include/AL/altypes.h	/^typedef unsigned int ALuint;$/;"	t
ALushort	src/windows/include/AL/altypes.h	/^typedef unsigned short ALushort;$/;"	t
ALvoid	src/windows/include/AL/altypes.h	/^typedef void ALvoid;$/;"	t
AMARG	src/drivers/inferno2/inferno2.cpp	509;"	d	file:
ANN	export/include/learning/ANN.h	/^} ANN;$/;"	t	typeref:struct:ANN_
ANN	src/libs/learning/ANN.h	/^} ANN;$/;"	t	typeref:struct:ANN_
ANN_	export/include/learning/ANN.h	/^typedef struct ANN_ {$/;"	s
ANN_	src/libs/learning/ANN.h	/^typedef struct ANN_ {$/;"	s
ANN_AddHiddenLayer	src/libs/learning/ANN.cpp	/^int ANN_AddHiddenLayer(ANN * ann, int n_nodes)$/;"	f
ANN_AddLayer	src/libs/learning/ANN.cpp	/^Layer *ANN_AddLayer(ANN * ann, int n_inputs, int n_outputs, real * x)$/;"	f
ANN_AddRBFHiddenLayer	src/libs/learning/ANN.cpp	/^int ANN_AddRBFHiddenLayer(ANN * ann, int n_nodes)$/;"	f
ANN_AddRBFLayer	src/libs/learning/ANN.cpp	/^Layer *ANN_AddRBFLayer(ANN * ann, int n_inputs, int n_outputs, real * x)$/;"	f
ANN_Backpropagate	src/libs/learning/ANN.cpp	/^real ANN_Backpropagate(LISTITEM * p, real * d, bool use_eligibility, real TD)$/;"	f
ANN_BatchAdapt	src/libs/learning/ANN.cpp	/^void ANN_BatchAdapt(ANN * ann)$/;"	f
ANN_CalculateLayerOutputs	src/libs/learning/ANN.cpp	/^void ANN_CalculateLayerOutputs(Layer * current_layer, bool stochastic)$/;"	f
ANN_DBUG	src/libs/learning/ANN.cpp	18;"	d	file:
ANN_Delta_Train	src/libs/learning/ANN.cpp	/^real ANN_Delta_Train(ANN * ann, real* delta, real TD)$/;"	f
ANN_FreeLayer	src/libs/learning/ANN.cpp	/^void ANN_FreeLayer(Layer * l)$/;"	f
ANN_FreeLayer	src/libs/learning/ANN.cpp	/^void ANN_FreeLayer(void *l)$/;"	f
ANN_GetError	src/libs/learning/ANN.cpp	/^real ANN_GetError(ANN * ann)$/;"	f
ANN_GetErrorVector	src/libs/learning/ANN.cpp	/^real* ANN_GetErrorVector(ANN * ann)$/;"	f
ANN_GetOutput	src/libs/learning/ANN.cpp	/^real *ANN_GetOutput(ANN * ann)$/;"	f
ANN_H	export/include/learning/ANN.h	14;"	d
ANN_H	src/libs/learning/ANN.h	14;"	d
ANN_Init	src/libs/learning/ANN.cpp	/^int ANN_Init(ANN * ann)$/;"	f
ANN_Input	src/libs/learning/ANN.cpp	/^real ANN_Input(ANN * ann, real * x)$/;"	f
ANN_LayerBatchAdapt	src/libs/learning/ANN.cpp	/^void ANN_LayerBatchAdapt(Layer * l)$/;"	f
ANN_LayerShowInputs	src/libs/learning/ANN.cpp	/^real ANN_LayerShowInputs(Layer * l)$/;"	f
ANN_LayerShowWeights	src/libs/learning/ANN.cpp	/^real ANN_LayerShowWeights(Layer * l)$/;"	f
ANN_POLICY_H	export/include/learning/ann_policy.h	16;"	d
ANN_POLICY_H	src/libs/learning/ann_policy.h	16;"	d
ANN_Policy	export/include/learning/ann_policy.h	/^class ANN_Policy : public DiscretePolicy$/;"	c
ANN_Policy	src/libs/learning/ann_policy.cpp	/^ANN_Policy::ANN_Policy (int n_states, int n_actions, int n_hidden, real alpha, real gamma, real lambda, bool eligibility, bool softmax, real randomness, real init_eval, bool separate_actions) : DiscretePolicy (n_states, n_actions, alpha, gamma, lambda, softmax, randomness, init_eval)$/;"	f	class:ANN_Policy
ANN_Policy	src/libs/learning/ann_policy.h	/^class ANN_Policy : public DiscretePolicy$/;"	c
ANN_RBFBackpropagate	src/libs/learning/ANN.cpp	/^real ANN_RBFBackpropagate(LISTITEM * p, real * d, bool use_eligibility, real TD)$/;"	f
ANN_RBFCalculateLayerOutputs	src/libs/learning/ANN.cpp	/^void ANN_RBFCalculateLayerOutputs(Layer * current_layer, bool stochastic)$/;"	f
ANN_Reset	src/libs/learning/ANN.cpp	/^void ANN_Reset(ANN * ann)$/;"	f
ANN_SetBatchMode	src/libs/learning/ANN.cpp	/^void ANN_SetBatchMode(ANN * ann, bool batch)$/;"	f
ANN_SetLambda	src/libs/learning/ANN.cpp	/^void ANN_SetLambda(ANN * ann, real lambda)$/;"	f
ANN_SetLearningRate	src/libs/learning/ANN.cpp	/^void ANN_SetLearningRate(ANN * ann, real a)$/;"	f
ANN_SetOutputsToLinear	src/libs/learning/ANN.cpp	/^void ANN_SetOutputsToLinear(ANN * ann)$/;"	f
ANN_SetOutputsToTanH	src/libs/learning/ANN.cpp	/^void ANN_SetOutputsToTanH(ANN * ann)$/;"	f
ANN_SetZeta	src/libs/learning/ANN.cpp	/^void ANN_SetZeta(ANN * ann, real zeta)$/;"	f
ANN_ShowInputs	src/libs/learning/ANN.cpp	/^real ANN_ShowInputs(ANN * ann)$/;"	f
ANN_ShowOutputs	src/libs/learning/ANN.cpp	/^void ANN_ShowOutputs(ANN * ann)$/;"	f
ANN_ShowWeights	src/libs/learning/ANN.cpp	/^real ANN_ShowWeights(ANN * ann)$/;"	f
ANN_StochasticInput	src/libs/learning/ANN.cpp	/^real ANN_StochasticInput(ANN * ann, real * x)$/;"	f
ANN_Test	src/libs/learning/ANN.cpp	/^real ANN_Test(ANN * ann, real * x, real * t)$/;"	f
ANN_Train	src/libs/learning/ANN.cpp	/^real ANN_Train(ANN * ann, real * x, real * t)$/;"	f
ANTICLOCKWISE	src/tools/trackgen/trackgen.h	30;"	d
APIENTRY	src/windows/include/GL/glext.h	43;"	d
APIENTRY	src/windows/include/GL/glut.h	23;"	d
APIENTRY	src/windows/include/GL/glut.h	25;"	d
APIENTRY	src/windows/include/GL/glut.h	588;"	d
APIENTRY	src/windows/include/GL/glut.h	63;"	d
APIENTRY	src/windows/include/GL/wglext.h	43;"	d
APIENTRY	src/windows/osspec.h	44;"	d
APIENTRY	src/windows/osspec.h	45;"	d
APIENTRYP	src/windows/include/GL/glext.h	46;"	d
APIENTRYP	src/windows/include/GL/wglext.h	46;"	d
APPROACHING	src/drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
ARRAY	src/modules/graphic/ssggraph/grvtxtable.h	68;"	d
ARR_DATAPTS	export/include/car.h	510;"	d
ARR_DATAPTS	src/interfaces/car.h	510;"	d
ARR_GEARS	export/include/car.h	522;"	d
ARR_GEARS	src/interfaces/car.h	522;"	d
ATTRIBUTE	src/libs/txml/xmltok.h	/^} ATTRIBUTE;$/;"	t	typeref:struct:__anon69
ATTRIBUTE_ID	src/libs/txml/xmlparse.c	/^} ATTRIBUTE_ID;$/;"	t	typeref:struct:__anon78	file:
AbandonRaceHookActivate	src/libs/raceengineclient/racemain.cpp	/^AbandonRaceHookActivate(void * \/* vforce *\/)$/;"	f	file:
AbandonRaceHookHandle	src/libs/raceengineclient/racemain.cpp	/^static void *AbandonRaceHookHandle = 0;$/;"	v	file:
AbandonRaceHookInit	src/libs/raceengineclient/racemain.cpp	/^AbandonRaceHookInit(void)$/;"	f	file:
AbortRaceHookActivate	src/libs/raceengineclient/racemain.cpp	/^AbortRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
AbortRaceHookHandle	src/libs/raceengineclient/racemain.cpp	/^static void *AbortRaceHookHandle = 0;$/;"	v	file:
AbortRaceHookInit	src/libs/raceengineclient/racemain.cpp	/^AbortRaceHookInit(void)$/;"	f	file:
AbstractCar	src/drivers/berniw/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	src/drivers/berniw/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	src/drivers/berniw2/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	src/drivers/berniw2/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	src/drivers/berniw3/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	src/drivers/berniw3/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	src/drivers/inferno/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	src/drivers/inferno/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	src/drivers/lliaw/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	src/drivers/lliaw/mycar.h	/^class AbstractCar$/;"	c
AbstractCar	src/drivers/tita/mycar.h	/^		AbstractCar() {};$/;"	f	class:AbstractCar
AbstractCar	src/drivers/tita/mycar.h	/^class AbstractCar$/;"	c
AbstractStrategy	src/drivers/bt/strategy.h	/^class AbstractStrategy {$/;"	c
AbstractStrategy	src/drivers/damned/strategy.h	/^class AbstractStrategy {$/;"	c
AbstractStrategy	src/drivers/olethros/strategy.h	/^class AbstractStrategy {$/;"	c	namespace:olethros
Ac3dClose	src/tools/trackgen/ac3d.cpp	/^Ac3dClose(FILE *save_fd)$/;"	f
Ac3dGroup	src/tools/trackgen/ac3d.cpp	/^Ac3dGroup(FILE *save_fd, char *name, int nbObjects)$/;"	f
Ac3dOpen	src/tools/trackgen/ac3d.cpp	/^Ac3dOpen(char *filename, int nbObjects)$/;"	f
ActiveGroups	src/tools/trackgen/easymesh.cpp	/^static int		ActiveGroups;$/;"	v	file:
ActiveGroups	src/tools/trackgen/track.cpp	/^static int		ActiveGroups;$/;"	v	file:
Add	src/drivers/olethros/TrackData.h	/^    void Add(Segment segment)$/;"	f	class:SegmentList
AddCurve	src/drivers/olethros/TrackData.cpp	/^void TrackData::AddCurve (SegmentList& segments, float arc, float radius, float end_width_l, float end_width_r)$/;"	f	class:TrackData
AddObject	src/tools/trackgen/objects.cpp	/^AddObject(unsigned int clr, tdble x, tdble y)$/;"	f	file:
AddSide	src/modules/track/track1.cpp	/^AddSide(tTrackSeg *curSeg, tdble width, char *material, int side, int type, void *TrackHandle)$/;"	f	file:
AddSides	src/modules/track/track2.cpp	/^AddSides(tTrackSeg *curSeg, void *TrackHandle, char *section, int curStep, int steps)$/;"	f	file:
AddSides	src/modules/track/track3.cpp	/^AddSides(tTrackSeg *curSeg, void *TrackHandle, tTrack *theTrack, int curStep, int steps)$/;"	f	file:
AddSides	src/modules/track/track4.cpp	/^AddSides(tTrackSeg *curSeg, void *TrackHandle, tTrack *theTrack, int curStep, int steps)$/;"	f	file:
AddStraight	src/drivers/olethros/TrackData.cpp	/^void TrackData::AddStraight (SegmentList& segments, float length, float end_width_l, float end_width_r)$/;"	f	class:TrackData
AddToRoot	src/tools/trackgen/objects.cpp	/^AddToRoot(ssgEntity *node)$/;"	f	file:
AddTrackSurface	src/modules/track/track3.cpp	/^AddTrackSurface(void *TrackHandle, tTrack *theTrack, char *material)$/;"	f	file:
AddTrackSurface	src/modules/track/track4.cpp	/^AddTrackSurface(void *TrackHandle, tTrack *theTrack, char *material)$/;"	f	file:
AdjustFriction	src/drivers/olethros/learn.cpp	/^void SegLearn::AdjustFriction (tTrackSeg* s, float G, float mass_, float CA_, float CW_, float u_, float brake_, float learning_rate)$/;"	f	class:SegLearn
AdjustRadi	src/drivers/olethros/driver.cpp	/^    void Driver::AdjustRadi(tTrackSeg* cs, tTrackSeg* ce, float* radi)$/;"	f	class:olethros::Driver
AdvStep	src/drivers/inferno2/inferno2.cpp	/^static tdble AdvStep[10]   = {1.0f};$/;"	v	file:
Advance	src/drivers/inferno2/inferno2.cpp	/^static tdble Advance[10]   = {3.5f};$/;"	v	file:
Advance2	src/drivers/inferno2/inferno2.cpp	/^static tdble Advance2[10]  = {10.0f};$/;"	v	file:
AlgoTable	src/modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^class AlgoTable {$/;"	c
AllocM	export/include/learning/learn_debug.h	30;"	d
AllocM	src/libs/learning/learn_debug.h	30;"	d
AntiSlip	src/drivers/human/human.h	/^	tdble	AntiSlip;$/;"	m	struct:HumanContext
ApplyTransform	src/tools/trackgen/objects.cpp	/^ApplyTransform(sgMat4 m, ssgBase *node)$/;"	f	file:
ArgMax	src/libs/learning/MathFunctions.cpp	/^int ArgMax (int n, real* x)$/;"	f
ArgMin	src/libs/learning/MathFunctions.cpp	/^int ArgMin (int n, real* x)$/;"	f
AuthorId	src/libs/racescreens/trackselect.cpp	/^static int AuthorId;$/;"	v	file:
AutoReverse	src/drivers/human/human.h	/^	int		AutoReverse;$/;"	m	struct:HumanContext
AutoReverseEngaged	src/drivers/human/human.h	/^	int 	AutoReverseEngaged;$/;"	m	struct:HumanContext
AutoReverseId	src/libs/confscreens/driverconfig.cpp	/^static int AutoReverseId;$/;"	v	file:
Averages	src/drivers/olethros/learn.h	/^		Averages ()$/;"	f	class:olethros::SegLearn::Averages
Averages	src/drivers/olethros/learn.h	/^	class Averages {$/;"	c	class:olethros::SegLearn
AxleSect	src/modules/simu/simuv2/axle.cpp	/^static char *AxleSect[2] = {SECT_FRNTAXLE, SECT_REARAXLE};$/;"	v	file:
BACK	src/drivers/inferno/pathfinder.h	47;"	d
BACK	src/drivers/lliaw/pathfinder.h	47;"	d
BACK	src/drivers/tita/pathfinder.h	47;"	d
BACKCOLLDIST	src/drivers/bt/opponent.cpp	/^const float Opponent::BACKCOLLDIST = 70.0f;				\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
BACKCOLLDIST	src/drivers/bt/opponent.h	/^		static const float BACKCOLLDIST;$/;"	m	class:Opponent
BACKCOLLDIST	src/drivers/damned/opponent.cpp	/^const float Opponent::BACKCOLLDIST = 70.0f;				\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
BACKCOLLDIST	src/drivers/damned/opponent.h	/^		static const float BACKCOLLDIST;$/;"	m	class:Opponent
BACKCOLLDIST	src/drivers/olethros/opponent.cpp	/^const float Opponent::BACKCOLLDIST = 70.0;				\/\/ [m] distance on the track to check other cars.$/;"	m	class:olethros::Opponent	file:
BACKCOLLDIST	src/drivers/olethros/opponent.h	/^		static const float BACKCOLLDIST;$/;"	m	class:olethros::Opponent
BACKCOLLDIST	src/drivers/sparkle/opponent.cpp	/^float Opponent::BACKCOLLDIST = 50.0;	\/* [m] distance on the track to check other cars *\/$/;"	m	class:Opponent	file:
BACKCOLLDIST	src/drivers/sparkle/opponent.h	/^		static float BACKCOLLDIST;$/;"	m	class:Opponent
BBox	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  BBox() {} $/;"	f	class:BBox
BBox	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  BBox(const Point& min, const Point& max) { setValue(min, max); }$/;"	f	class:BBox
BBox	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^class BBox {$/;"	c
BBoxCompAxis	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^  BBoxCompAxis(int a) : axis(a) {}$/;"	f	class:BBoxCompAxis
BBoxCompAxis	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^class BBoxCompAxis {$/;"	c	file:
BBoxInternal	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^BBoxInternal::BBoxInternal(int n, BBoxLeaf *l) {$/;"	f	class:BBoxInternal
BBoxInternal	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxInternal() {}$/;"	f	class:BBoxInternal
BBoxInternal	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^class BBoxInternal : public BBoxNode {$/;"	c
BBoxLeaf	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxLeaf() {}$/;"	f	class:BBoxLeaf
BBoxLeaf	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxLeaf(const Polytope *p) : poly(p) { $/;"	f	class:BBoxLeaf
BBoxLeaf	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^class BBoxLeaf : public BBoxNode {$/;"	c
BBoxNode	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^class BBoxNode {$/;"	c
BERNIW_ATT_AMAGIC	src/drivers/berniw/berniw.h	48;"	d
BERNIW_ATT_AMAGIC	src/drivers/berniw2/berniw.h	48;"	d
BERNIW_ATT_AMAGIC	src/drivers/berniw3/berniw.h	48;"	d
BERNIW_ATT_AMAGIC	src/drivers/inferno/berniw.h	52;"	d
BERNIW_ATT_AMAGIC	src/drivers/lliaw/berniw.h	52;"	d
BERNIW_ATT_AMAGIC	src/drivers/tita/berniw.h	52;"	d
BERNIW_ATT_FMAGIC	src/drivers/berniw/berniw.h	49;"	d
BERNIW_ATT_FMAGIC	src/drivers/berniw2/berniw.h	49;"	d
BERNIW_ATT_FMAGIC	src/drivers/berniw3/berniw.h	49;"	d
BERNIW_ATT_FMAGIC	src/drivers/inferno/berniw.h	53;"	d
BERNIW_ATT_FMAGIC	src/drivers/lliaw/berniw.h	53;"	d
BERNIW_ATT_FMAGIC	src/drivers/tita/berniw.h	53;"	d
BERNIW_ATT_FUELPERLAP	src/drivers/berniw/berniw.h	50;"	d
BERNIW_ATT_FUELPERLAP	src/drivers/berniw2/berniw.h	50;"	d
BERNIW_ATT_FUELPERLAP	src/drivers/berniw3/berniw.h	50;"	d
BERNIW_ATT_FUELPERLAP	src/drivers/inferno/berniw.h	54;"	d
BERNIW_ATT_FUELPERLAP	src/drivers/lliaw/berniw.h	54;"	d
BERNIW_ATT_FUELPERLAP	src/drivers/tita/berniw.h	54;"	d
BERNIW_ATT_PITENTRY	src/drivers/berniw/berniw.h	46;"	d
BERNIW_ATT_PITENTRY	src/drivers/berniw2/berniw.h	46;"	d
BERNIW_ATT_PITENTRY	src/drivers/berniw3/berniw.h	46;"	d
BERNIW_ATT_PITENTRY	src/drivers/inferno/berniw.h	50;"	d
BERNIW_ATT_PITENTRY	src/drivers/lliaw/berniw.h	50;"	d
BERNIW_ATT_PITENTRY	src/drivers/tita/berniw.h	50;"	d
BERNIW_ATT_PITEXIT	src/drivers/berniw/berniw.h	47;"	d
BERNIW_ATT_PITEXIT	src/drivers/berniw2/berniw.h	47;"	d
BERNIW_ATT_PITEXIT	src/drivers/berniw3/berniw.h	47;"	d
BERNIW_ATT_PITEXIT	src/drivers/inferno/berniw.h	51;"	d
BERNIW_ATT_PITEXIT	src/drivers/lliaw/berniw.h	51;"	d
BERNIW_ATT_PITEXIT	src/drivers/tita/berniw.h	51;"	d
BERNIW_ATT_STEERPGAIN	src/drivers/inferno/berniw.h	55;"	d
BERNIW_ATT_STEERPGAIN	src/drivers/lliaw/berniw.h	55;"	d
BERNIW_ATT_STEERPGAIN	src/drivers/tita/berniw.h	55;"	d
BERNIW_ATT_STEERPGAIN_MAX	src/drivers/inferno/berniw.h	56;"	d
BERNIW_ATT_STEERPGAIN_MAX	src/drivers/lliaw/berniw.h	56;"	d
BERNIW_ATT_STEERPGAIN_MAX	src/drivers/tita/berniw.h	56;"	d
BERNIW_ATT_TEAMMATE	src/drivers/inferno/berniw.h	57;"	d
BERNIW_ATT_TEAMMATE	src/drivers/lliaw/berniw.h	57;"	d
BERNIW_ATT_TEAMMATE	src/drivers/tita/berniw.h	57;"	d
BERNIW_SECT_PRIV	src/drivers/berniw/berniw.h	45;"	d
BERNIW_SECT_PRIV	src/drivers/berniw2/berniw.h	45;"	d
BERNIW_SECT_PRIV	src/drivers/berniw3/berniw.h	45;"	d
BERNIW_SECT_PRIV	src/drivers/inferno/berniw.h	49;"	d
BERNIW_SECT_PRIV	src/drivers/lliaw/berniw.h	49;"	d
BERNIW_SECT_PRIV	src/drivers/tita/berniw.h	49;"	d
BG_DIST	src/modules/graphic/ssggraph/grscene.cpp	69;"	d	file:
BLOCK	src/libs/txml/xmlparse.c	/^} BLOCK;$/;"	t	typeref:struct:block	file:
BORDER_OVERTAKE_MARGIN	src/drivers/bt/driver.cpp	/^const float Driver::BORDER_OVERTAKE_MARGIN = 0.5f;			\/\/ [m]$/;"	m	class:Driver	file:
BORDER_OVERTAKE_MARGIN	src/drivers/bt/driver.h	/^		static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:Driver
BORDER_OVERTAKE_MARGIN	src/drivers/damned/driver.cpp	/^const float Driver::BORDER_OVERTAKE_MARGIN = 0.5f;			\/\/ [m]$/;"	m	class:Driver	file:
BORDER_OVERTAKE_MARGIN	src/drivers/damned/driver.h	/^		static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:Driver
BORDER_OVERTAKE_MARGIN	src/drivers/olethros/driver.cpp	/^    const float Driver::BORDER_OVERTAKE_MARGIN = 0.5f;			\/\/\/< [m]$/;"	m	class:olethros::Driver	file:
BORDER_OVERTAKE_MARGIN	src/drivers/olethros/driver.h	/^	static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:olethros::Driver
BORDER_OVERTAKE_MARGIN	src/drivers/sparkle/driver.cpp	/^const float Driver::BORDER_OVERTAKE_MARGIN = 0.5;			\/* [m] *\/$/;"	m	class:Driver	file:
BORDER_OVERTAKE_MARGIN	src/drivers/sparkle/driver.h	/^		static const float BORDER_OVERTAKE_MARGIN;$/;"	m	class:Driver
BOTS	src/drivers/berniw/berniw.h	42;"	d
BOTS	src/drivers/berniw2/berniw.h	42;"	d
BOTS	src/drivers/berniw3/berniw.h	42;"	d
BOTS	src/drivers/inferno/berniw.h	46;"	d
BOTS	src/drivers/lliaw/berniw.h	46;"	d
BOTS	src/drivers/tita/berniw.h	46;"	d
BOUNDED	export/include/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
BOUNDED	src/libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
BRK_ANGLE	src/modules/graphic/ssggraph/grcar.cpp	112;"	d	file:
BRK_BRANCH	src/modules/graphic/ssggraph/grcar.cpp	111;"	d	file:
BRK_OFFSET	src/modules/graphic/ssggraph/grcar.cpp	113;"	d	file:
BR_HEIGHT_1	src/tools/trackgen/track.cpp	2187;"	d	file:
BR_HEIGHT_2	src/tools/trackgen/track.cpp	2188;"	d	file:
BR_WIDTH_0	src/tools/trackgen/track.cpp	2189;"	d	file:
BR_WIDTH_1	src/tools/trackgen/track.cpp	2190;"	d	file:
BT_AMP	src/libs/txml/xmltok_impl.h	/^  BT_AMP,$/;"	e	enum:__anon84
BT_APOS	src/libs/txml/xmltok_impl.h	/^  BT_APOS,$/;"	e	enum:__anon84
BT_AST	src/libs/txml/xmltok_impl.h	/^  BT_AST,$/;"	e	enum:__anon84
BT_ATT_BESTLAP	src/drivers/bt/driver.h	46;"	d
BT_ATT_BESTLAP	src/drivers/damned/driver.h	46;"	d
BT_ATT_FUELPERLAP	src/drivers/bt/driver.h	43;"	d
BT_ATT_FUELPERLAP	src/drivers/damned/driver.h	43;"	d
BT_ATT_FUELPERLAP	src/drivers/sparkle/driver.cpp	23;"	d	file:
BT_ATT_MUFACTOR	src/drivers/bt/driver.h	44;"	d
BT_ATT_MUFACTOR	src/drivers/damned/driver.h	44;"	d
BT_ATT_MUFACTOR	src/drivers/sparkle/driver.cpp	24;"	d	file:
BT_ATT_PITTIME	src/drivers/bt/driver.h	45;"	d
BT_ATT_PITTIME	src/drivers/damned/driver.h	45;"	d
BT_ATT_TEAMMATE	src/drivers/bt/driver.h	48;"	d
BT_ATT_TEAMMATE	src/drivers/damned/driver.h	48;"	d
BT_ATT_WORSTLAP	src/drivers/bt/driver.h	47;"	d
BT_ATT_WORSTLAP	src/drivers/damned/driver.h	47;"	d
BT_COMMA	src/libs/txml/xmltok_impl.h	/^  BT_COMMA,$/;"	e	enum:__anon84
BT_CR	src/libs/txml/xmltok_impl.h	/^  BT_CR,$/;"	e	enum:__anon84
BT_DIGIT	src/libs/txml/xmltok_impl.h	/^  BT_DIGIT,$/;"	e	enum:__anon84
BT_EQUALS	src/libs/txml/xmltok_impl.h	/^  BT_EQUALS,$/;"	e	enum:__anon84
BT_EXCL	src/libs/txml/xmltok_impl.h	/^  BT_EXCL,$/;"	e	enum:__anon84
BT_GT	src/libs/txml/xmltok_impl.h	/^  BT_GT,$/;"	e	enum:__anon84
BT_HEX	src/libs/txml/xmltok_impl.h	/^  BT_HEX,$/;"	e	enum:__anon84
BT_LEAD2	src/libs/txml/xmltok_impl.h	/^  BT_LEAD2,$/;"	e	enum:__anon84
BT_LEAD3	src/libs/txml/xmltok_impl.h	/^  BT_LEAD3,$/;"	e	enum:__anon84
BT_LEAD4	src/libs/txml/xmltok_impl.h	/^  BT_LEAD4,$/;"	e	enum:__anon84
BT_LF	src/libs/txml/xmltok_impl.h	/^  BT_LF,$/;"	e	enum:__anon84
BT_LPAR	src/libs/txml/xmltok_impl.h	/^  BT_LPAR,$/;"	e	enum:__anon84
BT_LSQB	src/libs/txml/xmltok_impl.h	/^  BT_LSQB,$/;"	e	enum:__anon84
BT_LT	src/libs/txml/xmltok_impl.h	/^  BT_LT,$/;"	e	enum:__anon84
BT_MALFORM	src/libs/txml/xmltok_impl.h	/^  BT_MALFORM,$/;"	e	enum:__anon84
BT_MINUS	src/libs/txml/xmltok_impl.h	/^  BT_MINUS,$/;"	e	enum:__anon84
BT_NAME	src/libs/txml/xmltok_impl.h	/^  BT_NAME,$/;"	e	enum:__anon84
BT_NMSTRT	src/libs/txml/xmltok_impl.h	/^  BT_NMSTRT,$/;"	e	enum:__anon84
BT_NONASCII	src/libs/txml/xmltok_impl.h	/^  BT_NONASCII, \/* might be a name or name start character *\/$/;"	e	enum:__anon84
BT_NONXML	src/libs/txml/xmltok_impl.h	/^  BT_NONXML,$/;"	e	enum:__anon84
BT_NUM	src/libs/txml/xmltok_impl.h	/^  BT_NUM,$/;"	e	enum:__anon84
BT_OTHER	src/libs/txml/xmltok_impl.h	/^  BT_OTHER, \/* known not to be a name or name start character *\/$/;"	e	enum:__anon84
BT_PERCNT	src/libs/txml/xmltok_impl.h	/^  BT_PERCNT,$/;"	e	enum:__anon84
BT_PLUS	src/libs/txml/xmltok_impl.h	/^  BT_PLUS,$/;"	e	enum:__anon84
BT_QUEST	src/libs/txml/xmltok_impl.h	/^  BT_QUEST,$/;"	e	enum:__anon84
BT_QUOT	src/libs/txml/xmltok_impl.h	/^  BT_QUOT,$/;"	e	enum:__anon84
BT_RPAR	src/libs/txml/xmltok_impl.h	/^  BT_RPAR,$/;"	e	enum:__anon84
BT_RSQB	src/libs/txml/xmltok_impl.h	/^  BT_RSQB,$/;"	e	enum:__anon84
BT_S	src/libs/txml/xmltok_impl.h	/^  BT_S,$/;"	e	enum:__anon84
BT_SECT_PRIV	src/drivers/bt/driver.h	42;"	d
BT_SECT_PRIV	src/drivers/damned/driver.h	42;"	d
BT_SECT_PRIV	src/drivers/sparkle/driver.cpp	22;"	d	file:
BT_SEMI	src/libs/txml/xmltok_impl.h	/^  BT_SEMI,$/;"	e	enum:__anon84
BT_SOL	src/libs/txml/xmltok_impl.h	/^  BT_SOL,$/;"	e	enum:__anon84
BT_TRAIL	src/libs/txml/xmltok_impl.h	/^  BT_TRAIL,$/;"	e	enum:__anon84
BT_VERBAR	src/libs/txml/xmltok_impl.h	/^  BT_VERBAR$/;"	e	enum:__anon84
BUFFER_COUNT	src/windows/include/plib/sl.h	139;"	d
BUFFER_SIZE	src/windows/include/plib/sl.h	140;"	d
BUFFER_SIZE	src/windows/include/plib/sl.h	95;"	d
BUFMAX	src/libs/txml/xml.cpp	32;"	d	file:
BUFSIZE	src/drivers/berniw/berniw.h	43;"	d
BUFSIZE	src/drivers/berniw2/berniw.h	43;"	d
BUFSIZE	src/drivers/berniw3/berniw.h	43;"	d
BUFSIZE	src/drivers/bt/learn.h	/^		static const int BUFSIZE;$/;"	m	class:SegLearn
BUFSIZE	src/drivers/damned/learn.h	/^		static const int BUFSIZE;$/;"	m	class:SegLearn
BUFSIZE	src/drivers/inferno/berniw.h	47;"	d
BUFSIZE	src/drivers/lliaw/berniw.h	47;"	d
BUFSIZE	src/drivers/olethros/olethros.cpp	51;"	d	file:
BUFSIZE	src/drivers/sparkle/sparkle.cpp	37;"	d	file:
BUFSIZE	src/drivers/tita/berniw.h	47;"	d
BYTE_TO_ASCII	src/libs/txml/xmltok.c	163;"	d	file:
BYTE_TO_ASCII	src/libs/txml/xmltok.c	183;"	d	file:
BYTE_TO_ASCII	src/libs/txml/xmltok.c	436;"	d	file:
BYTE_TO_ASCII	src/libs/txml/xmltok.c	460;"	d	file:
BYTE_TO_ASCII	src/libs/txml/xmltok.c	503;"	d	file:
BYTE_TO_ASCII	src/libs/txml/xmltok.c	527;"	d	file:
BYTE_TYPE	src/libs/txml/xmltok.c	161;"	d	file:
BYTE_TYPE	src/libs/txml/xmltok.c	182;"	d	file:
BYTE_TYPE	src/libs/txml/xmltok.c	432;"	d	file:
BYTE_TYPE	src/libs/txml/xmltok.c	459;"	d	file:
BYTE_TYPE	src/libs/txml/xmltok.c	499;"	d	file:
BYTE_TYPE	src/libs/txml/xmltok.c	526;"	d	file:
B_BASE	src/libs/racescreens/driverselect.cpp	261;"	d	file:
B_HT	src/libs/racescreens/driverselect.cpp	262;"	d	file:
BackToRaceHookActivate	src/libs/raceengineclient/racemain.cpp	/^BackToRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
BackToRaceHookHandle	src/libs/raceengineclient/racemain.cpp	/^static void	*BackToRaceHookHandle = 0;$/;"	v	file:
BackToRaceHookInit	src/libs/raceengineclient/racemain.cpp	/^BackToRaceHookInit(void)$/;"	f	file:
BackgroundList	src/modules/graphic/ssggraph/grscene.cpp	/^GLuint BackgroundList = 0;$/;"	v
BackgroundList2	src/modules/graphic/ssggraph/grscene.cpp	/^GLuint BackgroundList2;$/;"	v
BackgroundTex	src/modules/graphic/ssggraph/grscene.cpp	/^GLuint BackgroundTex = 0;$/;"	v
BackgroundTex2	src/modules/graphic/ssggraph/grscene.cpp	/^GLuint BackgroundTex2;$/;"	v
BackgroundType	src/modules/graphic/ssggraph/grscene.cpp	/^int    BackgroundType = 0;$/;"	v
BorderFriction	src/modules/simu/simuv2/collide.cpp	/^const tdble BorderFriction = 0.00;$/;"	v
BoundsCheckingStatus	src/drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus {NO_CHECK_BOUNDS=0, CHECK_BOUNDS=1};$/;"	g	class:Vector
Box	src/modules/simu/simuv2/SOLID-2.0/src/Box.h	/^  Box(Scalar x, Scalar y, Scalar z) : extent(x \/ 2, y \/ 2, z \/ 2) {}$/;"	f	class:Box
Box	src/modules/simu/simuv2/SOLID-2.0/src/Box.h	/^class Box : public Convex {$/;"	c
BrNb	src/tools/texmapper/maintexmapper.cpp	/^int BrNb = 0;$/;"	v
BrkSect	src/modules/simu/simuv2/wheel.cpp	/^static char *BrkSect[4] = {SECT_FRNTRGTBRAKE, SECT_FRNTLFTBRAKE, SECT_REARRGTBRAKE, SECT_REARLFTBRAKE};$/;"	v	file:
Byte	src/windows/include/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t
Byte	src/windows/include/zconf.h	39;"	d
Bytef	src/windows/include/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t
Bytef	src/windows/include/zconf.h	221;"	d
Bytef	src/windows/include/zconf.h	42;"	d
C	src/drivers/olethros/geometry.h	/^	Vector* C; \/\/center$/;"	m	class:ParametricSphere
C1	src/modules/simu/simuv2/susp.h	/^    tdble C1, b1, v1; \/* coefs for slow *\/$/;"	m	struct:__anon15
C2	src/modules/simu/simuv2/susp.h	/^    tdble C2, b2;     \/* coefs for fast *\/$/;"	m	struct:__anon15
CA	src/drivers/bt/driver.h	/^		float CA;			\/\/ Aerodynamic downforce coefficient.$/;"	m	class:Driver
CA	src/drivers/damned/driver.h	/^		float CA;			\/\/ Aerodynamic downforce coefficient.$/;"	m	class:Driver
CA	src/drivers/olethros/driver.h	/^	float CA;			\/\/\/< Aerodynamic downforce coefficient.$/;"	m	class:olethros::Driver
CA	src/drivers/olethros/learn.h	/^	float CA; \/\/\/< downforce constant$/;"	m	class:olethros::SegLearn
CA	src/drivers/sparkle/driver.h	/^		float CA;			\/* aerodynamic downforce coefficient *\/$/;"	m	class:Driver
CALLBACK	src/windows/include/GL/glut.h	31;"	d
CALLBACK	src/windows/include/GL/glut.h	33;"	d
CALLBACK	src/windows/include/GL/glut.h	65;"	d
CALLBACK	src/windows/osspec.h	46;"	d
CALLBACK	src/windows/osspec.h	47;"	d
CAR	data/cars/models/155-DTM/Makefile	/^CAR       = 155-DTM$/;"	m
CAR	data/cars/models/acura-nsx-sz/Makefile	/^CAR       = acura-nsx-sz$/;"	m
CAR	data/cars/models/baja-bug/Makefile	/^CAR       = baja-bug$/;"	m
CAR	data/cars/models/buggy/Makefile	/^CAR       = buggy$/;"	m
CAR	data/cars/models/car1-trb1/Makefile	/^CAR       = car1-trb1$/;"	m
CAR	data/cars/models/car1-trb3/Makefile	/^CAR       = car1-trb3$/;"	m
CAR	data/cars/models/car2-trb1/Makefile	/^CAR       = car2-trb1$/;"	m
CAR	data/cars/models/car3-trb1/Makefile	/^CAR       = car3-trb1$/;"	m
CAR	data/cars/models/car4-trb1/Makefile	/^CAR       = car4-trb1$/;"	m
CAR	data/cars/models/car5-trb1/Makefile	/^CAR	  = car5-trb1$/;"	m
CAR	data/cars/models/car6-trb1/Makefile	/^CAR	  = car6-trb1$/;"	m
CAR	data/cars/models/car7-trb1/Makefile	/^CAR	  = car7-trb1$/;"	m
CAR	data/cars/models/cg-nascar-rwd/Makefile	/^CAR       = cg-nascar-rwd$/;"	m
CAR	data/cars/models/kc-2000gt/Makefile	/^CAR       = kc-2000gt$/;"	m
CAR	data/cars/models/kc-5300gt/Makefile	/^CAR       = kc-5300gt$/;"	m
CAR	data/cars/models/kc-a110/Makefile	/^CAR       = kc-a110$/;"	m
CAR	data/cars/models/kc-alfatz2/Makefile	/^CAR       = kc-alfatz2$/;"	m
CAR	data/cars/models/kc-bigh/Makefile	/^CAR       = kc-bigh$/;"	m
CAR	data/cars/models/kc-cobra/Makefile	/^CAR       = kc-cobra$/;"	m
CAR	data/cars/models/kc-coda/Makefile	/^CAR       = kc-coda$/;"	m
CAR	data/cars/models/kc-conrero/Makefile	/^CAR       = kc-conrero$/;"	m
CAR	data/cars/models/kc-corvette-ttop/Makefile	/^CAR       = kc-corvette-ttop$/;"	m
CAR	data/cars/models/kc-daytona/Makefile	/^CAR       = kc-daytona$/;"	m
CAR	data/cars/models/kc-db4z/Makefile	/^CAR       = kc-db4z$/;"	m
CAR	data/cars/models/kc-dbs/Makefile	/^CAR       = kc-dbs$/;"	m
CAR	data/cars/models/kc-dino/Makefile	/^CAR       = kc-dino$/;"	m
CAR	data/cars/models/kc-ghibli/Makefile	/^CAR       = kc-ghibli$/;"	m
CAR	data/cars/models/kc-giulietta/Makefile	/^CAR       = kc-giulietta$/;"	m
CAR	data/cars/models/kc-grifo/Makefile	/^CAR       = kc-grifo$/;"	m
CAR	data/cars/models/kc-gt40/Makefile	/^CAR       = kc-gt40$/;"	m
CAR	data/cars/models/kc-gto/Makefile	/^CAR       = kc-gto$/;"	m
CAR	data/cars/models/kc-p4/Makefile	/^CAR       = kc-p4$/;"	m
CAR	data/cars/models/sc-f1/Makefile	/^CAR       = sc-f1$/;"	m
CAREFUL	src/drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon123
CAREFUL	src/drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon98
CAREFUL	src/drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon114
CAREFUL	src/drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon139
CAREFUL	src/drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon132
CAREFUL	src/drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon105
CARLEN	src/drivers/berniw/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	src/drivers/berniw2/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	src/drivers/berniw3/mycar.h	/^		double CARLEN;									\/* length of the car [m] *\/$/;"	m	class:MyCar
CARLEN	src/drivers/inferno/mycar.h	/^		double CARLEN;									\/\/ Length of the car [m].$/;"	m	class:MyCar
CARLEN	src/drivers/lliaw/mycar.h	/^		double CARLEN;									\/\/ Length of the car [m].$/;"	m	class:MyCar
CARLEN	src/drivers/tita/mycar.h	/^		double CARLEN;									\/\/ Length of the car [m].$/;"	m	class:MyCar
CARMASS	src/drivers/bt/driver.h	/^		float CARMASS;		\/\/ Mass of the car only [kg].$/;"	m	class:Driver
CARMASS	src/drivers/damned/driver.h	/^		float CARMASS;		\/\/ Mass of the car only [kg].$/;"	m	class:Driver
CARMASS	src/drivers/olethros/driver.h	/^	float CARMASS;		\/\/\/< Mass of the car only [kg].$/;"	m	class:olethros::Driver
CARMASS	src/drivers/sparkle/driver.h	/^		float CARMASS;		\/* mass of the car only *\/$/;"	m	class:Driver
CARWIDTH	src/drivers/berniw/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	src/drivers/berniw2/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	src/drivers/berniw3/mycar.h	/^		double CARWIDTH;								\/* width of the car [m] *\/$/;"	m	class:MyCar
CARWIDTH	src/drivers/inferno/mycar.h	/^		double CARWIDTH;								\/\/ Width of the car [m].$/;"	m	class:MyCar
CARWIDTH	src/drivers/lliaw/mycar.h	/^		double CARWIDTH;								\/\/ Width of the car [m].$/;"	m	class:MyCar
CARWIDTH	src/drivers/tita/mycar.h	/^		double CARWIDTH;								\/\/ Width of the car [m].$/;"	m	class:MyCar
CAR_DAMMAGE	src/modules/simu/simuv2/collide.cpp	22;"	d	file:
CAR_IDENT	export/include/car.h	35;"	d
CAR_IDENT	src/interfaces/car.h	35;"	d
CAR_SOUND_DATA_H	src/modules/graphic/ssggraph/CarSoundData.h	12;"	d
CATCH_FACTOR	src/drivers/bt/driver.cpp	/^const float Driver::CATCH_FACTOR = 10.0f;					\/\/ [-] select MIN(catchdist, dist*CATCH_FACTOR) to overtake.$/;"	m	class:Driver	file:
CATCH_FACTOR	src/drivers/bt/driver.h	/^		static const float CATCH_FACTOR;$/;"	m	class:Driver
CATCH_FACTOR	src/drivers/damned/driver.cpp	/^const float Driver::CATCH_FACTOR = 10.0f;					\/\/ [-] select MIN(catchdist, dist*CATCH_FACTOR) to overtake.$/;"	m	class:Driver	file:
CATCH_FACTOR	src/drivers/damned/driver.h	/^		static const float CATCH_FACTOR;$/;"	m	class:Driver
CATCH_FACTOR	src/drivers/olethros/driver.cpp	/^    const float Driver::CATCH_FACTOR = 10.0f;					\/\/\/< [-] select MIN(catchdist, dist*CATCH_FACTOR) to overtake.$/;"	m	class:olethros::Driver	file:
CATCH_FACTOR	src/drivers/olethros/driver.h	/^	static const float CATCH_FACTOR;$/;"	m	class:olethros::Driver
CATEGORY	data/tracks/oval/b-speedway/Makefile	/^CATEGORY  = oval$/;"	m
CATEGORY	data/tracks/oval/c-speedway/Makefile	/^CATEGORY  = oval$/;"	m
CATEGORY	data/tracks/oval/d-speedway/Makefile	/^CATEGORY  = oval$/;"	m
CATEGORY	data/tracks/oval/e-speedway/Makefile	/^CATEGORY  = oval$/;"	m
CATEGORY	data/tracks/oval/f-speedway/Makefile	/^CATEGORY  = oval$/;"	m
CATEGORY	data/tracks/oval/g-speedway/Makefile	/^CATEGORY  = oval$/;"	m
CATEGORY	data/tracks/road/ole-road-1/Makefile	/^CATEGORY  = road$/;"	m
CENTERDIV	src/drivers/bt/driver.cpp	/^const float Driver::CENTERDIV = 0.1f;						\/\/ [-] (factor) [0.01..0.6].$/;"	m	class:Driver	file:
CENTERDIV	src/drivers/bt/driver.h	/^		static const float CENTERDIV;$/;"	m	class:Driver
CENTERDIV	src/drivers/damned/driver.cpp	/^const float Driver::CENTERDIV = 0.1f;						\/\/ [-] (factor) [0.01..0.6].$/;"	m	class:Driver	file:
CENTERDIV	src/drivers/damned/driver.h	/^		static const float CENTERDIV;$/;"	m	class:Driver
CENTERDIV	src/drivers/olethros/driver.cpp	/^    const float Driver::CENTERDIV = 0.1f;						\/\/\/< [-] (factor) [0.01..0.6].$/;"	m	class:olethros::Driver	file:
CENTERDIV	src/drivers/olethros/driver.h	/^	static const float CENTERDIV;$/;"	m	class:olethros::Driver
CFG_FILE	src/tools/trackgen/trackgen.h	32;"	d
CFRICTION	src/drivers/berniw/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	src/drivers/berniw2/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	src/drivers/berniw3/mycar.h	/^		double CFRICTION;								\/* friction "magic" coefficient [-] *\/$/;"	m	class:MyCar
CFRICTION	src/drivers/inferno/mycar.h	/^		double CFRICTION;								\/\/ Friction "magic" coefficient [-].$/;"	m	class:MyCar
CFRICTION	src/drivers/lliaw/mycar.h	/^		double CFRICTION;								\/\/ Friction "magic" coefficient [-].$/;"	m	class:MyCar
CFRICTION	src/drivers/tita/mycar.h	/^		double CFRICTION;								\/\/ Friction "magic" coefficient [-].$/;"	m	class:MyCar
CHAR_MATCHES	src/libs/txml/xmltok.c	176;"	d	file:
CHAR_MATCHES	src/libs/txml/xmltok.c	184;"	d	file:
CHAR_MATCHES	src/libs/txml/xmltok.c	437;"	d	file:
CHAR_MATCHES	src/libs/txml/xmltok.c	461;"	d	file:
CHAR_MATCHES	src/libs/txml/xmltok.c	504;"	d	file:
CHAR_MATCHES	src/libs/txml/xmltok.c	528;"	d	file:
CHECK	src/modules/simu/simuv2/carstruct.h	141;"	d
CHECK	src/windows/include/pngconf.h	1261;"	d
CHECKDISPLIST	src/tools/trackgen/track.cpp	320;"	d	file:
CHECKDISPLIST2	src/tools/trackgen/track.cpp	364;"	d	file:
CHECKDISPLIST3	src/tools/trackgen/track.cpp	374;"	d	file:
CHECK_BOUNDS	src/drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus {NO_CHECK_BOUNDS=0, CHECK_BOUNDS=1};$/;"	e	enum:Vector::BoundsCheckingStatus
CHECK_NAME_CASE	src/libs/txml/xmltok_impl.c	1649;"	d	file:
CHECK_NAME_CASE	src/libs/txml/xmltok_impl.c	47;"	d	file:
CHECK_NAME_CASES	src/libs/txml/xmltok_impl.c	1650;"	d	file:
CHECK_NAME_CASES	src/libs/txml/xmltok_impl.c	58;"	d	file:
CHECK_NMSTRT_CASE	src/libs/txml/xmltok_impl.c	1651;"	d	file:
CHECK_NMSTRT_CASE	src/libs/txml/xmltok_impl.c	75;"	d	file:
CHECK_NMSTRT_CASES	src/libs/txml/xmltok_impl.c	1652;"	d	file:
CHECK_NMSTRT_CASES	src/libs/txml/xmltok_impl.c	86;"	d	file:
CHECK_VAR	src/modules/simu/simuv2/carstruct.h	140;"	d
CLOCKWISE	src/tools/trackgen/trackgen.h	29;"	d
CLOSED	src/tools/trackgen/easymesh.cpp	64;"	d	file:
CLOSEDISPLIST	src/tools/trackgen/track.cpp	382;"	d	file:
CLUTCH_APPLIED	src/modules/simu/simuv2/transmission.h	39;"	d
CLUTCH_AUTO	src/modules/simu/simuv2/transmission.h	43;"	d
CLUTCH_FULL_MAX_TIME	src/drivers/bt/driver.cpp	/^const float Driver::CLUTCH_FULL_MAX_TIME = 2.0f;			\/\/ [s] Time to apply full clutch.$/;"	m	class:Driver	file:
CLUTCH_FULL_MAX_TIME	src/drivers/bt/driver.h	/^		static const float CLUTCH_FULL_MAX_TIME;$/;"	m	class:Driver
CLUTCH_FULL_MAX_TIME	src/drivers/damned/driver.cpp	/^const float Driver::CLUTCH_FULL_MAX_TIME = 2.0f;			\/\/ [s] Time to apply full clutch.$/;"	m	class:Driver	file:
CLUTCH_FULL_MAX_TIME	src/drivers/damned/driver.h	/^		static const float CLUTCH_FULL_MAX_TIME;$/;"	m	class:Driver
CLUTCH_FULL_MAX_TIME	src/drivers/inferno/mycar.cpp	/^const float MyCar::CLUTCH_FULL_MAX_TIME = 2.0f;		\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar	file:
CLUTCH_FULL_MAX_TIME	src/drivers/inferno/mycar.h	/^		static const float CLUTCH_FULL_MAX_TIME;	\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar
CLUTCH_FULL_MAX_TIME	src/drivers/lliaw/mycar.cpp	/^const float MyCar::CLUTCH_FULL_MAX_TIME = 2.0f;		\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar	file:
CLUTCH_FULL_MAX_TIME	src/drivers/lliaw/mycar.h	/^		static const float CLUTCH_FULL_MAX_TIME;	\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar
CLUTCH_FULL_MAX_TIME	src/drivers/olethros/driver.cpp	/^    const float Driver::CLUTCH_FULL_MAX_TIME = 1.0f;				\/\/\/< [s] Time to apply full clutch.$/;"	m	class:olethros::Driver	file:
CLUTCH_FULL_MAX_TIME	src/drivers/olethros/driver.h	/^	static const float CLUTCH_FULL_MAX_TIME;$/;"	m	class:olethros::Driver
CLUTCH_FULL_MAX_TIME	src/drivers/tita/mycar.cpp	/^const float MyCar::CLUTCH_FULL_MAX_TIME = 2.0f;		\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar	file:
CLUTCH_FULL_MAX_TIME	src/drivers/tita/mycar.h	/^		static const float CLUTCH_FULL_MAX_TIME;	\/\/ [s] Time to apply full clutch.$/;"	m	class:MyCar
CLUTCH_MANUAL	src/modules/simu/simuv2/transmission.h	44;"	d
CLUTCH_RELEASED	src/modules/simu/simuv2/transmission.h	40;"	d
CLUTCH_RELEASING	src/modules/simu/simuv2/transmission.h	41;"	d
CLUTCH_SPEED	src/drivers/bt/driver.cpp	/^const float Driver::CLUTCH_SPEED = 5.0f;					\/\/ [m\/s]$/;"	m	class:Driver	file:
CLUTCH_SPEED	src/drivers/bt/driver.h	/^		static const float CLUTCH_SPEED;$/;"	m	class:Driver
CLUTCH_SPEED	src/drivers/damned/driver.cpp	/^const float Driver::CLUTCH_SPEED = 5.0f;					\/\/ [m\/s]$/;"	m	class:Driver	file:
CLUTCH_SPEED	src/drivers/damned/driver.h	/^		static const float CLUTCH_SPEED;$/;"	m	class:Driver
CLUTCH_SPEED	src/drivers/inferno/mycar.cpp	/^const float MyCar::CLUTCH_SPEED = 5.0f;				\/\/ [m\/s]$/;"	m	class:MyCar	file:
CLUTCH_SPEED	src/drivers/inferno/mycar.h	/^		static const float CLUTCH_SPEED;			\/\/ [m\/s]$/;"	m	class:MyCar
CLUTCH_SPEED	src/drivers/lliaw/mycar.cpp	/^const float MyCar::CLUTCH_SPEED = 5.0f;				\/\/ [m\/s]$/;"	m	class:MyCar	file:
CLUTCH_SPEED	src/drivers/lliaw/mycar.h	/^		static const float CLUTCH_SPEED;			\/\/ [m\/s]$/;"	m	class:MyCar
CLUTCH_SPEED	src/drivers/olethros/driver.cpp	/^    const float Driver::CLUTCH_SPEED = 5.0f;						\/\/\/< [m\/s]$/;"	m	class:olethros::Driver	file:
CLUTCH_SPEED	src/drivers/olethros/driver.h	/^	static const float CLUTCH_SPEED;$/;"	m	class:olethros::Driver
CLUTCH_SPEED	src/drivers/tita/mycar.cpp	/^const float MyCar::CLUTCH_SPEED = 5.0f;				\/\/ [m\/s]$/;"	m	class:MyCar	file:
CLUTCH_SPEED	src/drivers/tita/mycar.h	/^		static const float CLUTCH_SPEED;			\/\/ [m\/s]$/;"	m	class:MyCar
CMD_ABS	src/drivers/human/pref.h	56;"	d
CMD_ASR	src/drivers/human/pref.h	55;"	d
CMD_BRAKE	src/drivers/human/pref.h	66;"	d
CMD_CLUTCH	src/drivers/human/pref.h	70;"	d
CMD_DN_SHFT	src/drivers/human/pref.h	54;"	d
CMD_GEAR_1	src/drivers/human/pref.h	59;"	d
CMD_GEAR_2	src/drivers/human/pref.h	60;"	d
CMD_GEAR_3	src/drivers/human/pref.h	61;"	d
CMD_GEAR_4	src/drivers/human/pref.h	62;"	d
CMD_GEAR_5	src/drivers/human/pref.h	63;"	d
CMD_GEAR_6	src/drivers/human/pref.h	64;"	d
CMD_GEAR_N	src/drivers/human/pref.h	58;"	d
CMD_GEAR_R	src/drivers/human/pref.h	57;"	d
CMD_LEFTSTEER	src/drivers/human/pref.h	67;"	d
CMD_LIGHT1	src/drivers/human/pref.h	69;"	d
CMD_OFFSET	src/libs/confscreens/mouseconfig.cpp	42;"	d	file:
CMD_RIGHTSTEER	src/drivers/human/pref.h	68;"	d
CMD_SPDLIM	src/drivers/human/pref.h	71;"	d
CMD_THROTTLE	src/drivers/human/pref.h	65;"	d
CMD_UP_SHFT	src/drivers/human/pref.h	53;"	d
COLLDIST	src/drivers/berniw/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	src/drivers/berniw/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	src/drivers/berniw2/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	src/drivers/berniw2/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	src/drivers/berniw3/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 200.0;$/;"	m	class:Pathfinder	file:
COLLDIST	src/drivers/berniw3/pathfinder.h	/^		static const double COLLDIST;	\/* up to this distance do we consider other cars as dangerous *\/$/;"	m	class:Pathfinder
COLLDIST	src/drivers/inferno/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 150.0;$/;"	m	class:Pathfinder	file:
COLLDIST	src/drivers/inferno/pathfinder.h	/^		static const double COLLDIST;	\/\/ up to this distance do we consider other cars as dangerous.$/;"	m	class:Pathfinder
COLLDIST	src/drivers/lliaw/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 150.0;$/;"	m	class:Pathfinder	file:
COLLDIST	src/drivers/lliaw/pathfinder.h	/^		static const double COLLDIST;	\/\/ up to this distance do we consider other cars as dangerous.$/;"	m	class:Pathfinder
COLLDIST	src/drivers/tita/pathfinder.cpp	/^const double Pathfinder::COLLDIST = 150.0;$/;"	m	class:Pathfinder	file:
COLLDIST	src/drivers/tita/pathfinder.h	/^		static const double COLLDIST;	\/\/ up to this distance do we consider other cars as dangerous.$/;"	m	class:Pathfinder
COMPILATION	Make-default.mk	/^COMPILATION=$/;"	m
COMPILATION	Make-default.mk	/^COMPILATION=true$/;"	m
COMPILFLAGS	src/modules/simu/simuv2/SOLID-2.0/src/Makefile	/^COMPILFLAGS  =	-DNDEBUG -Wno-deprecated$/;"	m
COMPLEX	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^  COMPLEX,$/;"	e	enum:ShapeType
CONFIG	src/drivers/human/Makefile	/^CONFIG    = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
CONFIG	src/drivers/human/tracks/dirt-2/Makefile	/^CONFIG    = $(SHIP)$/;"	m
CONFIG	src/libs/raceengineclient/Makefile	/^CONFIG    = $(SHIP)$/;"	m
CONFIG	src/libs/tgfclient/Makefile	/^CONFIG    = screen.xml$/;"	m
CONFIG	src/modules/graphic/ssggraph/Makefile	/^CONFIG    = $(SHIP)$/;"	m
CONFIG	src/raceman/Makefile	/^CONFIG = ${SHIP}$/;"	m
CONFIGCREATEDIRS	src/drivers/human/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	src/drivers/human/tracks/dirt-2/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	src/libs/raceengineclient/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	src/libs/tgfclient/Makefile	/^CONFIGCREATEDIRS = config$/;"	m
CONFIGCREATEDIRS	src/modules/graphic/ssggraph/Makefile	/^CONFIGCREATEDIRS = ${SHIPDIR}$/;"	m
CONFIGCREATEDIRS	src/raceman/Makefile	/^CONFIGCREATEDIRS = ${SHIPCREATEDIRS} ${SHIPDIR}$/;"	m
CONVEX	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^  CONVEX$/;"	e	enum:ShapeType
CORRLEN	src/drivers/berniw/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	src/drivers/berniw/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	src/drivers/berniw2/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	src/drivers/berniw2/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	src/drivers/berniw3/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;				\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar	file:
CORRLEN	src/drivers/berniw3/mycar.h	/^		static const double CORRLEN;			\/* CORRLEN * derror is the length of the correction [m] *\/$/;"	m	class:MyCar
CORRLEN	src/drivers/inferno/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;					\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar	file:
CORRLEN	src/drivers/inferno/mycar.h	/^		static const double CORRLEN;				\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar
CORRLEN	src/drivers/lliaw/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;					\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar	file:
CORRLEN	src/drivers/lliaw/mycar.h	/^		static const double CORRLEN;				\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar
CORRLEN	src/drivers/tita/mycar.cpp	/^const double MyCar::CORRLEN = 30.0;					\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar	file:
CORRLEN	src/drivers/tita/mycar.h	/^		static const double CORRLEN;				\/\/ CORRLEN * derror is the length of the correction [m].$/;"	m	class:MyCar
CREASE	src/tools/accc/ac3dload.cpp	50;"	d	file:
CVT_PTR	src/windows/include/pngconf.h	1263;"	d
CVT_PTR	src/windows/include/pngconf.h	1271;"	d
CVT_PTR_NOCHECK	src/windows/include/pngconf.h	1264;"	d
CVT_PTR_NOCHECK	src/windows/include/pngconf.h	1272;"	d
CW	src/drivers/bt/driver.h	/^		float CW;			\/\/ Aerodynamic drag coefficient.$/;"	m	class:Driver
CW	src/drivers/damned/driver.h	/^		float CW;			\/\/ Aerodynamic drag coefficient.$/;"	m	class:Driver
CW	src/drivers/olethros/driver.h	/^	float CW;			\/\/\/< Aerodynamic drag coefficient.$/;"	m	class:olethros::Driver
CW	src/drivers/olethros/learn.h	/^	float CW; \/\/\/< drag constant$/;"	m	class:olethros::SegLearn
CW	src/drivers/sparkle/driver.h	/^		float CW;			\/* aerodynamic drag coefficient *\/$/;"	m	class:Driver
CalState	src/libs/confscreens/joystickconfig.cpp	/^static int CalState;$/;"	v	file:
CalState	src/libs/confscreens/mouseconfig.cpp	/^static int	CalState;$/;"	v	file:
CalculateRadiusPoints	src/drivers/olethros/geometry.cpp	/^float CalculateRadiusPoints (std::vector<Vector> P)$/;"	f
CalculateTrack	src/tools/trackgen/track.cpp	/^void CalculateTrack(tTrack * Track, void *TrackHandle, int bump)$/;"	f
CarEditId	src/libs/confscreens/driverconfig.cpp	/^static int CarEditId;$/;"	v	file:
CarElt	export/include/car.h	/^typedef struct CarElt$/;"	s
CarElt	src/interfaces/car.h	/^typedef struct CarElt$/;"	s
CarPenalty	export/include/car.h	/^typedef struct CarPenalty$/;"	s
CarPenalty	src/interfaces/car.h	/^typedef struct CarPenalty$/;"	s
CarSoundData	src/modules/graphic/ssggraph/CarSoundData.cpp	/^CarSoundData::CarSoundData(int id, SoundInterface* sound_interface)$/;"	f	class:CarSoundData
CarSoundData	src/modules/graphic/ssggraph/CarSoundData.h	/^class CarSoundData {$/;"	c
Cardata	src/drivers/bt/cardata.cpp	/^Cardata::Cardata(tSituation *s)$/;"	f	class:Cardata
Cardata	src/drivers/bt/cardata.h	/^class Cardata {$/;"	c
Cardata	src/drivers/damned/cardata.cpp	/^Cardata::Cardata(tSituation *s)$/;"	f	class:Cardata
Cardata	src/drivers/damned/cardata.h	/^class Cardata {$/;"	c
Cardata	src/drivers/olethros/cardata.cpp	/^Cardata::Cardata(tSituation* s)$/;"	f	class:olethros::Cardata
Cardata	src/drivers/olethros/cardata.h	/^class Cardata {$/;"	c	namespace:olethros
CarlightAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *CarlightAnchor = 0;$/;"	v
CarlightCleanupAnchor	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgBranch *CarlightCleanupAnchor;$/;"	v
CarsAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *CarsAnchor = 0;$/;"	v
CarsAnchorTmp	src/modules/graphic/ssggraph/grcar.cpp	/^ssgBranch *CarsAnchorTmp = 0;$/;"	v
CarsInfoList	src/libs/confscreens/driverconfig.cpp	/^    tCarsInfoHead	CarsInfoList;$/;"	m	struct:tCatInfo	file:
CatEditId	src/libs/confscreens/driverconfig.cpp	/^static int CatEditId;$/;"	v	file:
CatLabelId	src/libs/racescreens/trackselect.cpp	/^static int CatLabelId;$/;"	v	file:
CategoryList	src/libs/racescreens/trackselect.cpp	/^static tFList *CategoryList;$/;"	v	file:
CatsInfoList	src/libs/confscreens/driverconfig.cpp	/^static tCatsInfoHead CatsInfoList;$/;"	v	file:
Cd	src/modules/simu/simuv2/aero.h	/^    tdble	Cd;		\/* for aspiration *\/$/;"	m	struct:__anon13
CfgHandle	src/tools/trackgen/maintrackgen.cpp	/^void		*CfgHandle;$/;"	v
ChangeCar	src/libs/confscreens/driverconfig.cpp	/^ChangeCar(void *vp)$/;"	f	file:
ChangeCat	src/libs/confscreens/driverconfig.cpp	/^ChangeCat(void *vp)$/;"	f	file:
ChangeFov	src/libs/confscreens/graphconfig.cpp	/^ChangeFov(void * \/* dummy *\/)$/;"	f	file:
ChangeLevel	src/libs/confscreens/driverconfig.cpp	/^ChangeLevel(void *vp)$/;"	f	file:
ChangeLodFactor	src/libs/confscreens/graphconfig.cpp	/^ChangeLodFactor(void * \/* dummy *\/)$/;"	f	file:
ChangeMaxFreq	src/libs/tgfclient/screen.cpp	/^ChangeMaxFreq(void * \/* dummy *\/)$/;"	f	file:
ChangeName	src/libs/confscreens/driverconfig.cpp	/^ChangeName(void * \/* dummy *\/)$/;"	f	file:
ChangeNum	src/libs/confscreens/driverconfig.cpp	/^ChangeNum(void * \/* dummy *\/)$/;"	f	file:
ChangePits	src/libs/confscreens/driverconfig.cpp	/^ChangePits(void * \/* dummy *\/)$/;"	f	file:
ChangeReverse	src/libs/confscreens/driverconfig.cpp	/^ChangeReverse(void *vdelta)$/;"	f	file:
ChangeSimuVersion	src/libs/confscreens/simuconfig.cpp	/^ChangeSimuVersion(void *vp)$/;"	f	file:
ChangeSkid	src/libs/confscreens/graphconfig.cpp	/^ChangeSkid(void * \/* dummy *\/)$/;"	f	file:
ChangeSmoke	src/libs/confscreens/graphconfig.cpp	/^ChangeSmoke(void * \/* dummy *\/)$/;"	f	file:
ChangeTrans	src/libs/confscreens/driverconfig.cpp	/^ChangeTrans(void * \/* dummy *\/)$/;"	f	file:
Channel	src/modules/telemetry/telemetry.cpp	/^typedef struct Channel $/;"	s	file:
Char	src/libs/tgfclient/guifont.h	/^    GLFONTCHAR *Char;$/;"	m	struct:__anon55
CharacterData	src/libs/txml/xml.cpp	/^CharacterData(void *userData, const char *s, int len)$/;"	f	file:
CheckMatchingToken	src/drivers/olethros/learn.cpp	/^inline bool CheckMatchingToken (const char* tag, StringBuffer* buf, FILE* f)$/;"	f
CheckMatchingToken	src/libs/learning/ANN.cpp	/^static inline bool CheckMatchingToken (const char* tag, StringBuffer* buf, FILE* f)$/;"	f	file:
ClearList	src/libs/learning/List.cpp	/^int ClearList(LIST* list)$/;"	f
Cleared	src/modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
Clift	src/modules/simu/simuv2/aero.h	/^    tdble	Clift[2];	\/* front & rear lift due to body not wings *\/$/;"	m	struct:__anon13
CloseFile	export/include/learning/learn_debug.h	28;"	d
CloseFile	src/libs/learning/learn_debug.h	28;"	d
Cmd	src/libs/confscreens/controlconfig.cpp	/^static tCmdInfo Cmd[] = {$/;"	v	file:
Cmd	src/libs/confscreens/joystickconfig.cpp	/^static tCmdInfo *Cmd;$/;"	v	file:
Cmd	src/libs/confscreens/mouseconfig.cpp	/^static tCmdInfo *Cmd;$/;"	v	file:
CmdControl	src/drivers/human/human.h	/^	tControlCmd	*CmdControl;$/;"	m	struct:HumanContext
CmdControlRef	src/drivers/human/pref.cpp	/^tControlCmd	CmdControlRef[] = {$/;"	v
ColWidth	src/tools/texmapper/maintexmapper.cpp	/^float	*ColWidth;$/;"	v
CollDet	src/drivers/inferno2/common.cpp	/^CollDet(tCarElt* car, int idx, tSituation *s, tdble Curtime, tdble dny)$/;"	f
Common_point	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^typedef bool (*Common_point)(const Shape&, const Shape&, $/;"	t
Common_pointTable	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^typedef AlgoTable<Common_point> Common_pointTable;$/;"	t	file:
Complex	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  Complex() {}$/;"	f	class:Complex
Complex	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^class Complex : public Shape {$/;"	c
ComplexList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<Complex *> ComplexList;$/;"	t	file:
Cone	src/modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Cone(Scalar r, Scalar h) : $/;"	f	class:Cone
Cone	src/modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^class Cone : public Convex {$/;"	c
ConfControls	src/libs/confscreens/driverconfig.cpp	/^ConfControls(void * \/* dummy *\/ )$/;"	f	file:
ConfidenceDistribution	export/include/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	g
ConfidenceDistribution	src/libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	g
ConfigBackHookActivate	src/libs/raceengineclient/racemanmenu.cpp	/^ConfigBackHookActivate(void * \/* dummy *\/)$/;"	f	file:
ConfigBackHookHandle	src/libs/raceengineclient/racemanmenu.cpp	/^static void	*ConfigBackHookHandle = 0;$/;"	v	file:
Connection	export/include/learning/ANN.h	/^} Connection;$/;"	t	typeref:struct:Connection_
Connection	src/libs/learning/ANN.h	/^} Connection;$/;"	t	typeref:struct:Connection_
Connection_	export/include/learning/ANN.h	/^typedef struct Connection_ {$/;"	s
Connection_	src/libs/learning/ANN.h	/^typedef struct Connection_ {$/;"	s
ConsFactor	src/drivers/inferno2/inferno2.cpp	/^tdble ConsFactor[10]     = {0.0007f};$/;"	v
Convex	src/modules/simu/simuv2/SOLID-2.0/src/Convex.h	/^class Convex : public Shape {$/;"	c
Cosz	src/modules/simu/simuv2/carstruct.h	/^    tdble	Cosz;$/;"	m	struct:__anon18
CountRelief	src/tools/trackgen/relief.cpp	/^CountRelief(int interior, int *nb_vert, int *nb_seg)$/;"	f
CounterList	src/modules/graphic/ssggraph/grcar.h	/^    GLuint		CounterList;$/;"	m	struct:__anon4
CreateSegRing	src/modules/track/track2.cpp	/^CreateSegRing(void *TrackHandle, char *section, tTrackSeg **pRoot, tdble *pLength, int *pNseg, tTrackSeg *start, tTrackSeg *end, int ext)$/;"	f	file:
CreateSegRing	src/modules/track/track4.cpp	/^CreateSegRing(void *TrackHandle, tTrack *theTrack, tTrackSeg *start, tTrackSeg *end, int ext)$/;"	f	file:
CreateSegRing3	src/modules/track/track3.cpp	/^CreateSegRing3(void *TrackHandle, tTrack *theTrack, tTrackSeg *start, tTrackSeg *end, int ext)$/;"	f	file:
CurrentCmd	src/libs/confscreens/controlconfig.cpp	/^static int CurrentCmd;$/;"	v	file:
CurrentSection	src/libs/confscreens/controlconfig.cpp	/^static char	CurrentSection[256];$/;"	v	file:
Cylinder	src/modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^  Cylinder(Scalar r, Scalar h) : $/;"	f	class:Cylinder
Cylinder	src/modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^class Cylinder : public Convex {$/;"	c
D	src/tools/trackgen/easymesh.cpp	56;"	d	file:
D4WD	src/drivers/berniw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon124
D4WD	src/drivers/berniw2/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon99
D4WD	src/drivers/berniw3/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon115
D4WD	src/drivers/human/human.cpp	51;"	d	file:
D4WD	src/drivers/inferno/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon140
D4WD	src/drivers/lliaw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon133
D4WD	src/drivers/tita/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon106
DATA	Makefile	/^DATA    	= COPYING Ticon.png Ticon.ico tux.png logo-skinner.png$/;"	m
DATA	data/cars/categories/F1/Makefile	/^DATA      = F1.xml$/;"	m
DATA	data/cars/categories/Historic/Makefile	/^DATA      = Historic.xml$/;"	m
DATA	data/cars/categories/Nascar/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Offroad-4WD-GrA/Makefile	/^DATA      = Offroad-4WD-GrA.xml$/;"	m
DATA	data/cars/categories/Offroad-RWD-GrA/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Track-4WD-GrB/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Track-FWD-GrA/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Track-FWD-GrB/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Track-RWD-GrA/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Track-RWD-GrB/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/Track-RWD-GrC/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -name '*.xml')$/;"	m
DATA	data/cars/categories/free/Makefile	/^DATA      = free.xml$/;"	m
DATA	data/cars/models/155-DTM/Makefile	/^DATA      = $(CAR).xml readme.txt \\$/;"	m
DATA	data/cars/models/acura-nsx-sz/Makefile	/^DATA      = $(CAR).xml  readme.txt \\$/;"	m
DATA	data/cars/models/baja-bug/Makefile	/^DATA      = $(CAR).xml readme.txt \\$/;"	m
DATA	data/cars/models/buggy/Makefile	/^DATA      = $(CAR).xml \\$/;"	m
DATA	data/cars/models/car1-trb1/Makefile	/^DATA      = $(CAR).xml  readme.txt \\$/;"	m
DATA	data/cars/models/car1-trb3/Makefile	/^DATA      = $(CAR).xml  readme.txt \\$/;"	m
DATA	data/cars/models/car2-trb1/Makefile	/^DATA      = $(CAR).xml  readme.txt \\$/;"	m
DATA	data/cars/models/car3-trb1/Makefile	/^DATA      = $(CAR).xml readme.txt \\$/;"	m
DATA	data/cars/models/car4-trb1/Makefile	/^DATA      = $(CAR).xml readme.txt \\$/;"	m
DATA	data/cars/models/car5-trb1/Makefile	/^DATA      = $(CAR).xml \\$/;"	m
DATA	data/cars/models/car6-trb1/Makefile	/^DATA      = $(CAR).xml \\$/;"	m
DATA	data/cars/models/car7-trb1/Makefile	/^DATA      = $(CAR).xml \\$/;"	m
DATA	data/cars/models/cg-nascar-rwd/Makefile	/^DATA      = $(CAR).xml readme.txt \\$/;"	m
DATA	data/cars/models/kc-2000gt/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-5300gt/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-a110/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-alfatz2/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-bigh/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-cobra/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-coda/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-conrero/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-corvette-ttop/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-daytona/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-db4z/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-dbs/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-dino/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-ghibli/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-giulietta/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-grifo/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-gt40/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-gto/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/kc-p4/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/cars/models/p406/Makefile	/^DATA      = 	$(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/pw-206wrc/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/pw-306wrc/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/pw-corollawrc/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/pw-evoviwrc/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/pw-focuswrc/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/pw-imprezawrc/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print) \\$/;"	m
DATA	data/cars/models/sc-f1/Makefile	/^DATA      = $(CAR).xml readme.txt \\$/;"	m
DATA	data/data/fonts/Makefile	/^DATA      = $(shell find *.glf -maxdepth 0 -type f -print)$/;"	m
DATA	data/data/img/Makefile	/^DATA      	= $(shell find *.png -maxdepth 0 -type f)$/;"	m
DATA	data/data/menu/Makefile	/^DATA      = entry.xml$/;"	m
DATA	data/data/objects/Makefile	/^DATA         = $(shell find *.ac -maxdepth 0 -print)$/;"	m
DATA	data/data/sound/Makefile	/^DATA      = $(shell find *.wav -maxdepth 0 -print)$/;"	m
DATA	data/data/textures/Makefile	/^DATA      = $(shell find *.png -maxdepth 0 -print) $(shell find *.rgb -maxdepth 0 -print)$/;"	m
DATA	data/data/tracks/Makefile	/^DATA      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/a-speedway/Makefile	/^DATA      = a-speedway.xml background.png a-speedway.ac a-speedway.png readme.txt$/;"	m
DATA	data/tracks/aalborg/Makefile	/^DATA      = aalborg.xml aalborg.acc aalborg.png readme.txt allborg-trees_n.rgb shadow2.rgb \\$/;"	m
DATA	data/tracks/dirt-2/Makefile	/^DATA      = dirt-2.xml background.png dirt-2.ac dirt-2.png readme.txt$/;"	m
DATA	data/tracks/dirt-4/Makefile	/^DATA      = dirt-4.xml background.png dirt-4.ac dirt-4.png readme.txt$/;"	m
DATA	data/tracks/dirt-5/Makefile	/^DATA      = dirt-5.xml background.png dirt-5.ac dirt-5.png readme.txt$/;"	m
DATA	data/tracks/dirt-6/Makefile	/^DATA      = dirt-6.xml background.png dirt-6.ac dirt-6.png readme.txt$/;"	m
DATA	data/tracks/dirt/dirt-1/Makefile	/^DATA      = dirt-1.xml dirt-1.acc dirt-1.png readme.txt \\$/;"	m
DATA	data/tracks/dirt/dirt-3/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png readme.txt background.png ambush-inn.png \\$/;"	m
DATA	data/tracks/e-track-1/Makefile	/^DATA      = e-track-1.xml background.png e-track-1.acc e-track-1.png readme.txt geo-bw1.rgb \\$/;"	m
DATA	data/tracks/e-track-2/Makefile	/^DATA   = e-track-2.xml e-track-2.acc background.png e-track-2.png env.png pylon3.rgb readme.txt$/;"	m
DATA	data/tracks/e-track-3/Makefile	/^DATA      = e-track-3.xml background.png env.rgb e-track-3.ac e-track-3.png readme.txt$/;"	m
DATA	data/tracks/e-track-4/Makefile	/^DATA      = e-track-4.xml background.png e-track-4.ac e-track-4.png readme.txt$/;"	m
DATA	data/tracks/e-track-5/Makefile	/^DATA      = e-track-5.xml background.png e-track-5.ac e-track-5.png readme.txt$/;"	m
DATA	data/tracks/eroad/Makefile	/^DATA      = eroad.xml background.png eroad.acc eroad.png readme.txt tr-wall-torcs1-left.rgb \\$/;"	m
DATA	data/tracks/g-track-1/Makefile	/^DATA      = g-track-1.xml g-track-1.acc background.png  g-track-1.png readme.txt \\$/;"	m
DATA	data/tracks/mixed-1/Makefile	/^DATA = background.png env1.png mixed-1.png mixed-1.xml shadow2.rgb mixed-1.acc readme.txt$/;"	m
DATA	data/tracks/mixed-2/Makefile	/^DATA      = mixed-2.xml background.png env.rgb mixed-2.ac mixed-2.png readme.txt$/;"	m
DATA	data/tracks/oval/b-speedway/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/oval/c-speedway/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/oval/d-speedway/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/oval/e-speedway/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/oval/f-speedway/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/oval/g-speedway/Makefile	/^DATA      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
DATA	data/tracks/oval/michigan/Makefile	/^DATA      = michigan.xml background.png michigan.acc michigan.png readme.txt \\$/;"	m
DATA	data/tracks/road/alpine-1/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png arbor01.rgb asgrassr_n.rgb barg3.rgb \\$/;"	m
DATA	data/tracks/road/alpine-2/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png readme.txt \\$/;"	m
DATA	data/tracks/road/e-track-6/Makefile	/^DATA      = e-track-6.xml e-track-6.acc readme.txt \\$/;"	m
DATA	data/tracks/road/forza/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png readme.txt \\$/;"	m
DATA	data/tracks/road/g-track-2/Makefile	/^DATA      = g-track-2.xml g-track-2.acc g-track-2.png background.png readme.txt alltree.rgb arbor01.rgb \\$/;"	m
DATA	data/tracks/road/g-track-3/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png arbor-wood_n.rgb arbor01.rgb asasphr.rgb \\$/;"	m
DATA	data/tracks/road/ole-road-1/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png concrete-patch.png cracked-asphalt.png \\$/;"	m
DATA	data/tracks/road/ruudskogen/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png readme.txt background.png shadow2.rgb \\$/;"	m
DATA	data/tracks/road/spring/Makefile	/^DATA      = spring.xml spring.ac spring.png readme.txt$/;"	m
DATA	data/tracks/road/street-1/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png background.png barr1.rgb concdal.rgb grass-aa.rgb \\$/;"	m
DATA	data/tracks/road/wheel-2/Makefile	/^DATA      = $(TRACK).xml $(TRACK).acc $(TRACK).png readme.txt \\$/;"	m
DATA	data/tracks/wheel-1/Makefile	/^DATA      = wheel-1.xml background.png env.rgb wheel-1.ac wheel-1.png readme.txt$/;"	m
DATA	src/tools/accc/ac3dload.cpp	42;"	d	file:
DATA	src/tools/trackgen/Makefile	/^DATA         	= trackgen.xml$/;"	m
DATADIR	Makefile	/^DATADIR 	= .$/;"	m
DATADIR	data/cars/categories/F1/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Historic/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Nascar/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Offroad-4WD-GrA/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Offroad-RWD-GrA/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Track-4WD-GrB/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Track-FWD-GrA/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Track-FWD-GrB/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Track-RWD-GrA/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Track-RWD-GrB/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/Track-RWD-GrC/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/categories/free/Makefile	/^DATADIR   = categories$/;"	m
DATADIR	data/cars/models/155-DTM/Makefile	/^DATADIR   = cars\/155-DTM$/;"	m
DATADIR	data/cars/models/acura-nsx-sz/Makefile	/^DATADIR   = cars\/acura-nsx-sz$/;"	m
DATADIR	data/cars/models/baja-bug/Makefile	/^DATADIR   = cars\/baja-bug$/;"	m
DATADIR	data/cars/models/buggy/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/car1-trb1/Makefile	/^DATADIR   = cars\/car1-trb1$/;"	m
DATADIR	data/cars/models/car1-trb3/Makefile	/^DATADIR   = cars\/car1-trb3$/;"	m
DATADIR	data/cars/models/car2-trb1/Makefile	/^DATADIR   = cars\/car2-trb1$/;"	m
DATADIR	data/cars/models/car3-trb1/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/car4-trb1/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/car5-trb1/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/car6-trb1/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/car7-trb1/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/cg-nascar-rwd/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-2000gt/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-5300gt/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-a110/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-alfatz2/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-bigh/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-cobra/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-coda/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-conrero/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-corvette-ttop/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-daytona/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-db4z/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-dbs/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-dino/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-ghibli/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-giulietta/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-grifo/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-gt40/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-gto/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/kc-p4/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/cars/models/p406/Makefile	/^DATADIR   = cars\/p406$/;"	m
DATADIR	data/cars/models/pw-206wrc/Makefile	/^DATADIR   = cars\/pw-206wrc$/;"	m
DATADIR	data/cars/models/pw-306wrc/Makefile	/^DATADIR   = cars\/pw-306wrc$/;"	m
DATADIR	data/cars/models/pw-corollawrc/Makefile	/^DATADIR   = cars\/pw-corollawrc$/;"	m
DATADIR	data/cars/models/pw-evoviwrc/Makefile	/^DATADIR   = cars\/pw-evoviwrc$/;"	m
DATADIR	data/cars/models/pw-focuswrc/Makefile	/^DATADIR   = cars\/pw-focuswrc$/;"	m
DATADIR	data/cars/models/pw-imprezawrc/Makefile	/^DATADIR   = cars\/pw-imprezawrc$/;"	m
DATADIR	data/cars/models/sc-f1/Makefile	/^DATADIR   = cars\/$(CAR)$/;"	m
DATADIR	data/data/fonts/Makefile	/^DATADIR   = data\/fonts$/;"	m
DATADIR	data/data/img/Makefile	/^DATADIR   	= data\/img$/;"	m
DATADIR	data/data/menu/Makefile	/^DATADIR   = menu$/;"	m
DATADIR	data/data/objects/Makefile	/^DATADIR      = data\/objects$/;"	m
DATADIR	data/data/sound/Makefile	/^DATADIR   = data\/sound$/;"	m
DATADIR	data/data/textures/Makefile	/^DATADIR   = data\/textures$/;"	m
DATADIR	data/data/tracks/Makefile	/^DATADIR   = data\/tracks$/;"	m
DATADIR	data/tracks/a-speedway/Makefile	/^DATADIR   = tracks\/oval\/a-speedway$/;"	m
DATADIR	data/tracks/aalborg/Makefile	/^DATADIR   = tracks\/road\/aalborg$/;"	m
DATADIR	data/tracks/dirt-2/Makefile	/^DATADIR   = tracks\/dirt\/dirt-2$/;"	m
DATADIR	data/tracks/dirt-4/Makefile	/^DATADIR   = tracks\/dirt\/dirt-4$/;"	m
DATADIR	data/tracks/dirt-5/Makefile	/^DATADIR   = tracks\/dirt\/dirt-5$/;"	m
DATADIR	data/tracks/dirt-6/Makefile	/^DATADIR   = tracks\/dirt\/dirt-6$/;"	m
DATADIR	data/tracks/dirt/dirt-1/Makefile	/^DATADIR   = tracks\/dirt\/dirt-1$/;"	m
DATADIR	data/tracks/dirt/dirt-3/Makefile	/^DATADIR   = tracks\/dirt\/$(TRACK)$/;"	m
DATADIR	data/tracks/e-track-1/Makefile	/^DATADIR   = tracks\/road\/e-track-1$/;"	m
DATADIR	data/tracks/e-track-2/Makefile	/^DATADIR    = tracks\/road\/e-track-2$/;"	m
DATADIR	data/tracks/e-track-3/Makefile	/^DATADIR   = tracks\/road\/e-track-3$/;"	m
DATADIR	data/tracks/e-track-4/Makefile	/^DATADIR   = tracks\/road\/e-track-4$/;"	m
DATADIR	data/tracks/e-track-5/Makefile	/^DATADIR   = tracks\/oval\/e-track-5$/;"	m
DATADIR	data/tracks/eroad/Makefile	/^DATADIR   = tracks\/road\/eroad$/;"	m
DATADIR	data/tracks/g-track-1/Makefile	/^DATADIR   = tracks\/road\/g-track-1$/;"	m
DATADIR	data/tracks/mixed-1/Makefile	/^DATADIR   = tracks\/dirt\/mixed-1$/;"	m
DATADIR	data/tracks/mixed-2/Makefile	/^DATADIR   = tracks\/dirt\/mixed-2$/;"	m
DATADIR	data/tracks/oval/b-speedway/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/oval/c-speedway/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/oval/d-speedway/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/oval/e-speedway/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/oval/f-speedway/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/oval/g-speedway/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/oval/michigan/Makefile	/^DATADIR   = tracks\/oval\/michigan$/;"	m
DATADIR	data/tracks/road/alpine-1/Makefile	/^DATADIR   = tracks\/road\/alpine-1$/;"	m
DATADIR	data/tracks/road/alpine-2/Makefile	/^DATADIR   = tracks\/road\/$(TRACK)$/;"	m
DATADIR	data/tracks/road/e-track-6/Makefile	/^DATADIR   = tracks\/road\/e-track-6$/;"	m
DATADIR	data/tracks/road/forza/Makefile	/^DATADIR   = tracks\/road\/forza$/;"	m
DATADIR	data/tracks/road/g-track-2/Makefile	/^DATADIR   = tracks\/road\/g-track-2$/;"	m
DATADIR	data/tracks/road/g-track-3/Makefile	/^DATADIR   = tracks\/road\/g-track-3$/;"	m
DATADIR	data/tracks/road/ole-road-1/Makefile	/^DATADIR   = tracks\/$(CATEGORY)\/$(TRACK)$/;"	m
DATADIR	data/tracks/road/ruudskogen/Makefile	/^DATADIR   = tracks\/road\/$(TRACK)$/;"	m
DATADIR	data/tracks/road/spring/Makefile	/^DATADIR   = tracks\/road\/spring$/;"	m
DATADIR	data/tracks/road/street-1/Makefile	/^DATADIR   = tracks\/road\/street-1$/;"	m
DATADIR	data/tracks/road/wheel-2/Makefile	/^DATADIR   = tracks\/road\/$(TRACK)$/;"	m
DATADIR	data/tracks/wheel-1/Makefile	/^DATADIR   = tracks\/road\/wheel-1$/;"	m
DATADIR	src/tools/accc/Makefile	/^DATADIR		= tools\/accc$/;"	m
DATADIR	src/tools/trackgen/Makefile	/^DATADIR      	= tools\/trackgen$/;"	m
DATASUBDIRS	Makefile	/^DATASUBDIRS	= data$/;"	m
DATASUBDIRS	data/Makefile	/^DATASUBDIRS	= data cars tracks$/;"	m
DATASUBDIRS	data/cars/Makefile	/^DATASUBDIRS	= categories models$/;"	m
DATASUBDIRS	data/cars/categories/Makefile	/^DATASUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
DATASUBDIRS	data/cars/models/Makefile	/^DATASUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
DATASUBDIRS	data/data/Makefile	/^DATASUBDIRS = img menu fonts textures sound objects tracks$/;"	m
DATASUBDIRS	data/tracks/Makefile	/^DATASUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)	$/;"	m
DATASUBDIRS	data/tracks/dirt/Makefile	/^DATASUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)	$/;"	m
DATASUBDIRS	data/tracks/oval/Makefile	/^DATASUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)	$/;"	m
DATASUBDIRS	data/tracks/road/Makefile	/^DATASUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)	$/;"	m
DATASUBDIRS	src/modules/simu/Makefile	/^DATASUBDIRS	= $(SUBDIRS)$/;"	m
DATA_PKG	data/cars/models/kc-2000gt/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-5300gt/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-a110/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-alfatz2/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-bigh/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-cobra/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-coda/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-conrero/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-corvette-ttop/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-daytona/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-db4z/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-dbs/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-dino/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-ghibli/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-giulietta/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-grifo/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-gt40/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-gto/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_PKG	data/cars/models/kc-p4/Makefile	/^DATA_PKG  = 	$(shell find *.acc -maxdepth 0 -type f -print) \\$/;"	m
DATA_WIN32	Make-default.mk	/^DATA_WIN32       = ${TORCS_BASE}\/setup_win32-data-from-CVS.bat$/;"	m
DATA_WIN32_D	Make-default.mk	/^DATA_WIN32_D     = ${TORCS_BASE}\/setup_win32-data-from-CVS_debug.bat$/;"	m
DBG_OPTIMISE	src/drivers/olethros/Trajectory.cpp	32;"	d	file:
DBG_SET_NAME	src/modules/graphic/ssggraph/grutil.h	34;"	d
DBG_SET_NAME	src/modules/graphic/ssggraph/grutil.h	45;"	d
DBL_EPSILON	src/windows/include/plib/ul.h	168;"	d
DBL_EPSILON	src/windows/include/ul.h	168;"	d
DD	src/modules/graphic/ssggraph/grboard.cpp	544;"	d	file:
DEBUG_H	export/include/learning/learn_debug.h	2;"	d
DEBUG_H	src/libs/learning/learn_debug.h	2;"	d
DEC_ARG_CORRUPT	export/include/learning/learn_debug.h	41;"	d
DEC_ARG_CORRUPT	src/libs/learning/learn_debug.h	41;"	d
DEC_ARG_INVALID	export/include/learning/learn_debug.h	40;"	d
DEC_ARG_INVALID	src/libs/learning/learn_debug.h	40;"	d
DEC_MASK	export/include/learning/learn_debug.h	44;"	d
DEC_MASK	src/libs/learning/learn_debug.h	44;"	d
DEC_MEM_ERROR	export/include/learning/learn_debug.h	37;"	d
DEC_MEM_ERROR	src/libs/learning/learn_debug.h	37;"	d
DEC_RES_INVALID	export/include/learning/learn_debug.h	38;"	d
DEC_RES_INVALID	src/libs/learning/learn_debug.h	38;"	d
DEC_SANITY_ERROR	export/include/learning/learn_debug.h	39;"	d
DEC_SANITY_ERROR	src/libs/learning/learn_debug.h	39;"	d
DEFAULT_ATTRIBUTE	src/libs/txml/xmlparse.c	/^} DEFAULT_ATTRIBUTE;$/;"	t	typeref:struct:__anon79	file:
DEFAULT_SIZE	src/libs/tgf/hash.cpp	54;"	d	file:
DEFINE_UTF16_TO_UTF16	src/libs/txml/xmltok.c	416;"	d	file:
DEFINE_UTF16_TO_UTF8	src/libs/txml/xmltok.c	353;"	d	file:
DEG2RAD	export/include/tgf.h	77;"	d
DEG2RAD	src/libs/tgf/tgf.h	77;"	d
DEGPRAD	src/modules/track/track.cpp	/^const tdble DEGPRAD = 180.0 \/ PI;   \/* degrees per radian *\/$/;"	v
DEGS_PER_RAD	export/include/3D/Basic.h	/^const Scalar DEGS_PER_RAD = 57.29577951308232286465;$/;"	v
DEGS_PER_RAD	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar DEGS_PER_RAD = 57.29577951308232286465;$/;"	v
DELTAT	src/modules/graphic/ssggraph/grsmoke.h	7;"	d
DELTATSTRIP	src/modules/graphic/ssggraph/grskidmarks.h	3;"	d
DFWD	src/drivers/berniw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon124
DFWD	src/drivers/berniw2/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon99
DFWD	src/drivers/berniw3/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon115
DFWD	src/drivers/human/human.cpp	50;"	d	file:
DFWD	src/drivers/inferno/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon140
DFWD	src/drivers/lliaw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon133
DFWD	src/drivers/tita/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon106
DIFF_FREE	src/modules/simu/simuv2/differential.h	37;"	d
DIFF_LIMITED_SLIP	src/modules/simu/simuv2/differential.h	38;"	d
DIFF_NONE	src/modules/simu/simuv2/differential.h	35;"	d
DIFF_SPOOL	src/modules/simu/simuv2/differential.h	36;"	d
DIFF_VISCOUS_COUPLER	src/modules/simu/simuv2/differential.h	39;"	d
DISABLED	src/modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	e	enum:SoundMode	file:
DIST	export/include/tgf.h	98;"	d
DIST	src/drivers/berniw/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	src/drivers/berniw2/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	src/drivers/berniw3/mycar.h	/^		double DIST;									\/* minimal distance to other cars [m] *\/$/;"	m	class:MyCar
DIST	src/drivers/inferno/mycar.h	/^		double DIST;									\/\/ Minimal distance to other cars [m].$/;"	m	class:MyCar
DIST	src/drivers/lliaw/mycar.h	/^		double DIST;									\/\/ Minimal distance to other cars [m].$/;"	m	class:MyCar
DIST	src/drivers/tita/mycar.h	/^		double DIST;									\/\/ Minimal distance to other cars [m].$/;"	m	class:MyCar
DIST	src/libs/tgf/tgf.h	98;"	d
DISTCUTOFF	src/drivers/bt/driver.cpp	/^const float Driver::DISTCUTOFF = 200.0f;					\/\/ [m] How far to look, terminate while loops.$/;"	m	class:Driver	file:
DISTCUTOFF	src/drivers/bt/driver.h	/^		static const float DISTCUTOFF;$/;"	m	class:Driver
DISTCUTOFF	src/drivers/damned/driver.cpp	/^const float Driver::DISTCUTOFF = 200.0f;					\/\/ [m] How far to look, terminate while loops.$/;"	m	class:Driver	file:
DISTCUTOFF	src/drivers/damned/driver.h	/^		static const float DISTCUTOFF;$/;"	m	class:Driver
DISTCUTOFF	src/drivers/olethros/driver.cpp	/^    const float Driver::DISTCUTOFF = 200.0f;						\/\/\/< [m] How far to look, terminate while loops.$/;"	m	class:olethros::Driver	file:
DISTCUTOFF	src/drivers/olethros/driver.h	/^	static const float DISTCUTOFF;$/;"	m	class:olethros::Driver
DISTRIBUTION_H	export/include/learning/Distribution.h	14;"	d
DISTRIBUTION_H	src/libs/learning/Distribution.h	14;"	d
DIST_INTERVAL	src/modules/graphic/ssggraph/grskidmarks.h	6;"	d
DLLEXT	export/include/osspec.h	25;"	d
DLLEXT	src/linux/osspec.h	25;"	d
DLLEXT	src/windows/osspec.h	26;"	d
DOC	src/modules/simu/simuv2/SOLID-2.0/doc/Makefile	/^DOC = solid2$/;"	m
DOCBASE	Make-default.mk	/^DOCBASE     = ${TORCS_BASE}\/doc$/;"	m
DO_LEAD_CASE	src/libs/txml/xmltok_impl.c	1646;"	d	file:
DRWD	src/drivers/berniw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon124
DRWD	src/drivers/berniw2/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon99
DRWD	src/drivers/berniw3/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon115
DRWD	src/drivers/human/human.cpp	49;"	d	file:
DRWD	src/drivers/inferno/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon140
DRWD	src/drivers/lliaw/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon133
DRWD	src/drivers/tita/mycar.h	/^		enum { DRWD = 0, DFWD = 1, D4WD = 2 };$/;"	e	enum:MyCar::__anon106
DTD	src/libs/txml/xmlparse.c	/^} DTD;$/;"	t	typeref:struct:__anon81	file:
DT_NO_RESPONSE	export/include/SOLID/solid.h	/^  DT_NO_RESPONSE,$/;"	e	enum:DtResponseType
DT_NO_RESPONSE	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_NO_RESPONSE,$/;"	e	enum:DtResponseType
DT_POLYGON	export/include/SOLID/solid.h	/^  DT_POLYGON,$/;"	e	enum:DtPolyType
DT_POLYGON	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_POLYGON,$/;"	e	enum:DtPolyType
DT_POLYHEDRON	export/include/SOLID/solid.h	/^  DT_POLYHEDRON$/;"	e	enum:DtPolyType
DT_POLYHEDRON	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_POLYHEDRON$/;"	e	enum:DtPolyType
DT_SIMPLEX	export/include/SOLID/solid.h	/^  DT_SIMPLEX,$/;"	e	enum:DtPolyType
DT_SIMPLEX	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_SIMPLEX,$/;"	e	enum:DtPolyType
DT_SIMPLE_RESPONSE	export/include/SOLID/solid.h	/^  DT_SIMPLE_RESPONSE,$/;"	e	enum:DtResponseType
DT_SIMPLE_RESPONSE	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_SIMPLE_RESPONSE,$/;"	e	enum:DtResponseType
DT_SMART_RESPONSE	export/include/SOLID/solid.h	/^  DT_SMART_RESPONSE,$/;"	e	enum:DtResponseType
DT_SMART_RESPONSE	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_SMART_RESPONSE,$/;"	e	enum:DtResponseType
DT_WITNESSED_RESPONSE	export/include/SOLID/solid.h	/^  DT_WITNESSED_RESPONSE$/;"	e	enum:DtResponseType
DT_WITNESSED_RESPONSE	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DT_WITNESSED_RESPONSE$/;"	e	enum:DtResponseType
DeadZoneEditId	src/libs/confscreens/controlconfig.cpp	/^static int DeadZoneEditId;$/;"	v	file:
DeadZoneVal	src/libs/confscreens/controlconfig.cpp	/^static float DeadZoneVal;$/;"	v	file:
DelayRepeat	src/libs/tgfclient/gui.cpp	/^static tdble DelayRepeat;$/;"	v	file:
DeleteANN	src/libs/learning/ANN.cpp	/^int DeleteANN(ANN * ann)$/;"	f
DeletePlayer	src/libs/confscreens/driverconfig.cpp	/^DeletePlayer(void * \/* dummy *\/)$/;"	f	file:
DepthLabelId	src/libs/tgfclient/screen.cpp	/^static int	DepthLabelId;$/;"	v	file:
DepthPrevNext	src/libs/tgfclient/screen.cpp	/^DepthPrevNext(void *vdelta)$/;"	f	file:
Depthlist	src/libs/tgfclient/screen.cpp	/^static char	*Depthlist[] = {"24", "32", "16"};$/;"	v	file:
DescId	src/libs/racescreens/trackselect.cpp	/^static int DescId;$/;"	v	file:
Det	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
DevCalibrate	src/libs/confscreens/controlconfig.cpp	/^DevCalibrate(void *menu)$/;"	f	file:
DiscreteDistribution	export/include/learning/Distribution.h	/^class DiscreteDistribution : public Distribution {$/;"	c
DiscreteDistribution	src/libs/learning/Distribution.cpp	/^DiscreteDistribution::DiscreteDistribution() {$/;"	f	class:DiscreteDistribution
DiscreteDistribution	src/libs/learning/Distribution.cpp	/^DiscreteDistribution::DiscreteDistribution(int N) {$/;"	f	class:DiscreteDistribution
DiscreteDistribution	src/libs/learning/Distribution.h	/^class DiscreteDistribution : public Distribution {$/;"	c
DiscretePolicy	export/include/learning/policy.h	/^class DiscretePolicy$/;"	c
DiscretePolicy	src/libs/learning/policy.cpp	/^DiscretePolicy::DiscretePolicy (int n_states, int n_actions, real alpha,$/;"	f	class:DiscretePolicy
DiscretePolicy	src/libs/learning/policy.h	/^class DiscretePolicy$/;"	c
Display	src/tools/texmapper/maintexmapper.cpp	/^Display(void)$/;"	f
DisplayCount	src/tools/texmapper/maintexmapper.cpp	/^int DisplayCount = 0;$/;"	v
DisplayMode	src/libs/tgfclient/fg_gm.cpp	/^	XF86VidModeModeLine DisplayMode;		\/\/ Current screen's display settings.$/;"	m	struct:tagSFG_Display	file:
DisplayModeClock	src/libs/tgfclient/fg_gm.cpp	/^	int					DisplayModeClock;   \/\/ The display mode's refresh rate.$/;"	m	struct:tagSFG_Display	file:
DistanceOfViewHashing	src/modules/graphic/ssggraph/grscene.h	/^typedef  struct DistanceOfViewHashing$/;"	s
DistanceOfViewHashing_t	src/modules/graphic/ssggraph/grscene.h	/^} DistanceOfViewHashing_t;$/;"	t	typeref:struct:DistanceOfViewHashing
Distribution	export/include/learning/Distribution.h	/^	Distribution() {}$/;"	f	class:Distribution
Distribution	export/include/learning/Distribution.h	/^class Distribution {$/;"	c
Distribution	src/libs/learning/Distribution.h	/^	Distribution() {}$/;"	f	class:Distribution
Distribution	src/libs/learning/Distribution.h	/^class Distribution {$/;"	c
DllEntryPoint	src/drivers/human/human.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	src/drivers/inferno2/inferno2.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	src/modules/simu/simuv2/simuitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	src/modules/telemetry/telemetryitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllEntryPoint	src/modules/track/trackitf.cpp	/^BOOL WINAPI DllEntryPoint (HINSTANCE hDLL, DWORD dwReason, LPVOID Reserved)$/;"	f
DllMain	src/libs/txml/dllmain.c	/^BOOL WINAPI DllMain(HANDLE hInst, ULONG ul_reason_for_call, LPVOID lpReserved)$/;"	f
DmTrack	src/drivers/inferno2/inferno2.cpp	/^tTrack		*DmTrack;$/;"	v
DoV	src/modules/graphic/ssggraph/grscene.h	/^typedef struct DoV $/;"	s
DoV_t	src/modules/graphic/ssggraph/grscene.h	/^} DoV_t;$/;"	t	typeref:struct:DoV
DoVfactor	export/include/track.h	/^    tdble DoVfactor;            \/* the factor to use in calculating DoV for this Seg *\/$/;"	m	struct:trackSeg
DoVfactor	src/interfaces/track.h	/^    tdble DoVfactor;            \/* the factor to use in calculating DoV for this Seg *\/$/;"	m	struct:trackSeg
DoVfactor	src/modules/track/track4.cpp	/^static tdble DoVfactor=1.0;$/;"	v	file:
DotProd	src/drivers/olethros/geometry.cpp	/^float DotProd(Vector* A, Vector* B)$/;"	f
Driver	src/drivers/bt/driver.cpp	/^Driver::Driver(int index)$/;"	f	class:Driver
Driver	src/drivers/bt/driver.h	/^class Driver {$/;"	c
Driver	src/drivers/damned/driver.cpp	/^Driver::Driver(int index)$/;"	f	class:Driver
Driver	src/drivers/damned/driver.h	/^class Driver {$/;"	c
Driver	src/drivers/olethros/driver.cpp	/^    Driver::Driver(int index)$/;"	f	class:olethros::Driver
Driver	src/drivers/olethros/driver.h	/^class Driver {$/;"	c	namespace:olethros
Driver	src/drivers/sparkle/driver.cpp	/^Driver::Driver(int index)$/;"	f	class:Driver
Driver	src/drivers/sparkle/driver.h	/^class Driver {$/;"	c
DrvElt	src/libs/racescreens/driverselect.cpp	/^typedef struct DrvElt$/;"	s	file:
DrvList	src/libs/racescreens/driverselect.cpp	/^tDrvListHead DrvList;$/;"	v
DtCollData	export/include/SOLID/solid.h	/^typedef struct DtCollData {$/;"	s
DtCollData	export/include/SOLID/solid.h	/^} DtCollData;$/;"	t	typeref:struct:DtCollData
DtCollData	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef struct DtCollData {$/;"	s
DtCollData	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^} DtCollData;$/;"	t	typeref:struct:DtCollData
DtCount	export/include/SOLID/solid.h	/^typedef unsigned int DtCount;$/;"	t
DtCount	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef unsigned int DtCount;$/;"	t
DtIndex	export/include/SOLID/solid.h	/^typedef unsigned int DtIndex;$/;"	t
DtIndex	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef unsigned int DtIndex;$/;"	t
DtObjectRef	export/include/SOLID/solid.h	/^typedef void *DtObjectRef;$/;"	t
DtObjectRef	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef void *DtObjectRef;$/;"	t
DtPolyType	export/include/SOLID/solid.h	/^typedef enum DtPolyType {$/;"	g
DtPolyType	export/include/SOLID/solid.h	/^} DtPolyType;$/;"	t	typeref:enum:DtPolyType
DtPolyType	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef enum DtPolyType {$/;"	g
DtPolyType	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^} DtPolyType;$/;"	t	typeref:enum:DtPolyType
DtResponse	export/include/SOLID/solid.h	/^typedef void (*DtResponse)($/;"	t
DtResponse	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef void (*DtResponse)($/;"	t
DtResponseType	export/include/SOLID/solid.h	/^typedef enum DtResponseType { $/;"	g
DtResponseType	export/include/SOLID/solid.h	/^} DtResponseType;$/;"	t	typeref:enum:DtResponseType
DtResponseType	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef enum DtResponseType { $/;"	g
DtResponseType	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^} DtResponseType;$/;"	t	typeref:enum:DtResponseType
DtScalar	export/include/SOLID/solid.h	/^typedef double DtScalar;$/;"	t
DtScalar	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef double DtScalar;$/;"	t
DtShapeRef	export/include/SOLID/solid.h	/^typedef void *DtShapeRef;$/;"	t
DtShapeRef	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef void *DtShapeRef;$/;"	t
DtVector	export/include/SOLID/solid.h	/^typedef DtScalar DtVector[3];$/;"	t
DtVector	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^typedef DtScalar DtVector[3];$/;"	t
DynGC	export/include/car.h	/^    tDynPt	DynGC;		\/**< GC data (car axis) *\/    $/;"	m	struct:__anon199
DynGC	src/interfaces/car.h	/^    tDynPt	DynGC;		\/**< GC data (car axis) *\/    $/;"	m	struct:__anon159
DynGC	src/modules/simu/simuv2/carstruct.h	/^    tDynPt	DynGC;		\/* GC local data except position *\/$/;"	m	struct:__anon18
DynGCg	export/include/car.h	/^    tDynPt	DynGCg;		\/**< GC data (world axis) *\/    $/;"	m	struct:__anon199
DynGCg	src/interfaces/car.h	/^    tDynPt	DynGCg;		\/**< GC data (world axis) *\/    $/;"	m	struct:__anon159
DynGCg	src/modules/simu/simuv2/carstruct.h	/^    tDynPt	DynGCg;		\/* GC global data *\/$/;"	m	struct:__anon18
DynOffset	src/drivers/inferno2/inferno2.cpp	/^tdble DynOffset[10] = {0.0};$/;"	v
ELEMENT_TYPE	src/libs/txml/xmlparse.c	/^} ELEMENT_TYPE;$/;"	t	typeref:struct:__anon80	file:
ELearning	export/include/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
ELearning	src/libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
ENCODING	src/libs/txml/xmltok.h	/^typedef struct encoding ENCODING;$/;"	t	typeref:struct:encoding
ENCODING_MAX	src/libs/txml/xmltok.c	797;"	d	file:
ENDPOINT_H	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	28;"	d
ENTITY	src/libs/txml/xmlparse.c	/^} ENTITY;$/;"	t	typeref:struct:__anon76	file:
EPSILON	export/include/3D/Basic.h	/^const Scalar EPSILON =       1.0e-10;$/;"	v
EPSILON	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar EPSILON =       1.0e-10;$/;"	v
EPSILON2	export/include/3D/Basic.h	/^const Scalar EPSILON2 =      1.0e-20;$/;"	v
EPSILON2	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar EPSILON2 =      1.0e-20;$/;"	v
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	src/windows/include/GL/wglext.h	128;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	src/windows/include/GL/wglext.h	127;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	src/windows/include/GL/wglext.h	183;"	d
EXACT_DIST	src/drivers/bt/opponent.cpp	/^const float Opponent::EXACT_DIST = 12.0f;				\/\/ [m] if the estimated distance is smaller, compute it more accurate$/;"	m	class:Opponent	file:
EXACT_DIST	src/drivers/bt/opponent.h	/^		static const float EXACT_DIST;$/;"	m	class:Opponent
EXACT_DIST	src/drivers/damned/opponent.cpp	/^const float Opponent::EXACT_DIST = 12.0f;				\/\/ [m] if the estimated distance is smaller, compute it more accurate$/;"	m	class:Opponent	file:
EXACT_DIST	src/drivers/damned/opponent.h	/^		static const float EXACT_DIST;$/;"	m	class:Opponent
EXACT_DIST	src/drivers/olethros/opponent.cpp	/^const float Opponent::EXACT_DIST = 12.0;				\/\/ [m] if the estimated distance is smaller, compute it more accurate$/;"	m	class:olethros::Opponent	file:
EXACT_DIST	src/drivers/olethros/opponent.h	/^		static const float EXACT_DIST;$/;"	m	class:olethros::Opponent
EXPDIR	src/interfaces/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	src/libs/client/Makefile	/^EXPDIR    = include$/;"	m
EXPDIR	src/libs/confscreens/Makefile	/^EXPDIR    = include$/;"	m
EXPDIR	src/libs/learning/Makefile	/^EXPDIR       = include\/learning$/;"	m
EXPDIR	src/libs/math/Makefile	/^EXPDIR       = include\/tmath$/;"	m
EXPDIR	src/libs/portability/Makefile	/^EXPDIR       = include$/;"	m
EXPDIR	src/libs/raceengineclient/Makefile	/^EXPDIR       = include$/;"	m
EXPDIR	src/libs/racescreens/Makefile	/^EXPDIR    = include$/;"	m
EXPDIR	src/libs/robottools/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	src/libs/tgf/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	src/libs/tgfclient/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	src/libs/txml/Makefile	/^EXPDIR      = include$/;"	m
EXPDIR	src/linux/Makefile	/^EXPDIR  = include$/;"	m
EXPDIR	src/modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^EXPDIR       = include\/3D$/;"	m
EXPDIR	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^EXPDIR       = include\/SOLID$/;"	m
EXPINCDIRS	Makefile	/^EXPINCDIRS	= src$/;"	m
EXPINCDIRS	src/Makefile	/^EXPINCDIRS	= interfaces libs linux modules$/;"	m
EXPINCDIRS	src/libs/Makefile	/^EXPINCDIRS	= txml tgf tgfclient client confscreens racescreens robottools raceengineclient learning \\$/;"	m
EXPINCDIRS	src/modules/Makefile	/^EXPINCDIRS      = simu$/;"	m
EXPINCDIRS	src/modules/simu/Makefile	/^EXPINCDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
EXPINCDIRS	src/modules/simu/simuv2/Makefile	/^EXPINCDIRS	= SOLID-2.0$/;"	m
EXPINCDIRS	src/modules/simu/simuv2/SOLID-2.0/Makefile	/^EXPINCDIRS	= include$/;"	m
EXPINCDIRS	src/modules/simu/simuv2/SOLID-2.0/include/Makefile	/^EXPINCDIRS	= 3D SOLID$/;"	m
EXPORTBASE	Make-default.mk	/^EXPORTBASE  = ${TORCS_BASE}\/export$/;"	m
EXPORTS	src/interfaces/Makefile	/^EXPORTS = $(shell find * -maxdepth 0 -name '*.h' -print)$/;"	m
EXPORTS	src/libs/client/Makefile	/^EXPORTS   = client.h exitmenu.h$/;"	m
EXPORTS	src/libs/confscreens/Makefile	/^EXPORTS   = confscreens.h driverconfig.h joystickconfig.h mouseconfig.h controlconfig.h graphconfig.h\\$/;"	m
EXPORTS	src/libs/learning/Makefile	/^EXPORTS      = policy.h ann_policy.h ANN.h learn_debug.h real.h string_utils.h List.h MathFunctions.h Distribution.h$/;"	m
EXPORTS	src/libs/math/Makefile	/^EXPORTS      = linalg_t.h  v2_t.h  v3_t.h  v4_t.h straight2_t.h$/;"	m
EXPORTS	src/libs/portability/Makefile	/^EXPORTS      = portability.h$/;"	m
EXPORTS	src/libs/raceengineclient/Makefile	/^EXPORTS      = singleplayer.h raceinit.h$/;"	m
EXPORTS	src/libs/racescreens/Makefile	/^EXPORTS   = racescreens.h$/;"	m
EXPORTS	src/libs/robottools/Makefile	/^EXPORTS = robottools.h$/;"	m
EXPORTS	src/libs/tgf/Makefile	/^EXPORTS = tgf.h os.h$/;"	m
EXPORTS	src/libs/tgfclient/Makefile	/^EXPORTS = tgfclient.h screen_properties.h glfeatures.h$/;"	m
EXPORTS	src/libs/txml/Makefile	/^EXPORTS     = xml.h xmlparse.h$/;"	m
EXPORTS	src/linux/Makefile	/^EXPORTS = osspec.h$/;"	m
EXPORTS	src/modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^EXPORTS      = Basic.h  Matrix.h  Point.h  Quaternion.h  Tuple3.h  Tuple4.h  Vector.h$/;"	m
EXPORTS	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^EXPORTS      = solid.h$/;"	m
EXP_COST	src/drivers/olethros/Trajectory.cpp	31;"	d	file:
EX_PI	src/modules/graphic/ssggraph/sound_defines.h	4;"	d
EX_PI	src/modules/graphic/ssggraph/sound_defines.h	6;"	d
ElevationFile	src/tools/trackgen/maintrackgen.cpp	/^char		*ElevationFile;$/;"	v
ElvImage	src/tools/trackgen/elevation.cpp	/^static unsigned char	*ElvImage;$/;"	v	file:
ElvOk	src/tools/trackgen/elevation.cpp	/^static int	ElvOk = 0;$/;"	v	file:
Encounter	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  Encounter(ObjectPtr o1, ObjectPtr o2) {$/;"	f	class:Encounter
Encounter	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^class Encounter {$/;"	c
Endpoint	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^Endpoint::Endpoint(int axis, Side s, const Object *obj) : $/;"	f	class:Endpoint
Endpoint	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Endpoint() : objPtr(0) {}$/;"	f	class:Endpoint
Endpoint	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^class Endpoint {$/;"	c
EndpointList	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^  EndpointList() {$/;"	f	class:EndpointList
EndpointList	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^class EndpointList {$/;"	c	file:
EstimateRadius	src/drivers/olethros/driver.cpp	/^    float Driver::EstimateRadius (tTrackSeg* seg, tTrackSeg* prev_seg, tTrackSeg* next_seg) $/;"	f	class:olethros::Driver
EstimateRadius2	src/drivers/olethros/driver.cpp	/^    float Driver::EstimateRadius2 (tTrackSeg* seg) $/;"	f	class:olethros::Driver
EstimateSphere	src/drivers/olethros/geometry.cpp	/^void EstimateSphere (std::vector<Vector> P, ParametricSphere* sphere)$/;"	f
EstimateTorque	src/drivers/olethros/driver.cpp	/^    float Driver::EstimateTorque (float rpm)$/;"	f	class:olethros::Driver
EuclideanNorm	src/libs/learning/MathFunctions.cpp	/^real EuclideanNorm (real* a, real* b, int n)$/;"	f
ExitGraphicOptions	src/libs/confscreens/graphconfig.cpp	/^ExitGraphicOptions(void *prevMenu)$/;"	f	file:
Exp	src/libs/learning/ANN.cpp	/^real Exp(real x)$/;"	f
Exp_d	src/libs/learning/ANN.cpp	/^real Exp_d(real x)$/;"	f
ExponentialDistribution	export/include/learning/Distribution.h	/^	ExponentialDistribution() {m=0.0; l=1.0;}$/;"	f	class:ExponentialDistribution
ExponentialDistribution	export/include/learning/Distribution.h	/^	ExponentialDistribution(real lambda)$/;"	f	class:ExponentialDistribution
ExponentialDistribution	export/include/learning/Distribution.h	/^	ExponentialDistribution(real mean, real var)$/;"	f	class:ExponentialDistribution
ExponentialDistribution	export/include/learning/Distribution.h	/^class ExponentialDistribution : public ParametricDistribution {$/;"	c
ExponentialDistribution	src/libs/learning/Distribution.h	/^	ExponentialDistribution() {m=0.0; l=1.0;}$/;"	f	class:ExponentialDistribution
ExponentialDistribution	src/libs/learning/Distribution.h	/^	ExponentialDistribution(real lambda)$/;"	f	class:ExponentialDistribution
ExponentialDistribution	src/libs/learning/Distribution.h	/^	ExponentialDistribution(real mean, real var)$/;"	f	class:ExponentialDistribution
ExponentialDistribution	src/libs/learning/Distribution.h	/^class ExponentialDistribution : public ParametricDistribution {$/;"	c
ExtHeight	src/tools/trackgen/easymesh.cpp	/^static tdble 	ExtHeight;$/;"	v	file:
ExtHeight	src/tools/trackgen/maintrackgen.cpp	/^float	ExtHeight = 5.0;$/;"	v
ExteriorList	src/tools/trackgen/relief.cpp	/^tRingListHead	ExteriorList;$/;"	v
F	export/include/tgf.h	/^    t3Dd F; \/**< Forces *\/$/;"	m	struct:__anon193
F	src/libs/tgf/tgf.h	/^    t3Dd F; \/**< Forces *\/$/;"	m	struct:__anon51
F	src/tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
F0	src/modules/simu/simuv2/susp.h	/^    tdble F0;         \/* initial force *\/$/;"	m	struct:__anon17
FALSE	src/tools/accc/accc.h	28;"	d
FALSE	src/windows/include/plib/ul.h	173;"	d
FALSE	src/windows/include/ul.h	173;"	d
FAR	export/include/js.h	59;"	d
FAR	src/interfaces/js.h	59;"	d
FAR	src/windows/include/pngconf.h	1003;"	d
FAR	src/windows/include/pngconf.h	1032;"	d
FAR	src/windows/include/zconf.h	151;"	d
FAR	src/windows/include/zconf.h	153;"	d
FAR	src/windows/include/zconf.h	159;"	d
FAR	src/windows/include/zconf.h	167;"	d
FAR	src/windows/include/zconf.h	210;"	d
FARDATA	src/windows/include/pngconf.h	1025;"	d
FARDATA	src/windows/include/pngconf.h	1037;"	d
FCLOSE	src/modules/graphic/ssggraph/grloadac.cpp	38;"	d	file:
FEET2M	export/include/tgf.h	78;"	d
FEET2M	src/libs/tgf/tgf.h	78;"	d
FGETC	src/modules/graphic/ssggraph/grloadac.cpp	36;"	d	file:
FGETS	src/modules/graphic/ssggraph/grloadac.cpp	35;"	d	file:
FILTER_PREDICT_FEEDBACK	src/drivers/olethros/driver.cpp	/^    const float Driver::FILTER_PREDICT_FEEDBACK = 0.0f;        \/\/\/< [-] Feedback from prediction error to steer filter.$/;"	m	class:olethros::Driver	file:
FILTER_PREDICT_FEEDBACK	src/drivers/olethros/driver.h	/^	static const float FILTER_PREDICT_FEEDBACK;$/;"	m	class:olethros::Driver
FILTER_SLOT	src/modules/graphic/ssggraph/TorcsSound.h	25;"	d
FILTER_STEER_FEEDBACK	src/drivers/olethros/driver.cpp	/^    const float Driver::FILTER_STEER_FEEDBACK = 0.8f;        \/\/\/< [-] Feedback from steering to steer filter.$/;"	m	class:olethros::Driver	file:
FILTER_STEER_FEEDBACK	src/drivers/olethros/driver.h	/^	static const float FILTER_STEER_FEEDBACK;$/;"	m	class:olethros::Driver
FILTER_TARGET_FEEDBACK	src/drivers/olethros/driver.cpp	/^    const float Driver::FILTER_TARGET_FEEDBACK = 0.2f;        \/\/\/< [-] Feedback from target error to steer filter.$/;"	m	class:olethros::Driver	file:
FILTER_TARGET_FEEDBACK	src/drivers/olethros/driver.h	/^	static const float FILTER_TARGET_FEEDBACK;$/;"	m	class:olethros::Driver
FLT_EPSILON	src/windows/include/plib/ul.h	164;"	d
FLT_EPSILON	src/windows/include/ul.h	164;"	d
FLYSPEED	src/drivers/berniw/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	src/drivers/berniw/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	src/drivers/berniw2/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	src/drivers/berniw2/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	src/drivers/berniw3/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;			\/* above this speed anti fly system is activated [m\/s] *\/$/;"	m	class:MyCar	file:
FLYSPEED	src/drivers/berniw3/mycar.h	/^		static const double FLYSPEED;			\/* speed where antifly checking gets activated [m\/s] *\/$/;"	m	class:MyCar
FLYSPEED	src/drivers/inferno/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;				\/\/ Above this speed anti flying system is activated [m\/s].$/;"	m	class:MyCar	file:
FLYSPEED	src/drivers/inferno/mycar.h	/^		static const double FLYSPEED;				\/\/ Speed where antifly checking gets activated [m\/s].$/;"	m	class:MyCar
FLYSPEED	src/drivers/lliaw/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;				\/\/ Above this speed anti flying system is activated [m\/s].$/;"	m	class:MyCar	file:
FLYSPEED	src/drivers/lliaw/mycar.h	/^		static const double FLYSPEED;				\/\/ Speed where antifly checking gets activated [m\/s].$/;"	m	class:MyCar
FLYSPEED	src/drivers/tita/mycar.cpp	/^const double MyCar::FLYSPEED = 55.0;				\/\/ Above this speed anti flying system is activated [m\/s].$/;"	m	class:MyCar	file:
FLYSPEED	src/drivers/tita/mycar.h	/^		static const double FLYSPEED;				\/\/ Speed where antifly checking gets activated [m\/s].$/;"	m	class:MyCar
FList	export/include/tgf.h	/^typedef struct FList $/;"	s
FList	src/libs/tgf/tgf.h	/^typedef struct FList $/;"	s
FNIC	src/drivers/berniw/pathfinder.h	45;"	d
FNIC	src/drivers/berniw2/pathfinder.h	45;"	d
FNIC	src/drivers/berniw3/pathfinder.h	45;"	d
FNIS	src/drivers/berniw/pathfinder.h	44;"	d
FNIS	src/drivers/berniw2/pathfinder.h	44;"	d
FNIS	src/drivers/berniw3/pathfinder.h	44;"	d
FNPF	src/drivers/berniw/pathfinder.h	43;"	d
FNPF	src/drivers/berniw2/pathfinder.h	43;"	d
FNPF	src/drivers/berniw3/pathfinder.h	43;"	d
FONT_NB	src/libs/tgfclient/guifont.cpp	39;"	d	file:
FOPEN	src/modules/graphic/ssggraph/grloadac.cpp	37;"	d	file:
FREEZ	export/include/tgf.h	61;"	d
FREEZ	src/libs/tgf/tgf.h	61;"	d
FRNT	export/include/car.h	44;"	d
FRNT	src/interfaces/car.h	44;"	d
FRNT_LFT	export/include/car.h	41;"	d
FRNT_LFT	src/interfaces/car.h	41;"	d
FRNT_RGT	export/include/car.h	40;"	d
FRNT_RGT	src/interfaces/car.h	40;"	d
FRONTCOLLDIST	src/drivers/bt/opponent.cpp	/^const float Opponent::FRONTCOLLDIST = 200.0f;			\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
FRONTCOLLDIST	src/drivers/bt/opponent.h	/^		static const float FRONTCOLLDIST;$/;"	m	class:Opponent
FRONTCOLLDIST	src/drivers/damned/opponent.cpp	/^const float Opponent::FRONTCOLLDIST = 200.0f;			\/\/ [m] distance on the track to check other cars.$/;"	m	class:Opponent	file:
FRONTCOLLDIST	src/drivers/damned/opponent.h	/^		static const float FRONTCOLLDIST;$/;"	m	class:Opponent
FRONTCOLLDIST	src/drivers/olethros/opponent.cpp	/^const float Opponent::FRONTCOLLDIST = 200.0;			\/\/ [m] distance on the track to check other cars.$/;"	m	class:olethros::Opponent	file:
FRONTCOLLDIST	src/drivers/olethros/opponent.h	/^		static const float FRONTCOLLDIST;$/;"	m	class:olethros::Opponent
FRONTCOLLDIST	src/drivers/sparkle/opponent.cpp	/^float Opponent::FRONTCOLLDIST = 200.0;	\/* [m] distance on the track to check other cars *\/$/;"	m	class:Opponent	file:
FRONTCOLLDIST	src/drivers/sparkle/opponent.h	/^		static float FRONTCOLLDIST;$/;"	m	class:Opponent
FUEL_SAFETY_MARGIN	src/drivers/inferno/mycar.cpp	/^const float MyCar::FUEL_SAFETY_MARGIN = 0.15f;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar	file:
FUEL_SAFETY_MARGIN	src/drivers/inferno/mycar.h	/^		static const float FUEL_SAFETY_MARGIN;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar
FUEL_SAFETY_MARGIN	src/drivers/lliaw/mycar.cpp	/^const float MyCar::FUEL_SAFETY_MARGIN = 0.15f;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar	file:
FUEL_SAFETY_MARGIN	src/drivers/lliaw/mycar.h	/^		static const float FUEL_SAFETY_MARGIN;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar
FUEL_SAFETY_MARGIN	src/drivers/tita/mycar.cpp	/^const float MyCar::FUEL_SAFETY_MARGIN = 0.15f;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar	file:
FUEL_SAFETY_MARGIN	src/drivers/tita/mycar.h	/^		static const float FUEL_SAFETY_MARGIN;		\/\/ [kg] How much additional fuel in parts of maxfuelperlap for random errors.$/;"	m	class:MyCar
FULL_ACCEL_MARGIN	src/drivers/bt/driver.cpp	/^const float Driver::FULL_ACCEL_MARGIN = 1.0f;				\/\/ [m\/s] Margin reduce oscillation of brake\/acceleration.$/;"	m	class:Driver	file:
FULL_ACCEL_MARGIN	src/drivers/bt/driver.h	/^		static const float FULL_ACCEL_MARGIN;$/;"	m	class:Driver
FULL_ACCEL_MARGIN	src/drivers/damned/driver.cpp	/^const float Driver::FULL_ACCEL_MARGIN = 1.0f;				\/\/ [m\/s] Margin reduce oscillation of brake\/acceleration.$/;"	m	class:Driver	file:
FULL_ACCEL_MARGIN	src/drivers/damned/driver.h	/^		static const float FULL_ACCEL_MARGIN;$/;"	m	class:Driver
FULL_ACCEL_MARGIN	src/drivers/olethros/driver.cpp	/^    const float Driver::FULL_ACCEL_MARGIN = 3.0f;				\/\/\/< [m\/s] Margin reduce oscillation of brake\/acceleration.$/;"	m	class:olethros::Driver	file:
FULL_ACCEL_MARGIN	src/drivers/olethros/driver.h	/^	static const float FULL_ACCEL_MARGIN;$/;"	m	class:olethros::Driver
FULL_ACCEL_MARGIN	src/drivers/sparkle/driver.cpp	/^const float Driver::FULL_ACCEL_MARGIN = 1.0;				\/* [m\/s] *\/$/;"	m	class:Driver	file:
FULL_ACCEL_MARGIN	src/drivers/sparkle/driver.h	/^		static const float FULL_ACCEL_MARGIN;$/;"	m	class:Driver
Face	src/tools/texmapper/maintexmapper.cpp	/^typedef struct Face$/;"	s	file:
FileList	src/libs/racescreens/fileselect.cpp	/^static tFList		*FileList = NULL;$/;"	v	file:
FileSelected	src/libs/racescreens/fileselect.cpp	/^static tFList		*FileSelected;$/;"	v	file:
FindCurveTarget	src/drivers/olethros/driver.cpp	/^    float Driver::FindCurveTarget(tTrackSeg* seg, Vector* C, float rmax)$/;"	f	class:olethros::Driver
FindItem	src/libs/learning/List.cpp	/^LISTITEM* FindItem (LIST* list, void* ptr)$/;"	f
FindStraightTarget	src/drivers/olethros/driver.cpp	/^    float Driver::FindStraightTarget(tTrackSeg* curve, tTrackSeg* seg, Vector* C, float rmax, bool& flag)$/;"	f	class:olethros::Driver
FirstListItem	src/libs/learning/List.cpp	/^LISTITEM* FirstListItem(LIST* list)$/;"	f
Fl	src/tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
FocDrvLabelId	src/libs/racescreens/driverselect.cpp	/^static int		FocDrvLabelId;$/;"	v	file:
ForcedLearning	export/include/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
ForcedLearning	src/libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
Format	src/windows/include/plib/sl.h	/^   WAVEFORMATEX   Format;        \/\/ open needs this$/;"	m	class:slDSP
FovEditId	src/libs/confscreens/graphconfig.cpp	/^static int	FovEditId;$/;"	v	file:
FovFactorValue	src/libs/confscreens/graphconfig.cpp	/^static int	FovFactorValue = 100;$/;"	v	file:
FreeListItem	src/libs/learning/List.cpp	/^int FreeListItem(LIST* list, LISTITEM* ptr)$/;"	f
FreeM	export/include/learning/learn_debug.h	31;"	d
FreeM	src/libs/learning/learn_debug.h	31;"	d
FreeStringBuffer	src/libs/learning/string_utils.cpp	/^void FreeStringBuffer (StringBuffer** s)$/;"	f
FrontLevelGroup1	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroup1;      \/* the distance for the end of the front scene for group type 1*\/$/;"	m	struct:DoV
FrontLevelGroup2	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroup2;      \/* the distance for the end of the front scene for group type 2*\/$/;"	m	struct:DoV
FrontLevelGroup3	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroup3;      \/* the distance for the end of the front scene for group type 3*\/$/;"	m	struct:DoV
FrontLevelGroupGlobal	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelGroupGlobal; \/* the distance for the end of the front scene *\/$/;"	m	struct:DoV
FrontLevelMap1	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelMap1;      \/* the distance for the end of the front scene with only one mapping*\/$/;"	m	struct:DoV
FrontLevelMap2	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelMap2;      \/* the distance for the end of the front scene with two mapping*\/$/;"	m	struct:DoV
FrontLevelMap3	src/modules/graphic/ssggraph/grscene.h	/^  tdble FrontLevelMap3;      \/* the distance for the end of the front scene with three mapping*\/$/;"	m	struct:DoV
Fx	export/include/car.h	/^	tdble Fx;$/;"	m	struct:__anon200
Fx	src/interfaces/car.h	/^	tdble Fx;$/;"	m	struct:__anon160
Fy	export/include/car.h	/^	tdble Fy;$/;"	m	struct:__anon200
Fy	src/interfaces/car.h	/^	tdble Fy;$/;"	m	struct:__anon160
Fz	export/include/car.h	/^	tdble Fz;$/;"	m	struct:__anon200
Fz	src/interfaces/car.h	/^	tdble Fz;$/;"	m	struct:__anon160
G	export/include/tgf.h	/^const tdble G = 9.80665f; \/**< m\/s\/s *\/$/;"	v
G	src/drivers/bt/driver.cpp	/^const float Driver::G = 9.81f;								\/\/ [m\/(s*s)] Welcome on Earth.$/;"	m	class:Driver	file:
G	src/drivers/bt/driver.h	/^		static const float G;$/;"	m	class:Driver
G	src/drivers/damned/driver.cpp	/^const float Driver::G = 9.81f;								\/\/ [m\/(s*s)] Welcome on Earth.$/;"	m	class:Driver	file:
G	src/drivers/damned/driver.h	/^		static const float G;$/;"	m	class:Driver
G	src/drivers/olethros/driver.cpp	/^    const float Driver::G = 9.81f;								\/\/\/< [m\/(s*s)] Welcome on Earth.$/;"	m	class:olethros::Driver	file:
G	src/drivers/olethros/driver.h	/^	static const float G;$/;"	m	class:olethros::Driver
G	src/drivers/sparkle/driver.cpp	/^const float Driver::G = 9.81;								\/* [m\/(s*s)] *\/$/;"	m	class:Driver	file:
G	src/drivers/sparkle/driver.h	/^		static const float G;$/;"	m	class:Driver
G	src/libs/tgf/tgf.h	/^const tdble G = 9.80665f; \/**< m\/s\/s *\/$/;"	v
GARBAGE	src/tools/package/specfiles/Makefile	/^GARBAGE = $(SPECFILES)$/;"	m
GAUSSIAN	export/include/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
GAUSSIAN	src/libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
GCTIME	src/drivers/berniw/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	src/drivers/berniw2/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	src/drivers/berniw3/mycar.h	/^		double GCTIME;									\/* minimal time between gear changes *\/$/;"	m	class:MyCar
GCTIME	src/drivers/inferno/mycar.h	/^		double GCTIME;									\/\/ Minimal time between gear changes.$/;"	m	class:MyCar
GCTIME	src/drivers/lliaw/mycar.h	/^		double GCTIME;									\/\/ Minimal time between gear changes.$/;"	m	class:MyCar
GCTIME	src/drivers/tita/mycar.h	/^		double GCTIME;									\/\/ Minimal time between gear changes.$/;"	m	class:MyCar
GEOMETRY_H	src/drivers/olethros/geometry.h	22;"	d
GET_DRIVEN_WHEEL_SPEED	src/drivers/bt/driver.h	/^		float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:Driver
GET_DRIVEN_WHEEL_SPEED	src/drivers/damned/driver.h	/^		float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:Driver
GET_DRIVEN_WHEEL_SPEED	src/drivers/olethros/driver.h	/^	float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:olethros::Driver
GET_DRIVEN_WHEEL_SPEED	src/drivers/sparkle/driver.h	/^		float (Driver::*GET_DRIVEN_WHEEL_SPEED)();$/;"	m	class:Driver
GET_HI	src/libs/txml/xmltok.c	450;"	d	file:
GET_HI	src/libs/txml/xmltok.c	457;"	d	file:
GET_HI	src/libs/txml/xmltok.c	517;"	d	file:
GET_HI	src/libs/txml/xmltok.c	524;"	d	file:
GET_LO	src/libs/txml/xmltok.c	449;"	d	file:
GET_LO	src/libs/txml/xmltok.c	456;"	d	file:
GET_LO	src/libs/txml/xmltok.c	516;"	d	file:
GET_LO	src/libs/txml/xmltok.c	523;"	d	file:
GFCTRL_JOY_MAXBUTTON	export/include/tgfclient.h	267;"	d
GFCTRL_JOY_MAXBUTTON	src/libs/tgfclient/tgfclient.h	267;"	d
GFCTRL_JOY_NONE	export/include/tgfclient.h	264;"	d
GFCTRL_JOY_NONE	src/libs/tgfclient/tgfclient.h	264;"	d
GFCTRL_JOY_PRESENT	export/include/tgfclient.h	265;"	d
GFCTRL_JOY_PRESENT	src/libs/tgfclient/tgfclient.h	265;"	d
GFCTRL_JOY_UNTESTED	export/include/tgfclient.h	263;"	d
GFCTRL_JOY_UNTESTED	src/libs/tgfclient/tgfclient.h	263;"	d
GFCTRL_TYPE_JOY_AXIS	export/include/tgfclient.h	249;"	d
GFCTRL_TYPE_JOY_AXIS	src/libs/tgfclient/tgfclient.h	249;"	d
GFCTRL_TYPE_JOY_BUT	export/include/tgfclient.h	250;"	d
GFCTRL_TYPE_JOY_BUT	src/libs/tgfclient/tgfclient.h	250;"	d
GFCTRL_TYPE_KEYBOARD	export/include/tgfclient.h	251;"	d
GFCTRL_TYPE_KEYBOARD	src/libs/tgfclient/tgfclient.h	251;"	d
GFCTRL_TYPE_MOUSE_AXIS	export/include/tgfclient.h	253;"	d
GFCTRL_TYPE_MOUSE_AXIS	src/libs/tgfclient/tgfclient.h	253;"	d
GFCTRL_TYPE_MOUSE_BUT	export/include/tgfclient.h	252;"	d
GFCTRL_TYPE_MOUSE_BUT	src/libs/tgfclient/tgfclient.h	252;"	d
GFCTRL_TYPE_NOT_AFFECTED	export/include/tgfclient.h	248;"	d
GFCTRL_TYPE_NOT_AFFECTED	src/libs/tgfclient/tgfclient.h	248;"	d
GFCTRL_TYPE_SKEYBOARD	export/include/tgfclient.h	254;"	d
GFCTRL_TYPE_SKEYBOARD	src/libs/tgfclient/tgfclient.h	254;"	d
GFPARM_MMODE_DST	export/include/tgf.h	316;"	d
GFPARM_MMODE_DST	src/libs/tgf/tgf.h	316;"	d
GFPARM_MMODE_RELDST	export/include/tgf.h	318;"	d
GFPARM_MMODE_RELDST	src/libs/tgf/tgf.h	318;"	d
GFPARM_MMODE_RELSRC	export/include/tgf.h	317;"	d
GFPARM_MMODE_RELSRC	src/libs/tgf/tgf.h	317;"	d
GFPARM_MMODE_SRC	export/include/tgf.h	315;"	d
GFPARM_MMODE_SRC	src/libs/tgf/tgf.h	315;"	d
GFPARM_MODIFIABLE	export/include/tgf.h	265;"	d
GFPARM_MODIFIABLE	src/libs/tgf/tgf.h	265;"	d
GFPARM_PARAMETER	export/include/tgf.h	259;"	d
GFPARM_PARAMETER	src/libs/tgf/tgf.h	259;"	d
GFPARM_PARAM_STR	export/include/tgf.h	261;"	d
GFPARM_PARAM_STR	src/libs/tgf/tgf.h	261;"	d
GFPARM_RMODE_CREAT	export/include/tgf.h	271;"	d
GFPARM_RMODE_CREAT	src/libs/tgf/tgf.h	271;"	d
GFPARM_RMODE_PRIVATE	export/include/tgf.h	272;"	d
GFPARM_RMODE_PRIVATE	src/libs/tgf/tgf.h	272;"	d
GFPARM_RMODE_REREAD	export/include/tgf.h	270;"	d
GFPARM_RMODE_REREAD	src/libs/tgf/tgf.h	270;"	d
GFPARM_RMODE_STD	export/include/tgf.h	269;"	d
GFPARM_RMODE_STD	src/libs/tgf/tgf.h	269;"	d
GFPARM_TEMPLATE	export/include/tgf.h	260;"	d
GFPARM_TEMPLATE	src/libs/tgf/tgf.h	260;"	d
GFPARM_TEMPL_STR	export/include/tgf.h	262;"	d
GFPARM_TEMPL_STR	src/libs/tgf/tgf.h	262;"	d
GFPARM_WRITABLE	export/include/tgf.h	266;"	d
GFPARM_WRITABLE	src/libs/tgf/tgf.h	266;"	d
GFSCR_ATTR_ALPHA	export/include/screen_properties.h	78;"	d
GFSCR_ATTR_ALPHA	src/libs/tgfclient/screen_properties.h	78;"	d
GFSCR_ATTR_BLUE	export/include/screen_properties.h	77;"	d
GFSCR_ATTR_BLUE	src/libs/tgfclient/screen_properties.h	77;"	d
GFSCR_ATTR_GREEN	export/include/screen_properties.h	76;"	d
GFSCR_ATTR_GREEN	src/libs/tgfclient/screen_properties.h	76;"	d
GFSCR_ATTR_RED	export/include/screen_properties.h	75;"	d
GFSCR_ATTR_RED	src/libs/tgfclient/screen_properties.h	75;"	d
GFSCR_ATT_BPP	export/include/screen_properties.h	35;"	d
GFSCR_ATT_BPP	src/libs/tgfclient/screen_properties.h	35;"	d
GFSCR_ATT_FSCR	export/include/screen_properties.h	39;"	d
GFSCR_ATT_FSCR	src/libs/tgfclient/screen_properties.h	39;"	d
GFSCR_ATT_GAMMA	export/include/screen_properties.h	42;"	d
GFSCR_ATT_GAMMA	src/libs/tgfclient/screen_properties.h	42;"	d
GFSCR_ATT_MAXREFRESH	export/include/screen_properties.h	38;"	d
GFSCR_ATT_MAXREFRESH	src/libs/tgfclient/screen_properties.h	38;"	d
GFSCR_ATT_VINIT	export/include/screen_properties.h	44;"	d
GFSCR_ATT_VINIT	src/libs/tgfclient/screen_properties.h	44;"	d
GFSCR_ATT_WIN_X	export/include/screen_properties.h	36;"	d
GFSCR_ATT_WIN_X	src/libs/tgfclient/screen_properties.h	36;"	d
GFSCR_ATT_WIN_Y	export/include/screen_properties.h	37;"	d
GFSCR_ATT_WIN_Y	src/libs/tgfclient/screen_properties.h	37;"	d
GFSCR_ATT_X	export/include/screen_properties.h	33;"	d
GFSCR_ATT_X	src/libs/tgfclient/screen_properties.h	33;"	d
GFSCR_ATT_Y	export/include/screen_properties.h	34;"	d
GFSCR_ATT_Y	src/libs/tgfclient/screen_properties.h	34;"	d
GFSCR_CONF_FILE	export/include/screen_properties.h	29;"	d
GFSCR_CONF_FILE	src/libs/tgfclient/screen_properties.h	29;"	d
GFSCR_ELT_BGBTNCLICK	export/include/screen_properties.h	56;"	d
GFSCR_ELT_BGBTNCLICK	src/libs/tgfclient/screen_properties.h	56;"	d
GFSCR_ELT_BGBTNDISABLED	export/include/screen_properties.h	58;"	d
GFSCR_ELT_BGBTNDISABLED	src/libs/tgfclient/screen_properties.h	58;"	d
GFSCR_ELT_BGBTNENABLED	export/include/screen_properties.h	57;"	d
GFSCR_ELT_BGBTNENABLED	src/libs/tgfclient/screen_properties.h	57;"	d
GFSCR_ELT_BGBTNFOCUS	export/include/screen_properties.h	55;"	d
GFSCR_ELT_BGBTNFOCUS	src/libs/tgfclient/screen_properties.h	55;"	d
GFSCR_ELT_BGCOLOR	export/include/screen_properties.h	53;"	d
GFSCR_ELT_BGCOLOR	src/libs/tgfclient/screen_properties.h	53;"	d
GFSCR_ELT_BGSCROLLIST	export/include/screen_properties.h	69;"	d
GFSCR_ELT_BGSCROLLIST	src/libs/tgfclient/screen_properties.h	69;"	d
GFSCR_ELT_BGSELSCROLLIST	export/include/screen_properties.h	71;"	d
GFSCR_ELT_BGSELSCROLLIST	src/libs/tgfclient/screen_properties.h	71;"	d
GFSCR_ELT_BTNCLICK	export/include/screen_properties.h	60;"	d
GFSCR_ELT_BTNCLICK	src/libs/tgfclient/screen_properties.h	60;"	d
GFSCR_ELT_BTNDISABLED	export/include/screen_properties.h	62;"	d
GFSCR_ELT_BTNDISABLED	src/libs/tgfclient/screen_properties.h	62;"	d
GFSCR_ELT_BTNENABLED	export/include/screen_properties.h	61;"	d
GFSCR_ELT_BTNENABLED	src/libs/tgfclient/screen_properties.h	61;"	d
GFSCR_ELT_BTNFOCUS	export/include/screen_properties.h	59;"	d
GFSCR_ELT_BTNFOCUS	src/libs/tgfclient/screen_properties.h	59;"	d
GFSCR_ELT_EDITCURSORCLR	export/include/screen_properties.h	73;"	d
GFSCR_ELT_EDITCURSORCLR	src/libs/tgfclient/screen_properties.h	73;"	d
GFSCR_ELT_HELPCOLOR1	export/include/screen_properties.h	67;"	d
GFSCR_ELT_HELPCOLOR1	src/libs/tgfclient/screen_properties.h	67;"	d
GFSCR_ELT_HELPCOLOR2	export/include/screen_properties.h	68;"	d
GFSCR_ELT_HELPCOLOR2	src/libs/tgfclient/screen_properties.h	68;"	d
GFSCR_ELT_LABELCOLOR	export/include/screen_properties.h	63;"	d
GFSCR_ELT_LABELCOLOR	src/libs/tgfclient/screen_properties.h	63;"	d
GFSCR_ELT_MOUSECOLOR1	export/include/screen_properties.h	65;"	d
GFSCR_ELT_MOUSECOLOR1	src/libs/tgfclient/screen_properties.h	65;"	d
GFSCR_ELT_MOUSECOLOR2	export/include/screen_properties.h	66;"	d
GFSCR_ELT_MOUSECOLOR2	src/libs/tgfclient/screen_properties.h	66;"	d
GFSCR_ELT_SCROLLIST	export/include/screen_properties.h	70;"	d
GFSCR_ELT_SCROLLIST	src/libs/tgfclient/screen_properties.h	70;"	d
GFSCR_ELT_SELSCROLLIST	export/include/screen_properties.h	72;"	d
GFSCR_ELT_SELSCROLLIST	src/libs/tgfclient/screen_properties.h	72;"	d
GFSCR_ELT_TIPCOLOR	export/include/screen_properties.h	64;"	d
GFSCR_ELT_TIPCOLOR	src/libs/tgfclient/screen_properties.h	64;"	d
GFSCR_ELT_TITLECOLOR	export/include/screen_properties.h	54;"	d
GFSCR_ELT_TITLECOLOR	src/libs/tgfclient/screen_properties.h	54;"	d
GFSCR_LIST_COLORS	export/include/screen_properties.h	51;"	d
GFSCR_LIST_COLORS	src/libs/tgfclient/screen_properties.h	51;"	d
GFSCR_SECT_MENUCOL	export/include/screen_properties.h	49;"	d
GFSCR_SECT_MENUCOL	src/libs/tgfclient/screen_properties.h	49;"	d
GFSCR_SECT_PROP	export/include/screen_properties.h	31;"	d
GFSCR_SECT_PROP	src/libs/tgfclient/screen_properties.h	31;"	d
GFSCR_VAL_NO	export/include/screen_properties.h	41;"	d
GFSCR_VAL_NO	src/libs/tgfclient/screen_properties.h	41;"	d
GFSCR_VAL_VINIT_BEST	export/include/screen_properties.h	46;"	d
GFSCR_VAL_VINIT_BEST	src/libs/tgfclient/screen_properties.h	46;"	d
GFSCR_VAL_VINIT_COMPATIBLE	export/include/screen_properties.h	45;"	d
GFSCR_VAL_VINIT_COMPATIBLE	src/libs/tgfclient/screen_properties.h	45;"	d
GFSCR_VAL_YES	export/include/screen_properties.h	40;"	d
GFSCR_VAL_YES	src/libs/tgfclient/screen_properties.h	40;"	d
GFUI_ALIGN_HC_VB	export/include/tgfclient.h	70;"	d
GFUI_ALIGN_HC_VB	src/libs/tgfclient/tgfclient.h	70;"	d
GFUI_ALIGN_HC_VC	export/include/tgfclient.h	71;"	d
GFUI_ALIGN_HC_VC	src/libs/tgfclient/tgfclient.h	71;"	d
GFUI_ALIGN_HC_VT	export/include/tgfclient.h	72;"	d
GFUI_ALIGN_HC_VT	src/libs/tgfclient/tgfclient.h	72;"	d
GFUI_ALIGN_HL_VB	export/include/tgfclient.h	67;"	d
GFUI_ALIGN_HL_VB	src/libs/tgfclient/tgfclient.h	67;"	d
GFUI_ALIGN_HL_VC	export/include/tgfclient.h	68;"	d
GFUI_ALIGN_HL_VC	src/libs/tgfclient/tgfclient.h	68;"	d
GFUI_ALIGN_HL_VT	export/include/tgfclient.h	69;"	d
GFUI_ALIGN_HL_VT	src/libs/tgfclient/tgfclient.h	69;"	d
GFUI_ALIGN_HR_VB	export/include/tgfclient.h	73;"	d
GFUI_ALIGN_HR_VB	src/libs/tgfclient/tgfclient.h	73;"	d
GFUI_ALIGN_HR_VC	export/include/tgfclient.h	74;"	d
GFUI_ALIGN_HR_VC	src/libs/tgfclient/tgfclient.h	74;"	d
GFUI_ALIGN_HR_VT	export/include/tgfclient.h	75;"	d
GFUI_ALIGN_HR_VT	src/libs/tgfclient/tgfclient.h	75;"	d
GFUI_BGBTNCLICK	src/libs/tgfclient/gui.h	30;"	d
GFUI_BGBTNDISABLED	src/libs/tgfclient/gui.h	32;"	d
GFUI_BGBTNENABLED	src/libs/tgfclient/gui.h	31;"	d
GFUI_BGBTNFOCUS	src/libs/tgfclient/gui.h	29;"	d
GFUI_BGCOLOR	src/libs/tgfclient/gui.h	27;"	d
GFUI_BGSCROLLIST	src/libs/tgfclient/gui.h	43;"	d
GFUI_BGSELSCROLLIST	src/libs/tgfclient/gui.h	45;"	d
GFUI_BTNCLICK	src/libs/tgfclient/gui.h	34;"	d
GFUI_BTNDISABLED	src/libs/tgfclient/gui.h	36;"	d
GFUI_BTNENABLED	src/libs/tgfclient/gui.h	35;"	d
GFUI_BTNFOCUS	src/libs/tgfclient/gui.h	33;"	d
GFUI_BTNSZ	export/include/tgfclient.h	190;"	d
GFUI_BTNSZ	src/libs/tgfclient/tgfclient.h	190;"	d
GFUI_BTN_DISABLE	src/libs/tgfclient/gui.h	62;"	d
GFUI_BTN_PUSH	src/libs/tgfclient/gui.h	67;"	d
GFUI_BTN_PUSHED	src/libs/tgfclient/gui.h	64;"	d
GFUI_BTN_RELEASED	src/libs/tgfclient/gui.h	63;"	d
GFUI_BTN_STATE	src/libs/tgfclient/gui.h	68;"	d
GFUI_BUTTON	export/include/tgfclient.h	60;"	d
GFUI_BUTTON	src/libs/tgfclient/tgfclient.h	60;"	d
GFUI_COLORNB	src/libs/tgfclient/gui.h	24;"	d
GFUI_DISABLE	export/include/tgfclient.h	159;"	d
GFUI_DISABLE	src/libs/tgfclient/tgfclient.h	159;"	d
GFUI_EDITBOX	export/include/tgfclient.h	64;"	d
GFUI_EDITBOX	src/libs/tgfclient/tgfclient.h	64;"	d
GFUI_EDITCURSORCLR	src/libs/tgfclient/gui.h	47;"	d
GFUI_ENABLE	export/include/tgfclient.h	160;"	d
GFUI_ENABLE	src/libs/tgfclient/tgfclient.h	160;"	d
GFUI_FGSCROLLIST	src/libs/tgfclient/gui.h	44;"	d
GFUI_FGSELSCROLLIST	src/libs/tgfclient/gui.h	46;"	d
GFUI_FOCUS_MOUSE_CLICK	src/libs/tgfclient/gui.h	106;"	d
GFUI_FOCUS_MOUSE_MOVE	src/libs/tgfclient/gui.h	105;"	d
GFUI_FOCUS_NONE	src/libs/tgfclient/gui.h	104;"	d
GFUI_FONT_BIG	export/include/tgfclient.h	165;"	d
GFUI_FONT_BIG	src/libs/tgfclient/tgfclient.h	165;"	d
GFUI_FONT_BIG_C	export/include/tgfclient.h	169;"	d
GFUI_FONT_BIG_C	src/libs/tgfclient/tgfclient.h	169;"	d
GFUI_FONT_DIGIT	export/include/tgfclient.h	173;"	d
GFUI_FONT_DIGIT	src/libs/tgfclient/tgfclient.h	173;"	d
GFUI_FONT_LARGE	export/include/tgfclient.h	166;"	d
GFUI_FONT_LARGE	src/libs/tgfclient/tgfclient.h	166;"	d
GFUI_FONT_LARGE_C	export/include/tgfclient.h	170;"	d
GFUI_FONT_LARGE_C	src/libs/tgfclient/tgfclient.h	170;"	d
GFUI_FONT_MEDIUM	export/include/tgfclient.h	167;"	d
GFUI_FONT_MEDIUM	src/libs/tgfclient/tgfclient.h	167;"	d
GFUI_FONT_MEDIUM_C	export/include/tgfclient.h	171;"	d
GFUI_FONT_MEDIUM_C	src/libs/tgfclient/tgfclient.h	171;"	d
GFUI_FONT_SMALL	export/include/tgfclient.h	168;"	d
GFUI_FONT_SMALL	src/libs/tgfclient/tgfclient.h	168;"	d
GFUI_FONT_SMALL_C	export/include/tgfclient.h	172;"	d
GFUI_FONT_SMALL_C	src/libs/tgfclient/tgfclient.h	172;"	d
GFUI_GRBUTTON	export/include/tgfclient.h	61;"	d
GFUI_GRBUTTON	src/libs/tgfclient/tgfclient.h	61;"	d
GFUI_HELPCOLOR1	src/libs/tgfclient/gui.h	41;"	d
GFUI_HELPCOLOR2	src/libs/tgfclient/gui.h	42;"	d
GFUI_HORI_SCROLLBAR	export/include/tgfclient.h	93;"	d
GFUI_HORI_SCROLLBAR	src/libs/tgfclient/tgfclient.h	93;"	d
GFUI_IMAGE	src/libs/tgfclient/gui.h	48;"	d
GFUI_INVISIBLE	export/include/tgfclient.h	157;"	d
GFUI_INVISIBLE	src/libs/tgfclient/tgfclient.h	157;"	d
GFUI_KEY_DOWN	export/include/tgfclient.h	83;"	d
GFUI_KEY_DOWN	src/libs/tgfclient/tgfclient.h	83;"	d
GFUI_KEY_UP	export/include/tgfclient.h	82;"	d
GFUI_KEY_UP	src/libs/tgfclient/tgfclient.h	82;"	d
GFUI_LABEL	export/include/tgfclient.h	59;"	d
GFUI_LABEL	src/libs/tgfclient/tgfclient.h	59;"	d
GFUI_LABELCOLOR	src/libs/tgfclient/gui.h	37;"	d
GFUI_MOUSECOLOR1	src/libs/tgfclient/gui.h	39;"	d
GFUI_MOUSECOLOR2	src/libs/tgfclient/gui.h	40;"	d
GFUI_MOUSE_DOWN	export/include/tgfclient.h	79;"	d
GFUI_MOUSE_DOWN	src/libs/tgfclient/tgfclient.h	79;"	d
GFUI_MOUSE_UP	export/include/tgfclient.h	78;"	d
GFUI_MOUSE_UP	src/libs/tgfclient/tgfclient.h	78;"	d
GFUI_SB_BOTTOM	export/include/tgfclient.h	90;"	d
GFUI_SB_BOTTOM	src/libs/tgfclient/tgfclient.h	90;"	d
GFUI_SB_LEFT	export/include/tgfclient.h	88;"	d
GFUI_SB_LEFT	src/libs/tgfclient/tgfclient.h	88;"	d
GFUI_SB_NONE	export/include/tgfclient.h	86;"	d
GFUI_SB_NONE	src/libs/tgfclient/tgfclient.h	86;"	d
GFUI_SB_RIGHT	export/include/tgfclient.h	87;"	d
GFUI_SB_RIGHT	src/libs/tgfclient/tgfclient.h	87;"	d
GFUI_SB_TOP	export/include/tgfclient.h	89;"	d
GFUI_SB_TOP	src/libs/tgfclient/tgfclient.h	89;"	d
GFUI_SCROLLBAR	export/include/tgfclient.h	63;"	d
GFUI_SCROLLBAR	src/libs/tgfclient/tgfclient.h	63;"	d
GFUI_SCROLLIST	export/include/tgfclient.h	62;"	d
GFUI_SCROLLIST	src/libs/tgfclient/tgfclient.h	62;"	d
GFUI_TIPCOLOR	src/libs/tgfclient/gui.h	38;"	d
GFUI_TITLECOLOR	src/libs/tgfclient/gui.h	28;"	d
GFUI_VERT_SCROLLBAR	export/include/tgfclient.h	94;"	d
GFUI_VERT_SCROLLBAR	src/libs/tgfclient/tgfclient.h	94;"	d
GFUI_VISIBLE	export/include/tgfclient.h	156;"	d
GFUI_VISIBLE	src/libs/tgfclient/tgfclient.h	156;"	d
GF_DIR_CREATED	export/include/tgf.h	624;"	d
GF_DIR_CREATED	src/libs/tgf/tgf.h	624;"	d
GF_DIR_CREATION_FAILED	export/include/tgf.h	623;"	d
GF_DIR_CREATION_FAILED	src/libs/tgf/tgf.h	623;"	d
GF_HASH_TYPE_BUF	export/include/tgf.h	608;"	d
GF_HASH_TYPE_BUF	src/libs/tgf/tgf.h	608;"	d
GF_HASH_TYPE_STR	export/include/tgf.h	607;"	d
GF_HASH_TYPE_STR	src/libs/tgf/tgf.h	607;"	d
GF_MEAN_MAX_VAL	export/include/tgf.h	386;"	d
GF_MEAN_MAX_VAL	src/libs/tgf/tgf.h	386;"	d
GF_TAILQ_END	export/include/tgf.h	471;"	d
GF_TAILQ_END	src/libs/tgf/tgf.h	471;"	d
GF_TAILQ_ENTRY	export/include/tgf.h	457;"	d
GF_TAILQ_ENTRY	src/libs/tgf/tgf.h	457;"	d
GF_TAILQ_FIRST	export/include/tgf.h	465;"	d
GF_TAILQ_FIRST	src/libs/tgf/tgf.h	465;"	d
GF_TAILQ_HEAD	export/include/tgf.h	449;"	d
GF_TAILQ_HEAD	src/libs/tgf/tgf.h	449;"	d
GF_TAILQ_INIT	export/include/tgf.h	486;"	d
GF_TAILQ_INIT	src/libs/tgf/tgf.h	486;"	d
GF_TAILQ_INIT_ENTRY	export/include/tgf.h	493;"	d
GF_TAILQ_INIT_ENTRY	src/libs/tgf/tgf.h	493;"	d
GF_TAILQ_INSERT_AFTER	export/include/tgf.h	521;"	d
GF_TAILQ_INSERT_AFTER	src/libs/tgf/tgf.h	521;"	d
GF_TAILQ_INSERT_BEFORE	export/include/tgf.h	533;"	d
GF_TAILQ_INSERT_BEFORE	src/libs/tgf/tgf.h	533;"	d
GF_TAILQ_INSERT_HEAD	export/include/tgf.h	500;"	d
GF_TAILQ_INSERT_HEAD	src/libs/tgf/tgf.h	500;"	d
GF_TAILQ_INSERT_TAIL	export/include/tgf.h	512;"	d
GF_TAILQ_INSERT_TAIL	src/libs/tgf/tgf.h	512;"	d
GF_TAILQ_LAST	export/include/tgf.h	474;"	d
GF_TAILQ_LAST	src/libs/tgf/tgf.h	474;"	d
GF_TAILQ_NEXT	export/include/tgf.h	468;"	d
GF_TAILQ_NEXT	src/libs/tgf/tgf.h	468;"	d
GF_TAILQ_PREV	export/include/tgf.h	478;"	d
GF_TAILQ_PREV	src/libs/tgf/tgf.h	478;"	d
GF_TAILQ_REMOVE	export/include/tgf.h	542;"	d
GF_TAILQ_REMOVE	src/libs/tgf/tgf.h	542;"	d
GFlag	src/modules/graphic/ssggraph/grboard.h	/^    int GFlag;$/;"	m	class:cGrBoard
GLAPI	src/windows/include/GL/glext.h	49;"	d
GLAPI	src/windows/include/GL/wglext.h	49;"	d
GLFONT	src/libs/tgfclient/guifont.h	/^} GLFONT;$/;"	t	typeref:struct:__anon55
GLFONTCHAR	src/libs/tgfclient/guifont.h	/^} GLFONTCHAR;$/;"	t	typeref:struct:__anon54
GLUT_ACCUM	src/windows/include/GL/glut.h	139;"	d
GLUT_ACTIVE_ALT	src/windows/include/GL/glut.h	357;"	d
GLUT_ACTIVE_CTRL	src/windows/include/GL/glut.h	356;"	d
GLUT_ACTIVE_SHIFT	src/windows/include/GL/glut.h	355;"	d
GLUT_ALPHA	src/windows/include/GL/glut.h	140;"	d
GLUT_APIENTRY_DEFINED	src/windows/include/GL/glut.h	21;"	d
GLUT_APIENTRY_DEFINED	src/windows/include/GL/glut.h	587;"	d
GLUT_APIENTRY_DEFINED	src/windows/include/GL/glut.h	64;"	d
GLUT_API_VERSION	src/windows/include/GL/glut.h	94;"	d
GLUT_BITMAP_8_BY_13	src/windows/include/GL/glut.h	220;"	d
GLUT_BITMAP_8_BY_13	src/windows/include/GL/glut.h	248;"	d
GLUT_BITMAP_9_BY_15	src/windows/include/GL/glut.h	219;"	d
GLUT_BITMAP_9_BY_15	src/windows/include/GL/glut.h	247;"	d
GLUT_BITMAP_HELVETICA_10	src/windows/include/GL/glut.h	224;"	d
GLUT_BITMAP_HELVETICA_10	src/windows/include/GL/glut.h	252;"	d
GLUT_BITMAP_HELVETICA_12	src/windows/include/GL/glut.h	225;"	d
GLUT_BITMAP_HELVETICA_12	src/windows/include/GL/glut.h	253;"	d
GLUT_BITMAP_HELVETICA_18	src/windows/include/GL/glut.h	226;"	d
GLUT_BITMAP_HELVETICA_18	src/windows/include/GL/glut.h	254;"	d
GLUT_BITMAP_TIMES_ROMAN_10	src/windows/include/GL/glut.h	221;"	d
GLUT_BITMAP_TIMES_ROMAN_10	src/windows/include/GL/glut.h	249;"	d
GLUT_BITMAP_TIMES_ROMAN_24	src/windows/include/GL/glut.h	222;"	d
GLUT_BITMAP_TIMES_ROMAN_24	src/windows/include/GL/glut.h	250;"	d
GLUT_BLUE	src/windows/include/GL/glut.h	207;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	src/windows/include/GL/glut.h	383;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	src/windows/include/GL/glut.h	382;"	d
GLUT_CURSOR_BOTTOM_SIDE	src/windows/include/GL/glut.h	377;"	d
GLUT_CURSOR_CROSSHAIR	src/windows/include/GL/glut.h	371;"	d
GLUT_CURSOR_CYCLE	src/windows/include/GL/glut.h	367;"	d
GLUT_CURSOR_DESTROY	src/windows/include/GL/glut.h	365;"	d
GLUT_CURSOR_FULL_CROSSHAIR	src/windows/include/GL/glut.h	389;"	d
GLUT_CURSOR_HELP	src/windows/include/GL/glut.h	366;"	d
GLUT_CURSOR_INFO	src/windows/include/GL/glut.h	364;"	d
GLUT_CURSOR_INHERIT	src/windows/include/GL/glut.h	385;"	d
GLUT_CURSOR_LEFT_ARROW	src/windows/include/GL/glut.h	362;"	d
GLUT_CURSOR_LEFT_RIGHT	src/windows/include/GL/glut.h	374;"	d
GLUT_CURSOR_LEFT_SIDE	src/windows/include/GL/glut.h	378;"	d
GLUT_CURSOR_NONE	src/windows/include/GL/glut.h	387;"	d
GLUT_CURSOR_RIGHT_ARROW	src/windows/include/GL/glut.h	361;"	d
GLUT_CURSOR_RIGHT_SIDE	src/windows/include/GL/glut.h	379;"	d
GLUT_CURSOR_SPRAY	src/windows/include/GL/glut.h	368;"	d
GLUT_CURSOR_TEXT	src/windows/include/GL/glut.h	370;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	src/windows/include/GL/glut.h	380;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	src/windows/include/GL/glut.h	381;"	d
GLUT_CURSOR_TOP_SIDE	src/windows/include/GL/glut.h	376;"	d
GLUT_CURSOR_UP_DOWN	src/windows/include/GL/glut.h	373;"	d
GLUT_CURSOR_WAIT	src/windows/include/GL/glut.h	369;"	d
GLUT_DEPTH	src/windows/include/GL/glut.h	141;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	src/windows/include/GL/glut.h	318;"	d
GLUT_DEVICE_KEY_REPEAT	src/windows/include/GL/glut.h	319;"	d
GLUT_DISPLAY_MODE_POSSIBLE	src/windows/include/GL/glut.h	291;"	d
GLUT_DOUBLE	src/windows/include/GL/glut.h	138;"	d
GLUT_DOWN	src/windows/include/GL/glut.h	157;"	d
GLUT_ELAPSED_TIME	src/windows/include/GL/glut.h	298;"	d
GLUT_ENTERED	src/windows/include/GL/glut.h	188;"	d
GLUT_FULLY_COVERED	src/windows/include/GL/glut.h	202;"	d
GLUT_FULLY_RETAINED	src/windows/include/GL/glut.h	200;"	d
GLUT_GAME_MODE_ACTIVE	src/windows/include/GL/glut.h	567;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	src/windows/include/GL/glut.h	573;"	d
GLUT_GAME_MODE_HEIGHT	src/windows/include/GL/glut.h	570;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	src/windows/include/GL/glut.h	571;"	d
GLUT_GAME_MODE_POSSIBLE	src/windows/include/GL/glut.h	568;"	d
GLUT_GAME_MODE_REFRESH_RATE	src/windows/include/GL/glut.h	572;"	d
GLUT_GAME_MODE_WIDTH	src/windows/include/GL/glut.h	569;"	d
GLUT_GREEN	src/windows/include/GL/glut.h	206;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	src/windows/include/GL/glut.h	309;"	d
GLUT_HAS_JOYSTICK	src/windows/include/GL/glut.h	320;"	d
GLUT_HAS_KEYBOARD	src/windows/include/GL/glut.h	306;"	d
GLUT_HAS_MOUSE	src/windows/include/GL/glut.h	307;"	d
GLUT_HAS_OVERLAY	src/windows/include/GL/glut.h	331;"	d
GLUT_HAS_SPACEBALL	src/windows/include/GL/glut.h	308;"	d
GLUT_HAS_TABLET	src/windows/include/GL/glut.h	310;"	d
GLUT_HIDDEN	src/windows/include/GL/glut.h	199;"	d
GLUT_INDEX	src/windows/include/GL/glut.h	136;"	d
GLUT_INIT_DISPLAY_MODE	src/windows/include/GL/glut.h	296;"	d
GLUT_INIT_WINDOW_HEIGHT	src/windows/include/GL/glut.h	295;"	d
GLUT_INIT_WINDOW_WIDTH	src/windows/include/GL/glut.h	294;"	d
GLUT_INIT_WINDOW_X	src/windows/include/GL/glut.h	292;"	d
GLUT_INIT_WINDOW_Y	src/windows/include/GL/glut.h	293;"	d
GLUT_JOYSTICK_AXES	src/windows/include/GL/glut.h	323;"	d
GLUT_JOYSTICK_BUTTONS	src/windows/include/GL/glut.h	322;"	d
GLUT_JOYSTICK_BUTTON_A	src/windows/include/GL/glut.h	556;"	d
GLUT_JOYSTICK_BUTTON_B	src/windows/include/GL/glut.h	557;"	d
GLUT_JOYSTICK_BUTTON_C	src/windows/include/GL/glut.h	558;"	d
GLUT_JOYSTICK_BUTTON_D	src/windows/include/GL/glut.h	559;"	d
GLUT_JOYSTICK_POLL_RATE	src/windows/include/GL/glut.h	324;"	d
GLUT_KEY_DOWN	src/windows/include/GL/glut.h	178;"	d
GLUT_KEY_END	src/windows/include/GL/glut.h	182;"	d
GLUT_KEY_F1	src/windows/include/GL/glut.h	162;"	d
GLUT_KEY_F10	src/windows/include/GL/glut.h	171;"	d
GLUT_KEY_F11	src/windows/include/GL/glut.h	172;"	d
GLUT_KEY_F12	src/windows/include/GL/glut.h	173;"	d
GLUT_KEY_F2	src/windows/include/GL/glut.h	163;"	d
GLUT_KEY_F3	src/windows/include/GL/glut.h	164;"	d
GLUT_KEY_F4	src/windows/include/GL/glut.h	165;"	d
GLUT_KEY_F5	src/windows/include/GL/glut.h	166;"	d
GLUT_KEY_F6	src/windows/include/GL/glut.h	167;"	d
GLUT_KEY_F7	src/windows/include/GL/glut.h	168;"	d
GLUT_KEY_F8	src/windows/include/GL/glut.h	169;"	d
GLUT_KEY_F9	src/windows/include/GL/glut.h	170;"	d
GLUT_KEY_HOME	src/windows/include/GL/glut.h	181;"	d
GLUT_KEY_INSERT	src/windows/include/GL/glut.h	183;"	d
GLUT_KEY_LEFT	src/windows/include/GL/glut.h	175;"	d
GLUT_KEY_PAGE_DOWN	src/windows/include/GL/glut.h	180;"	d
GLUT_KEY_PAGE_UP	src/windows/include/GL/glut.h	179;"	d
GLUT_KEY_REPEAT_DEFAULT	src/windows/include/GL/glut.h	553;"	d
GLUT_KEY_REPEAT_OFF	src/windows/include/GL/glut.h	551;"	d
GLUT_KEY_REPEAT_ON	src/windows/include/GL/glut.h	552;"	d
GLUT_KEY_RIGHT	src/windows/include/GL/glut.h	177;"	d
GLUT_KEY_UP	src/windows/include/GL/glut.h	176;"	d
GLUT_LAYER_IN_USE	src/windows/include/GL/glut.h	330;"	d
GLUT_LEFT	src/windows/include/GL/glut.h	187;"	d
GLUT_LEFT_BUTTON	src/windows/include/GL/glut.h	152;"	d
GLUT_LUMINANCE	src/windows/include/GL/glut.h	148;"	d
GLUT_MENU_IN_USE	src/windows/include/GL/glut.h	192;"	d
GLUT_MENU_NOT_IN_USE	src/windows/include/GL/glut.h	191;"	d
GLUT_MENU_NUM_ITEMS	src/windows/include/GL/glut.h	290;"	d
GLUT_MIDDLE_BUTTON	src/windows/include/GL/glut.h	153;"	d
GLUT_MULTISAMPLE	src/windows/include/GL/glut.h	144;"	d
GLUT_NORMAL	src/windows/include/GL/glut.h	210;"	d
GLUT_NORMAL	src/windows/include/GL/glut.h	351;"	d
GLUT_NORMAL_DAMAGED	src/windows/include/GL/glut.h	333;"	d
GLUT_NOT_VISIBLE	src/windows/include/GL/glut.h	195;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	src/windows/include/GL/glut.h	313;"	d
GLUT_NUM_DIALS	src/windows/include/GL/glut.h	314;"	d
GLUT_NUM_MOUSE_BUTTONS	src/windows/include/GL/glut.h	311;"	d
GLUT_NUM_SPACEBALL_BUTTONS	src/windows/include/GL/glut.h	312;"	d
GLUT_NUM_TABLET_BUTTONS	src/windows/include/GL/glut.h	315;"	d
GLUT_OVERLAY	src/windows/include/GL/glut.h	211;"	d
GLUT_OVERLAY	src/windows/include/GL/glut.h	352;"	d
GLUT_OVERLAY_DAMAGED	src/windows/include/GL/glut.h	334;"	d
GLUT_OVERLAY_POSSIBLE	src/windows/include/GL/glut.h	329;"	d
GLUT_OWNS_JOYSTICK	src/windows/include/GL/glut.h	321;"	d
GLUT_PARTIALLY_RETAINED	src/windows/include/GL/glut.h	201;"	d
GLUT_RED	src/windows/include/GL/glut.h	205;"	d
GLUT_RGB	src/windows/include/GL/glut.h	134;"	d
GLUT_RGBA	src/windows/include/GL/glut.h	135;"	d
GLUT_RIGHT_BUTTON	src/windows/include/GL/glut.h	154;"	d
GLUT_SCREEN_HEIGHT	src/windows/include/GL/glut.h	287;"	d
GLUT_SCREEN_HEIGHT_MM	src/windows/include/GL/glut.h	289;"	d
GLUT_SCREEN_WIDTH	src/windows/include/GL/glut.h	286;"	d
GLUT_SCREEN_WIDTH_MM	src/windows/include/GL/glut.h	288;"	d
GLUT_SINGLE	src/windows/include/GL/glut.h	137;"	d
GLUT_STENCIL	src/windows/include/GL/glut.h	142;"	d
GLUT_STEREO	src/windows/include/GL/glut.h	145;"	d
GLUT_STROKE_MONO_ROMAN	src/windows/include/GL/glut.h	216;"	d
GLUT_STROKE_MONO_ROMAN	src/windows/include/GL/glut.h	235;"	d
GLUT_STROKE_ROMAN	src/windows/include/GL/glut.h	215;"	d
GLUT_STROKE_ROMAN	src/windows/include/GL/glut.h	234;"	d
GLUT_TRANSPARENT_INDEX	src/windows/include/GL/glut.h	332;"	d
GLUT_UP	src/windows/include/GL/glut.h	158;"	d
GLUT_VIDEO_RESIZE_HEIGHT	src/windows/include/GL/glut.h	347;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	src/windows/include/GL/glut.h	343;"	d
GLUT_VIDEO_RESIZE_IN_USE	src/windows/include/GL/glut.h	339;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	src/windows/include/GL/glut.h	338;"	d
GLUT_VIDEO_RESIZE_WIDTH	src/windows/include/GL/glut.h	346;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	src/windows/include/GL/glut.h	342;"	d
GLUT_VIDEO_RESIZE_X	src/windows/include/GL/glut.h	344;"	d
GLUT_VIDEO_RESIZE_X_DELTA	src/windows/include/GL/glut.h	340;"	d
GLUT_VIDEO_RESIZE_Y	src/windows/include/GL/glut.h	345;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	src/windows/include/GL/glut.h	341;"	d
GLUT_VISIBLE	src/windows/include/GL/glut.h	196;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	src/windows/include/GL/glut.h	273;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	src/windows/include/GL/glut.h	272;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	src/windows/include/GL/glut.h	271;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	src/windows/include/GL/glut.h	270;"	d
GLUT_WINDOW_ALPHA_SIZE	src/windows/include/GL/glut.h	269;"	d
GLUT_WINDOW_BLUE_SIZE	src/windows/include/GL/glut.h	268;"	d
GLUT_WINDOW_BUFFER_SIZE	src/windows/include/GL/glut.h	263;"	d
GLUT_WINDOW_COLORMAP_SIZE	src/windows/include/GL/glut.h	278;"	d
GLUT_WINDOW_CURSOR	src/windows/include/GL/glut.h	284;"	d
GLUT_WINDOW_DEPTH_SIZE	src/windows/include/GL/glut.h	265;"	d
GLUT_WINDOW_DOUBLEBUFFER	src/windows/include/GL/glut.h	274;"	d
GLUT_WINDOW_FORMAT_ID	src/windows/include/GL/glut.h	301;"	d
GLUT_WINDOW_GREEN_SIZE	src/windows/include/GL/glut.h	267;"	d
GLUT_WINDOW_HEIGHT	src/windows/include/GL/glut.h	262;"	d
GLUT_WINDOW_NUM_CHILDREN	src/windows/include/GL/glut.h	277;"	d
GLUT_WINDOW_NUM_SAMPLES	src/windows/include/GL/glut.h	280;"	d
GLUT_WINDOW_PARENT	src/windows/include/GL/glut.h	276;"	d
GLUT_WINDOW_RED_SIZE	src/windows/include/GL/glut.h	266;"	d
GLUT_WINDOW_RGBA	src/windows/include/GL/glut.h	275;"	d
GLUT_WINDOW_STENCIL_SIZE	src/windows/include/GL/glut.h	264;"	d
GLUT_WINDOW_STEREO	src/windows/include/GL/glut.h	281;"	d
GLUT_WINDOW_WIDTH	src/windows/include/GL/glut.h	261;"	d
GLUT_WINDOW_X	src/windows/include/GL/glut.h	259;"	d
GLUT_WINDOW_Y	src/windows/include/GL/glut.h	260;"	d
GLUT_WINGDIAPI_DEFINED	src/windows/include/GL/glut.h	38;"	d
GLUT_WINGDIAPI_DEFINED	src/windows/include/GL/glut.h	592;"	d
GLUT_XLIB_IMPLEMENTATION	src/windows/include/GL/glut.h	130;"	d
GL_1PASS_EXT	src/windows/include/GL/glext.h	2118;"	d
GL_1PASS_SGIS	src/windows/include/GL/glext.h	1200;"	d
GL_2PASS_0_EXT	src/windows/include/GL/glext.h	2119;"	d
GL_2PASS_0_SGIS	src/windows/include/GL/glext.h	1201;"	d
GL_2PASS_1_EXT	src/windows/include/GL/glext.h	2120;"	d
GL_2PASS_1_SGIS	src/windows/include/GL/glext.h	1202;"	d
GL_2X_BIT_ATI	src/windows/include/GL/glext.h	2541;"	d
GL_3DFX_multisample	src/windows/include/GL/glext.h	5453;"	d
GL_3DFX_tbuffer	src/windows/include/GL/glext.h	5457;"	d
GL_3DFX_texture_compression_FXT1	src/windows/include/GL/glext.h	5449;"	d
GL_422_AVERAGE_EXT	src/windows/include/GL/glext.h	1883;"	d
GL_422_EXT	src/windows/include/GL/glext.h	1881;"	d
GL_422_REV_AVERAGE_EXT	src/windows/include/GL/glext.h	1884;"	d
GL_422_REV_EXT	src/windows/include/GL/glext.h	1882;"	d
GL_4PASS_0_EXT	src/windows/include/GL/glext.h	2121;"	d
GL_4PASS_0_SGIS	src/windows/include/GL/glext.h	1203;"	d
GL_4PASS_1_EXT	src/windows/include/GL/glext.h	2122;"	d
GL_4PASS_1_SGIS	src/windows/include/GL/glext.h	1204;"	d
GL_4PASS_2_EXT	src/windows/include/GL/glext.h	2123;"	d
GL_4PASS_2_SGIS	src/windows/include/GL/glext.h	1205;"	d
GL_4PASS_3_EXT	src/windows/include/GL/glext.h	2124;"	d
GL_4PASS_3_SGIS	src/windows/include/GL/glext.h	1206;"	d
GL_4X_BIT_ATI	src/windows/include/GL/glext.h	2542;"	d
GL_8X_BIT_ATI	src/windows/include/GL/glext.h	2543;"	d
GL_ABGR_EXT	src/windows/include/GL/glext.h	958;"	d
GL_ACTIVE_ATTRIBUTES	src/windows/include/GL/glext.h	449;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	src/windows/include/GL/glext.h	450;"	d
GL_ACTIVE_STENCIL_FACE_EXT	src/windows/include/GL/glext.h	2766;"	d
GL_ACTIVE_TEXTURE	src/windows/include/GL/glext.h	214;"	d
GL_ACTIVE_TEXTURE_ARB	src/windows/include/GL/glext.h	495;"	d
GL_ACTIVE_UNIFORMS	src/windows/include/GL/glext.h	446;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	src/windows/include/GL/glext.h	447;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	src/windows/include/GL/glext.h	564;"	d
GL_ADD_ATI	src/windows/include/GL/glext.h	2513;"	d
GL_ADD_SIGNED	src/windows/include/GL/glext.h	270;"	d
GL_ADD_SIGNED_ARB	src/windows/include/GL/glext.h	637;"	d
GL_ADD_SIGNED_EXT	src/windows/include/GL/glext.h	1788;"	d
GL_ALIASED_LINE_WIDTH_RANGE	src/windows/include/GL/glext.h	100;"	d
GL_ALIASED_POINT_SIZE_RANGE	src/windows/include/GL/glext.h	99;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	src/windows/include/GL/glext.h	1503;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	src/windows/include/GL/glext.h	1504;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	src/windows/include/GL/glext.h	1501;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	src/windows/include/GL/glext.h	1502;"	d
GL_ALL_COMPLETED_NV	src/windows/include/GL/glext.h	2176;"	d
GL_ALPHA12_EXT	src/windows/include/GL/glext.h	978;"	d
GL_ALPHA16F_ARB	src/windows/include/GL/glext.h	944;"	d
GL_ALPHA16_EXT	src/windows/include/GL/glext.h	979;"	d
GL_ALPHA32F_ARB	src/windows/include/GL/glext.h	938;"	d
GL_ALPHA4_EXT	src/windows/include/GL/glext.h	976;"	d
GL_ALPHA8_EXT	src/windows/include/GL/glext.h	977;"	d
GL_ALPHA_FLOAT16_ATI	src/windows/include/GL/glext.h	2854;"	d
GL_ALPHA_FLOAT32_ATI	src/windows/include/GL/glext.h	2848;"	d
GL_ALPHA_MAX_CLAMP_INGR	src/windows/include/GL/glext.h	1868;"	d
GL_ALPHA_MAX_SGIX	src/windows/include/GL/glext.h	1655;"	d
GL_ALPHA_MIN_CLAMP_INGR	src/windows/include/GL/glext.h	1864;"	d
GL_ALPHA_MIN_SGIX	src/windows/include/GL/glext.h	1654;"	d
GL_ALWAYS_FAST_HINT_PGI	src/windows/include/GL/glext.h	1499;"	d
GL_ALWAYS_SOFT_HINT_PGI	src/windows/include/GL/glext.h	1500;"	d
GL_APPLE_client_storage	src/windows/include/GL/glext.h	6111;"	d
GL_APPLE_element_array	src/windows/include/GL/glext.h	6115;"	d
GL_APPLE_fence	src/windows/include/GL/glext.h	6131;"	d
GL_APPLE_specular_vector	src/windows/include/GL/glext.h	5061;"	d
GL_APPLE_transform_hint	src/windows/include/GL/glext.h	5065;"	d
GL_APPLE_vertex_array_object	src/windows/include/GL/glext.h	6153;"	d
GL_APPLE_vertex_array_range	src/windows/include/GL/glext.h	6167;"	d
GL_APPLE_ycbcr_422	src/windows/include/GL/glext.h	6179;"	d
GL_ARB_color_buffer_float	src/windows/include/GL/glext.h	4149;"	d
GL_ARB_depth_texture	src/windows/include/GL/glext.h	3786;"	d
GL_ARB_draw_buffers	src/windows/include/GL/glext.h	4137;"	d
GL_ARB_fragment_program	src/windows/include/GL/glext.h	3966;"	d
GL_ARB_fragment_program_shadow	src/windows/include/GL/glext.h	4133;"	d
GL_ARB_fragment_shader	src/windows/include/GL/glext.h	4117;"	d
GL_ARB_half_float_pixel	src/windows/include/GL/glext.h	4157;"	d
GL_ARB_matrix_palette	src/windows/include/GL/glext.h	3754;"	d
GL_ARB_multisample	src/windows/include/GL/glext.h	3678;"	d
GL_ARB_multitexture	src/windows/include/GL/glext.h	3590;"	d
GL_ARB_occlusion_query	src/windows/include/GL/glext.h	3999;"	d
GL_ARB_pixel_buffer_object	src/windows/include/GL/glext.h	4165;"	d
GL_ARB_point_parameters	src/windows/include/GL/glext.h	3718;"	d
GL_ARB_point_sprite	src/windows/include/GL/glext.h	4129;"	d
GL_ARB_shader_objects	src/windows/include/GL/glext.h	4021;"	d
GL_ARB_shading_language_100	src/windows/include/GL/glext.h	4121;"	d
GL_ARB_shadow	src/windows/include/GL/glext.h	3790;"	d
GL_ARB_shadow_ambient	src/windows/include/GL/glext.h	3794;"	d
GL_ARB_texture_border_clamp	src/windows/include/GL/glext.h	3714;"	d
GL_ARB_texture_compression	src/windows/include/GL/glext.h	3694;"	d
GL_ARB_texture_cube_map	src/windows/include/GL/glext.h	3690;"	d
GL_ARB_texture_env_add	src/windows/include/GL/glext.h	3686;"	d
GL_ARB_texture_env_combine	src/windows/include/GL/glext.h	3770;"	d
GL_ARB_texture_env_crossbar	src/windows/include/GL/glext.h	3774;"	d
GL_ARB_texture_env_dot3	src/windows/include/GL/glext.h	3778;"	d
GL_ARB_texture_float	src/windows/include/GL/glext.h	4161;"	d
GL_ARB_texture_mirrored_repeat	src/windows/include/GL/glext.h	3782;"	d
GL_ARB_texture_non_power_of_two	src/windows/include/GL/glext.h	4125;"	d
GL_ARB_texture_rectangle	src/windows/include/GL/glext.h	4145;"	d
GL_ARB_transpose_matrix	src/windows/include/GL/glext.h	3664;"	d
GL_ARB_vertex_blend	src/windows/include/GL/glext.h	3728;"	d
GL_ARB_vertex_buffer_object	src/windows/include/GL/glext.h	3971;"	d
GL_ARB_vertex_program	src/windows/include/GL/glext.h	3836;"	d
GL_ARB_vertex_shader	src/windows/include/GL/glext.h	4105;"	d
GL_ARB_window_pos	src/windows/include/GL/glext.h	3798;"	d
GL_ARRAY_BUFFER	src/windows/include/GL/glext.h	329;"	d
GL_ARRAY_BUFFER_ARB	src/windows/include/GL/glext.h	781;"	d
GL_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	331;"	d
GL_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	783;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	src/windows/include/GL/glext.h	1579;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	src/windows/include/GL/glext.h	1578;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	src/windows/include/GL/glext.h	2572;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	src/windows/include/GL/glext.h	2573;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	src/windows/include/GL/glext.h	1679;"	d
GL_ASYNC_HISTOGRAM_SGIX	src/windows/include/GL/glext.h	1687;"	d
GL_ASYNC_MARKER_SGIX	src/windows/include/GL/glext.h	1674;"	d
GL_ASYNC_READ_PIXELS_SGIX	src/windows/include/GL/glext.h	1680;"	d
GL_ASYNC_TEX_IMAGE_SGIX	src/windows/include/GL/glext.h	1678;"	d
GL_ATI_draw_buffers	src/windows/include/GL/glext.h	6187;"	d
GL_ATI_element_array	src/windows/include/GL/glext.h	6025;"	d
GL_ATI_envmap_bumpmap	src/windows/include/GL/glext.h	5751;"	d
GL_ATI_fragment_shader	src/windows/include/GL/glext.h	5765;"	d
GL_ATI_map_object_buffer	src/windows/include/GL/glext.h	6359;"	d
GL_ATI_pixel_format_float	src/windows/include/GL/glext.h	6195;"	d
GL_ATI_pn_triangles	src/windows/include/GL/glext.h	5799;"	d
GL_ATI_separate_stencil	src/windows/include/GL/glext.h	6369;"	d
GL_ATI_text_fragment_shader	src/windows/include/GL/glext.h	6107;"	d
GL_ATI_texture_env_combine3	src/windows/include/GL/glext.h	6202;"	d
GL_ATI_texture_float	src/windows/include/GL/glext.h	6206;"	d
GL_ATI_texture_mirror_once	src/windows/include/GL/glext.h	5511;"	d
GL_ATI_vertex_array_object	src/windows/include/GL/glext.h	5809;"	d
GL_ATI_vertex_attrib_array_object	src/windows/include/GL/glext.h	6379;"	d
GL_ATI_vertex_streams	src/windows/include/GL/glext.h	5929;"	d
GL_ATTACHED_SHADERS	src/windows/include/GL/glext.h	445;"	d
GL_ATTENUATION_EXT	src/windows/include/GL/glext.h	1644;"	d
GL_ATTRIB_ARRAY_POINTER_NV	src/windows/include/GL/glext.h	2344;"	d
GL_ATTRIB_ARRAY_SIZE_NV	src/windows/include/GL/glext.h	2318;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	src/windows/include/GL/glext.h	2319;"	d
GL_ATTRIB_ARRAY_TYPE_NV	src/windows/include/GL/glext.h	2320;"	d
GL_AVERAGE_EXT	src/windows/include/GL/glext.h	1713;"	d
GL_AVERAGE_HP	src/windows/include/GL/glext.h	1444;"	d
GL_BACK_NORMALS_HINT_PGI	src/windows/include/GL/glext.h	1512;"	d
GL_BGR	src/windows/include/GL/glext.h	83;"	d
GL_BGRA	src/windows/include/GL/glext.h	84;"	d
GL_BGRA_EXT	src/windows/include/GL/glext.h	1670;"	d
GL_BGR_EXT	src/windows/include/GL/glext.h	1669;"	d
GL_BIAS_BIT_ATI	src/windows/include/GL/glext.h	2550;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	src/windows/include/GL/glext.h	1983;"	d
GL_BINORMAL_ARRAY_EXT	src/windows/include/GL/glext.h	1768;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1776;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1774;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1773;"	d
GL_BLEND_COLOR	src/windows/include/GL/glext.h	108;"	d
GL_BLEND_COLOR_EXT	src/windows/include/GL/glext.h	966;"	d
GL_BLEND_DST_ALPHA	src/windows/include/GL/glext.h	283;"	d
GL_BLEND_DST_ALPHA_EXT	src/windows/include/GL/glext.h	1856;"	d
GL_BLEND_DST_RGB	src/windows/include/GL/glext.h	281;"	d
GL_BLEND_DST_RGB_EXT	src/windows/include/GL/glext.h	1854;"	d
GL_BLEND_EQUATION	src/windows/include/GL/glext.h	112;"	d
GL_BLEND_EQUATION_ALPHA	src/windows/include/GL/glext.h	406;"	d
GL_BLEND_EQUATION_ALPHA_EXT	src/windows/include/GL/glext.h	2943;"	d
GL_BLEND_EQUATION_EXT	src/windows/include/GL/glext.h	1295;"	d
GL_BLEND_EQUATION_RGB	src/windows/include/GL/glext.h	376;"	d
GL_BLEND_EQUATION_RGB_EXT	src/windows/include/GL/glext.h	2942;"	d
GL_BLEND_SRC_ALPHA	src/windows/include/GL/glext.h	284;"	d
GL_BLEND_SRC_ALPHA_EXT	src/windows/include/GL/glext.h	1857;"	d
GL_BLEND_SRC_RGB	src/windows/include/GL/glext.h	282;"	d
GL_BLEND_SRC_RGB_EXT	src/windows/include/GL/glext.h	1855;"	d
GL_BLUE_BIT_ATI	src/windows/include/GL/glext.h	2540;"	d
GL_BLUE_MAX_CLAMP_INGR	src/windows/include/GL/glext.h	1867;"	d
GL_BLUE_MIN_CLAMP_INGR	src/windows/include/GL/glext.h	1863;"	d
GL_BOOL	src/windows/include/GL/glext.h	427;"	d
GL_BOOL_ARB	src/windows/include/GL/glext.h	831;"	d
GL_BOOL_VEC2	src/windows/include/GL/glext.h	428;"	d
GL_BOOL_VEC2_ARB	src/windows/include/GL/glext.h	832;"	d
GL_BOOL_VEC3	src/windows/include/GL/glext.h	429;"	d
GL_BOOL_VEC3_ARB	src/windows/include/GL/glext.h	833;"	d
GL_BOOL_VEC4	src/windows/include/GL/glext.h	430;"	d
GL_BOOL_VEC4_ARB	src/windows/include/GL/glext.h	834;"	d
GL_BUFFER_ACCESS	src/windows/include/GL/glext.h	346;"	d
GL_BUFFER_ACCESS_ARB	src/windows/include/GL/glext.h	798;"	d
GL_BUFFER_MAPPED	src/windows/include/GL/glext.h	347;"	d
GL_BUFFER_MAPPED_ARB	src/windows/include/GL/glext.h	799;"	d
GL_BUFFER_MAP_POINTER	src/windows/include/GL/glext.h	348;"	d
GL_BUFFER_MAP_POINTER_ARB	src/windows/include/GL/glext.h	800;"	d
GL_BUFFER_SIZE	src/windows/include/GL/glext.h	323;"	d
GL_BUFFER_SIZE_ARB	src/windows/include/GL/glext.h	779;"	d
GL_BUFFER_USAGE	src/windows/include/GL/glext.h	324;"	d
GL_BUFFER_USAGE_ARB	src/windows/include/GL/glext.h	780;"	d
GL_BUMP_ENVMAP_ATI	src/windows/include/GL/glext.h	2442;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	src/windows/include/GL/glext.h	2438;"	d
GL_BUMP_ROT_MATRIX_ATI	src/windows/include/GL/glext.h	2436;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	src/windows/include/GL/glext.h	2437;"	d
GL_BUMP_TARGET_ATI	src/windows/include/GL/glext.h	2443;"	d
GL_BUMP_TEX_UNITS_ATI	src/windows/include/GL/glext.h	2439;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	src/windows/include/GL/glext.h	1538;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	src/windows/include/GL/glext.h	918;"	d
GL_CLAMP_READ_COLOR_ARB	src/windows/include/GL/glext.h	919;"	d
GL_CLAMP_TO_BORDER	src/windows/include/GL/glext.h	253;"	d
GL_CLAMP_TO_BORDER_ARB	src/windows/include/GL/glext.h	552;"	d
GL_CLAMP_TO_BORDER_SGIS	src/windows/include/GL/glext.h	1288;"	d
GL_CLAMP_TO_EDGE	src/windows/include/GL/glext.h	87;"	d
GL_CLAMP_TO_EDGE_SGIS	src/windows/include/GL/glext.h	1284;"	d
GL_CLAMP_VERTEX_COLOR_ARB	src/windows/include/GL/glext.h	917;"	d
GL_CLIENT_ACTIVE_TEXTURE	src/windows/include/GL/glext.h	215;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	src/windows/include/GL/glext.h	496;"	d
GL_CLIP_FAR_HINT_PGI	src/windows/include/GL/glext.h	1510;"	d
GL_CLIP_NEAR_HINT_PGI	src/windows/include/GL/glext.h	1509;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	src/windows/include/GL/glext.h	1526;"	d
GL_CMYKA_EXT	src/windows/include/GL/glext.h	1149;"	d
GL_CMYK_EXT	src/windows/include/GL/glext.h	1148;"	d
GL_CND0_ATI	src/windows/include/GL/glext.h	2521;"	d
GL_CND_ATI	src/windows/include/GL/glext.h	2520;"	d
GL_COLOR3_BIT_PGI	src/windows/include/GL/glext.h	1472;"	d
GL_COLOR4_BIT_PGI	src/windows/include/GL/glext.h	1473;"	d
GL_COLOR_ALPHA_PAIRING_ATI	src/windows/include/GL/glext.h	2531;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	335;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	787;"	d
GL_COLOR_ARRAY_COUNT_EXT	src/windows/include/GL/glext.h	1235;"	d
GL_COLOR_ARRAY_EXT	src/windows/include/GL/glext.h	1221;"	d
GL_COLOR_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2060;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2068;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	src/windows/include/GL/glext.h	1698;"	d
GL_COLOR_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1247;"	d
GL_COLOR_ARRAY_SIZE_EXT	src/windows/include/GL/glext.h	1232;"	d
GL_COLOR_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1234;"	d
GL_COLOR_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1233;"	d
GL_COLOR_ATTACHMENT0_EXT	src/windows/include/GL/glext.h	3003;"	d
GL_COLOR_ATTACHMENT10_EXT	src/windows/include/GL/glext.h	3013;"	d
GL_COLOR_ATTACHMENT11_EXT	src/windows/include/GL/glext.h	3014;"	d
GL_COLOR_ATTACHMENT12_EXT	src/windows/include/GL/glext.h	3015;"	d
GL_COLOR_ATTACHMENT13_EXT	src/windows/include/GL/glext.h	3016;"	d
GL_COLOR_ATTACHMENT14_EXT	src/windows/include/GL/glext.h	3017;"	d
GL_COLOR_ATTACHMENT15_EXT	src/windows/include/GL/glext.h	3018;"	d
GL_COLOR_ATTACHMENT1_EXT	src/windows/include/GL/glext.h	3004;"	d
GL_COLOR_ATTACHMENT2_EXT	src/windows/include/GL/glext.h	3005;"	d
GL_COLOR_ATTACHMENT3_EXT	src/windows/include/GL/glext.h	3006;"	d
GL_COLOR_ATTACHMENT4_EXT	src/windows/include/GL/glext.h	3007;"	d
GL_COLOR_ATTACHMENT5_EXT	src/windows/include/GL/glext.h	3008;"	d
GL_COLOR_ATTACHMENT6_EXT	src/windows/include/GL/glext.h	3009;"	d
GL_COLOR_ATTACHMENT7_EXT	src/windows/include/GL/glext.h	3010;"	d
GL_COLOR_ATTACHMENT8_EXT	src/windows/include/GL/glext.h	3011;"	d
GL_COLOR_ATTACHMENT9_EXT	src/windows/include/GL/glext.h	3012;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	src/windows/include/GL/glext.h	2836;"	d
GL_COLOR_INDEX12_EXT	src/windows/include/GL/glext.h	1520;"	d
GL_COLOR_INDEX16_EXT	src/windows/include/GL/glext.h	1521;"	d
GL_COLOR_INDEX1_EXT	src/windows/include/GL/glext.h	1516;"	d
GL_COLOR_INDEX2_EXT	src/windows/include/GL/glext.h	1517;"	d
GL_COLOR_INDEX4_EXT	src/windows/include/GL/glext.h	1518;"	d
GL_COLOR_INDEX8_EXT	src/windows/include/GL/glext.h	1519;"	d
GL_COLOR_MATRIX	src/windows/include/GL/glext.h	149;"	d
GL_COLOR_MATRIX_SGI	src/windows/include/GL/glext.h	1085;"	d
GL_COLOR_MATRIX_STACK_DEPTH	src/windows/include/GL/glext.h	150;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	src/windows/include/GL/glext.h	1086;"	d
GL_COLOR_SUM	src/windows/include/GL/glext.h	303;"	d
GL_COLOR_SUM_ARB	src/windows/include/GL/glext.h	679;"	d
GL_COLOR_SUM_CLAMP_NV	src/windows/include/GL/glext.h	1997;"	d
GL_COLOR_SUM_EXT	src/windows/include/GL/glext.h	1733;"	d
GL_COLOR_TABLE	src/windows/include/GL/glext.h	160;"	d
GL_COLOR_TABLE_ALPHA_SIZE	src/windows/include/GL/glext.h	173;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	src/windows/include/GL/glext.h	1112;"	d
GL_COLOR_TABLE_BIAS	src/windows/include/GL/glext.h	167;"	d
GL_COLOR_TABLE_BIAS_SGI	src/windows/include/GL/glext.h	1106;"	d
GL_COLOR_TABLE_BLUE_SIZE	src/windows/include/GL/glext.h	172;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	src/windows/include/GL/glext.h	1111;"	d
GL_COLOR_TABLE_FORMAT	src/windows/include/GL/glext.h	168;"	d
GL_COLOR_TABLE_FORMAT_SGI	src/windows/include/GL/glext.h	1107;"	d
GL_COLOR_TABLE_GREEN_SIZE	src/windows/include/GL/glext.h	171;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	src/windows/include/GL/glext.h	1110;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	src/windows/include/GL/glext.h	175;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	src/windows/include/GL/glext.h	1114;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	src/windows/include/GL/glext.h	174;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	src/windows/include/GL/glext.h	1113;"	d
GL_COLOR_TABLE_RED_SIZE	src/windows/include/GL/glext.h	170;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	src/windows/include/GL/glext.h	1109;"	d
GL_COLOR_TABLE_SCALE	src/windows/include/GL/glext.h	166;"	d
GL_COLOR_TABLE_SCALE_SGI	src/windows/include/GL/glext.h	1105;"	d
GL_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1099;"	d
GL_COLOR_TABLE_WIDTH	src/windows/include/GL/glext.h	169;"	d
GL_COLOR_TABLE_WIDTH_SGI	src/windows/include/GL/glext.h	1108;"	d
GL_COMBINE	src/windows/include/GL/glext.h	254;"	d
GL_COMBINE4_NV	src/windows/include/GL/glext.h	2030;"	d
GL_COMBINER0_NV	src/windows/include/GL/glext.h	1998;"	d
GL_COMBINER1_NV	src/windows/include/GL/glext.h	1999;"	d
GL_COMBINER2_NV	src/windows/include/GL/glext.h	2000;"	d
GL_COMBINER3_NV	src/windows/include/GL/glext.h	2001;"	d
GL_COMBINER4_NV	src/windows/include/GL/glext.h	2002;"	d
GL_COMBINER5_NV	src/windows/include/GL/glext.h	2003;"	d
GL_COMBINER6_NV	src/windows/include/GL/glext.h	2004;"	d
GL_COMBINER7_NV	src/windows/include/GL/glext.h	2005;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	src/windows/include/GL/glext.h	1987;"	d
GL_COMBINER_AB_OUTPUT_NV	src/windows/include/GL/glext.h	1992;"	d
GL_COMBINER_BIAS_NV	src/windows/include/GL/glext.h	1991;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	src/windows/include/GL/glext.h	1988;"	d
GL_COMBINER_CD_OUTPUT_NV	src/windows/include/GL/glext.h	1993;"	d
GL_COMBINER_COMPONENT_USAGE_NV	src/windows/include/GL/glext.h	1986;"	d
GL_COMBINER_INPUT_NV	src/windows/include/GL/glext.h	1984;"	d
GL_COMBINER_MAPPING_NV	src/windows/include/GL/glext.h	1985;"	d
GL_COMBINER_MUX_SUM_NV	src/windows/include/GL/glext.h	1989;"	d
GL_COMBINER_SCALE_NV	src/windows/include/GL/glext.h	1990;"	d
GL_COMBINER_SUM_OUTPUT_NV	src/windows/include/GL/glext.h	1994;"	d
GL_COMBINE_ALPHA	src/windows/include/GL/glext.h	256;"	d
GL_COMBINE_ALPHA_ARB	src/windows/include/GL/glext.h	623;"	d
GL_COMBINE_ALPHA_EXT	src/windows/include/GL/glext.h	1786;"	d
GL_COMBINE_ARB	src/windows/include/GL/glext.h	621;"	d
GL_COMBINE_EXT	src/windows/include/GL/glext.h	1784;"	d
GL_COMBINE_RGB	src/windows/include/GL/glext.h	255;"	d
GL_COMBINE_RGB_ARB	src/windows/include/GL/glext.h	622;"	d
GL_COMBINE_RGB_EXT	src/windows/include/GL/glext.h	1785;"	d
GL_COMPARE_R_TO_TEXTURE	src/windows/include/GL/glext.h	319;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	src/windows/include/GL/glext.h	668;"	d
GL_COMPILE_STATUS	src/windows/include/GL/glext.h	441;"	d
GL_COMPRESSED_ALPHA	src/windows/include/GL/glext.h	242;"	d
GL_COMPRESSED_ALPHA_ARB	src/windows/include/GL/glext.h	538;"	d
GL_COMPRESSED_INTENSITY	src/windows/include/GL/glext.h	245;"	d
GL_COMPRESSED_INTENSITY_ARB	src/windows/include/GL/glext.h	541;"	d
GL_COMPRESSED_LUMINANCE	src/windows/include/GL/glext.h	243;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	src/windows/include/GL/glext.h	244;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	src/windows/include/GL/glext.h	540;"	d
GL_COMPRESSED_LUMINANCE_ARB	src/windows/include/GL/glext.h	539;"	d
GL_COMPRESSED_RGB	src/windows/include/GL/glext.h	246;"	d
GL_COMPRESSED_RGBA	src/windows/include/GL/glext.h	247;"	d
GL_COMPRESSED_RGBA_ARB	src/windows/include/GL/glext.h	543;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	src/windows/include/GL/glext.h	2100;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	src/windows/include/GL/glext.h	2045;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	src/windows/include/GL/glext.h	2046;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	src/windows/include/GL/glext.h	2047;"	d
GL_COMPRESSED_RGB_ARB	src/windows/include/GL/glext.h	542;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	src/windows/include/GL/glext.h	2099;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	src/windows/include/GL/glext.h	2044;"	d
GL_COMPRESSED_TEXTURE_FORMATS	src/windows/include/GL/glext.h	252;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	src/windows/include/GL/glext.h	548;"	d
GL_COMP_BIT_ATI	src/windows/include/GL/glext.h	2548;"	d
GL_CONSERVE_MEMORY_HINT_PGI	src/windows/include/GL/glext.h	1494;"	d
GL_CONSTANT	src/windows/include/GL/glext.h	273;"	d
GL_CONSTANT_ALPHA	src/windows/include/GL/glext.h	106;"	d
GL_CONSTANT_ALPHA_EXT	src/windows/include/GL/glext.h	964;"	d
GL_CONSTANT_ARB	src/windows/include/GL/glext.h	640;"	d
GL_CONSTANT_BORDER	src/windows/include/GL/glext.h	176;"	d
GL_CONSTANT_BORDER_HP	src/windows/include/GL/glext.h	1452;"	d
GL_CONSTANT_COLOR	src/windows/include/GL/glext.h	104;"	d
GL_CONSTANT_COLOR0_NV	src/windows/include/GL/glext.h	1963;"	d
GL_CONSTANT_COLOR1_NV	src/windows/include/GL/glext.h	1964;"	d
GL_CONSTANT_COLOR_EXT	src/windows/include/GL/glext.h	962;"	d
GL_CONSTANT_EXT	src/windows/include/GL/glext.h	1790;"	d
GL_CONST_EYE_NV	src/windows/include/GL/glext.h	2250;"	d
GL_CONVOLUTION_1D	src/windows/include/GL/glext.h	115;"	d
GL_CONVOLUTION_1D_EXT	src/windows/include/GL/glext.h	1062;"	d
GL_CONVOLUTION_2D	src/windows/include/GL/glext.h	116;"	d
GL_CONVOLUTION_2D_EXT	src/windows/include/GL/glext.h	1063;"	d
GL_CONVOLUTION_BORDER_COLOR	src/windows/include/GL/glext.h	178;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	src/windows/include/GL/glext.h	1454;"	d
GL_CONVOLUTION_BORDER_MODE	src/windows/include/GL/glext.h	118;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	src/windows/include/GL/glext.h	1065;"	d
GL_CONVOLUTION_FILTER_BIAS	src/windows/include/GL/glext.h	120;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	src/windows/include/GL/glext.h	1067;"	d
GL_CONVOLUTION_FILTER_SCALE	src/windows/include/GL/glext.h	119;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	src/windows/include/GL/glext.h	1066;"	d
GL_CONVOLUTION_FORMAT	src/windows/include/GL/glext.h	122;"	d
GL_CONVOLUTION_FORMAT_EXT	src/windows/include/GL/glext.h	1069;"	d
GL_CONVOLUTION_HEIGHT	src/windows/include/GL/glext.h	124;"	d
GL_CONVOLUTION_HEIGHT_EXT	src/windows/include/GL/glext.h	1071;"	d
GL_CONVOLUTION_HINT_SGIX	src/windows/include/GL/glext.h	2139;"	d
GL_CONVOLUTION_WIDTH	src/windows/include/GL/glext.h	123;"	d
GL_CONVOLUTION_WIDTH_EXT	src/windows/include/GL/glext.h	1070;"	d
GL_CON_0_ATI	src/windows/include/GL/glext.h	2480;"	d
GL_CON_10_ATI	src/windows/include/GL/glext.h	2490;"	d
GL_CON_11_ATI	src/windows/include/GL/glext.h	2491;"	d
GL_CON_12_ATI	src/windows/include/GL/glext.h	2492;"	d
GL_CON_13_ATI	src/windows/include/GL/glext.h	2493;"	d
GL_CON_14_ATI	src/windows/include/GL/glext.h	2494;"	d
GL_CON_15_ATI	src/windows/include/GL/glext.h	2495;"	d
GL_CON_16_ATI	src/windows/include/GL/glext.h	2496;"	d
GL_CON_17_ATI	src/windows/include/GL/glext.h	2497;"	d
GL_CON_18_ATI	src/windows/include/GL/glext.h	2498;"	d
GL_CON_19_ATI	src/windows/include/GL/glext.h	2499;"	d
GL_CON_1_ATI	src/windows/include/GL/glext.h	2481;"	d
GL_CON_20_ATI	src/windows/include/GL/glext.h	2500;"	d
GL_CON_21_ATI	src/windows/include/GL/glext.h	2501;"	d
GL_CON_22_ATI	src/windows/include/GL/glext.h	2502;"	d
GL_CON_23_ATI	src/windows/include/GL/glext.h	2503;"	d
GL_CON_24_ATI	src/windows/include/GL/glext.h	2504;"	d
GL_CON_25_ATI	src/windows/include/GL/glext.h	2505;"	d
GL_CON_26_ATI	src/windows/include/GL/glext.h	2506;"	d
GL_CON_27_ATI	src/windows/include/GL/glext.h	2507;"	d
GL_CON_28_ATI	src/windows/include/GL/glext.h	2508;"	d
GL_CON_29_ATI	src/windows/include/GL/glext.h	2509;"	d
GL_CON_2_ATI	src/windows/include/GL/glext.h	2482;"	d
GL_CON_30_ATI	src/windows/include/GL/glext.h	2510;"	d
GL_CON_31_ATI	src/windows/include/GL/glext.h	2511;"	d
GL_CON_3_ATI	src/windows/include/GL/glext.h	2483;"	d
GL_CON_4_ATI	src/windows/include/GL/glext.h	2484;"	d
GL_CON_5_ATI	src/windows/include/GL/glext.h	2485;"	d
GL_CON_6_ATI	src/windows/include/GL/glext.h	2486;"	d
GL_CON_7_ATI	src/windows/include/GL/glext.h	2487;"	d
GL_CON_8_ATI	src/windows/include/GL/glext.h	2488;"	d
GL_CON_9_ATI	src/windows/include/GL/glext.h	2489;"	d
GL_COORD_REPLACE	src/windows/include/GL/glext.h	408;"	d
GL_COORD_REPLACE_ARB	src/windows/include/GL/glext.h	882;"	d
GL_COORD_REPLACE_NV	src/windows/include/GL/glext.h	2734;"	d
GL_CUBIC_EXT	src/windows/include/GL/glext.h	1712;"	d
GL_CUBIC_HP	src/windows/include/GL/glext.h	1443;"	d
GL_CULL_FRAGMENT_NV	src/windows/include/GL/glext.h	2252;"	d
GL_CULL_MODES_NV	src/windows/include/GL/glext.h	2242;"	d
GL_CULL_VERTEX_EXT	src/windows/include/GL/glext.h	1583;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	src/windows/include/GL/glext.h	1584;"	d
GL_CULL_VERTEX_IBM	src/windows/include/GL/glext.h	2051;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	src/windows/include/GL/glext.h	1585;"	d
GL_CURRENT_ATTRIB_NV	src/windows/include/GL/glext.h	2321;"	d
GL_CURRENT_BINORMAL_EXT	src/windows/include/GL/glext.h	1770;"	d
GL_CURRENT_FOG_COORD	src/windows/include/GL/glext.h	361;"	d
GL_CURRENT_FOG_COORDINATE	src/windows/include/GL/glext.h	298;"	d
GL_CURRENT_FOG_COORDINATE_EXT	src/windows/include/GL/glext.h	1754;"	d
GL_CURRENT_MATRIX_ARB	src/windows/include/GL/glext.h	691;"	d
GL_CURRENT_MATRIX_INDEX_ARB	src/windows/include/GL/glext.h	613;"	d
GL_CURRENT_MATRIX_NV	src/windows/include/GL/glext.h	2340;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	src/windows/include/GL/glext.h	690;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	src/windows/include/GL/glext.h	2339;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	src/windows/include/GL/glext.h	2727;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	src/windows/include/GL/glext.h	611;"	d
GL_CURRENT_PROGRAM	src/windows/include/GL/glext.h	453;"	d
GL_CURRENT_QUERY	src/windows/include/GL/glext.h	326;"	d
GL_CURRENT_QUERY_ARB	src/windows/include/GL/glext.h	814;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	src/windows/include/GL/glext.h	1600;"	d
GL_CURRENT_SECONDARY_COLOR	src/windows/include/GL/glext.h	304;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	src/windows/include/GL/glext.h	1734;"	d
GL_CURRENT_TANGENT_EXT	src/windows/include/GL/glext.h	1769;"	d
GL_CURRENT_VERTEX_ATTRIB	src/windows/include/GL/glext.h	381;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	src/windows/include/GL/glext.h	685;"	d
GL_CURRENT_VERTEX_EXT	src/windows/include/GL/glext.h	2675;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	src/windows/include/GL/glext.h	1933;"	d
GL_CURRENT_WEIGHT_ARB	src/windows/include/GL/glext.h	567;"	d
GL_DECR_WRAP	src/windows/include/GL/glext.h	314;"	d
GL_DECR_WRAP_EXT	src/windows/include/GL/glext.h	1877;"	d
GL_DEFORMATIONS_MASK_SGIX	src/windows/include/GL/glext.h	1403;"	d
GL_DELETE_STATUS	src/windows/include/GL/glext.h	440;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2254;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2255;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2747;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	src/windows/include/GL/glext.h	2748;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	src/windows/include/GL/glext.h	2749;"	d
GL_DEPTH_ATTACHMENT_EXT	src/windows/include/GL/glext.h	3019;"	d
GL_DEPTH_BOUNDS_EXT	src/windows/include/GL/glext.h	2932;"	d
GL_DEPTH_BOUNDS_TEST_EXT	src/windows/include/GL/glext.h	2931;"	d
GL_DEPTH_CLAMP_NV	src/windows/include/GL/glext.h	2722;"	d
GL_DEPTH_COMPONENT16	src/windows/include/GL/glext.h	291;"	d
GL_DEPTH_COMPONENT16_ARB	src/windows/include/GL/glext.h	658;"	d
GL_DEPTH_COMPONENT16_SGIX	src/windows/include/GL/glext.h	1416;"	d
GL_DEPTH_COMPONENT24	src/windows/include/GL/glext.h	292;"	d
GL_DEPTH_COMPONENT24_ARB	src/windows/include/GL/glext.h	659;"	d
GL_DEPTH_COMPONENT24_SGIX	src/windows/include/GL/glext.h	1417;"	d
GL_DEPTH_COMPONENT32	src/windows/include/GL/glext.h	293;"	d
GL_DEPTH_COMPONENT32_ARB	src/windows/include/GL/glext.h	660;"	d
GL_DEPTH_COMPONENT32_SGIX	src/windows/include/GL/glext.h	1418;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	src/windows/include/GL/glext.h	2094;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	src/windows/include/GL/glext.h	2095;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	src/windows/include/GL/glext.h	2093;"	d
GL_DEPTH_STENCIL_NV	src/windows/include/GL/glext.h	2213;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	src/windows/include/GL/glext.h	2432;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	src/windows/include/GL/glext.h	2431;"	d
GL_DEPTH_TEXTURE_MODE	src/windows/include/GL/glext.h	316;"	d
GL_DEPTH_TEXTURE_MODE_ARB	src/windows/include/GL/glext.h	662;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	src/windows/include/GL/glext.h	1164;"	d
GL_DETAIL_TEXTURE_2D_SGIS	src/windows/include/GL/glext.h	1163;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	src/windows/include/GL/glext.h	1170;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	src/windows/include/GL/glext.h	1168;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	src/windows/include/GL/glext.h	1169;"	d
GL_DISCARD_ATI	src/windows/include/GL/glext.h	2569;"	d
GL_DISCARD_NV	src/windows/include/GL/glext.h	1969;"	d
GL_DISTANCE_ATTENUATION_EXT	src/windows/include/GL/glext.h	1364;"	d
GL_DISTANCE_ATTENUATION_SGIS	src/windows/include/GL/glext.h	1371;"	d
GL_DOT2_ADD_ATI	src/windows/include/GL/glext.h	2522;"	d
GL_DOT3_ATI	src/windows/include/GL/glext.h	2516;"	d
GL_DOT3_RGB	src/windows/include/GL/glext.h	276;"	d
GL_DOT3_RGBA	src/windows/include/GL/glext.h	277;"	d
GL_DOT3_RGBA_ARB	src/windows/include/GL/glext.h	650;"	d
GL_DOT3_RGBA_EXT	src/windows/include/GL/glext.h	2167;"	d
GL_DOT3_RGB_ARB	src/windows/include/GL/glext.h	649;"	d
GL_DOT3_RGB_EXT	src/windows/include/GL/glext.h	2166;"	d
GL_DOT4_ATI	src/windows/include/GL/glext.h	2517;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	src/windows/include/GL/glext.h	2752;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	src/windows/include/GL/glext.h	2262;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	src/windows/include/GL/glext.h	2257;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	src/windows/include/GL/glext.h	2260;"	d
GL_DOT_PRODUCT_NV	src/windows/include/GL/glext.h	2256;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	src/windows/include/GL/glext.h	2750;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	src/windows/include/GL/glext.h	2261;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	src/windows/include/GL/glext.h	2751;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2258;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	src/windows/include/GL/glext.h	2308;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	src/windows/include/GL/glext.h	2259;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2234;"	d
GL_DRAW_BUFFER0	src/windows/include/GL/glext.h	390;"	d
GL_DRAW_BUFFER0_ARB	src/windows/include/GL/glext.h	890;"	d
GL_DRAW_BUFFER0_ATI	src/windows/include/GL/glext.h	2816;"	d
GL_DRAW_BUFFER1	src/windows/include/GL/glext.h	391;"	d
GL_DRAW_BUFFER10	src/windows/include/GL/glext.h	400;"	d
GL_DRAW_BUFFER10_ARB	src/windows/include/GL/glext.h	900;"	d
GL_DRAW_BUFFER10_ATI	src/windows/include/GL/glext.h	2826;"	d
GL_DRAW_BUFFER11	src/windows/include/GL/glext.h	401;"	d
GL_DRAW_BUFFER11_ARB	src/windows/include/GL/glext.h	901;"	d
GL_DRAW_BUFFER11_ATI	src/windows/include/GL/glext.h	2827;"	d
GL_DRAW_BUFFER12	src/windows/include/GL/glext.h	402;"	d
GL_DRAW_BUFFER12_ARB	src/windows/include/GL/glext.h	902;"	d
GL_DRAW_BUFFER12_ATI	src/windows/include/GL/glext.h	2828;"	d
GL_DRAW_BUFFER13	src/windows/include/GL/glext.h	403;"	d
GL_DRAW_BUFFER13_ARB	src/windows/include/GL/glext.h	903;"	d
GL_DRAW_BUFFER13_ATI	src/windows/include/GL/glext.h	2829;"	d
GL_DRAW_BUFFER14	src/windows/include/GL/glext.h	404;"	d
GL_DRAW_BUFFER14_ARB	src/windows/include/GL/glext.h	904;"	d
GL_DRAW_BUFFER14_ATI	src/windows/include/GL/glext.h	2830;"	d
GL_DRAW_BUFFER15	src/windows/include/GL/glext.h	405;"	d
GL_DRAW_BUFFER15_ARB	src/windows/include/GL/glext.h	905;"	d
GL_DRAW_BUFFER15_ATI	src/windows/include/GL/glext.h	2831;"	d
GL_DRAW_BUFFER1_ARB	src/windows/include/GL/glext.h	891;"	d
GL_DRAW_BUFFER1_ATI	src/windows/include/GL/glext.h	2817;"	d
GL_DRAW_BUFFER2	src/windows/include/GL/glext.h	392;"	d
GL_DRAW_BUFFER2_ARB	src/windows/include/GL/glext.h	892;"	d
GL_DRAW_BUFFER2_ATI	src/windows/include/GL/glext.h	2818;"	d
GL_DRAW_BUFFER3	src/windows/include/GL/glext.h	393;"	d
GL_DRAW_BUFFER3_ARB	src/windows/include/GL/glext.h	893;"	d
GL_DRAW_BUFFER3_ATI	src/windows/include/GL/glext.h	2819;"	d
GL_DRAW_BUFFER4	src/windows/include/GL/glext.h	394;"	d
GL_DRAW_BUFFER4_ARB	src/windows/include/GL/glext.h	894;"	d
GL_DRAW_BUFFER4_ATI	src/windows/include/GL/glext.h	2820;"	d
GL_DRAW_BUFFER5	src/windows/include/GL/glext.h	395;"	d
GL_DRAW_BUFFER5_ARB	src/windows/include/GL/glext.h	895;"	d
GL_DRAW_BUFFER5_ATI	src/windows/include/GL/glext.h	2821;"	d
GL_DRAW_BUFFER6	src/windows/include/GL/glext.h	396;"	d
GL_DRAW_BUFFER6_ARB	src/windows/include/GL/glext.h	896;"	d
GL_DRAW_BUFFER6_ATI	src/windows/include/GL/glext.h	2822;"	d
GL_DRAW_BUFFER7	src/windows/include/GL/glext.h	397;"	d
GL_DRAW_BUFFER7_ARB	src/windows/include/GL/glext.h	897;"	d
GL_DRAW_BUFFER7_ATI	src/windows/include/GL/glext.h	2823;"	d
GL_DRAW_BUFFER8	src/windows/include/GL/glext.h	398;"	d
GL_DRAW_BUFFER8_ARB	src/windows/include/GL/glext.h	898;"	d
GL_DRAW_BUFFER8_ATI	src/windows/include/GL/glext.h	2824;"	d
GL_DRAW_BUFFER9	src/windows/include/GL/glext.h	399;"	d
GL_DRAW_BUFFER9_ARB	src/windows/include/GL/glext.h	899;"	d
GL_DRAW_BUFFER9_ATI	src/windows/include/GL/glext.h	2825;"	d
GL_DRAW_PIXELS_APPLE	src/windows/include/GL/glext.h	2784;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	src/windows/include/GL/glext.h	2284;"	d
GL_DSDT8_MAG8_NV	src/windows/include/GL/glext.h	2283;"	d
GL_DSDT8_NV	src/windows/include/GL/glext.h	2282;"	d
GL_DSDT_MAG_INTENSITY_NV	src/windows/include/GL/glext.h	2238;"	d
GL_DSDT_MAG_NV	src/windows/include/GL/glext.h	2265;"	d
GL_DSDT_MAG_VIB_NV	src/windows/include/GL/glext.h	2266;"	d
GL_DSDT_NV	src/windows/include/GL/glext.h	2264;"	d
GL_DS_BIAS_NV	src/windows/include/GL/glext.h	2295;"	d
GL_DS_SCALE_NV	src/windows/include/GL/glext.h	2289;"	d
GL_DT_BIAS_NV	src/windows/include/GL/glext.h	2296;"	d
GL_DT_SCALE_NV	src/windows/include/GL/glext.h	2290;"	d
GL_DU8DV8_ATI	src/windows/include/GL/glext.h	2441;"	d
GL_DUAL_ALPHA12_SGIS	src/windows/include/GL/glext.h	1324;"	d
GL_DUAL_ALPHA16_SGIS	src/windows/include/GL/glext.h	1325;"	d
GL_DUAL_ALPHA4_SGIS	src/windows/include/GL/glext.h	1322;"	d
GL_DUAL_ALPHA8_SGIS	src/windows/include/GL/glext.h	1323;"	d
GL_DUAL_INTENSITY12_SGIS	src/windows/include/GL/glext.h	1332;"	d
GL_DUAL_INTENSITY16_SGIS	src/windows/include/GL/glext.h	1333;"	d
GL_DUAL_INTENSITY4_SGIS	src/windows/include/GL/glext.h	1330;"	d
GL_DUAL_INTENSITY8_SGIS	src/windows/include/GL/glext.h	1331;"	d
GL_DUAL_LUMINANCE12_SGIS	src/windows/include/GL/glext.h	1328;"	d
GL_DUAL_LUMINANCE16_SGIS	src/windows/include/GL/glext.h	1329;"	d
GL_DUAL_LUMINANCE4_SGIS	src/windows/include/GL/glext.h	1326;"	d
GL_DUAL_LUMINANCE8_SGIS	src/windows/include/GL/glext.h	1327;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	src/windows/include/GL/glext.h	1334;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	src/windows/include/GL/glext.h	1335;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	src/windows/include/GL/glext.h	1342;"	d
GL_DUDV_ATI	src/windows/include/GL/glext.h	2440;"	d
GL_DYNAMIC_ATI	src/windows/include/GL/glext.h	2567;"	d
GL_DYNAMIC_COPY	src/windows/include/GL/glext.h	357;"	d
GL_DYNAMIC_COPY_ARB	src/windows/include/GL/glext.h	809;"	d
GL_DYNAMIC_DRAW	src/windows/include/GL/glext.h	355;"	d
GL_DYNAMIC_DRAW_ARB	src/windows/include/GL/glext.h	807;"	d
GL_DYNAMIC_READ	src/windows/include/GL/glext.h	356;"	d
GL_DYNAMIC_READ_ARB	src/windows/include/GL/glext.h	808;"	d
GL_EDGEFLAG_BIT_PGI	src/windows/include/GL/glext.h	1474;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	338;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	790;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	src/windows/include/GL/glext.h	1244;"	d
GL_EDGE_FLAG_ARRAY_EXT	src/windows/include/GL/glext.h	1224;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2063;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2071;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1250;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1243;"	d
GL_EIGHTH_BIT_ATI	src/windows/include/GL/glext.h	2546;"	d
GL_ELEMENT_ARRAY_APPLE	src/windows/include/GL/glext.h	2778;"	d
GL_ELEMENT_ARRAY_ATI	src/windows/include/GL/glext.h	2703;"	d
GL_ELEMENT_ARRAY_BUFFER	src/windows/include/GL/glext.h	330;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	src/windows/include/GL/glext.h	782;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	332;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	784;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	src/windows/include/GL/glext.h	2780;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	src/windows/include/GL/glext.h	2705;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	src/windows/include/GL/glext.h	2779;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	src/windows/include/GL/glext.h	2704;"	d
GL_EMBOSS_CONSTANT_NV	src/windows/include/GL/glext.h	2022;"	d
GL_EMBOSS_LIGHT_NV	src/windows/include/GL/glext.h	2021;"	d
GL_EMBOSS_MAP_NV	src/windows/include/GL/glext.h	2023;"	d
GL_EVAL_2D_NV	src/windows/include/GL/glext.h	2186;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	src/windows/include/GL/glext.h	2191;"	d
GL_EVAL_TRIANGULAR_2D_NV	src/windows/include/GL/glext.h	2187;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	src/windows/include/GL/glext.h	2192;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	src/windows/include/GL/glext.h	2202;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	src/windows/include/GL/glext.h	2203;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	src/windows/include/GL/glext.h	2204;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	src/windows/include/GL/glext.h	2205;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	src/windows/include/GL/glext.h	2206;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	src/windows/include/GL/glext.h	2207;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	src/windows/include/GL/glext.h	2193;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	src/windows/include/GL/glext.h	2194;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	src/windows/include/GL/glext.h	2195;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	src/windows/include/GL/glext.h	2196;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	src/windows/include/GL/glext.h	2197;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	src/windows/include/GL/glext.h	2198;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	src/windows/include/GL/glext.h	2199;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	src/windows/include/GL/glext.h	2200;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	src/windows/include/GL/glext.h	2201;"	d
GL_EXPAND_NEGATE_NV	src/windows/include/GL/glext.h	1975;"	d
GL_EXPAND_NORMAL_NV	src/windows/include/GL/glext.h	1974;"	d
GL_EXT_422_pixels	src/windows/include/GL/glext.h	5237;"	d
GL_EXT_abgr	src/windows/include/GL/glext.h	4169;"	d
GL_EXT_bgra	src/windows/include/GL/glext.h	4855;"	d
GL_EXT_blend_color	src/windows/include/GL/glext.h	4173;"	d
GL_EXT_blend_equation_separate	src/windows/include/GL/glext.h	6407;"	d
GL_EXT_blend_func_separate	src/windows/include/GL/glext.h	5209;"	d
GL_EXT_blend_logic_op	src/windows/include/GL/glext.h	4485;"	d
GL_EXT_blend_minmax	src/windows/include/GL/glext.h	4473;"	d
GL_EXT_blend_subtract	src/windows/include/GL/glext.h	4481;"	d
GL_EXT_clip_volume_hint	src/windows/include/GL/glext.h	4687;"	d
GL_EXT_cmyka	src/windows/include/GL/glext.h	4361;"	d
GL_EXT_color_matrix	src/windows/include/GL/glext.h	4297;"	d
GL_EXT_color_subtable	src/windows/include/GL/glext.h	4651;"	d
GL_EXT_compiled_vertex_array	src/windows/include/GL/glext.h	4749;"	d
GL_EXT_convolution	src/windows/include/GL/glext.h	4265;"	d
GL_EXT_coordinate_frame	src/windows/include/GL/glext.h	5007;"	d
GL_EXT_copy_texture	src/windows/include/GL/glext.h	4223;"	d
GL_EXT_cull_vertex	src/windows/include/GL/glext.h	4759;"	d
GL_EXT_depth_bounds_test	src/windows/include/GL/glext.h	6395;"	d
GL_EXT_draw_range_elements	src/windows/include/GL/glext.h	4823;"	d
GL_EXT_fog_coord	src/windows/include/GL/glext.h	4987;"	d
GL_EXT_framebuffer_object	src/windows/include/GL/glext.h	6443;"	d
GL_EXT_histogram	src/windows/include/GL/glext.h	4239;"	d
GL_EXT_index_array_formats	src/windows/include/GL/glext.h	4745;"	d
GL_EXT_index_func	src/windows/include/GL/glext.h	4737;"	d
GL_EXT_index_material	src/windows/include/GL/glext.h	4729;"	d
GL_EXT_index_texture	src/windows/include/GL/glext.h	4725;"	d
GL_EXT_light_texture	src/windows/include/GL/glext.h	4839;"	d
GL_EXT_misc_attribute	src/windows/include/GL/glext.h	4449;"	d
GL_EXT_multi_draw_arrays	src/windows/include/GL/glext.h	4977;"	d
GL_EXT_multisample	src/windows/include/GL/glext.h	5465;"	d
GL_EXT_packed_pixels	src/windows/include/GL/glext.h	4403;"	d
GL_EXT_paletted_texture	src/windows/include/GL/glext.h	4673;"	d
GL_EXT_pixel_buffer_object	src/windows/include/GL/glext.h	6423;"	d
GL_EXT_pixel_transform	src/windows/include/GL/glext.h	4903;"	d
GL_EXT_pixel_transform_color_table	src/windows/include/GL/glext.h	4917;"	d
GL_EXT_point_parameters	src/windows/include/GL/glext.h	4519;"	d
GL_EXT_polygon_offset	src/windows/include/GL/glext.h	4181;"	d
GL_EXT_rescale_normal	src/windows/include/GL/glext.h	4421;"	d
GL_EXT_secondary_color	src/windows/include/GL/glext.h	4929;"	d
GL_EXT_separate_specular_color	src/windows/include/GL/glext.h	4925;"	d
GL_EXT_shadow_funcs	src/windows/include/GL/glext.h	6095;"	d
GL_EXT_shared_texture_palette	src/windows/include/GL/glext.h	4921;"	d
GL_EXT_stencil_two_side	src/windows/include/GL/glext.h	6099;"	d
GL_EXT_stencil_wrap	src/windows/include/GL/glext.h	5233;"	d
GL_EXT_subtexture	src/windows/include/GL/glext.h	4213;"	d
GL_EXT_texture	src/windows/include/GL/glext.h	4189;"	d
GL_EXT_texture3D	src/windows/include/GL/glext.h	4193;"	d
GL_EXT_texture_env_add	src/windows/include/GL/glext.h	5249;"	d
GL_EXT_texture_env_combine	src/windows/include/GL/glext.h	5057;"	d
GL_EXT_texture_env_dot3	src/windows/include/GL/glext.h	5507;"	d
GL_EXT_texture_filter_anisotropic	src/windows/include/GL/glext.h	5257;"	d
GL_EXT_texture_lod_bias	src/windows/include/GL/glext.h	5253;"	d
GL_EXT_texture_mirror_clamp	src/windows/include/GL/glext.h	6403;"	d
GL_EXT_texture_object	src/windows/include/GL/glext.h	4365;"	d
GL_EXT_texture_perturb_normal	src/windows/include/GL/glext.h	4969;"	d
GL_EXT_vertex_array	src/windows/include/GL/glext.h	4425;"	d
GL_EXT_vertex_shader	src/windows/include/GL/glext.h	5839;"	d
GL_EXT_vertex_weighting	src/windows/include/GL/glext.h	5261;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	src/windows/include/GL/glext.h	2153;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	src/windows/include/GL/glext.h	2151;"	d
GL_EYE_LINE_SGIS	src/windows/include/GL/glext.h	2157;"	d
GL_EYE_PLANE_ABSOLUTE_NV	src/windows/include/GL/glext.h	2016;"	d
GL_EYE_POINT_SGIS	src/windows/include/GL/glext.h	2155;"	d
GL_EYE_RADIAL_NV	src/windows/include/GL/glext.h	2015;"	d
GL_E_TIMES_F_NV	src/windows/include/GL/glext.h	1970;"	d
GL_FENCE_APPLE	src/windows/include/GL/glext.h	2785;"	d
GL_FENCE_CONDITION_NV	src/windows/include/GL/glext.h	2178;"	d
GL_FENCE_STATUS_NV	src/windows/include/GL/glext.h	2177;"	d
GL_FILTER4_SGIS	src/windows/include/GL/glext.h	1034;"	d
GL_FIXED_ONLY_ARB	src/windows/include/GL/glext.h	920;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	src/windows/include/GL/glext.h	2874;"	d
GL_FLOAT_MAT2	src/windows/include/GL/glext.h	431;"	d
GL_FLOAT_MAT2_ARB	src/windows/include/GL/glext.h	835;"	d
GL_FLOAT_MAT3	src/windows/include/GL/glext.h	432;"	d
GL_FLOAT_MAT3_ARB	src/windows/include/GL/glext.h	836;"	d
GL_FLOAT_MAT4	src/windows/include/GL/glext.h	433;"	d
GL_FLOAT_MAT4_ARB	src/windows/include/GL/glext.h	837;"	d
GL_FLOAT_R16_NV	src/windows/include/GL/glext.h	2865;"	d
GL_FLOAT_R32_NV	src/windows/include/GL/glext.h	2866;"	d
GL_FLOAT_RG16_NV	src/windows/include/GL/glext.h	2867;"	d
GL_FLOAT_RG32_NV	src/windows/include/GL/glext.h	2868;"	d
GL_FLOAT_RGB16_NV	src/windows/include/GL/glext.h	2869;"	d
GL_FLOAT_RGB32_NV	src/windows/include/GL/glext.h	2870;"	d
GL_FLOAT_RGBA16_NV	src/windows/include/GL/glext.h	2871;"	d
GL_FLOAT_RGBA32_NV	src/windows/include/GL/glext.h	2872;"	d
GL_FLOAT_RGBA_MODE_NV	src/windows/include/GL/glext.h	2875;"	d
GL_FLOAT_RGBA_NV	src/windows/include/GL/glext.h	2864;"	d
GL_FLOAT_RGB_NV	src/windows/include/GL/glext.h	2863;"	d
GL_FLOAT_RG_NV	src/windows/include/GL/glext.h	2862;"	d
GL_FLOAT_R_NV	src/windows/include/GL/glext.h	2861;"	d
GL_FLOAT_VEC2	src/windows/include/GL/glext.h	421;"	d
GL_FLOAT_VEC2_ARB	src/windows/include/GL/glext.h	825;"	d
GL_FLOAT_VEC3	src/windows/include/GL/glext.h	422;"	d
GL_FLOAT_VEC3_ARB	src/windows/include/GL/glext.h	826;"	d
GL_FLOAT_VEC4	src/windows/include/GL/glext.h	423;"	d
GL_FLOAT_VEC4_ARB	src/windows/include/GL/glext.h	827;"	d
GL_FOG_COORD	src/windows/include/GL/glext.h	360;"	d
GL_FOG_COORDINATE	src/windows/include/GL/glext.h	296;"	d
GL_FOG_COORDINATE_ARRAY	src/windows/include/GL/glext.h	302;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	340;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	792;"	d
GL_FOG_COORDINATE_ARRAY_EXT	src/windows/include/GL/glext.h	1758;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2064;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2072;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	src/windows/include/GL/glext.h	301;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1757;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	src/windows/include/GL/glext.h	300;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1756;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	src/windows/include/GL/glext.h	299;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1755;"	d
GL_FOG_COORDINATE_EXT	src/windows/include/GL/glext.h	1752;"	d
GL_FOG_COORDINATE_SOURCE	src/windows/include/GL/glext.h	295;"	d
GL_FOG_COORDINATE_SOURCE_EXT	src/windows/include/GL/glext.h	1751;"	d
GL_FOG_COORD_ARRAY	src/windows/include/GL/glext.h	365;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	366;"	d
GL_FOG_COORD_ARRAY_POINTER	src/windows/include/GL/glext.h	364;"	d
GL_FOG_COORD_ARRAY_STRIDE	src/windows/include/GL/glext.h	363;"	d
GL_FOG_COORD_ARRAY_TYPE	src/windows/include/GL/glext.h	362;"	d
GL_FOG_COORD_SRC	src/windows/include/GL/glext.h	359;"	d
GL_FOG_DISTANCE_MODE_NV	src/windows/include/GL/glext.h	2014;"	d
GL_FOG_FUNC_POINTS_SGIS	src/windows/include/GL/glext.h	1423;"	d
GL_FOG_FUNC_SGIS	src/windows/include/GL/glext.h	1422;"	d
GL_FOG_OFFSET_SGIX	src/windows/include/GL/glext.h	1428;"	d
GL_FOG_OFFSET_VALUE_SGIX	src/windows/include/GL/glext.h	1429;"	d
GL_FOG_SCALE_SGIX	src/windows/include/GL/glext.h	1816;"	d
GL_FOG_SCALE_VALUE_SGIX	src/windows/include/GL/glext.h	1817;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	src/windows/include/GL/glext.h	1637;"	d
GL_FORCE_BLUE_TO_ONE_NV	src/windows/include/GL/glext.h	2755;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	src/windows/include/GL/glext.h	2418;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	src/windows/include/GL/glext.h	2417;"	d
GL_FRAGMENT_COLOR_EXT	src/windows/include/GL/glext.h	1643;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	src/windows/include/GL/glext.h	1596;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	src/windows/include/GL/glext.h	1597;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	src/windows/include/GL/glext.h	1595;"	d
GL_FRAGMENT_DEPTH	src/windows/include/GL/glext.h	297;"	d
GL_FRAGMENT_DEPTH_EXT	src/windows/include/GL/glext.h	1753;"	d
GL_FRAGMENT_LIGHT0_SGIX	src/windows/include/GL/glext.h	1606;"	d
GL_FRAGMENT_LIGHT1_SGIX	src/windows/include/GL/glext.h	1607;"	d
GL_FRAGMENT_LIGHT2_SGIX	src/windows/include/GL/glext.h	1608;"	d
GL_FRAGMENT_LIGHT3_SGIX	src/windows/include/GL/glext.h	1609;"	d
GL_FRAGMENT_LIGHT4_SGIX	src/windows/include/GL/glext.h	1610;"	d
GL_FRAGMENT_LIGHT5_SGIX	src/windows/include/GL/glext.h	1611;"	d
GL_FRAGMENT_LIGHT6_SGIX	src/windows/include/GL/glext.h	1612;"	d
GL_FRAGMENT_LIGHT7_SGIX	src/windows/include/GL/glext.h	1613;"	d
GL_FRAGMENT_LIGHTING_SGIX	src/windows/include/GL/glext.h	1594;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	src/windows/include/GL/glext.h	1604;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	src/windows/include/GL/glext.h	1602;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	src/windows/include/GL/glext.h	1605;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	src/windows/include/GL/glext.h	1603;"	d
GL_FRAGMENT_MATERIAL_EXT	src/windows/include/GL/glext.h	1641;"	d
GL_FRAGMENT_NORMAL_EXT	src/windows/include/GL/glext.h	1642;"	d
GL_FRAGMENT_PROGRAM_ARB	src/windows/include/GL/glext.h	761;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	src/windows/include/GL/glext.h	2883;"	d
GL_FRAGMENT_PROGRAM_NV	src/windows/include/GL/glext.h	2880;"	d
GL_FRAGMENT_SHADER	src/windows/include/GL/glext.h	413;"	d
GL_FRAGMENT_SHADER_ARB	src/windows/include/GL/glext.h	868;"	d
GL_FRAGMENT_SHADER_ATI	src/windows/include/GL/glext.h	2447;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	src/windows/include/GL/glext.h	451;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	src/windows/include/GL/glext.h	870;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	src/windows/include/GL/glext.h	2989;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	src/windows/include/GL/glext.h	2988;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	src/windows/include/GL/glext.h	2992;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	src/windows/include/GL/glext.h	2991;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	src/windows/include/GL/glext.h	2990;"	d
GL_FRAMEBUFFER_BINDING_EXT	src/windows/include/GL/glext.h	2986;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	src/windows/include/GL/glext.h	2993;"	d
GL_FRAMEBUFFER_EXT	src/windows/include/GL/glext.h	3021;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	src/windows/include/GL/glext.h	2994;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	src/windows/include/GL/glext.h	2997;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	src/windows/include/GL/glext.h	2999;"	d
GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT	src/windows/include/GL/glext.h	2996;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	src/windows/include/GL/glext.h	2998;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	src/windows/include/GL/glext.h	2995;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	src/windows/include/GL/glext.h	3000;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	src/windows/include/GL/glext.h	3001;"	d
GL_FRAMEZOOM_FACTOR_SGIX	src/windows/include/GL/glext.h	1388;"	d
GL_FRAMEZOOM_SGIX	src/windows/include/GL/glext.h	1387;"	d
GL_FULL_RANGE_EXT	src/windows/include/GL/glext.h	2674;"	d
GL_FULL_STIPPLE_HINT_PGI	src/windows/include/GL/glext.h	1508;"	d
GL_FUNC_ADD	src/windows/include/GL/glext.h	109;"	d
GL_FUNC_ADD_EXT	src/windows/include/GL/glext.h	1292;"	d
GL_FUNC_REVERSE_SUBTRACT	src/windows/include/GL/glext.h	114;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	src/windows/include/GL/glext.h	1300;"	d
GL_FUNC_SUBTRACT	src/windows/include/GL/glext.h	113;"	d
GL_FUNC_SUBTRACT_EXT	src/windows/include/GL/glext.h	1299;"	d
GL_GENERATE_MIPMAP	src/windows/include/GL/glext.h	289;"	d
GL_GENERATE_MIPMAP_HINT	src/windows/include/GL/glext.h	290;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	src/windows/include/GL/glext.h	1258;"	d
GL_GENERATE_MIPMAP_SGIS	src/windows/include/GL/glext.h	1257;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	src/windows/include/GL/glext.h	1397;"	d
GL_GEOMETRY_DEFORMATION_SGIX	src/windows/include/GL/glext.h	1401;"	d
GL_GLEXT_VERSION	src/windows/include/GL/glext.h	57;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	src/windows/include/GL/glext.h	1827;"	d
GL_GLOBAL_ALPHA_SUN	src/windows/include/GL/glext.h	1826;"	d
GL_GREEN_BIT_ATI	src/windows/include/GL/glext.h	2539;"	d
GL_GREEN_MAX_CLAMP_INGR	src/windows/include/GL/glext.h	1866;"	d
GL_GREEN_MIN_CLAMP_INGR	src/windows/include/GL/glext.h	1862;"	d
GL_GREMEDY_string_marker	src/windows/include/GL/glext.h	6483;"	d
GL_HALF_BIAS_NEGATE_NV	src/windows/include/GL/glext.h	1977;"	d
GL_HALF_BIAS_NORMAL_NV	src/windows/include/GL/glext.h	1976;"	d
GL_HALF_BIT_ATI	src/windows/include/GL/glext.h	2544;"	d
GL_HALF_FLOAT_ARB	src/windows/include/GL/glext.h	924;"	d
GL_HALF_FLOAT_NV	src/windows/include/GL/glext.h	2888;"	d
GL_HILO16_NV	src/windows/include/GL/glext.h	2267;"	d
GL_HILO8_NV	src/windows/include/GL/glext.h	2753;"	d
GL_HILO_NV	src/windows/include/GL/glext.h	2263;"	d
GL_HISTOGRAM	src/windows/include/GL/glext.h	135;"	d
GL_HISTOGRAM_ALPHA_SIZE	src/windows/include/GL/glext.h	142;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	src/windows/include/GL/glext.h	1052;"	d
GL_HISTOGRAM_BLUE_SIZE	src/windows/include/GL/glext.h	141;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	src/windows/include/GL/glext.h	1051;"	d
GL_HISTOGRAM_EXT	src/windows/include/GL/glext.h	1045;"	d
GL_HISTOGRAM_FORMAT	src/windows/include/GL/glext.h	138;"	d
GL_HISTOGRAM_FORMAT_EXT	src/windows/include/GL/glext.h	1048;"	d
GL_HISTOGRAM_GREEN_SIZE	src/windows/include/GL/glext.h	140;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	src/windows/include/GL/glext.h	1050;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	src/windows/include/GL/glext.h	143;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	src/windows/include/GL/glext.h	1053;"	d
GL_HISTOGRAM_RED_SIZE	src/windows/include/GL/glext.h	139;"	d
GL_HISTOGRAM_RED_SIZE_EXT	src/windows/include/GL/glext.h	1049;"	d
GL_HISTOGRAM_SINK	src/windows/include/GL/glext.h	144;"	d
GL_HISTOGRAM_SINK_EXT	src/windows/include/GL/glext.h	1054;"	d
GL_HISTOGRAM_WIDTH	src/windows/include/GL/glext.h	137;"	d
GL_HISTOGRAM_WIDTH_EXT	src/windows/include/GL/glext.h	1047;"	d
GL_HI_BIAS_NV	src/windows/include/GL/glext.h	2293;"	d
GL_HI_SCALE_NV	src/windows/include/GL/glext.h	2287;"	d
GL_HP_convolution_border_modes	src/windows/include/GL/glext.h	4643;"	d
GL_HP_image_transform	src/windows/include/GL/glext.h	4625;"	d
GL_HP_occlusion_test	src/windows/include/GL/glext.h	4899;"	d
GL_HP_texture_lighting	src/windows/include/GL/glext.h	4819;"	d
GL_IBM_cull_vertex	src/windows/include/GL/glext.h	5397;"	d
GL_IBM_multimode_draw_arrays	src/windows/include/GL/glext.h	5401;"	d
GL_IBM_rasterpos_clip	src/windows/include/GL/glext.h	4815;"	d
GL_IBM_vertex_array_lists	src/windows/include/GL/glext.h	5411;"	d
GL_IDENTITY_NV	src/windows/include/GL/glext.h	2325;"	d
GL_IGNORE_BORDER_HP	src/windows/include/GL/glext.h	1451;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	src/windows/include/GL/glext.h	1442;"	d
GL_IMAGE_MAG_FILTER_HP	src/windows/include/GL/glext.h	1440;"	d
GL_IMAGE_MIN_FILTER_HP	src/windows/include/GL/glext.h	1441;"	d
GL_IMAGE_ROTATE_ANGLE_HP	src/windows/include/GL/glext.h	1437;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	src/windows/include/GL/glext.h	1438;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	src/windows/include/GL/glext.h	1439;"	d
GL_IMAGE_SCALE_X_HP	src/windows/include/GL/glext.h	1433;"	d
GL_IMAGE_SCALE_Y_HP	src/windows/include/GL/glext.h	1434;"	d
GL_IMAGE_TRANSFORM_2D_HP	src/windows/include/GL/glext.h	1445;"	d
GL_IMAGE_TRANSLATE_X_HP	src/windows/include/GL/glext.h	1435;"	d
GL_IMAGE_TRANSLATE_Y_HP	src/windows/include/GL/glext.h	1436;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	src/windows/include/GL/glext.h	2927;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	src/windows/include/GL/glext.h	2926;"	d
GL_INCR_WRAP	src/windows/include/GL/glext.h	313;"	d
GL_INCR_WRAP_EXT	src/windows/include/GL/glext.h	1876;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	336;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	788;"	d
GL_INDEX_ARRAY_COUNT_EXT	src/windows/include/GL/glext.h	1238;"	d
GL_INDEX_ARRAY_EXT	src/windows/include/GL/glext.h	1222;"	d
GL_INDEX_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2061;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2069;"	d
GL_INDEX_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1248;"	d
GL_INDEX_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1237;"	d
GL_INDEX_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1236;"	d
GL_INDEX_BIT_PGI	src/windows/include/GL/glext.h	1475;"	d
GL_INDEX_MATERIAL_EXT	src/windows/include/GL/glext.h	1555;"	d
GL_INDEX_MATERIAL_FACE_EXT	src/windows/include/GL/glext.h	1557;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	src/windows/include/GL/glext.h	1556;"	d
GL_INDEX_TEST_EXT	src/windows/include/GL/glext.h	1561;"	d
GL_INDEX_TEST_FUNC_EXT	src/windows/include/GL/glext.h	1562;"	d
GL_INDEX_TEST_REF_EXT	src/windows/include/GL/glext.h	1563;"	d
GL_INFO_LOG_LENGTH	src/windows/include/GL/glext.h	444;"	d
GL_INGR_blend_func_separate	src/windows/include/GL/glext.h	5217;"	d
GL_INGR_color_clamp	src/windows/include/GL/glext.h	5225;"	d
GL_INGR_interlace_read	src/windows/include/GL/glext.h	5229;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	src/windows/include/GL/glext.h	1375;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	src/windows/include/GL/glext.h	1376;"	d
GL_INTEL_parallel_arrays	src/windows/include/GL/glext.h	4885;"	d
GL_INTENSITY12_EXT	src/windows/include/GL/glext.h	993;"	d
GL_INTENSITY16F_ARB	src/windows/include/GL/glext.h	945;"	d
GL_INTENSITY16_EXT	src/windows/include/GL/glext.h	994;"	d
GL_INTENSITY32F_ARB	src/windows/include/GL/glext.h	939;"	d
GL_INTENSITY4_EXT	src/windows/include/GL/glext.h	991;"	d
GL_INTENSITY8_EXT	src/windows/include/GL/glext.h	992;"	d
GL_INTENSITY_EXT	src/windows/include/GL/glext.h	990;"	d
GL_INTENSITY_FLOAT16_ATI	src/windows/include/GL/glext.h	2855;"	d
GL_INTENSITY_FLOAT32_ATI	src/windows/include/GL/glext.h	2849;"	d
GL_INTERLACE_OML	src/windows/include/GL/glext.h	2412;"	d
GL_INTERLACE_READ_INGR	src/windows/include/GL/glext.h	1872;"	d
GL_INTERLACE_READ_OML	src/windows/include/GL/glext.h	2413;"	d
GL_INTERLACE_SGIX	src/windows/include/GL/glext.h	1307;"	d
GL_INTERPOLATE	src/windows/include/GL/glext.h	271;"	d
GL_INTERPOLATE_ARB	src/windows/include/GL/glext.h	638;"	d
GL_INTERPOLATE_EXT	src/windows/include/GL/glext.h	1789;"	d
GL_INT_VEC2	src/windows/include/GL/glext.h	424;"	d
GL_INT_VEC2_ARB	src/windows/include/GL/glext.h	828;"	d
GL_INT_VEC3	src/windows/include/GL/glext.h	425;"	d
GL_INT_VEC3_ARB	src/windows/include/GL/glext.h	829;"	d
GL_INT_VEC4	src/windows/include/GL/glext.h	426;"	d
GL_INT_VEC4_ARB	src/windows/include/GL/glext.h	830;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	src/windows/include/GL/glext.h	2984;"	d
GL_INVARIANT_DATATYPE_EXT	src/windows/include/GL/glext.h	2684;"	d
GL_INVARIANT_EXT	src/windows/include/GL/glext.h	2643;"	d
GL_INVARIANT_VALUE_EXT	src/windows/include/GL/glext.h	2683;"	d
GL_INVERSE_NV	src/windows/include/GL/glext.h	2326;"	d
GL_INVERSE_TRANSPOSE_NV	src/windows/include/GL/glext.h	2328;"	d
GL_INVERTED_SCREEN_W_REND	src/windows/include/GL/glext.h	1763;"	d
GL_IR_INSTRUMENT1_SGIX	src/windows/include/GL/glext.h	1534;"	d
GL_IUI_N3F_V2F_EXT	src/windows/include/GL/glext.h	1569;"	d
GL_IUI_N3F_V3F_EXT	src/windows/include/GL/glext.h	1570;"	d
GL_IUI_V2F_EXT	src/windows/include/GL/glext.h	1567;"	d
GL_IUI_V3F_EXT	src/windows/include/GL/glext.h	1568;"	d
GL_LERP_ATI	src/windows/include/GL/glext.h	2519;"	d
GL_LIGHT_ENV_MODE_SGIX	src/windows/include/GL/glext.h	1601;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	src/windows/include/GL/glext.h	92;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	src/windows/include/GL/glext.h	1727;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	src/windows/include/GL/glext.h	1808;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	src/windows/include/GL/glext.h	1262;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	src/windows/include/GL/glext.h	1273;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	src/windows/include/GL/glext.h	1166;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	src/windows/include/GL/glext.h	1167;"	d
GL_LINEAR_DETAIL_SGIS	src/windows/include/GL/glext.h	1165;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	src/windows/include/GL/glext.h	1175;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	src/windows/include/GL/glext.h	1176;"	d
GL_LINEAR_SHARPEN_SGIS	src/windows/include/GL/glext.h	1174;"	d
GL_LINK_STATUS	src/windows/include/GL/glext.h	442;"	d
GL_LIST_PRIORITY_SGIX	src/windows/include/GL/glext.h	1530;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	src/windows/include/GL/glext.h	2686;"	d
GL_LOCAL_CONSTANT_EXT	src/windows/include/GL/glext.h	2644;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	src/windows/include/GL/glext.h	2685;"	d
GL_LOCAL_EXT	src/windows/include/GL/glext.h	2645;"	d
GL_LOWER_LEFT	src/windows/include/GL/glext.h	455;"	d
GL_LO_BIAS_NV	src/windows/include/GL/glext.h	2294;"	d
GL_LO_SCALE_NV	src/windows/include/GL/glext.h	2288;"	d
GL_LUMINANCE12_ALPHA12_EXT	src/windows/include/GL/glext.h	988;"	d
GL_LUMINANCE12_ALPHA4_EXT	src/windows/include/GL/glext.h	987;"	d
GL_LUMINANCE12_EXT	src/windows/include/GL/glext.h	982;"	d
GL_LUMINANCE16F_ARB	src/windows/include/GL/glext.h	946;"	d
GL_LUMINANCE16_ALPHA16_EXT	src/windows/include/GL/glext.h	989;"	d
GL_LUMINANCE16_EXT	src/windows/include/GL/glext.h	983;"	d
GL_LUMINANCE32F_ARB	src/windows/include/GL/glext.h	940;"	d
GL_LUMINANCE4_ALPHA4_EXT	src/windows/include/GL/glext.h	984;"	d
GL_LUMINANCE4_EXT	src/windows/include/GL/glext.h	980;"	d
GL_LUMINANCE6_ALPHA2_EXT	src/windows/include/GL/glext.h	985;"	d
GL_LUMINANCE8_ALPHA8_EXT	src/windows/include/GL/glext.h	986;"	d
GL_LUMINANCE8_EXT	src/windows/include/GL/glext.h	981;"	d
GL_LUMINANCE_ALPHA16F_ARB	src/windows/include/GL/glext.h	947;"	d
GL_LUMINANCE_ALPHA32F_ARB	src/windows/include/GL/glext.h	941;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	src/windows/include/GL/glext.h	2857;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	src/windows/include/GL/glext.h	2851;"	d
GL_LUMINANCE_FLOAT16_ATI	src/windows/include/GL/glext.h	2856;"	d
GL_LUMINANCE_FLOAT32_ATI	src/windows/include/GL/glext.h	2850;"	d
GL_MAD_ATI	src/windows/include/GL/glext.h	2518;"	d
GL_MAGNITUDE_BIAS_NV	src/windows/include/GL/glext.h	2297;"	d
GL_MAGNITUDE_SCALE_NV	src/windows/include/GL/glext.h	2291;"	d
GL_MAP1_BINORMAL_EXT	src/windows/include/GL/glext.h	1779;"	d
GL_MAP1_TANGENT_EXT	src/windows/include/GL/glext.h	1777;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	src/windows/include/GL/glext.h	2367;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	src/windows/include/GL/glext.h	2377;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	src/windows/include/GL/glext.h	2378;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	src/windows/include/GL/glext.h	2379;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	src/windows/include/GL/glext.h	2380;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	src/windows/include/GL/glext.h	2381;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	src/windows/include/GL/glext.h	2382;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	src/windows/include/GL/glext.h	2368;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	src/windows/include/GL/glext.h	2369;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	src/windows/include/GL/glext.h	2370;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	src/windows/include/GL/glext.h	2371;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	src/windows/include/GL/glext.h	2372;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	src/windows/include/GL/glext.h	2373;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	src/windows/include/GL/glext.h	2374;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	src/windows/include/GL/glext.h	2375;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	src/windows/include/GL/glext.h	2376;"	d
GL_MAP2_BINORMAL_EXT	src/windows/include/GL/glext.h	1780;"	d
GL_MAP2_TANGENT_EXT	src/windows/include/GL/glext.h	1778;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	src/windows/include/GL/glext.h	2383;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	src/windows/include/GL/glext.h	2393;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	src/windows/include/GL/glext.h	2394;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	src/windows/include/GL/glext.h	2395;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	src/windows/include/GL/glext.h	2396;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	src/windows/include/GL/glext.h	2397;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	src/windows/include/GL/glext.h	2398;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	src/windows/include/GL/glext.h	2384;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	src/windows/include/GL/glext.h	2385;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	src/windows/include/GL/glext.h	2386;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	src/windows/include/GL/glext.h	2387;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	src/windows/include/GL/glext.h	2388;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	src/windows/include/GL/glext.h	2389;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	src/windows/include/GL/glext.h	2390;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	src/windows/include/GL/glext.h	2391;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	src/windows/include/GL/glext.h	2392;"	d
GL_MAP_ATTRIB_U_ORDER_NV	src/windows/include/GL/glext.h	2189;"	d
GL_MAP_ATTRIB_V_ORDER_NV	src/windows/include/GL/glext.h	2190;"	d
GL_MAP_TESSELLATION_NV	src/windows/include/GL/glext.h	2188;"	d
GL_MATERIAL_SIDE_HINT_PGI	src/windows/include/GL/glext.h	1470;"	d
GL_MATRIX0_ARB	src/windows/include/GL/glext.h	726;"	d
GL_MATRIX0_NV	src/windows/include/GL/glext.h	2331;"	d
GL_MATRIX10_ARB	src/windows/include/GL/glext.h	736;"	d
GL_MATRIX11_ARB	src/windows/include/GL/glext.h	737;"	d
GL_MATRIX12_ARB	src/windows/include/GL/glext.h	738;"	d
GL_MATRIX13_ARB	src/windows/include/GL/glext.h	739;"	d
GL_MATRIX14_ARB	src/windows/include/GL/glext.h	740;"	d
GL_MATRIX15_ARB	src/windows/include/GL/glext.h	741;"	d
GL_MATRIX16_ARB	src/windows/include/GL/glext.h	742;"	d
GL_MATRIX17_ARB	src/windows/include/GL/glext.h	743;"	d
GL_MATRIX18_ARB	src/windows/include/GL/glext.h	744;"	d
GL_MATRIX19_ARB	src/windows/include/GL/glext.h	745;"	d
GL_MATRIX1_ARB	src/windows/include/GL/glext.h	727;"	d
GL_MATRIX1_NV	src/windows/include/GL/glext.h	2332;"	d
GL_MATRIX20_ARB	src/windows/include/GL/glext.h	746;"	d
GL_MATRIX21_ARB	src/windows/include/GL/glext.h	747;"	d
GL_MATRIX22_ARB	src/windows/include/GL/glext.h	748;"	d
GL_MATRIX23_ARB	src/windows/include/GL/glext.h	749;"	d
GL_MATRIX24_ARB	src/windows/include/GL/glext.h	750;"	d
GL_MATRIX25_ARB	src/windows/include/GL/glext.h	751;"	d
GL_MATRIX26_ARB	src/windows/include/GL/glext.h	752;"	d
GL_MATRIX27_ARB	src/windows/include/GL/glext.h	753;"	d
GL_MATRIX28_ARB	src/windows/include/GL/glext.h	754;"	d
GL_MATRIX29_ARB	src/windows/include/GL/glext.h	755;"	d
GL_MATRIX2_ARB	src/windows/include/GL/glext.h	728;"	d
GL_MATRIX2_NV	src/windows/include/GL/glext.h	2333;"	d
GL_MATRIX30_ARB	src/windows/include/GL/glext.h	756;"	d
GL_MATRIX31_ARB	src/windows/include/GL/glext.h	757;"	d
GL_MATRIX3_ARB	src/windows/include/GL/glext.h	729;"	d
GL_MATRIX3_NV	src/windows/include/GL/glext.h	2334;"	d
GL_MATRIX4_ARB	src/windows/include/GL/glext.h	730;"	d
GL_MATRIX4_NV	src/windows/include/GL/glext.h	2335;"	d
GL_MATRIX5_ARB	src/windows/include/GL/glext.h	731;"	d
GL_MATRIX5_NV	src/windows/include/GL/glext.h	2336;"	d
GL_MATRIX6_ARB	src/windows/include/GL/glext.h	732;"	d
GL_MATRIX6_NV	src/windows/include/GL/glext.h	2337;"	d
GL_MATRIX7_ARB	src/windows/include/GL/glext.h	733;"	d
GL_MATRIX7_NV	src/windows/include/GL/glext.h	2338;"	d
GL_MATRIX8_ARB	src/windows/include/GL/glext.h	734;"	d
GL_MATRIX9_ARB	src/windows/include/GL/glext.h	735;"	d
GL_MATRIX_EXT	src/windows/include/GL/glext.h	2641;"	d
GL_MATRIX_INDEX_ARRAY_ARB	src/windows/include/GL/glext.h	612;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	src/windows/include/GL/glext.h	617;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	src/windows/include/GL/glext.h	614;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	src/windows/include/GL/glext.h	616;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	src/windows/include/GL/glext.h	615;"	d
GL_MATRIX_PALETTE_ARB	src/windows/include/GL/glext.h	608;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	src/windows/include/GL/glext.h	1477;"	d
GL_MAT_AMBIENT_BIT_PGI	src/windows/include/GL/glext.h	1476;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	src/windows/include/GL/glext.h	1480;"	d
GL_MAT_DIFFUSE_BIT_PGI	src/windows/include/GL/glext.h	1478;"	d
GL_MAT_EMISSION_BIT_PGI	src/windows/include/GL/glext.h	1479;"	d
GL_MAT_SHININESS_BIT_PGI	src/windows/include/GL/glext.h	1481;"	d
GL_MAT_SPECULAR_BIT_PGI	src/windows/include/GL/glext.h	1482;"	d
GL_MAX	src/windows/include/GL/glext.h	111;"	d
GL_MAX_3D_TEXTURE_SIZE	src/windows/include/GL/glext.h	75;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	src/windows/include/GL/glext.h	1030;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	src/windows/include/GL/glext.h	1138;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	src/windows/include/GL/glext.h	1599;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	src/windows/include/GL/glext.h	1682;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	src/windows/include/GL/glext.h	1688;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	src/windows/include/GL/glext.h	1683;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	src/windows/include/GL/glext.h	1681;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	src/windows/include/GL/glext.h	1269;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	src/windows/include/GL/glext.h	1270;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	src/windows/include/GL/glext.h	3002;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	src/windows/include/GL/glext.h	151;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	src/windows/include/GL/glext.h	1087;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	src/windows/include/GL/glext.h	419;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	src/windows/include/GL/glext.h	862;"	d
GL_MAX_CONVOLUTION_HEIGHT	src/windows/include/GL/glext.h	126;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	src/windows/include/GL/glext.h	1073;"	d
GL_MAX_CONVOLUTION_WIDTH	src/windows/include/GL/glext.h	125;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	src/windows/include/GL/glext.h	1072;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	src/windows/include/GL/glext.h	241;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	src/windows/include/GL/glext.h	534;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	src/windows/include/GL/glext.h	1904;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	src/windows/include/GL/glext.h	1404;"	d
GL_MAX_DRAW_BUFFERS	src/windows/include/GL/glext.h	389;"	d
GL_MAX_DRAW_BUFFERS_ARB	src/windows/include/GL/glext.h	889;"	d
GL_MAX_DRAW_BUFFERS_ATI	src/windows/include/GL/glext.h	2815;"	d
GL_MAX_ELEMENTS_INDICES	src/windows/include/GL/glext.h	86;"	d
GL_MAX_ELEMENTS_INDICES_EXT	src/windows/include/GL/glext.h	1628;"	d
GL_MAX_ELEMENTS_VERTICES	src/windows/include/GL/glext.h	85;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	src/windows/include/GL/glext.h	1627;"	d
GL_MAX_EXT	src/windows/include/GL/glext.h	1294;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	src/windows/include/GL/glext.h	1424;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	src/windows/include/GL/glext.h	1598;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	src/windows/include/GL/glext.h	2879;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	src/windows/include/GL/glext.h	415;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	src/windows/include/GL/glext.h	869;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	src/windows/include/GL/glext.h	1389;"	d
GL_MAX_GENERAL_COMBINERS_NV	src/windows/include/GL/glext.h	1995;"	d
GL_MAX_MAP_TESSELLATION_NV	src/windows/include/GL/glext.h	2208;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	src/windows/include/GL/glext.h	609;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	src/windows/include/GL/glext.h	2651;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	src/windows/include/GL/glext.h	2654;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	src/windows/include/GL/glext.h	2655;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	src/windows/include/GL/glext.h	2653;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	src/windows/include/GL/glext.h	2652;"	d
GL_MAX_PALETTE_MATRICES_ARB	src/windows/include/GL/glext.h	610;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	src/windows/include/GL/glext.h	1715;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	src/windows/include/GL/glext.h	2555;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	src/windows/include/GL/glext.h	719;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	768;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	src/windows/include/GL/glext.h	715;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	src/windows/include/GL/glext.h	2968;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	src/windows/include/GL/glext.h	723;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	src/windows/include/GL/glext.h	2967;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	src/windows/include/GL/glext.h	2969;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	703;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	src/windows/include/GL/glext.h	722;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	src/windows/include/GL/glext.h	2971;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	src/windows/include/GL/glext.h	2970;"	d
GL_MAX_PROGRAM_MATRICES_ARB	src/windows/include/GL/glext.h	689;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	src/windows/include/GL/glext.h	688;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	src/windows/include/GL/glext.h	721;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	771;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	src/windows/include/GL/glext.h	717;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	705;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	src/windows/include/GL/glext.h	713;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	src/windows/include/GL/glext.h	709;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	src/windows/include/GL/glext.h	773;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	772;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	src/windows/include/GL/glext.h	711;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	src/windows/include/GL/glext.h	707;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	src/windows/include/GL/glext.h	770;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	769;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	src/windows/include/GL/glext.h	2209;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	src/windows/include/GL/glext.h	912;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	src/windows/include/GL/glext.h	2228;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	src/windows/include/GL/glext.h	2985;"	d
GL_MAX_SHININESS_NV	src/windows/include/GL/glext.h	1942;"	d
GL_MAX_SPOT_EXPONENT_NV	src/windows/include/GL/glext.h	1943;"	d
GL_MAX_TEXTURE_COORDS	src/windows/include/GL/glext.h	411;"	d
GL_MAX_TEXTURE_COORDS_ARB	src/windows/include/GL/glext.h	774;"	d
GL_MAX_TEXTURE_COORDS_NV	src/windows/include/GL/glext.h	2881;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	src/windows/include/GL/glext.h	412;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	src/windows/include/GL/glext.h	775;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	src/windows/include/GL/glext.h	2882;"	d
GL_MAX_TEXTURE_LOD_BIAS	src/windows/include/GL/glext.h	310;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	src/windows/include/GL/glext.h	1915;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	src/windows/include/GL/glext.h	1922;"	d
GL_MAX_TEXTURE_UNITS	src/windows/include/GL/glext.h	216;"	d
GL_MAX_TEXTURE_UNITS_ARB	src/windows/include/GL/glext.h	497;"	d
GL_MAX_TRACK_MATRICES_NV	src/windows/include/GL/glext.h	2330;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	src/windows/include/GL/glext.h	2329;"	d
GL_MAX_VARYING_FLOATS	src/windows/include/GL/glext.h	417;"	d
GL_MAX_VARYING_FLOATS_ARB	src/windows/include/GL/glext.h	860;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	src/windows/include/GL/glext.h	1950;"	d
GL_MAX_VERTEX_ATTRIBS	src/windows/include/GL/glext.h	409;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	src/windows/include/GL/glext.h	697;"	d
GL_MAX_VERTEX_HINT_PGI	src/windows/include/GL/glext.h	1471;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	src/windows/include/GL/glext.h	2646;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	src/windows/include/GL/glext.h	2648;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	src/windows/include/GL/glext.h	2650;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	src/windows/include/GL/glext.h	2649;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	src/windows/include/GL/glext.h	2647;"	d
GL_MAX_VERTEX_STREAMS_ATI	src/windows/include/GL/glext.h	2690;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	src/windows/include/GL/glext.h	418;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	src/windows/include/GL/glext.h	861;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	src/windows/include/GL/glext.h	416;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	src/windows/include/GL/glext.h	859;"	d
GL_MAX_VERTEX_UNITS_ARB	src/windows/include/GL/glext.h	563;"	d
GL_MESA_pack_invert	src/windows/include/GL/glext.h	6415;"	d
GL_MESA_resize_buffers	src/windows/include/GL/glext.h	5335;"	d
GL_MESA_window_pos	src/windows/include/GL/glext.h	5343;"	d
GL_MESA_ycbcr_texture	src/windows/include/GL/glext.h	6419;"	d
GL_MIN	src/windows/include/GL/glext.h	110;"	d
GL_MINMAX	src/windows/include/GL/glext.h	145;"	d
GL_MINMAX_EXT	src/windows/include/GL/glext.h	1055;"	d
GL_MINMAX_FORMAT	src/windows/include/GL/glext.h	146;"	d
GL_MINMAX_FORMAT_EXT	src/windows/include/GL/glext.h	1056;"	d
GL_MINMAX_SINK	src/windows/include/GL/glext.h	147;"	d
GL_MINMAX_SINK_EXT	src/windows/include/GL/glext.h	1057;"	d
GL_MIN_EXT	src/windows/include/GL/glext.h	1293;"	d
GL_MIRRORED_REPEAT	src/windows/include/GL/glext.h	294;"	d
GL_MIRRORED_REPEAT_ARB	src/windows/include/GL/glext.h	654;"	d
GL_MIRRORED_REPEAT_IBM	src/windows/include/GL/glext.h	2182;"	d
GL_MIRROR_CLAMP_ATI	src/windows/include/GL/glext.h	2171;"	d
GL_MIRROR_CLAMP_EXT	src/windows/include/GL/glext.h	2936;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	src/windows/include/GL/glext.h	2938;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	src/windows/include/GL/glext.h	2172;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	src/windows/include/GL/glext.h	2937;"	d
GL_MODELVIEW0_ARB	src/windows/include/GL/glext.h	573;"	d
GL_MODELVIEW0_EXT	src/windows/include/GL/glext.h	1931;"	d
GL_MODELVIEW0_MATRIX_EXT	src/windows/include/GL/glext.h	1928;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	src/windows/include/GL/glext.h	1926;"	d
GL_MODELVIEW10_ARB	src/windows/include/GL/glext.h	583;"	d
GL_MODELVIEW11_ARB	src/windows/include/GL/glext.h	584;"	d
GL_MODELVIEW12_ARB	src/windows/include/GL/glext.h	585;"	d
GL_MODELVIEW13_ARB	src/windows/include/GL/glext.h	586;"	d
GL_MODELVIEW14_ARB	src/windows/include/GL/glext.h	587;"	d
GL_MODELVIEW15_ARB	src/windows/include/GL/glext.h	588;"	d
GL_MODELVIEW16_ARB	src/windows/include/GL/glext.h	589;"	d
GL_MODELVIEW17_ARB	src/windows/include/GL/glext.h	590;"	d
GL_MODELVIEW18_ARB	src/windows/include/GL/glext.h	591;"	d
GL_MODELVIEW19_ARB	src/windows/include/GL/glext.h	592;"	d
GL_MODELVIEW1_ARB	src/windows/include/GL/glext.h	574;"	d
GL_MODELVIEW1_EXT	src/windows/include/GL/glext.h	1932;"	d
GL_MODELVIEW1_MATRIX_EXT	src/windows/include/GL/glext.h	1929;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	src/windows/include/GL/glext.h	1927;"	d
GL_MODELVIEW20_ARB	src/windows/include/GL/glext.h	593;"	d
GL_MODELVIEW21_ARB	src/windows/include/GL/glext.h	594;"	d
GL_MODELVIEW22_ARB	src/windows/include/GL/glext.h	595;"	d
GL_MODELVIEW23_ARB	src/windows/include/GL/glext.h	596;"	d
GL_MODELVIEW24_ARB	src/windows/include/GL/glext.h	597;"	d
GL_MODELVIEW25_ARB	src/windows/include/GL/glext.h	598;"	d
GL_MODELVIEW26_ARB	src/windows/include/GL/glext.h	599;"	d
GL_MODELVIEW27_ARB	src/windows/include/GL/glext.h	600;"	d
GL_MODELVIEW28_ARB	src/windows/include/GL/glext.h	601;"	d
GL_MODELVIEW29_ARB	src/windows/include/GL/glext.h	602;"	d
GL_MODELVIEW2_ARB	src/windows/include/GL/glext.h	575;"	d
GL_MODELVIEW30_ARB	src/windows/include/GL/glext.h	603;"	d
GL_MODELVIEW31_ARB	src/windows/include/GL/glext.h	604;"	d
GL_MODELVIEW3_ARB	src/windows/include/GL/glext.h	576;"	d
GL_MODELVIEW4_ARB	src/windows/include/GL/glext.h	577;"	d
GL_MODELVIEW5_ARB	src/windows/include/GL/glext.h	578;"	d
GL_MODELVIEW6_ARB	src/windows/include/GL/glext.h	579;"	d
GL_MODELVIEW7_ARB	src/windows/include/GL/glext.h	580;"	d
GL_MODELVIEW8_ARB	src/windows/include/GL/glext.h	581;"	d
GL_MODELVIEW9_ARB	src/windows/include/GL/glext.h	582;"	d
GL_MODELVIEW_PROJECTION_NV	src/windows/include/GL/glext.h	2324;"	d
GL_MODULATE_ADD_ATI	src/windows/include/GL/glext.h	2840;"	d
GL_MODULATE_SIGNED_ADD_ATI	src/windows/include/GL/glext.h	2841;"	d
GL_MODULATE_SUBTRACT_ATI	src/windows/include/GL/glext.h	2842;"	d
GL_MOV_ATI	src/windows/include/GL/glext.h	2512;"	d
GL_MULTISAMPLE	src/windows/include/GL/glext.h	221;"	d
GL_MULTISAMPLE_3DFX	src/windows/include/GL/glext.h	2104;"	d
GL_MULTISAMPLE_ARB	src/windows/include/GL/glext.h	508;"	d
GL_MULTISAMPLE_BIT	src/windows/include/GL/glext.h	229;"	d
GL_MULTISAMPLE_BIT_3DFX	src/windows/include/GL/glext.h	2107;"	d
GL_MULTISAMPLE_BIT_ARB	src/windows/include/GL/glext.h	516;"	d
GL_MULTISAMPLE_BIT_EXT	src/windows/include/GL/glext.h	2130;"	d
GL_MULTISAMPLE_EXT	src/windows/include/GL/glext.h	2114;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	src/windows/include/GL/glext.h	2718;"	d
GL_MULTISAMPLE_SGIS	src/windows/include/GL/glext.h	1196;"	d
GL_MUL_ATI	src/windows/include/GL/glext.h	2514;"	d
GL_MVP_MATRIX_EXT	src/windows/include/GL/glext.h	2676;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	src/windows/include/GL/glext.h	1497;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	src/windows/include/GL/glext.h	1498;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	src/windows/include/GL/glext.h	1496;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	src/windows/include/GL/glext.h	1272;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	src/windows/include/GL/glext.h	1271;"	d
GL_NEGATE_BIT_ATI	src/windows/include/GL/glext.h	2549;"	d
GL_NEGATIVE_ONE_EXT	src/windows/include/GL/glext.h	2672;"	d
GL_NEGATIVE_W_EXT	src/windows/include/GL/glext.h	2669;"	d
GL_NEGATIVE_X_EXT	src/windows/include/GL/glext.h	2666;"	d
GL_NEGATIVE_Y_EXT	src/windows/include/GL/glext.h	2667;"	d
GL_NEGATIVE_Z_EXT	src/windows/include/GL/glext.h	2668;"	d
GL_NORMALIZED_RANGE_EXT	src/windows/include/GL/glext.h	2673;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	334;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	786;"	d
GL_NORMAL_ARRAY_COUNT_EXT	src/windows/include/GL/glext.h	1231;"	d
GL_NORMAL_ARRAY_EXT	src/windows/include/GL/glext.h	1220;"	d
GL_NORMAL_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2059;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2067;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	src/windows/include/GL/glext.h	1697;"	d
GL_NORMAL_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1246;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1230;"	d
GL_NORMAL_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1229;"	d
GL_NORMAL_BIT_PGI	src/windows/include/GL/glext.h	1483;"	d
GL_NORMAL_MAP	src/windows/include/GL/glext.h	230;"	d
GL_NORMAL_MAP_ARB	src/windows/include/GL/glext.h	523;"	d
GL_NORMAL_MAP_EXT	src/windows/include/GL/glext.h	1893;"	d
GL_NORMAL_MAP_NV	src/windows/include/GL/glext.h	1888;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	src/windows/include/GL/glext.h	251;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	src/windows/include/GL/glext.h	547;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	src/windows/include/GL/glext.h	2525;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	src/windows/include/GL/glext.h	2524;"	d
GL_NUM_GENERAL_COMBINERS_NV	src/windows/include/GL/glext.h	1996;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	src/windows/include/GL/glext.h	2529;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	src/windows/include/GL/glext.h	2527;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	src/windows/include/GL/glext.h	2528;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	src/windows/include/GL/glext.h	2530;"	d
GL_NUM_PASSES_ATI	src/windows/include/GL/glext.h	2526;"	d
GL_NV_blend_square	src/windows/include/GL/glext.h	5327;"	d
GL_NV_copy_depth_to_color	src/windows/include/GL/glext.h	5747;"	d
GL_NV_depth_clamp	src/windows/include/GL/glext.h	6053;"	d
GL_NV_evaluators	src/windows/include/GL/glext.h	5535;"	d
GL_NV_fence	src/windows/include/GL/glext.h	5515;"	d
GL_NV_float_buffer	src/windows/include/GL/glext.h	6210;"	d
GL_NV_fog_distance	src/windows/include/GL/glext.h	5319;"	d
GL_NV_fragment_program	src/windows/include/GL/glext.h	6214;"	d
GL_NV_fragment_program2	src/windows/include/GL/glext.h	6431;"	d
GL_NV_fragment_program_option	src/windows/include/GL/glext.h	6427;"	d
GL_NV_half_float	src/windows/include/GL/glext.h	6233;"	d
GL_NV_light_max_exponent	src/windows/include/GL/glext.h	5273;"	d
GL_NV_multisample_filter_hint	src/windows/include/GL/glext.h	6049;"	d
GL_NV_occlusion_query	src/windows/include/GL/glext.h	6057;"	d
GL_NV_packed_depth_stencil	src/windows/include/GL/glext.h	5559;"	d
GL_NV_pixel_data_range	src/windows/include/GL/glext.h	6331;"	d
GL_NV_point_sprite	src/windows/include/GL/glext.h	6077;"	d
GL_NV_primitive_restart	src/windows/include/GL/glext.h	6341;"	d
GL_NV_register_combiners	src/windows/include/GL/glext.h	5287;"	d
GL_NV_register_combiners2	src/windows/include/GL/glext.h	5563;"	d
GL_NV_texgen_emboss	src/windows/include/GL/glext.h	5323;"	d
GL_NV_texgen_reflection	src/windows/include/GL/glext.h	5241;"	d
GL_NV_texture_compression_vtc	src/windows/include/GL/glext.h	5573;"	d
GL_NV_texture_env_combine4	src/windows/include/GL/glext.h	5331;"	d
GL_NV_texture_expand_normal	src/windows/include/GL/glext.h	6351;"	d
GL_NV_texture_rectangle	src/windows/include/GL/glext.h	5577;"	d
GL_NV_texture_shader	src/windows/include/GL/glext.h	5581;"	d
GL_NV_texture_shader2	src/windows/include/GL/glext.h	5585;"	d
GL_NV_texture_shader3	src/windows/include/GL/glext.h	6087;"	d
GL_NV_vertex_array_range	src/windows/include/GL/glext.h	5277;"	d
GL_NV_vertex_array_range2	src/windows/include/GL/glext.h	5589;"	d
GL_NV_vertex_program	src/windows/include/GL/glext.h	5593;"	d
GL_NV_vertex_program1_1	src/windows/include/GL/glext.h	6091;"	d
GL_NV_vertex_program2	src/windows/include/GL/glext.h	6355;"	d
GL_NV_vertex_program2_option	src/windows/include/GL/glext.h	6435;"	d
GL_NV_vertex_program3	src/windows/include/GL/glext.h	6439;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	src/windows/include/GL/glext.h	863;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	src/windows/include/GL/glext.h	864;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	src/windows/include/GL/glext.h	852;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	src/windows/include/GL/glext.h	853;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	src/windows/include/GL/glext.h	851;"	d
GL_OBJECT_BUFFER_SIZE_ATI	src/windows/include/GL/glext.h	2570;"	d
GL_OBJECT_BUFFER_USAGE_ATI	src/windows/include/GL/glext.h	2571;"	d
GL_OBJECT_COMPILE_STATUS_ARB	src/windows/include/GL/glext.h	847;"	d
GL_OBJECT_DELETE_STATUS_ARB	src/windows/include/GL/glext.h	846;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	src/windows/include/GL/glext.h	2154;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	src/windows/include/GL/glext.h	2152;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	src/windows/include/GL/glext.h	850;"	d
GL_OBJECT_LINE_SGIS	src/windows/include/GL/glext.h	2158;"	d
GL_OBJECT_LINK_STATUS_ARB	src/windows/include/GL/glext.h	848;"	d
GL_OBJECT_POINT_SGIS	src/windows/include/GL/glext.h	2156;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	src/windows/include/GL/glext.h	854;"	d
GL_OBJECT_SUBTYPE_ARB	src/windows/include/GL/glext.h	824;"	d
GL_OBJECT_TYPE_ARB	src/windows/include/GL/glext.h	823;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	src/windows/include/GL/glext.h	849;"	d
GL_OCCLUSION_TEST_HP	src/windows/include/GL/glext.h	1703;"	d
GL_OCCLUSION_TEST_RESULT_HP	src/windows/include/GL/glext.h	1704;"	d
GL_OES_read_format	src/windows/include/GL/glext.h	6391;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2745;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2746;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2743;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2744;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2739;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	src/windows/include/GL/glext.h	2740;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2741;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	src/windows/include/GL/glext.h	2742;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	src/windows/include/GL/glext.h	2248;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	src/windows/include/GL/glext.h	2246;"	d
GL_OFFSET_TEXTURE_2D_NV	src/windows/include/GL/glext.h	2253;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	src/windows/include/GL/glext.h	2247;"	d
GL_OFFSET_TEXTURE_BIAS_NV	src/windows/include/GL/glext.h	2245;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	src/windows/include/GL/glext.h	2243;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2232;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	src/windows/include/GL/glext.h	2233;"	d
GL_OFFSET_TEXTURE_SCALE_NV	src/windows/include/GL/glext.h	2244;"	d
GL_OML_interlace	src/windows/include/GL/glext.h	5735;"	d
GL_OML_resample	src/windows/include/GL/glext.h	5743;"	d
GL_OML_subsample	src/windows/include/GL/glext.h	5739;"	d
GL_ONE_EXT	src/windows/include/GL/glext.h	2671;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	src/windows/include/GL/glext.h	107;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	src/windows/include/GL/glext.h	965;"	d
GL_ONE_MINUS_CONSTANT_COLOR	src/windows/include/GL/glext.h	105;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	src/windows/include/GL/glext.h	963;"	d
GL_OPERAND0_ALPHA	src/windows/include/GL/glext.h	266;"	d
GL_OPERAND0_ALPHA_ARB	src/windows/include/GL/glext.h	633;"	d
GL_OPERAND0_ALPHA_EXT	src/windows/include/GL/glext.h	1802;"	d
GL_OPERAND0_RGB	src/windows/include/GL/glext.h	263;"	d
GL_OPERAND0_RGB_ARB	src/windows/include/GL/glext.h	630;"	d
GL_OPERAND0_RGB_EXT	src/windows/include/GL/glext.h	1799;"	d
GL_OPERAND1_ALPHA	src/windows/include/GL/glext.h	267;"	d
GL_OPERAND1_ALPHA_ARB	src/windows/include/GL/glext.h	634;"	d
GL_OPERAND1_ALPHA_EXT	src/windows/include/GL/glext.h	1803;"	d
GL_OPERAND1_RGB	src/windows/include/GL/glext.h	264;"	d
GL_OPERAND1_RGB_ARB	src/windows/include/GL/glext.h	631;"	d
GL_OPERAND1_RGB_EXT	src/windows/include/GL/glext.h	1800;"	d
GL_OPERAND2_ALPHA	src/windows/include/GL/glext.h	268;"	d
GL_OPERAND2_ALPHA_ARB	src/windows/include/GL/glext.h	635;"	d
GL_OPERAND2_ALPHA_EXT	src/windows/include/GL/glext.h	1804;"	d
GL_OPERAND2_RGB	src/windows/include/GL/glext.h	265;"	d
GL_OPERAND2_RGB_ARB	src/windows/include/GL/glext.h	632;"	d
GL_OPERAND2_RGB_EXT	src/windows/include/GL/glext.h	1801;"	d
GL_OPERAND3_ALPHA_NV	src/windows/include/GL/glext.h	2034;"	d
GL_OPERAND3_RGB_NV	src/windows/include/GL/glext.h	2033;"	d
GL_OP_ADD_EXT	src/windows/include/GL/glext.h	2584;"	d
GL_OP_CLAMP_EXT	src/windows/include/GL/glext.h	2591;"	d
GL_OP_CROSS_PRODUCT_EXT	src/windows/include/GL/glext.h	2600;"	d
GL_OP_DOT3_EXT	src/windows/include/GL/glext.h	2581;"	d
GL_OP_DOT4_EXT	src/windows/include/GL/glext.h	2582;"	d
GL_OP_EXP_BASE_2_EXT	src/windows/include/GL/glext.h	2594;"	d
GL_OP_FLOOR_EXT	src/windows/include/GL/glext.h	2592;"	d
GL_OP_FRAC_EXT	src/windows/include/GL/glext.h	2586;"	d
GL_OP_INDEX_EXT	src/windows/include/GL/glext.h	2579;"	d
GL_OP_LOG_BASE_2_EXT	src/windows/include/GL/glext.h	2595;"	d
GL_OP_MADD_EXT	src/windows/include/GL/glext.h	2585;"	d
GL_OP_MAX_EXT	src/windows/include/GL/glext.h	2587;"	d
GL_OP_MIN_EXT	src/windows/include/GL/glext.h	2588;"	d
GL_OP_MOV_EXT	src/windows/include/GL/glext.h	2602;"	d
GL_OP_MULTIPLY_MATRIX_EXT	src/windows/include/GL/glext.h	2601;"	d
GL_OP_MUL_EXT	src/windows/include/GL/glext.h	2583;"	d
GL_OP_NEGATE_EXT	src/windows/include/GL/glext.h	2580;"	d
GL_OP_POWER_EXT	src/windows/include/GL/glext.h	2596;"	d
GL_OP_RECIP_EXT	src/windows/include/GL/glext.h	2597;"	d
GL_OP_RECIP_SQRT_EXT	src/windows/include/GL/glext.h	2598;"	d
GL_OP_ROUND_EXT	src/windows/include/GL/glext.h	2593;"	d
GL_OP_SET_GE_EXT	src/windows/include/GL/glext.h	2589;"	d
GL_OP_SET_LT_EXT	src/windows/include/GL/glext.h	2590;"	d
GL_OP_SUB_EXT	src/windows/include/GL/glext.h	2599;"	d
GL_OUTPUT_COLOR0_EXT	src/windows/include/GL/glext.h	2604;"	d
GL_OUTPUT_COLOR1_EXT	src/windows/include/GL/glext.h	2605;"	d
GL_OUTPUT_FOG_EXT	src/windows/include/GL/glext.h	2638;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	src/windows/include/GL/glext.h	2606;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	src/windows/include/GL/glext.h	2616;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	src/windows/include/GL/glext.h	2617;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	src/windows/include/GL/glext.h	2618;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	src/windows/include/GL/glext.h	2619;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	src/windows/include/GL/glext.h	2620;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	src/windows/include/GL/glext.h	2621;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	src/windows/include/GL/glext.h	2622;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	src/windows/include/GL/glext.h	2623;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	src/windows/include/GL/glext.h	2624;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	src/windows/include/GL/glext.h	2625;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	src/windows/include/GL/glext.h	2607;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	src/windows/include/GL/glext.h	2626;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	src/windows/include/GL/glext.h	2627;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	src/windows/include/GL/glext.h	2628;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	src/windows/include/GL/glext.h	2629;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	src/windows/include/GL/glext.h	2630;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	src/windows/include/GL/glext.h	2631;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	src/windows/include/GL/glext.h	2632;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	src/windows/include/GL/glext.h	2633;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	src/windows/include/GL/glext.h	2634;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	src/windows/include/GL/glext.h	2635;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	src/windows/include/GL/glext.h	2608;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	src/windows/include/GL/glext.h	2636;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	src/windows/include/GL/glext.h	2637;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	src/windows/include/GL/glext.h	2609;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	src/windows/include/GL/glext.h	2610;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	src/windows/include/GL/glext.h	2611;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	src/windows/include/GL/glext.h	2612;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	src/windows/include/GL/glext.h	2613;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	src/windows/include/GL/glext.h	2614;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	src/windows/include/GL/glext.h	2615;"	d
GL_OUTPUT_VERTEX_EXT	src/windows/include/GL/glext.h	2603;"	d
GL_PACK_CMYK_HINT_EXT	src/windows/include/GL/glext.h	1150;"	d
GL_PACK_IMAGE_DEPTH_SGIS	src/windows/include/GL/glext.h	1131;"	d
GL_PACK_IMAGE_HEIGHT	src/windows/include/GL/glext.h	68;"	d
GL_PACK_IMAGE_HEIGHT_EXT	src/windows/include/GL/glext.h	1023;"	d
GL_PACK_INVERT_MESA	src/windows/include/GL/glext.h	2947;"	d
GL_PACK_RESAMPLE_OML	src/windows/include/GL/glext.h	2422;"	d
GL_PACK_RESAMPLE_SGIX	src/windows/include/GL/glext.h	2143;"	d
GL_PACK_SKIP_IMAGES	src/windows/include/GL/glext.h	67;"	d
GL_PACK_SKIP_IMAGES_EXT	src/windows/include/GL/glext.h	1022;"	d
GL_PACK_SKIP_VOLUMES_SGIS	src/windows/include/GL/glext.h	1130;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	src/windows/include/GL/glext.h	2077;"	d
GL_PARALLEL_ARRAYS_INTEL	src/windows/include/GL/glext.h	1695;"	d
GL_PASS_THROUGH_NV	src/windows/include/GL/glext.h	2251;"	d
GL_PERTURB_EXT	src/windows/include/GL/glext.h	1743;"	d
GL_PER_STAGE_CONSTANTS_NV	src/windows/include/GL/glext.h	2218;"	d
GL_PGI_misc_hints	src/windows/include/GL/glext.h	4665;"	d
GL_PGI_vertex_hints	src/windows/include/GL/glext.h	4661;"	d
GL_PHONG_HINT_WIN	src/windows/include/GL/glext.h	1633;"	d
GL_PHONG_WIN	src/windows/include/GL/glext.h	1632;"	d
GL_PIXEL_COUNTER_BITS_NV	src/windows/include/GL/glext.h	2726;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	src/windows/include/GL/glext.h	2729;"	d
GL_PIXEL_COUNT_NV	src/windows/include/GL/glext.h	2728;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	src/windows/include/GL/glext.h	1711;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	src/windows/include/GL/glext.h	1120;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	src/windows/include/GL/glext.h	1119;"	d
GL_PIXEL_GROUP_COLOR_SGIS	src/windows/include/GL/glext.h	1121;"	d
GL_PIXEL_MAG_FILTER_EXT	src/windows/include/GL/glext.h	1709;"	d
GL_PIXEL_MIN_FILTER_EXT	src/windows/include/GL/glext.h	1710;"	d
GL_PIXEL_PACK_BUFFER_ARB	src/windows/include/GL/glext.h	951;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	953;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	src/windows/include/GL/glext.h	2959;"	d
GL_PIXEL_PACK_BUFFER_EXT	src/windows/include/GL/glext.h	2957;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	src/windows/include/GL/glext.h	2080;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	src/windows/include/GL/glext.h	2081;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	src/windows/include/GL/glext.h	2079;"	d
GL_PIXEL_TEXTURE_SGIS	src/windows/include/GL/glext.h	1118;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	src/windows/include/GL/glext.h	1664;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	src/windows/include/GL/glext.h	1665;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	src/windows/include/GL/glext.h	1663;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	src/windows/include/GL/glext.h	1662;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	src/windows/include/GL/glext.h	1126;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	src/windows/include/GL/glext.h	1659;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	src/windows/include/GL/glext.h	1661;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	src/windows/include/GL/glext.h	1660;"	d
GL_PIXEL_TEX_GEN_SGIX	src/windows/include/GL/glext.h	1125;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	src/windows/include/GL/glext.h	1311;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	src/windows/include/GL/glext.h	1312;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	src/windows/include/GL/glext.h	1318;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	src/windows/include/GL/glext.h	1317;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	src/windows/include/GL/glext.h	1316;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	src/windows/include/GL/glext.h	1315;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	src/windows/include/GL/glext.h	1314;"	d
GL_PIXEL_TILE_WIDTH_SGIX	src/windows/include/GL/glext.h	1313;"	d
GL_PIXEL_TRANSFORM_2D_EXT	src/windows/include/GL/glext.h	1708;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	src/windows/include/GL/glext.h	1716;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	src/windows/include/GL/glext.h	1714;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	src/windows/include/GL/glext.h	952;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	954;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	src/windows/include/GL/glext.h	2960;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	src/windows/include/GL/glext.h	2958;"	d
GL_PN_TRIANGLES_ATI	src/windows/include/GL/glext.h	2554;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	src/windows/include/GL/glext.h	2557;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	src/windows/include/GL/glext.h	2561;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	src/windows/include/GL/glext.h	2562;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	src/windows/include/GL/glext.h	2556;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	src/windows/include/GL/glext.h	2560;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	src/windows/include/GL/glext.h	2559;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	src/windows/include/GL/glext.h	2558;"	d
GL_POINT_DISTANCE_ATTENUATION	src/windows/include/GL/glext.h	288;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	src/windows/include/GL/glext.h	559;"	d
GL_POINT_FADE_THRESHOLD_SIZE	src/windows/include/GL/glext.h	287;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	src/windows/include/GL/glext.h	558;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	src/windows/include/GL/glext.h	1363;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	src/windows/include/GL/glext.h	1370;"	d
GL_POINT_SIZE_MAX	src/windows/include/GL/glext.h	286;"	d
GL_POINT_SIZE_MAX_ARB	src/windows/include/GL/glext.h	557;"	d
GL_POINT_SIZE_MAX_EXT	src/windows/include/GL/glext.h	1362;"	d
GL_POINT_SIZE_MAX_SGIS	src/windows/include/GL/glext.h	1369;"	d
GL_POINT_SIZE_MIN	src/windows/include/GL/glext.h	285;"	d
GL_POINT_SIZE_MIN_ARB	src/windows/include/GL/glext.h	556;"	d
GL_POINT_SIZE_MIN_EXT	src/windows/include/GL/glext.h	1361;"	d
GL_POINT_SIZE_MIN_SGIS	src/windows/include/GL/glext.h	1368;"	d
GL_POINT_SPRITE	src/windows/include/GL/glext.h	407;"	d
GL_POINT_SPRITE_ARB	src/windows/include/GL/glext.h	881;"	d
GL_POINT_SPRITE_COORD_ORIGIN	src/windows/include/GL/glext.h	454;"	d
GL_POINT_SPRITE_NV	src/windows/include/GL/glext.h	2733;"	d
GL_POINT_SPRITE_R_MODE_NV	src/windows/include/GL/glext.h	2735;"	d
GL_POLYGON_OFFSET_BIAS_EXT	src/windows/include/GL/glext.h	972;"	d
GL_POLYGON_OFFSET_EXT	src/windows/include/GL/glext.h	970;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	src/windows/include/GL/glext.h	971;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	src/windows/include/GL/glext.h	159;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	src/windows/include/GL/glext.h	1095;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	src/windows/include/GL/glext.h	155;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	src/windows/include/GL/glext.h	1091;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	src/windows/include/GL/glext.h	158;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	src/windows/include/GL/glext.h	1094;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	src/windows/include/GL/glext.h	154;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	src/windows/include/GL/glext.h	1090;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	src/windows/include/GL/glext.h	162;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1101;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	src/windows/include/GL/glext.h	157;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	src/windows/include/GL/glext.h	1093;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	src/windows/include/GL/glext.h	153;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	src/windows/include/GL/glext.h	1089;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	src/windows/include/GL/glext.h	156;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	src/windows/include/GL/glext.h	1092;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	src/windows/include/GL/glext.h	152;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	src/windows/include/GL/glext.h	1088;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	src/windows/include/GL/glext.h	134;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	src/windows/include/GL/glext.h	1081;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	src/windows/include/GL/glext.h	130;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	src/windows/include/GL/glext.h	1077;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	src/windows/include/GL/glext.h	133;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	src/windows/include/GL/glext.h	1080;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	src/windows/include/GL/glext.h	129;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	src/windows/include/GL/glext.h	1076;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	src/windows/include/GL/glext.h	161;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1100;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	src/windows/include/GL/glext.h	132;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	src/windows/include/GL/glext.h	1079;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	src/windows/include/GL/glext.h	128;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	src/windows/include/GL/glext.h	1075;"	d
GL_POST_CONVOLUTION_RED_BIAS	src/windows/include/GL/glext.h	131;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	src/windows/include/GL/glext.h	1078;"	d
GL_POST_CONVOLUTION_RED_SCALE	src/windows/include/GL/glext.h	127;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	src/windows/include/GL/glext.h	1074;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	src/windows/include/GL/glext.h	1446;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	src/windows/include/GL/glext.h	1382;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	src/windows/include/GL/glext.h	1380;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	src/windows/include/GL/glext.h	1383;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	src/windows/include/GL/glext.h	1381;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	src/windows/include/GL/glext.h	1493;"	d
GL_PRESERVE_ATI	src/windows/include/GL/glext.h	2568;"	d
GL_PREVIOUS	src/windows/include/GL/glext.h	275;"	d
GL_PREVIOUS_ARB	src/windows/include/GL/glext.h	642;"	d
GL_PREVIOUS_EXT	src/windows/include/GL/glext.h	1792;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	src/windows/include/GL/glext.h	2249;"	d
GL_PRIMARY_COLOR	src/windows/include/GL/glext.h	274;"	d
GL_PRIMARY_COLOR_ARB	src/windows/include/GL/glext.h	641;"	d
GL_PRIMARY_COLOR_EXT	src/windows/include/GL/glext.h	1791;"	d
GL_PRIMARY_COLOR_NV	src/windows/include/GL/glext.h	1965;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	src/windows/include/GL/glext.h	2902;"	d
GL_PRIMITIVE_RESTART_NV	src/windows/include/GL/glext.h	2901;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	src/windows/include/GL/glext.h	718;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	762;"	d
GL_PROGRAM_ATTRIBS_ARB	src/windows/include/GL/glext.h	714;"	d
GL_PROGRAM_BINDING_ARB	src/windows/include/GL/glext.h	696;"	d
GL_PROGRAM_ERROR_POSITION_ARB	src/windows/include/GL/glext.h	695;"	d
GL_PROGRAM_ERROR_POSITION_NV	src/windows/include/GL/glext.h	2350;"	d
GL_PROGRAM_ERROR_STRING_ARB	src/windows/include/GL/glext.h	699;"	d
GL_PROGRAM_ERROR_STRING_NV	src/windows/include/GL/glext.h	2884;"	d
GL_PROGRAM_FORMAT_ARB	src/windows/include/GL/glext.h	701;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	src/windows/include/GL/glext.h	700;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	702;"	d
GL_PROGRAM_LENGTH_ARB	src/windows/include/GL/glext.h	686;"	d
GL_PROGRAM_LENGTH_NV	src/windows/include/GL/glext.h	2322;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	src/windows/include/GL/glext.h	720;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	765;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	src/windows/include/GL/glext.h	716;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	704;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	src/windows/include/GL/glext.h	712;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	src/windows/include/GL/glext.h	708;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	src/windows/include/GL/glext.h	767;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	766;"	d
GL_PROGRAM_OBJECT_ARB	src/windows/include/GL/glext.h	821;"	d
GL_PROGRAM_PARAMETERS_ARB	src/windows/include/GL/glext.h	710;"	d
GL_PROGRAM_PARAMETER_NV	src/windows/include/GL/glext.h	2343;"	d
GL_PROGRAM_RESIDENT_NV	src/windows/include/GL/glext.h	2346;"	d
GL_PROGRAM_STRING_ARB	src/windows/include/GL/glext.h	687;"	d
GL_PROGRAM_STRING_NV	src/windows/include/GL/glext.h	2323;"	d
GL_PROGRAM_TARGET_NV	src/windows/include/GL/glext.h	2345;"	d
GL_PROGRAM_TEMPORARIES_ARB	src/windows/include/GL/glext.h	706;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	src/windows/include/GL/glext.h	764;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	src/windows/include/GL/glext.h	763;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	src/windows/include/GL/glext.h	724;"	d
GL_PROXY_COLOR_TABLE	src/windows/include/GL/glext.h	163;"	d
GL_PROXY_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1102;"	d
GL_PROXY_HISTOGRAM	src/windows/include/GL/glext.h	136;"	d
GL_PROXY_HISTOGRAM_EXT	src/windows/include/GL/glext.h	1046;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	src/windows/include/GL/glext.h	165;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1104;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	src/windows/include/GL/glext.h	164;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1103;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	src/windows/include/GL/glext.h	1447;"	d
GL_PROXY_TEXTURE_1D_EXT	src/windows/include/GL/glext.h	1016;"	d
GL_PROXY_TEXTURE_2D_EXT	src/windows/include/GL/glext.h	1017;"	d
GL_PROXY_TEXTURE_3D	src/windows/include/GL/glext.h	72;"	d
GL_PROXY_TEXTURE_3D_EXT	src/windows/include/GL/glext.h	1027;"	d
GL_PROXY_TEXTURE_4D_SGIS	src/windows/include/GL/glext.h	1135;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1144;"	d
GL_PROXY_TEXTURE_CUBE_MAP	src/windows/include/GL/glext.h	240;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	src/windows/include/GL/glext.h	533;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	src/windows/include/GL/glext.h	1903;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	src/windows/include/GL/glext.h	911;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2227;"	d
GL_QUAD_ALPHA4_SGIS	src/windows/include/GL/glext.h	1336;"	d
GL_QUAD_ALPHA8_SGIS	src/windows/include/GL/glext.h	1337;"	d
GL_QUAD_INTENSITY4_SGIS	src/windows/include/GL/glext.h	1340;"	d
GL_QUAD_INTENSITY8_SGIS	src/windows/include/GL/glext.h	1341;"	d
GL_QUAD_LUMINANCE4_SGIS	src/windows/include/GL/glext.h	1338;"	d
GL_QUAD_LUMINANCE8_SGIS	src/windows/include/GL/glext.h	1339;"	d
GL_QUAD_MESH_SUN	src/windows/include/GL/glext.h	2709;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	src/windows/include/GL/glext.h	1343;"	d
GL_QUARTER_BIT_ATI	src/windows/include/GL/glext.h	2545;"	d
GL_QUERY_COUNTER_BITS	src/windows/include/GL/glext.h	325;"	d
GL_QUERY_COUNTER_BITS_ARB	src/windows/include/GL/glext.h	813;"	d
GL_QUERY_RESULT	src/windows/include/GL/glext.h	327;"	d
GL_QUERY_RESULT_ARB	src/windows/include/GL/glext.h	815;"	d
GL_QUERY_RESULT_AVAILABLE	src/windows/include/GL/glext.h	328;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	src/windows/include/GL/glext.h	816;"	d
GL_R1UI_C3F_V3F_SUN	src/windows/include/GL/glext.h	1842;"	d
GL_R1UI_C4F_N3F_V3F_SUN	src/windows/include/GL/glext.h	1844;"	d
GL_R1UI_C4UB_V3F_SUN	src/windows/include/GL/glext.h	1841;"	d
GL_R1UI_N3F_V3F_SUN	src/windows/include/GL/glext.h	1843;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	src/windows/include/GL/glext.h	1847;"	d
GL_R1UI_T2F_N3F_V3F_SUN	src/windows/include/GL/glext.h	1846;"	d
GL_R1UI_T2F_V3F_SUN	src/windows/include/GL/glext.h	1845;"	d
GL_R1UI_V3F_SUN	src/windows/include/GL/glext.h	1840;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	src/windows/include/GL/glext.h	1617;"	d
GL_READ_ONLY	src/windows/include/GL/glext.h	343;"	d
GL_READ_ONLY_ARB	src/windows/include/GL/glext.h	795;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	src/windows/include/GL/glext.h	2895;"	d
GL_READ_PIXEL_DATA_RANGE_NV	src/windows/include/GL/glext.h	2893;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	src/windows/include/GL/glext.h	2897;"	d
GL_READ_WRITE	src/windows/include/GL/glext.h	345;"	d
GL_READ_WRITE_ARB	src/windows/include/GL/glext.h	797;"	d
GL_RECLAIM_MEMORY_HINT_PGI	src/windows/include/GL/glext.h	1495;"	d
GL_REDUCE	src/windows/include/GL/glext.h	121;"	d
GL_REDUCE_EXT	src/windows/include/GL/glext.h	1068;"	d
GL_RED_BIT_ATI	src/windows/include/GL/glext.h	2538;"	d
GL_RED_MAX_CLAMP_INGR	src/windows/include/GL/glext.h	1865;"	d
GL_RED_MIN_CLAMP_INGR	src/windows/include/GL/glext.h	1861;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	src/windows/include/GL/glext.h	1409;"	d
GL_REFERENCE_PLANE_SGIX	src/windows/include/GL/glext.h	1408;"	d
GL_REFLECTION_MAP	src/windows/include/GL/glext.h	231;"	d
GL_REFLECTION_MAP_ARB	src/windows/include/GL/glext.h	524;"	d
GL_REFLECTION_MAP_EXT	src/windows/include/GL/glext.h	1894;"	d
GL_REFLECTION_MAP_NV	src/windows/include/GL/glext.h	1889;"	d
GL_REGISTER_COMBINERS_NV	src/windows/include/GL/glext.h	1955;"	d
GL_REG_0_ATI	src/windows/include/GL/glext.h	2448;"	d
GL_REG_10_ATI	src/windows/include/GL/glext.h	2458;"	d
GL_REG_11_ATI	src/windows/include/GL/glext.h	2459;"	d
GL_REG_12_ATI	src/windows/include/GL/glext.h	2460;"	d
GL_REG_13_ATI	src/windows/include/GL/glext.h	2461;"	d
GL_REG_14_ATI	src/windows/include/GL/glext.h	2462;"	d
GL_REG_15_ATI	src/windows/include/GL/glext.h	2463;"	d
GL_REG_16_ATI	src/windows/include/GL/glext.h	2464;"	d
GL_REG_17_ATI	src/windows/include/GL/glext.h	2465;"	d
GL_REG_18_ATI	src/windows/include/GL/glext.h	2466;"	d
GL_REG_19_ATI	src/windows/include/GL/glext.h	2467;"	d
GL_REG_1_ATI	src/windows/include/GL/glext.h	2449;"	d
GL_REG_20_ATI	src/windows/include/GL/glext.h	2468;"	d
GL_REG_21_ATI	src/windows/include/GL/glext.h	2469;"	d
GL_REG_22_ATI	src/windows/include/GL/glext.h	2470;"	d
GL_REG_23_ATI	src/windows/include/GL/glext.h	2471;"	d
GL_REG_24_ATI	src/windows/include/GL/glext.h	2472;"	d
GL_REG_25_ATI	src/windows/include/GL/glext.h	2473;"	d
GL_REG_26_ATI	src/windows/include/GL/glext.h	2474;"	d
GL_REG_27_ATI	src/windows/include/GL/glext.h	2475;"	d
GL_REG_28_ATI	src/windows/include/GL/glext.h	2476;"	d
GL_REG_29_ATI	src/windows/include/GL/glext.h	2477;"	d
GL_REG_2_ATI	src/windows/include/GL/glext.h	2450;"	d
GL_REG_30_ATI	src/windows/include/GL/glext.h	2478;"	d
GL_REG_31_ATI	src/windows/include/GL/glext.h	2479;"	d
GL_REG_3_ATI	src/windows/include/GL/glext.h	2451;"	d
GL_REG_4_ATI	src/windows/include/GL/glext.h	2452;"	d
GL_REG_5_ATI	src/windows/include/GL/glext.h	2453;"	d
GL_REG_6_ATI	src/windows/include/GL/glext.h	2454;"	d
GL_REG_7_ATI	src/windows/include/GL/glext.h	2455;"	d
GL_REG_8_ATI	src/windows/include/GL/glext.h	2456;"	d
GL_REG_9_ATI	src/windows/include/GL/glext.h	2457;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	src/windows/include/GL/glext.h	3033;"	d
GL_RENDERBUFFER_BINDING_EXT	src/windows/include/GL/glext.h	2987;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	src/windows/include/GL/glext.h	3032;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	src/windows/include/GL/glext.h	3034;"	d
GL_RENDERBUFFER_EXT	src/windows/include/GL/glext.h	3022;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	src/windows/include/GL/glext.h	3031;"	d
GL_RENDERBUFFER_HEIGHT_EXT	src/windows/include/GL/glext.h	3024;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	src/windows/include/GL/glext.h	3025;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	src/windows/include/GL/glext.h	3030;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	src/windows/include/GL/glext.h	3035;"	d
GL_RENDERBUFFER_WIDTH_EXT	src/windows/include/GL/glext.h	3023;"	d
GL_REND_screen_coordinates	src/windows/include/GL/glext.h	5003;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	src/windows/include/GL/glext.h	1839;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	src/windows/include/GL/glext.h	1838;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	src/windows/include/GL/glext.h	1836;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	src/windows/include/GL/glext.h	1837;"	d
GL_REPLACEMENT_CODE_SUN	src/windows/include/GL/glext.h	1835;"	d
GL_REPLACE_EXT	src/windows/include/GL/glext.h	1015;"	d
GL_REPLACE_MIDDLE_SUN	src/windows/include/GL/glext.h	1832;"	d
GL_REPLACE_OLDEST_SUN	src/windows/include/GL/glext.h	1833;"	d
GL_REPLICATE_BORDER	src/windows/include/GL/glext.h	177;"	d
GL_REPLICATE_BORDER_HP	src/windows/include/GL/glext.h	1453;"	d
GL_RESAMPLE_AVERAGE_OML	src/windows/include/GL/glext.h	2426;"	d
GL_RESAMPLE_DECIMATE_OML	src/windows/include/GL/glext.h	2427;"	d
GL_RESAMPLE_DECIMATE_SGIX	src/windows/include/GL/glext.h	2147;"	d
GL_RESAMPLE_REPLICATE_OML	src/windows/include/GL/glext.h	2424;"	d
GL_RESAMPLE_REPLICATE_SGIX	src/windows/include/GL/glext.h	2145;"	d
GL_RESAMPLE_ZERO_FILL_OML	src/windows/include/GL/glext.h	2425;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	src/windows/include/GL/glext.h	2146;"	d
GL_RESCALE_NORMAL	src/windows/include/GL/glext.h	65;"	d
GL_RESCALE_NORMAL_EXT	src/windows/include/GL/glext.h	1215;"	d
GL_RESTART_SUN	src/windows/include/GL/glext.h	1831;"	d
GL_RGB10_A2_EXT	src/windows/include/GL/glext.h	1006;"	d
GL_RGB10_EXT	src/windows/include/GL/glext.h	999;"	d
GL_RGB12_EXT	src/windows/include/GL/glext.h	1000;"	d
GL_RGB16F_ARB	src/windows/include/GL/glext.h	943;"	d
GL_RGB16_EXT	src/windows/include/GL/glext.h	1001;"	d
GL_RGB2_EXT	src/windows/include/GL/glext.h	995;"	d
GL_RGB32F_ARB	src/windows/include/GL/glext.h	937;"	d
GL_RGB4_EXT	src/windows/include/GL/glext.h	996;"	d
GL_RGB4_S3TC	src/windows/include/GL/glext.h	2809;"	d
GL_RGB5_A1_EXT	src/windows/include/GL/glext.h	1004;"	d
GL_RGB5_EXT	src/windows/include/GL/glext.h	997;"	d
GL_RGB8_EXT	src/windows/include/GL/glext.h	998;"	d
GL_RGBA12_EXT	src/windows/include/GL/glext.h	1007;"	d
GL_RGBA16F_ARB	src/windows/include/GL/glext.h	942;"	d
GL_RGBA16_EXT	src/windows/include/GL/glext.h	1008;"	d
GL_RGBA2_EXT	src/windows/include/GL/glext.h	1002;"	d
GL_RGBA32F_ARB	src/windows/include/GL/glext.h	936;"	d
GL_RGBA4_EXT	src/windows/include/GL/glext.h	1003;"	d
GL_RGBA4_S3TC	src/windows/include/GL/glext.h	2811;"	d
GL_RGBA8_EXT	src/windows/include/GL/glext.h	1005;"	d
GL_RGBA_FLOAT16_ATI	src/windows/include/GL/glext.h	2852;"	d
GL_RGBA_FLOAT32_ATI	src/windows/include/GL/glext.h	2846;"	d
GL_RGBA_FLOAT_MODE_ARB	src/windows/include/GL/glext.h	916;"	d
GL_RGBA_S3TC	src/windows/include/GL/glext.h	2810;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	src/windows/include/GL/glext.h	2235;"	d
GL_RGB_FLOAT16_ATI	src/windows/include/GL/glext.h	2853;"	d
GL_RGB_FLOAT32_ATI	src/windows/include/GL/glext.h	2847;"	d
GL_RGB_S3TC	src/windows/include/GL/glext.h	2808;"	d
GL_RGB_SCALE	src/windows/include/GL/glext.h	269;"	d
GL_RGB_SCALE_ARB	src/windows/include/GL/glext.h	636;"	d
GL_RGB_SCALE_EXT	src/windows/include/GL/glext.h	1787;"	d
GL_S3_s3tc	src/windows/include/GL/glext.h	6183;"	d
GL_SAMPLER_1D	src/windows/include/GL/glext.h	434;"	d
GL_SAMPLER_1D_ARB	src/windows/include/GL/glext.h	838;"	d
GL_SAMPLER_1D_SHADOW	src/windows/include/GL/glext.h	438;"	d
GL_SAMPLER_1D_SHADOW_ARB	src/windows/include/GL/glext.h	842;"	d
GL_SAMPLER_2D	src/windows/include/GL/glext.h	435;"	d
GL_SAMPLER_2D_ARB	src/windows/include/GL/glext.h	839;"	d
GL_SAMPLER_2D_RECT_ARB	src/windows/include/GL/glext.h	844;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	src/windows/include/GL/glext.h	845;"	d
GL_SAMPLER_2D_SHADOW	src/windows/include/GL/glext.h	439;"	d
GL_SAMPLER_2D_SHADOW_ARB	src/windows/include/GL/glext.h	843;"	d
GL_SAMPLER_3D	src/windows/include/GL/glext.h	436;"	d
GL_SAMPLER_3D_ARB	src/windows/include/GL/glext.h	840;"	d
GL_SAMPLER_CUBE	src/windows/include/GL/glext.h	437;"	d
GL_SAMPLER_CUBE_ARB	src/windows/include/GL/glext.h	841;"	d
GL_SAMPLES	src/windows/include/GL/glext.h	226;"	d
GL_SAMPLES_3DFX	src/windows/include/GL/glext.h	2106;"	d
GL_SAMPLES_ARB	src/windows/include/GL/glext.h	513;"	d
GL_SAMPLES_EXT	src/windows/include/GL/glext.h	2126;"	d
GL_SAMPLES_PASSED	src/windows/include/GL/glext.h	358;"	d
GL_SAMPLES_PASSED_ARB	src/windows/include/GL/glext.h	817;"	d
GL_SAMPLES_SGIS	src/windows/include/GL/glext.h	1208;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	src/windows/include/GL/glext.h	222;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	src/windows/include/GL/glext.h	509;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	src/windows/include/GL/glext.h	2115;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	src/windows/include/GL/glext.h	1197;"	d
GL_SAMPLE_ALPHA_TO_ONE	src/windows/include/GL/glext.h	223;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	src/windows/include/GL/glext.h	510;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	src/windows/include/GL/glext.h	2116;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	src/windows/include/GL/glext.h	1198;"	d
GL_SAMPLE_BUFFERS	src/windows/include/GL/glext.h	225;"	d
GL_SAMPLE_BUFFERS_3DFX	src/windows/include/GL/glext.h	2105;"	d
GL_SAMPLE_BUFFERS_ARB	src/windows/include/GL/glext.h	512;"	d
GL_SAMPLE_BUFFERS_EXT	src/windows/include/GL/glext.h	2125;"	d
GL_SAMPLE_BUFFERS_SGIS	src/windows/include/GL/glext.h	1207;"	d
GL_SAMPLE_COVERAGE	src/windows/include/GL/glext.h	224;"	d
GL_SAMPLE_COVERAGE_ARB	src/windows/include/GL/glext.h	511;"	d
GL_SAMPLE_COVERAGE_INVERT	src/windows/include/GL/glext.h	228;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	src/windows/include/GL/glext.h	515;"	d
GL_SAMPLE_COVERAGE_VALUE	src/windows/include/GL/glext.h	227;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	src/windows/include/GL/glext.h	514;"	d
GL_SAMPLE_MASK_EXT	src/windows/include/GL/glext.h	2117;"	d
GL_SAMPLE_MASK_INVERT_EXT	src/windows/include/GL/glext.h	2128;"	d
GL_SAMPLE_MASK_INVERT_SGIS	src/windows/include/GL/glext.h	1210;"	d
GL_SAMPLE_MASK_SGIS	src/windows/include/GL/glext.h	1199;"	d
GL_SAMPLE_MASK_VALUE_EXT	src/windows/include/GL/glext.h	2127;"	d
GL_SAMPLE_MASK_VALUE_SGIS	src/windows/include/GL/glext.h	1209;"	d
GL_SAMPLE_PATTERN_EXT	src/windows/include/GL/glext.h	2129;"	d
GL_SAMPLE_PATTERN_SGIS	src/windows/include/GL/glext.h	1211;"	d
GL_SATURATE_BIT_ATI	src/windows/include/GL/glext.h	2547;"	d
GL_SCALAR_EXT	src/windows/include/GL/glext.h	2639;"	d
GL_SCALEBIAS_HINT_SGIX	src/windows/include/GL/glext.h	2408;"	d
GL_SCALE_BY_FOUR_NV	src/windows/include/GL/glext.h	1981;"	d
GL_SCALE_BY_ONE_HALF_NV	src/windows/include/GL/glext.h	1982;"	d
GL_SCALE_BY_TWO_NV	src/windows/include/GL/glext.h	1980;"	d
GL_SCREEN_COORDINATES_REND	src/windows/include/GL/glext.h	1762;"	d
GL_SECONDARY_COLOR_ARRAY	src/windows/include/GL/glext.h	309;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	339;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	791;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	src/windows/include/GL/glext.h	1739;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2065;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2073;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	src/windows/include/GL/glext.h	308;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1738;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	src/windows/include/GL/glext.h	305;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	src/windows/include/GL/glext.h	1735;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	src/windows/include/GL/glext.h	307;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1737;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	src/windows/include/GL/glext.h	306;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1736;"	d
GL_SECONDARY_COLOR_NV	src/windows/include/GL/glext.h	1966;"	d
GL_SECONDARY_INTERPOLATOR_ATI	src/windows/include/GL/glext.h	2523;"	d
GL_SEPARABLE_2D	src/windows/include/GL/glext.h	117;"	d
GL_SEPARABLE_2D_EXT	src/windows/include/GL/glext.h	1064;"	d
GL_SEPARATE_SPECULAR_COLOR	src/windows/include/GL/glext.h	94;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	src/windows/include/GL/glext.h	1729;"	d
GL_SGIS_detail_texture	src/windows/include/GL/glext.h	4383;"	d
GL_SGIS_fog_function	src/windows/include/GL/glext.h	4611;"	d
GL_SGIS_generate_mipmap	src/windows/include/GL/glext.h	4453;"	d
GL_SGIS_multisample	src/windows/include/GL/glext.h	4411;"	d
GL_SGIS_pixel_texture	src/windows/include/GL/glext.h	4329;"	d
GL_SGIS_point_line_texgen	src/windows/include/GL/glext.h	5487;"	d
GL_SGIS_point_parameters	src/windows/include/GL/glext.h	4529;"	d
GL_SGIS_sharpen_texture	src/windows/include/GL/glext.h	4393;"	d
GL_SGIS_texture4D	src/windows/include/GL/glext.h	4347;"	d
GL_SGIS_texture_border_clamp	src/windows/include/GL/glext.h	4469;"	d
GL_SGIS_texture_color_mask	src/windows/include/GL/glext.h	5491;"	d
GL_SGIS_texture_edge_clamp	src/windows/include/GL/glext.h	4465;"	d
GL_SGIS_texture_filter4	src/windows/include/GL/glext.h	4203;"	d
GL_SGIS_texture_lod	src/windows/include/GL/glext.h	4407;"	d
GL_SGIX_async	src/windows/include/GL/glext.h	4859;"	d
GL_SGIX_async_histogram	src/windows/include/GL/glext.h	4881;"	d
GL_SGIX_async_pixel	src/windows/include/GL/glext.h	4877;"	d
GL_SGIX_blend_alpha_minmax	src/windows/include/GL/glext.h	4851;"	d
GL_SGIX_calligraphic_fragment	src/windows/include/GL/glext.h	4713;"	d
GL_SGIX_clipmap	src/windows/include/GL/glext.h	4457;"	d
GL_SGIX_convolution_accuracy	src/windows/include/GL/glext.h	5479;"	d
GL_SGIX_depth_pass_instrument	src/windows/include/GL/glext.h	5445;"	d
GL_SGIX_depth_texture	src/windows/include/GL/glext.h	4607;"	d
GL_SGIX_flush_raster	src/windows/include/GL/glext.h	4599;"	d
GL_SGIX_fog_offset	src/windows/include/GL/glext.h	4621;"	d
GL_SGIX_fog_scale	src/windows/include/GL/glext.h	5069;"	d
GL_SGIX_fragment_lighting	src/windows/include/GL/glext.h	4773;"	d
GL_SGIX_framezoom	src/windows/include/GL/glext.h	4561;"	d
GL_SGIX_igloo_interface	src/windows/include/GL/glext.h	5499;"	d
GL_SGIX_instruments	src/windows/include/GL/glext.h	4539;"	d
GL_SGIX_interlace	src/windows/include/GL/glext.h	4489;"	d
GL_SGIX_ir_instrument1	src/windows/include/GL/glext.h	4709;"	d
GL_SGIX_list_priority	src/windows/include/GL/glext.h	4691;"	d
GL_SGIX_pixel_texture	src/windows/include/GL/glext.h	4321;"	d
GL_SGIX_pixel_tiles	src/windows/include/GL/glext.h	4493;"	d
GL_SGIX_polynomial_ffd	src/windows/include/GL/glext.h	4577;"	d
GL_SGIX_reference_plane	src/windows/include/GL/glext.h	4591;"	d
GL_SGIX_resample	src/windows/include/GL/glext.h	5483;"	d
GL_SGIX_scalebias_hint	src/windows/include/GL/glext.h	5731;"	d
GL_SGIX_shadow	src/windows/include/GL/glext.h	4461;"	d
GL_SGIX_shadow_ambient	src/windows/include/GL/glext.h	4721;"	d
GL_SGIX_sprite	src/windows/include/GL/glext.h	4501;"	d
GL_SGIX_subsample	src/windows/include/GL/glext.h	5433;"	d
GL_SGIX_tag_sample_buffer	src/windows/include/GL/glext.h	4569;"	d
GL_SGIX_texture_add_env	src/windows/include/GL/glext.h	4647;"	d
GL_SGIX_texture_coordinate_clamp	src/windows/include/GL/glext.h	5727;"	d
GL_SGIX_texture_lod_bias	src/windows/include/GL/glext.h	4717;"	d
GL_SGIX_texture_multi_buffer	src/windows/include/GL/glext.h	4515;"	d
GL_SGIX_texture_scale_bias	src/windows/include/GL/glext.h	4557;"	d
GL_SGIX_texture_select	src/windows/include/GL/glext.h	4497;"	d
GL_SGIX_vertex_preclip	src/windows/include/GL/glext.h	5475;"	d
GL_SGIX_ycrcb	src/windows/include/GL/glext.h	4769;"	d
GL_SGIX_ycrcb_subsample	src/windows/include/GL/glext.h	5441;"	d
GL_SGIX_ycrcba	src/windows/include/GL/glext.h	5437;"	d
GL_SGI_color_table	src/windows/include/GL/glext.h	4301;"	d
GL_SGI_texture_color_table	src/windows/include/GL/glext.h	4357;"	d
GL_SHADER_CONSISTENT_NV	src/windows/include/GL/glext.h	2239;"	d
GL_SHADER_OBJECT_ARB	src/windows/include/GL/glext.h	822;"	d
GL_SHADER_OPERATION_NV	src/windows/include/GL/glext.h	2241;"	d
GL_SHADER_SOURCE_LENGTH	src/windows/include/GL/glext.h	448;"	d
GL_SHADER_TYPE	src/windows/include/GL/glext.h	420;"	d
GL_SHADING_LANGUAGE_VERSION	src/windows/include/GL/glext.h	452;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	src/windows/include/GL/glext.h	874;"	d
GL_SHADOW_AMBIENT_SGIX	src/windows/include/GL/glext.h	1548;"	d
GL_SHADOW_ATTENUATION_EXT	src/windows/include/GL/glext.h	1645;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	src/windows/include/GL/glext.h	1723;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	src/windows/include/GL/glext.h	1177;"	d
GL_SIGNED_ALPHA8_NV	src/windows/include/GL/glext.h	2279;"	d
GL_SIGNED_ALPHA_NV	src/windows/include/GL/glext.h	2278;"	d
GL_SIGNED_HILO16_NV	src/windows/include/GL/glext.h	2269;"	d
GL_SIGNED_HILO8_NV	src/windows/include/GL/glext.h	2754;"	d
GL_SIGNED_HILO_NV	src/windows/include/GL/glext.h	2268;"	d
GL_SIGNED_IDENTITY_NV	src/windows/include/GL/glext.h	1978;"	d
GL_SIGNED_INTENSITY8_NV	src/windows/include/GL/glext.h	2281;"	d
GL_SIGNED_INTENSITY_NV	src/windows/include/GL/glext.h	2280;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	src/windows/include/GL/glext.h	2277;"	d
GL_SIGNED_LUMINANCE8_NV	src/windows/include/GL/glext.h	2275;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	src/windows/include/GL/glext.h	2276;"	d
GL_SIGNED_LUMINANCE_NV	src/windows/include/GL/glext.h	2274;"	d
GL_SIGNED_NEGATE_NV	src/windows/include/GL/glext.h	1979;"	d
GL_SIGNED_RGB8_NV	src/windows/include/GL/glext.h	2273;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	src/windows/include/GL/glext.h	2286;"	d
GL_SIGNED_RGBA8_NV	src/windows/include/GL/glext.h	2271;"	d
GL_SIGNED_RGBA_NV	src/windows/include/GL/glext.h	2270;"	d
GL_SIGNED_RGB_NV	src/windows/include/GL/glext.h	2272;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	src/windows/include/GL/glext.h	2285;"	d
GL_SINGLE_COLOR	src/windows/include/GL/glext.h	93;"	d
GL_SINGLE_COLOR_EXT	src/windows/include/GL/glext.h	1728;"	d
GL_SLICE_ACCUM_SUN	src/windows/include/GL/glext.h	2714;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	src/windows/include/GL/glext.h	98;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	src/windows/include/GL/glext.h	97;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	src/windows/include/GL/glext.h	96;"	d
GL_SMOOTH_POINT_SIZE_RANGE	src/windows/include/GL/glext.h	95;"	d
GL_SOURCE0_ALPHA	src/windows/include/GL/glext.h	260;"	d
GL_SOURCE0_ALPHA_ARB	src/windows/include/GL/glext.h	627;"	d
GL_SOURCE0_ALPHA_EXT	src/windows/include/GL/glext.h	1796;"	d
GL_SOURCE0_RGB	src/windows/include/GL/glext.h	257;"	d
GL_SOURCE0_RGB_ARB	src/windows/include/GL/glext.h	624;"	d
GL_SOURCE0_RGB_EXT	src/windows/include/GL/glext.h	1793;"	d
GL_SOURCE1_ALPHA	src/windows/include/GL/glext.h	261;"	d
GL_SOURCE1_ALPHA_ARB	src/windows/include/GL/glext.h	628;"	d
GL_SOURCE1_ALPHA_EXT	src/windows/include/GL/glext.h	1797;"	d
GL_SOURCE1_RGB	src/windows/include/GL/glext.h	258;"	d
GL_SOURCE1_RGB_ARB	src/windows/include/GL/glext.h	625;"	d
GL_SOURCE1_RGB_EXT	src/windows/include/GL/glext.h	1794;"	d
GL_SOURCE2_ALPHA	src/windows/include/GL/glext.h	262;"	d
GL_SOURCE2_ALPHA_ARB	src/windows/include/GL/glext.h	629;"	d
GL_SOURCE2_ALPHA_EXT	src/windows/include/GL/glext.h	1798;"	d
GL_SOURCE2_RGB	src/windows/include/GL/glext.h	259;"	d
GL_SOURCE2_RGB_ARB	src/windows/include/GL/glext.h	626;"	d
GL_SOURCE2_RGB_EXT	src/windows/include/GL/glext.h	1795;"	d
GL_SOURCE3_ALPHA_NV	src/windows/include/GL/glext.h	2032;"	d
GL_SOURCE3_RGB_NV	src/windows/include/GL/glext.h	2031;"	d
GL_SPARE0_NV	src/windows/include/GL/glext.h	1967;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	src/windows/include/GL/glext.h	1971;"	d
GL_SPARE1_NV	src/windows/include/GL/glext.h	1968;"	d
GL_SPRITE_AXIAL_SGIX	src/windows/include/GL/glext.h	1351;"	d
GL_SPRITE_AXIS_SGIX	src/windows/include/GL/glext.h	1349;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	src/windows/include/GL/glext.h	1353;"	d
GL_SPRITE_MODE_SGIX	src/windows/include/GL/glext.h	1348;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	src/windows/include/GL/glext.h	1352;"	d
GL_SPRITE_SGIX	src/windows/include/GL/glext.h	1347;"	d
GL_SPRITE_TRANSLATION_SGIX	src/windows/include/GL/glext.h	1350;"	d
GL_SRC0_ALPHA	src/windows/include/GL/glext.h	370;"	d
GL_SRC0_RGB	src/windows/include/GL/glext.h	367;"	d
GL_SRC1_ALPHA	src/windows/include/GL/glext.h	371;"	d
GL_SRC1_RGB	src/windows/include/GL/glext.h	368;"	d
GL_SRC2_ALPHA	src/windows/include/GL/glext.h	372;"	d
GL_SRC2_RGB	src/windows/include/GL/glext.h	369;"	d
GL_STATIC_ATI	src/windows/include/GL/glext.h	2566;"	d
GL_STATIC_COPY	src/windows/include/GL/glext.h	354;"	d
GL_STATIC_COPY_ARB	src/windows/include/GL/glext.h	806;"	d
GL_STATIC_DRAW	src/windows/include/GL/glext.h	352;"	d
GL_STATIC_DRAW_ARB	src/windows/include/GL/glext.h	804;"	d
GL_STATIC_READ	src/windows/include/GL/glext.h	353;"	d
GL_STATIC_READ_ARB	src/windows/include/GL/glext.h	805;"	d
GL_STENCIL_ATTACHMENT_EXT	src/windows/include/GL/glext.h	3020;"	d
GL_STENCIL_BACK_FAIL	src/windows/include/GL/glext.h	386;"	d
GL_STENCIL_BACK_FAIL_ATI	src/windows/include/GL/glext.h	2917;"	d
GL_STENCIL_BACK_FUNC	src/windows/include/GL/glext.h	385;"	d
GL_STENCIL_BACK_FUNC_ATI	src/windows/include/GL/glext.h	2916;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	src/windows/include/GL/glext.h	387;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	src/windows/include/GL/glext.h	2918;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	src/windows/include/GL/glext.h	388;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	src/windows/include/GL/glext.h	2919;"	d
GL_STENCIL_BACK_REF	src/windows/include/GL/glext.h	457;"	d
GL_STENCIL_BACK_VALUE_MASK	src/windows/include/GL/glext.h	458;"	d
GL_STENCIL_BACK_WRITEMASK	src/windows/include/GL/glext.h	459;"	d
GL_STENCIL_INDEX16_EXT	src/windows/include/GL/glext.h	3029;"	d
GL_STENCIL_INDEX1_EXT	src/windows/include/GL/glext.h	3026;"	d
GL_STENCIL_INDEX4_EXT	src/windows/include/GL/glext.h	3027;"	d
GL_STENCIL_INDEX8_EXT	src/windows/include/GL/glext.h	3028;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	src/windows/include/GL/glext.h	2765;"	d
GL_STORAGE_CACHED_APPLE	src/windows/include/GL/glext.h	2797;"	d
GL_STORAGE_SHARED_APPLE	src/windows/include/GL/glext.h	2798;"	d
GL_STREAM_COPY	src/windows/include/GL/glext.h	351;"	d
GL_STREAM_COPY_ARB	src/windows/include/GL/glext.h	803;"	d
GL_STREAM_DRAW	src/windows/include/GL/glext.h	349;"	d
GL_STREAM_DRAW_ARB	src/windows/include/GL/glext.h	801;"	d
GL_STREAM_READ	src/windows/include/GL/glext.h	350;"	d
GL_STREAM_READ_ARB	src/windows/include/GL/glext.h	802;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	src/windows/include/GL/glext.h	1505;"	d
GL_STRICT_LIGHTING_HINT_PGI	src/windows/include/GL/glext.h	1506;"	d
GL_STRICT_SCISSOR_HINT_PGI	src/windows/include/GL/glext.h	1507;"	d
GL_SUBTRACT	src/windows/include/GL/glext.h	272;"	d
GL_SUBTRACT_ARB	src/windows/include/GL/glext.h	639;"	d
GL_SUB_ATI	src/windows/include/GL/glext.h	2515;"	d
GL_SUNX_constant_data	src/windows/include/GL/glext.h	5073;"	d
GL_SUN_convolution_border_modes	src/windows/include/GL/glext.h	5245;"	d
GL_SUN_global_alpha	src/windows/include/GL/glext.h	5081;"	d
GL_SUN_mesh_array	src/windows/include/GL/glext.h	6037;"	d
GL_SUN_slice_accum	src/windows/include/GL/glext.h	6045;"	d
GL_SUN_triangle_list	src/windows/include/GL/glext.h	5103;"	d
GL_SUN_vertex	src/windows/include/GL/glext.h	5123;"	d
GL_SWIZZLE_STQ_ATI	src/windows/include/GL/glext.h	2533;"	d
GL_SWIZZLE_STQ_DQ_ATI	src/windows/include/GL/glext.h	2535;"	d
GL_SWIZZLE_STRQ_ATI	src/windows/include/GL/glext.h	2536;"	d
GL_SWIZZLE_STRQ_DQ_ATI	src/windows/include/GL/glext.h	2537;"	d
GL_SWIZZLE_STR_ATI	src/windows/include/GL/glext.h	2532;"	d
GL_SWIZZLE_STR_DR_ATI	src/windows/include/GL/glext.h	2534;"	d
GL_T2F_IUI_N3F_V2F_EXT	src/windows/include/GL/glext.h	1573;"	d
GL_T2F_IUI_N3F_V3F_EXT	src/windows/include/GL/glext.h	1574;"	d
GL_T2F_IUI_V2F_EXT	src/windows/include/GL/glext.h	1571;"	d
GL_T2F_IUI_V3F_EXT	src/windows/include/GL/glext.h	1572;"	d
GL_TABLE_TOO_LARGE	src/windows/include/GL/glext.h	148;"	d
GL_TABLE_TOO_LARGE_EXT	src/windows/include/GL/glext.h	1058;"	d
GL_TANGENT_ARRAY_EXT	src/windows/include/GL/glext.h	1767;"	d
GL_TANGENT_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1775;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1772;"	d
GL_TANGENT_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1771;"	d
GL_TEXCOORD1_BIT_PGI	src/windows/include/GL/glext.h	1484;"	d
GL_TEXCOORD2_BIT_PGI	src/windows/include/GL/glext.h	1485;"	d
GL_TEXCOORD3_BIT_PGI	src/windows/include/GL/glext.h	1486;"	d
GL_TEXCOORD4_BIT_PGI	src/windows/include/GL/glext.h	1487;"	d
GL_TEXTURE0	src/windows/include/GL/glext.h	182;"	d
GL_TEXTURE0_ARB	src/windows/include/GL/glext.h	463;"	d
GL_TEXTURE1	src/windows/include/GL/glext.h	183;"	d
GL_TEXTURE10	src/windows/include/GL/glext.h	192;"	d
GL_TEXTURE10_ARB	src/windows/include/GL/glext.h	473;"	d
GL_TEXTURE11	src/windows/include/GL/glext.h	193;"	d
GL_TEXTURE11_ARB	src/windows/include/GL/glext.h	474;"	d
GL_TEXTURE12	src/windows/include/GL/glext.h	194;"	d
GL_TEXTURE12_ARB	src/windows/include/GL/glext.h	475;"	d
GL_TEXTURE13	src/windows/include/GL/glext.h	195;"	d
GL_TEXTURE13_ARB	src/windows/include/GL/glext.h	476;"	d
GL_TEXTURE14	src/windows/include/GL/glext.h	196;"	d
GL_TEXTURE14_ARB	src/windows/include/GL/glext.h	477;"	d
GL_TEXTURE15	src/windows/include/GL/glext.h	197;"	d
GL_TEXTURE15_ARB	src/windows/include/GL/glext.h	478;"	d
GL_TEXTURE16	src/windows/include/GL/glext.h	198;"	d
GL_TEXTURE16_ARB	src/windows/include/GL/glext.h	479;"	d
GL_TEXTURE17	src/windows/include/GL/glext.h	199;"	d
GL_TEXTURE17_ARB	src/windows/include/GL/glext.h	480;"	d
GL_TEXTURE18	src/windows/include/GL/glext.h	200;"	d
GL_TEXTURE18_ARB	src/windows/include/GL/glext.h	481;"	d
GL_TEXTURE19	src/windows/include/GL/glext.h	201;"	d
GL_TEXTURE19_ARB	src/windows/include/GL/glext.h	482;"	d
GL_TEXTURE1_ARB	src/windows/include/GL/glext.h	464;"	d
GL_TEXTURE2	src/windows/include/GL/glext.h	184;"	d
GL_TEXTURE20	src/windows/include/GL/glext.h	202;"	d
GL_TEXTURE20_ARB	src/windows/include/GL/glext.h	483;"	d
GL_TEXTURE21	src/windows/include/GL/glext.h	203;"	d
GL_TEXTURE21_ARB	src/windows/include/GL/glext.h	484;"	d
GL_TEXTURE22	src/windows/include/GL/glext.h	204;"	d
GL_TEXTURE22_ARB	src/windows/include/GL/glext.h	485;"	d
GL_TEXTURE23	src/windows/include/GL/glext.h	205;"	d
GL_TEXTURE23_ARB	src/windows/include/GL/glext.h	486;"	d
GL_TEXTURE24	src/windows/include/GL/glext.h	206;"	d
GL_TEXTURE24_ARB	src/windows/include/GL/glext.h	487;"	d
GL_TEXTURE25	src/windows/include/GL/glext.h	207;"	d
GL_TEXTURE25_ARB	src/windows/include/GL/glext.h	488;"	d
GL_TEXTURE26	src/windows/include/GL/glext.h	208;"	d
GL_TEXTURE26_ARB	src/windows/include/GL/glext.h	489;"	d
GL_TEXTURE27	src/windows/include/GL/glext.h	209;"	d
GL_TEXTURE27_ARB	src/windows/include/GL/glext.h	490;"	d
GL_TEXTURE28	src/windows/include/GL/glext.h	210;"	d
GL_TEXTURE28_ARB	src/windows/include/GL/glext.h	491;"	d
GL_TEXTURE29	src/windows/include/GL/glext.h	211;"	d
GL_TEXTURE29_ARB	src/windows/include/GL/glext.h	492;"	d
GL_TEXTURE2_ARB	src/windows/include/GL/glext.h	465;"	d
GL_TEXTURE3	src/windows/include/GL/glext.h	185;"	d
GL_TEXTURE30	src/windows/include/GL/glext.h	212;"	d
GL_TEXTURE30_ARB	src/windows/include/GL/glext.h	493;"	d
GL_TEXTURE31	src/windows/include/GL/glext.h	213;"	d
GL_TEXTURE31_ARB	src/windows/include/GL/glext.h	494;"	d
GL_TEXTURE3_ARB	src/windows/include/GL/glext.h	466;"	d
GL_TEXTURE4	src/windows/include/GL/glext.h	186;"	d
GL_TEXTURE4_ARB	src/windows/include/GL/glext.h	467;"	d
GL_TEXTURE5	src/windows/include/GL/glext.h	187;"	d
GL_TEXTURE5_ARB	src/windows/include/GL/glext.h	468;"	d
GL_TEXTURE6	src/windows/include/GL/glext.h	188;"	d
GL_TEXTURE6_ARB	src/windows/include/GL/glext.h	469;"	d
GL_TEXTURE7	src/windows/include/GL/glext.h	189;"	d
GL_TEXTURE7_ARB	src/windows/include/GL/glext.h	470;"	d
GL_TEXTURE8	src/windows/include/GL/glext.h	190;"	d
GL_TEXTURE8_ARB	src/windows/include/GL/glext.h	471;"	d
GL_TEXTURE9	src/windows/include/GL/glext.h	191;"	d
GL_TEXTURE9_ARB	src/windows/include/GL/glext.h	472;"	d
GL_TEXTURE_1D_BINDING_EXT	src/windows/include/GL/glext.h	1157;"	d
GL_TEXTURE_2D_BINDING_EXT	src/windows/include/GL/glext.h	1158;"	d
GL_TEXTURE_3D	src/windows/include/GL/glext.h	71;"	d
GL_TEXTURE_3D_BINDING_EXT	src/windows/include/GL/glext.h	1159;"	d
GL_TEXTURE_3D_EXT	src/windows/include/GL/glext.h	1026;"	d
GL_TEXTURE_4DSIZE_SGIS	src/windows/include/GL/glext.h	1136;"	d
GL_TEXTURE_4D_BINDING_SGIS	src/windows/include/GL/glext.h	1139;"	d
GL_TEXTURE_4D_SGIS	src/windows/include/GL/glext.h	1134;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	src/windows/include/GL/glext.h	1012;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	src/windows/include/GL/glext.h	931;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	src/windows/include/GL/glext.h	1646;"	d
GL_TEXTURE_BASE_LEVEL	src/windows/include/GL/glext.h	90;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	src/windows/include/GL/glext.h	1191;"	d
GL_TEXTURE_BINDING_3D	src/windows/include/GL/glext.h	66;"	d
GL_TEXTURE_BINDING_CUBE_MAP	src/windows/include/GL/glext.h	233;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	src/windows/include/GL/glext.h	526;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	src/windows/include/GL/glext.h	1896;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	src/windows/include/GL/glext.h	910;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	src/windows/include/GL/glext.h	2226;"	d
GL_TEXTURE_BLUE_SIZE_EXT	src/windows/include/GL/glext.h	1011;"	d
GL_TEXTURE_BLUE_TYPE_ARB	src/windows/include/GL/glext.h	930;"	d
GL_TEXTURE_BORDER_VALUES_NV	src/windows/include/GL/glext.h	2299;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	src/windows/include/GL/glext.h	1263;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	src/windows/include/GL/glext.h	1268;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	src/windows/include/GL/glext.h	1264;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	src/windows/include/GL/glext.h	1267;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	src/windows/include/GL/glext.h	1265;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	src/windows/include/GL/glext.h	1266;"	d
GL_TEXTURE_COLOR_TABLE_SGI	src/windows/include/GL/glext.h	1143;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	src/windows/include/GL/glext.h	2162;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	src/windows/include/GL/glext.h	672;"	d
GL_TEXTURE_COMPARE_FUNC	src/windows/include/GL/glext.h	318;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	src/windows/include/GL/glext.h	667;"	d
GL_TEXTURE_COMPARE_MODE	src/windows/include/GL/glext.h	317;"	d
GL_TEXTURE_COMPARE_MODE_ARB	src/windows/include/GL/glext.h	666;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	src/windows/include/GL/glext.h	1278;"	d
GL_TEXTURE_COMPARE_SGIX	src/windows/include/GL/glext.h	1277;"	d
GL_TEXTURE_COMPRESSED	src/windows/include/GL/glext.h	250;"	d
GL_TEXTURE_COMPRESSED_ARB	src/windows/include/GL/glext.h	546;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	src/windows/include/GL/glext.h	249;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	src/windows/include/GL/glext.h	545;"	d
GL_TEXTURE_COMPRESSION_HINT	src/windows/include/GL/glext.h	248;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	src/windows/include/GL/glext.h	544;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	src/windows/include/GL/glext.h	1822;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	337;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	789;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	src/windows/include/GL/glext.h	1242;"	d
GL_TEXTURE_COORD_ARRAY_EXT	src/windows/include/GL/glext.h	1223;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2062;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2070;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	src/windows/include/GL/glext.h	1699;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1249;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	src/windows/include/GL/glext.h	1239;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1241;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1240;"	d
GL_TEXTURE_CUBE_MAP	src/windows/include/GL/glext.h	232;"	d
GL_TEXTURE_CUBE_MAP_ARB	src/windows/include/GL/glext.h	525;"	d
GL_TEXTURE_CUBE_MAP_EXT	src/windows/include/GL/glext.h	1895;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	src/windows/include/GL/glext.h	235;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	src/windows/include/GL/glext.h	528;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	src/windows/include/GL/glext.h	1898;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	src/windows/include/GL/glext.h	237;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	src/windows/include/GL/glext.h	530;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	src/windows/include/GL/glext.h	1900;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	src/windows/include/GL/glext.h	239;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	src/windows/include/GL/glext.h	532;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	src/windows/include/GL/glext.h	1902;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	src/windows/include/GL/glext.h	234;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	src/windows/include/GL/glext.h	527;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	src/windows/include/GL/glext.h	1897;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	src/windows/include/GL/glext.h	236;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	src/windows/include/GL/glext.h	529;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	src/windows/include/GL/glext.h	1899;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	src/windows/include/GL/glext.h	238;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	src/windows/include/GL/glext.h	531;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	src/windows/include/GL/glext.h	1901;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	src/windows/include/GL/glext.h	1396;"	d
GL_TEXTURE_DEFORMATION_SGIX	src/windows/include/GL/glext.h	1402;"	d
GL_TEXTURE_DEPTH	src/windows/include/GL/glext.h	73;"	d
GL_TEXTURE_DEPTH_EXT	src/windows/include/GL/glext.h	1028;"	d
GL_TEXTURE_DEPTH_SIZE	src/windows/include/GL/glext.h	315;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	src/windows/include/GL/glext.h	661;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	src/windows/include/GL/glext.h	934;"	d
GL_TEXTURE_DS_SIZE_NV	src/windows/include/GL/glext.h	2302;"	d
GL_TEXTURE_DT_SIZE_NV	src/windows/include/GL/glext.h	2303;"	d
GL_TEXTURE_ENV_BIAS_SGIX	src/windows/include/GL/glext.h	1461;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	src/windows/include/GL/glext.h	1035;"	d
GL_TEXTURE_FILTER_CONTROL	src/windows/include/GL/glext.h	311;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	src/windows/include/GL/glext.h	1916;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	src/windows/include/GL/glext.h	2873;"	d
GL_TEXTURE_GEQUAL_R_SGIX	src/windows/include/GL/glext.h	1280;"	d
GL_TEXTURE_GREEN_SIZE_EXT	src/windows/include/GL/glext.h	1010;"	d
GL_TEXTURE_GREEN_TYPE_ARB	src/windows/include/GL/glext.h	929;"	d
GL_TEXTURE_HI_SIZE_NV	src/windows/include/GL/glext.h	2300;"	d
GL_TEXTURE_INDEX_SIZE_EXT	src/windows/include/GL/glext.h	1522;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	src/windows/include/GL/glext.h	1014;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	src/windows/include/GL/glext.h	933;"	d
GL_TEXTURE_LEQUAL_R_SGIX	src/windows/include/GL/glext.h	1279;"	d
GL_TEXTURE_LIGHTING_MODE_HP	src/windows/include/GL/glext.h	1621;"	d
GL_TEXTURE_LIGHT_EXT	src/windows/include/GL/glext.h	1647;"	d
GL_TEXTURE_LOD_BIAS	src/windows/include/GL/glext.h	312;"	d
GL_TEXTURE_LOD_BIAS_EXT	src/windows/include/GL/glext.h	1917;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	src/windows/include/GL/glext.h	1544;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	src/windows/include/GL/glext.h	1542;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	src/windows/include/GL/glext.h	1543;"	d
GL_TEXTURE_LO_SIZE_NV	src/windows/include/GL/glext.h	2301;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	src/windows/include/GL/glext.h	1013;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	src/windows/include/GL/glext.h	932;"	d
GL_TEXTURE_MAG_SIZE_NV	src/windows/include/GL/glext.h	2304;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	src/windows/include/GL/glext.h	1648;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	src/windows/include/GL/glext.h	1649;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	src/windows/include/GL/glext.h	1921;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	src/windows/include/GL/glext.h	2404;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	src/windows/include/GL/glext.h	2402;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	src/windows/include/GL/glext.h	2403;"	d
GL_TEXTURE_MAX_LEVEL	src/windows/include/GL/glext.h	91;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	src/windows/include/GL/glext.h	1192;"	d
GL_TEXTURE_MAX_LOD	src/windows/include/GL/glext.h	89;"	d
GL_TEXTURE_MAX_LOD_SGIS	src/windows/include/GL/glext.h	1190;"	d
GL_TEXTURE_MIN_LOD	src/windows/include/GL/glext.h	88;"	d
GL_TEXTURE_MIN_LOD_SGIS	src/windows/include/GL/glext.h	1189;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	src/windows/include/GL/glext.h	1357;"	d
GL_TEXTURE_NORMAL_EXT	src/windows/include/GL/glext.h	1744;"	d
GL_TEXTURE_POST_SPECULAR_HP	src/windows/include/GL/glext.h	1622;"	d
GL_TEXTURE_PRE_SPECULAR_HP	src/windows/include/GL/glext.h	1623;"	d
GL_TEXTURE_PRIORITY_EXT	src/windows/include/GL/glext.h	1155;"	d
GL_TEXTURE_RECTANGLE_ARB	src/windows/include/GL/glext.h	909;"	d
GL_TEXTURE_RECTANGLE_NV	src/windows/include/GL/glext.h	2225;"	d
GL_TEXTURE_RED_SIZE_EXT	src/windows/include/GL/glext.h	1009;"	d
GL_TEXTURE_RED_TYPE_ARB	src/windows/include/GL/glext.h	928;"	d
GL_TEXTURE_RESIDENT_EXT	src/windows/include/GL/glext.h	1156;"	d
GL_TEXTURE_SHADER_NV	src/windows/include/GL/glext.h	2240;"	d
GL_TEXTURE_TOO_LARGE_EXT	src/windows/include/GL/glext.h	1018;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	src/windows/include/GL/glext.h	2906;"	d
GL_TEXTURE_WRAP_Q_SGIS	src/windows/include/GL/glext.h	1137;"	d
GL_TEXTURE_WRAP_R	src/windows/include/GL/glext.h	74;"	d
GL_TEXTURE_WRAP_R_EXT	src/windows/include/GL/glext.h	1029;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	src/windows/include/GL/glext.h	2770;"	d
GL_TRACK_MATRIX_NV	src/windows/include/GL/glext.h	2347;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	src/windows/include/GL/glext.h	2348;"	d
GL_TRANSFORM_HINT_APPLE	src/windows/include/GL/glext.h	1812;"	d
GL_TRANSPOSE_COLOR_MATRIX	src/windows/include/GL/glext.h	220;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	src/windows/include/GL/glext.h	504;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	src/windows/include/GL/glext.h	725;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	src/windows/include/GL/glext.h	217;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	src/windows/include/GL/glext.h	501;"	d
GL_TRANSPOSE_NV	src/windows/include/GL/glext.h	2327;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	src/windows/include/GL/glext.h	218;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	src/windows/include/GL/glext.h	502;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	src/windows/include/GL/glext.h	219;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	src/windows/include/GL/glext.h	503;"	d
GL_TRIANGLE_LIST_SUN	src/windows/include/GL/glext.h	1834;"	d
GL_TRIANGLE_MESH_SUN	src/windows/include/GL/glext.h	2710;"	d
GL_TYPE_RGBA_FLOAT_ATI	src/windows/include/GL/glext.h	2835;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	src/windows/include/GL/glext.h	2774;"	d
GL_UNPACK_CMYK_HINT_EXT	src/windows/include/GL/glext.h	1151;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	src/windows/include/GL/glext.h	1821;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	src/windows/include/GL/glext.h	1133;"	d
GL_UNPACK_IMAGE_HEIGHT	src/windows/include/GL/glext.h	70;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	src/windows/include/GL/glext.h	1025;"	d
GL_UNPACK_RESAMPLE_OML	src/windows/include/GL/glext.h	2423;"	d
GL_UNPACK_RESAMPLE_SGIX	src/windows/include/GL/glext.h	2144;"	d
GL_UNPACK_SKIP_IMAGES	src/windows/include/GL/glext.h	69;"	d
GL_UNPACK_SKIP_IMAGES_EXT	src/windows/include/GL/glext.h	1024;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	src/windows/include/GL/glext.h	1132;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	src/windows/include/GL/glext.h	2078;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	src/windows/include/GL/glext.h	76;"	d
GL_UNSIGNED_BYTE_3_3_2	src/windows/include/GL/glext.h	60;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	src/windows/include/GL/glext.h	1181;"	d
GL_UNSIGNED_IDENTITY_NV	src/windows/include/GL/glext.h	1972;"	d
GL_UNSIGNED_INT_10_10_10_2	src/windows/include/GL/glext.h	64;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	src/windows/include/GL/glext.h	1185;"	d
GL_UNSIGNED_INT_24_8_NV	src/windows/include/GL/glext.h	2214;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	src/windows/include/GL/glext.h	82;"	d
GL_UNSIGNED_INT_8_8_8_8	src/windows/include/GL/glext.h	63;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	src/windows/include/GL/glext.h	1184;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	src/windows/include/GL/glext.h	81;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	src/windows/include/GL/glext.h	2237;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	src/windows/include/GL/glext.h	2236;"	d
GL_UNSIGNED_INVERT_NV	src/windows/include/GL/glext.h	1973;"	d
GL_UNSIGNED_NORMALIZED_ARB	src/windows/include/GL/glext.h	935;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	src/windows/include/GL/glext.h	80;"	d
GL_UNSIGNED_SHORT_4_4_4_4	src/windows/include/GL/glext.h	61;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	src/windows/include/GL/glext.h	1182;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	src/windows/include/GL/glext.h	79;"	d
GL_UNSIGNED_SHORT_5_5_5_1	src/windows/include/GL/glext.h	62;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	src/windows/include/GL/glext.h	1183;"	d
GL_UNSIGNED_SHORT_5_6_5	src/windows/include/GL/glext.h	77;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	src/windows/include/GL/glext.h	78;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	src/windows/include/GL/glext.h	2803;"	d
GL_UNSIGNED_SHORT_8_8_MESA	src/windows/include/GL/glext.h	2951;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	src/windows/include/GL/glext.h	2804;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	src/windows/include/GL/glext.h	2952;"	d
GL_UPPER_LEFT	src/windows/include/GL/glext.h	456;"	d
GL_VALIDATE_STATUS	src/windows/include/GL/glext.h	443;"	d
GL_VARIABLE_A_NV	src/windows/include/GL/glext.h	1956;"	d
GL_VARIABLE_B_NV	src/windows/include/GL/glext.h	1957;"	d
GL_VARIABLE_C_NV	src/windows/include/GL/glext.h	1958;"	d
GL_VARIABLE_D_NV	src/windows/include/GL/glext.h	1959;"	d
GL_VARIABLE_E_NV	src/windows/include/GL/glext.h	1960;"	d
GL_VARIABLE_F_NV	src/windows/include/GL/glext.h	1961;"	d
GL_VARIABLE_G_NV	src/windows/include/GL/glext.h	1962;"	d
GL_VARIANT_ARRAY_EXT	src/windows/include/GL/glext.h	2681;"	d
GL_VARIANT_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	2682;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	2679;"	d
GL_VARIANT_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	2680;"	d
GL_VARIANT_DATATYPE_EXT	src/windows/include/GL/glext.h	2678;"	d
GL_VARIANT_EXT	src/windows/include/GL/glext.h	2642;"	d
GL_VARIANT_VALUE_EXT	src/windows/include/GL/glext.h	2677;"	d
GL_VECTOR_EXT	src/windows/include/GL/glext.h	2640;"	d
GL_VERSION_1_2	src/windows/include/GL/glext.h	3078;"	d
GL_VERSION_1_3	src/windows/include/GL/glext.h	3160;"	d
GL_VERSION_1_4	src/windows/include/GL/glext.h	3258;"	d
GL_VERSION_1_5	src/windows/include/GL/glext.h	3354;"	d
GL_VERSION_2_0	src/windows/include/GL/glext.h	3398;"	d
GL_VERTEX23_BIT_PGI	src/windows/include/GL/glext.h	1488;"	d
GL_VERTEX4_BIT_PGI	src/windows/include/GL/glext.h	1489;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	src/windows/include/GL/glext.h	2789;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	333;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	785;"	d
GL_VERTEX_ARRAY_COUNT_EXT	src/windows/include/GL/glext.h	1228;"	d
GL_VERTEX_ARRAY_EXT	src/windows/include/GL/glext.h	1219;"	d
GL_VERTEX_ARRAY_LIST_IBM	src/windows/include/GL/glext.h	2058;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	src/windows/include/GL/glext.h	2066;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	src/windows/include/GL/glext.h	1696;"	d
GL_VERTEX_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1245;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	src/windows/include/GL/glext.h	2793;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	src/windows/include/GL/glext.h	2794;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	src/windows/include/GL/glext.h	1948;"	d
GL_VERTEX_ARRAY_RANGE_NV	src/windows/include/GL/glext.h	1947;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	src/windows/include/GL/glext.h	2796;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	src/windows/include/GL/glext.h	1951;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	src/windows/include/GL/glext.h	1949;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	src/windows/include/GL/glext.h	2312;"	d
GL_VERTEX_ARRAY_SIZE_EXT	src/windows/include/GL/glext.h	1225;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	src/windows/include/GL/glext.h	2795;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1227;"	d
GL_VERTEX_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1226;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	src/windows/include/GL/glext.h	2351;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	src/windows/include/GL/glext.h	2361;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	src/windows/include/GL/glext.h	2362;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	src/windows/include/GL/glext.h	2363;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	src/windows/include/GL/glext.h	2364;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	src/windows/include/GL/glext.h	2365;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	src/windows/include/GL/glext.h	2366;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	src/windows/include/GL/glext.h	2352;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	src/windows/include/GL/glext.h	2353;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	src/windows/include/GL/glext.h	2354;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	src/windows/include/GL/glext.h	2355;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	src/windows/include/GL/glext.h	2356;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	src/windows/include/GL/glext.h	2357;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	src/windows/include/GL/glext.h	2358;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	src/windows/include/GL/glext.h	2359;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	src/windows/include/GL/glext.h	2360;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	342;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	794;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	src/windows/include/GL/glext.h	377;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	src/windows/include/GL/glext.h	681;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	src/windows/include/GL/glext.h	410;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	src/windows/include/GL/glext.h	698;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	src/windows/include/GL/glext.h	384;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	src/windows/include/GL/glext.h	694;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	src/windows/include/GL/glext.h	378;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	src/windows/include/GL/glext.h	682;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	src/windows/include/GL/glext.h	379;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	src/windows/include/GL/glext.h	683;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	src/windows/include/GL/glext.h	380;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	src/windows/include/GL/glext.h	684;"	d
GL_VERTEX_BLEND_ARB	src/windows/include/GL/glext.h	566;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	src/windows/include/GL/glext.h	1469;"	d
GL_VERTEX_DATA_HINT_PGI	src/windows/include/GL/glext.h	1468;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	src/windows/include/GL/glext.h	2135;"	d
GL_VERTEX_PRECLIP_SGIX	src/windows/include/GL/glext.h	2134;"	d
GL_VERTEX_PROGRAM_ARB	src/windows/include/GL/glext.h	680;"	d
GL_VERTEX_PROGRAM_BINDING_NV	src/windows/include/GL/glext.h	2349;"	d
GL_VERTEX_PROGRAM_NV	src/windows/include/GL/glext.h	2316;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	src/windows/include/GL/glext.h	382;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	src/windows/include/GL/glext.h	692;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	src/windows/include/GL/glext.h	2341;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	src/windows/include/GL/glext.h	383;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	src/windows/include/GL/glext.h	693;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	src/windows/include/GL/glext.h	2342;"	d
GL_VERTEX_SHADER	src/windows/include/GL/glext.h	414;"	d
GL_VERTEX_SHADER_ARB	src/windows/include/GL/glext.h	858;"	d
GL_VERTEX_SHADER_BINDING_EXT	src/windows/include/GL/glext.h	2578;"	d
GL_VERTEX_SHADER_EXT	src/windows/include/GL/glext.h	2577;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	src/windows/include/GL/glext.h	2656;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	src/windows/include/GL/glext.h	2658;"	d
GL_VERTEX_SHADER_LOCALS_EXT	src/windows/include/GL/glext.h	2660;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	src/windows/include/GL/glext.h	2659;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	src/windows/include/GL/glext.h	2661;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	src/windows/include/GL/glext.h	2657;"	d
GL_VERTEX_SOURCE_ATI	src/windows/include/GL/glext.h	2699;"	d
GL_VERTEX_STATE_PROGRAM_NV	src/windows/include/GL/glext.h	2317;"	d
GL_VERTEX_STREAM0_ATI	src/windows/include/GL/glext.h	2691;"	d
GL_VERTEX_STREAM1_ATI	src/windows/include/GL/glext.h	2692;"	d
GL_VERTEX_STREAM2_ATI	src/windows/include/GL/glext.h	2693;"	d
GL_VERTEX_STREAM3_ATI	src/windows/include/GL/glext.h	2694;"	d
GL_VERTEX_STREAM4_ATI	src/windows/include/GL/glext.h	2695;"	d
GL_VERTEX_STREAM5_ATI	src/windows/include/GL/glext.h	2696;"	d
GL_VERTEX_STREAM6_ATI	src/windows/include/GL/glext.h	2697;"	d
GL_VERTEX_STREAM7_ATI	src/windows/include/GL/glext.h	2698;"	d
GL_VERTEX_WEIGHTING_EXT	src/windows/include/GL/glext.h	1930;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	src/windows/include/GL/glext.h	1934;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	src/windows/include/GL/glext.h	1938;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	src/windows/include/GL/glext.h	1935;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	src/windows/include/GL/glext.h	1937;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	src/windows/include/GL/glext.h	1936;"	d
GL_VIBRANCE_BIAS_NV	src/windows/include/GL/glext.h	2298;"	d
GL_VIBRANCE_SCALE_NV	src/windows/include/GL/glext.h	2292;"	d
GL_WEIGHT_ARRAY_ARB	src/windows/include/GL/glext.h	572;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	src/windows/include/GL/glext.h	341;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	src/windows/include/GL/glext.h	793;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	src/windows/include/GL/glext.h	571;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	src/windows/include/GL/glext.h	570;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	src/windows/include/GL/glext.h	569;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	src/windows/include/GL/glext.h	568;"	d
GL_WEIGHT_SUM_UNITY_ARB	src/windows/include/GL/glext.h	565;"	d
GL_WIDE_LINE_HINT_PGI	src/windows/include/GL/glext.h	1511;"	d
GL_WIN_phong_shading	src/windows/include/GL/glext.h	4831;"	d
GL_WIN_specular_fog	src/windows/include/GL/glext.h	4835;"	d
GL_WRAP_BORDER_SUN	src/windows/include/GL/glext.h	1908;"	d
GL_WRITE_ONLY	src/windows/include/GL/glext.h	344;"	d
GL_WRITE_ONLY_ARB	src/windows/include/GL/glext.h	796;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	src/windows/include/GL/glext.h	2894;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	src/windows/include/GL/glext.h	2892;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	src/windows/include/GL/glext.h	2896;"	d
GL_W_EXT	src/windows/include/GL/glext.h	2665;"	d
GL_X_EXT	src/windows/include/GL/glext.h	2662;"	d
GL_YCBCR_422_APPLE	src/windows/include/GL/glext.h	2802;"	d
GL_YCBCR_MESA	src/windows/include/GL/glext.h	2953;"	d
GL_YCRCBA_SGIX	src/windows/include/GL/glext.h	2089;"	d
GL_YCRCB_422_SGIX	src/windows/include/GL/glext.h	1589;"	d
GL_YCRCB_444_SGIX	src/windows/include/GL/glext.h	1590;"	d
GL_YCRCB_SGIX	src/windows/include/GL/glext.h	2088;"	d
GL_Y_EXT	src/windows/include/GL/glext.h	2663;"	d
GL_ZERO_EXT	src/windows/include/GL/glext.h	2670;"	d
GL_Z_EXT	src/windows/include/GL/glext.h	2664;"	d
GLchar	src/windows/include/GL/glext.h	/^typedef char GLchar;			\/* native character *\/$/;"	t
GLcharARB	src/windows/include/GL/glext.h	/^typedef char GLcharARB;		\/* native character *\/$/;"	t
GLhalfARB	src/windows/include/GL/glext.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	src/windows/include/GL/glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	src/windows/include/GL/glext.h	/^typedef unsigned int GLhandleARB;	\/* shader object handle *\/$/;"	t
GLintptr	src/windows/include/GL/glext.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	src/windows/include/GL/glext.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLsizeiptr	src/windows/include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	src/windows/include/GL/glext.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GNU Free Documentation License	doc/tutorials/robot/fdl.html	/^<A NAME="GNU Free Documentation License"><\/A>$/;"	a
GNU Free Documentation License	doc/tutorials/track/fdl.html	/^<A NAME="GNU Free Documentation License"><\/A>$/;"	a
GREAT	src/tools/trackgen/easymesh.cpp	50;"	d	file:
GRX_IDENT	export/include/graphic.h	27;"	d
GRX_IDENT	src/interfaces/graphic.h	27;"	d
GR_ATT_ARCADE	export/include/graphic.h	57;"	d
GR_ATT_ARCADE	src/interfaces/graphic.h	57;"	d
GR_ATT_BOARD	export/include/graphic.h	52;"	d
GR_ATT_BOARD	src/interfaces/graphic.h	52;"	d
GR_ATT_CAM	export/include/graphic.h	47;"	d
GR_ATT_CAM	src/interfaces/graphic.h	47;"	d
GR_ATT_CAM_HEAD	export/include/graphic.h	48;"	d
GR_ATT_CAM_HEAD	src/interfaces/graphic.h	48;"	d
GR_ATT_CHGCAMINT	export/include/graphic.h	61;"	d
GR_ATT_CHGCAMINT	src/interfaces/graphic.h	61;"	d
GR_ATT_COUNTER	export/include/graphic.h	53;"	d
GR_ATT_COUNTER	src/interfaces/graphic.h	53;"	d
GR_ATT_CUR_DRV	export/include/graphic.h	77;"	d
GR_ATT_CUR_DRV	src/interfaces/graphic.h	77;"	d
GR_ATT_DEBUG	export/include/graphic.h	55;"	d
GR_ATT_DEBUG	src/interfaces/graphic.h	55;"	d
GR_ATT_EVTINT	export/include/graphic.h	62;"	d
GR_ATT_EVTINT	src/interfaces/graphic.h	62;"	d
GR_ATT_FOVFACT	export/include/graphic.h	73;"	d
GR_ATT_FOVFACT	src/interfaces/graphic.h	73;"	d
GR_ATT_FOVY	export/include/graphic.h	51;"	d
GR_ATT_FOVY	src/interfaces/graphic.h	51;"	d
GR_ATT_FRONT_GLOBAL	export/include/graphic.h	80;"	d
GR_ATT_FRONT_GLOBAL	src/interfaces/graphic.h	80;"	d
GR_ATT_FRONT_LEVEL1	export/include/graphic.h	83;"	d
GR_ATT_FRONT_LEVEL1	src/interfaces/graphic.h	83;"	d
GR_ATT_FRONT_LEVEL2	export/include/graphic.h	82;"	d
GR_ATT_FRONT_LEVEL2	src/interfaces/graphic.h	82;"	d
GR_ATT_FRONT_LEVEL3	export/include/graphic.h	81;"	d
GR_ATT_FRONT_LEVEL3	src/interfaces/graphic.h	81;"	d
GR_ATT_FRONT_MAP1	export/include/graphic.h	89;"	d
GR_ATT_FRONT_MAP1	src/interfaces/graphic.h	89;"	d
GR_ATT_FRONT_MAP2	export/include/graphic.h	90;"	d
GR_ATT_FRONT_MAP2	src/interfaces/graphic.h	90;"	d
GR_ATT_FRONT_MAP3	export/include/graphic.h	91;"	d
GR_ATT_FRONT_MAP3	src/interfaces/graphic.h	91;"	d
GR_ATT_GGRAPH	export/include/graphic.h	56;"	d
GR_ATT_GGRAPH	src/interfaces/graphic.h	56;"	d
GR_ATT_LEADER	export/include/graphic.h	54;"	d
GR_ATT_LEADER	src/interfaces/graphic.h	54;"	d
GR_ATT_LODFACTOR	export/include/graphic.h	74;"	d
GR_ATT_LODFACTOR	src/interfaces/graphic.h	74;"	d
GR_ATT_MAP	export/include/graphic.h	50;"	d
GR_ATT_MAP	src/interfaces/graphic.h	50;"	d
GR_ATT_MAXPOINTBYSTRIP	export/include/graphic.h	71;"	d
GR_ATT_MAXPOINTBYSTRIP	src/interfaces/graphic.h	71;"	d
GR_ATT_MAXSTRIPBYWHEEL	export/include/graphic.h	70;"	d
GR_ATT_MAXSTRIPBYWHEEL	src/interfaces/graphic.h	70;"	d
GR_ATT_MIRROR	export/include/graphic.h	49;"	d
GR_ATT_MIRROR	src/interfaces/graphic.h	49;"	d
GR_ATT_NBLEADER	export/include/graphic.h	58;"	d
GR_ATT_NBLEADER	src/interfaces/graphic.h	58;"	d
GR_ATT_NB_SCREENS	export/include/graphic.h	76;"	d
GR_ATT_NB_SCREENS	src/interfaces/graphic.h	76;"	d
GR_ATT_PROXTHLD	export/include/graphic.h	63;"	d
GR_ATT_PROXTHLD	src/interfaces/graphic.h	63;"	d
GR_ATT_REAR_GLOBAL	export/include/graphic.h	84;"	d
GR_ATT_REAR_GLOBAL	src/interfaces/graphic.h	84;"	d
GR_ATT_REAR_LEVEL1	export/include/graphic.h	87;"	d
GR_ATT_REAR_LEVEL1	src/interfaces/graphic.h	87;"	d
GR_ATT_REAR_LEVEL2	export/include/graphic.h	86;"	d
GR_ATT_REAR_LEVEL2	src/interfaces/graphic.h	86;"	d
GR_ATT_REAR_LEVEL3	export/include/graphic.h	85;"	d
GR_ATT_REAR_LEVEL3	src/interfaces/graphic.h	85;"	d
GR_ATT_REAR_MAP1	export/include/graphic.h	92;"	d
GR_ATT_REAR_MAP1	src/interfaces/graphic.h	92;"	d
GR_ATT_REAR_MAP2	export/include/graphic.h	93;"	d
GR_ATT_REAR_MAP2	src/interfaces/graphic.h	93;"	d
GR_ATT_REAR_MAP3	export/include/graphic.h	94;"	d
GR_ATT_REAR_MAP3	src/interfaces/graphic.h	94;"	d
GR_ATT_SKIDDELTAT	export/include/graphic.h	72;"	d
GR_ATT_SKIDDELTAT	src/interfaces/graphic.h	72;"	d
GR_ATT_SMOKEDELTAT	export/include/graphic.h	67;"	d
GR_ATT_SMOKEDELTAT	src/interfaces/graphic.h	67;"	d
GR_ATT_SMOKEDLIFE	export/include/graphic.h	68;"	d
GR_ATT_SMOKEDLIFE	src/interfaces/graphic.h	68;"	d
GR_ATT_SMOKENB	export/include/graphic.h	66;"	d
GR_ATT_SMOKENB	src/interfaces/graphic.h	66;"	d
GR_ATT_SOUND_STATE	export/include/graphic.h	33;"	d
GR_ATT_SOUND_STATE	src/interfaces/graphic.h	33;"	d
GR_ATT_SOUND_STATE_DISABLED	export/include/graphic.h	36;"	d
GR_ATT_SOUND_STATE_DISABLED	src/interfaces/graphic.h	36;"	d
GR_ATT_SOUND_STATE_OPENAL	export/include/graphic.h	35;"	d
GR_ATT_SOUND_STATE_OPENAL	src/interfaces/graphic.h	35;"	d
GR_ATT_SOUND_STATE_PLIB	export/include/graphic.h	34;"	d
GR_ATT_SOUND_STATE_PLIB	src/interfaces/graphic.h	34;"	d
GR_ATT_SOUND_VOLUME	export/include/graphic.h	37;"	d
GR_ATT_SOUND_VOLUME	src/interfaces/graphic.h	37;"	d
GR_ATT_TEXTURECOMPRESSION	export/include/graphic.h	40;"	d
GR_ATT_TEXTURECOMPRESSION	src/interfaces/graphic.h	40;"	d
GR_ATT_TEXTURECOMPRESSION_DISABLED	export/include/graphic.h	42;"	d
GR_ATT_TEXTURECOMPRESSION_DISABLED	src/interfaces/graphic.h	42;"	d
GR_ATT_TEXTURECOMPRESSION_ENABLED	export/include/graphic.h	41;"	d
GR_ATT_TEXTURECOMPRESSION_ENABLED	src/interfaces/graphic.h	41;"	d
GR_ATT_TEXTURESIZE	export/include/graphic.h	44;"	d
GR_ATT_TEXTURESIZE	src/interfaces/graphic.h	44;"	d
GR_NB_MAX_SCREEN	src/modules/graphic/ssggraph/grmain.h	71;"	d
GR_PARAM_FILE	export/include/graphic.h	29;"	d
GR_PARAM_FILE	src/interfaces/graphic.h	29;"	d
GR_SCT_DISPMODE	export/include/graphic.h	46;"	d
GR_SCT_DISPMODE	src/interfaces/graphic.h	46;"	d
GR_SCT_GLFEATURES	export/include/graphic.h	39;"	d
GR_SCT_GLFEATURES	src/interfaces/graphic.h	39;"	d
GR_SCT_GRAPHIC	export/include/graphic.h	65;"	d
GR_SCT_GRAPHIC	src/interfaces/graphic.h	65;"	d
GR_SCT_PLAYABLE_DOV	export/include/graphic.h	79;"	d
GR_SCT_PLAYABLE_DOV	src/interfaces/graphic.h	79;"	d
GR_SCT_SOUND	export/include/graphic.h	32;"	d
GR_SCT_SOUND	src/interfaces/graphic.h	32;"	d
GR_SCT_TVDIR	export/include/graphic.h	60;"	d
GR_SCT_TVDIR	src/interfaces/graphic.h	60;"	d
GR_SHADOW_POINTS	src/modules/graphic/ssggraph/grcar.cpp	369;"	d	file:
GR_SOUND_PARM_CFG	export/include/graphic.h	31;"	d
GR_SOUND_PARM_CFG	src/interfaces/graphic.h	31;"	d
GR_SPLIT_ADD	src/modules/graphic/ssggraph/grmain.h	68;"	d
GR_SPLIT_REM	src/modules/graphic/ssggraph/grmain.h	69;"	d
GR_VIEW_PART	export/include/graphic.h	105;"	d
GR_VIEW_PART	src/interfaces/graphic.h	105;"	d
GR_VIEW_STD	export/include/graphic.h	104;"	d
GR_VIEW_STD	src/interfaces/graphic.h	104;"	d
GR_ZOOM_DFLT	src/modules/graphic/ssggraph/grcam.h	271;"	d
GR_ZOOM_IN	src/modules/graphic/ssggraph/grcam.h	267;"	d
GR_ZOOM_MAX	src/modules/graphic/ssggraph/grcam.h	269;"	d
GR_ZOOM_MIN	src/modules/graphic/ssggraph/grcam.h	270;"	d
GR_ZOOM_OUT	src/modules/graphic/ssggraph/grcam.h	268;"	d
GameModeDepth	src/libs/tgfclient/fg_gm.cpp	/^	int			GameModeDepth;      \/\/ The pixel depth for game mode.$/;"	m	struct:tagSFG_State	file:
GameModeRefresh	src/libs/tgfclient/fg_gm.cpp	/^	int			GameModeRefresh;	\/\/ The refresh rate for game mode.$/;"	m	struct:tagSFG_State	file:
GameModeSize	src/libs/tgfclient/fg_gm.cpp	/^	SFG_XYUse	GameModeSize;       \/\/ The game mode screen's dimensions.$/;"	m	struct:tagSFG_State	file:
Gear	src/drivers/human/human.h	/^	tdble	Gear;$/;"	m	struct:HumanContext
Gear	src/drivers/inferno2/inferno2.cpp	/^static tdble	Gear;$/;"	v	file:
GenCarsInfo	src/libs/confscreens/driverconfig.cpp	/^GenCarsInfo(void)$/;"	f	file:
GenDrvList	src/libs/confscreens/driverconfig.cpp	/^GenDrvList(void)$/;"	f	file:
GenRelief	src/tools/trackgen/relief.cpp	/^GenRelief(int interior)$/;"	f
Generate	src/tools/trackgen/maintrackgen.cpp	/^Generate(void)$/;"	f	file:
GenerateMesh	src/tools/trackgen/easymesh.cpp	/^GenerateMesh(tTrack *Track, int rightside, int reverse, int exterior)$/;"	f	file:
GenerateObjects	src/tools/trackgen/objects.cpp	/^GenerateObjects(tTrack *track, void *TrackHandle, void *CfgHandle, FILE *save_fd, char *meshFile)$/;"	f
GenerateTerrain	src/tools/trackgen/easymesh.cpp	/^GenerateTerrain(tTrack *track, void *TrackHandle, char *outfile, FILE *AllFd, int noElevation)$/;"	f
GenerateTrack	src/tools/trackgen/track.cpp	/^GenerateTrack(tTrack * Track, void *TrackHandle, char *outFile, FILE *AllFd, int bump)$/;"	f
GetDataDir	src/libs/tgf/tgf.cpp	/^char * GetDataDir(void)$/;"	f
GetDistToStart	src/drivers/inferno2/common.cpp	/^GetDistToStart(tCarElt *car)$/;"	f
GetDistToStart	src/modules/graphic/ssggraph/grcam.cpp	/^GetDistToStart(tCarElt *car)$/;"	f	file:
GetElevation	src/tools/trackgen/elevation.cpp	/^tdble GetElevation(tdble x, tdble y, tdble z)$/;"	f
GetFilename	src/tools/trackgen/util.cpp	/^GetFilename(char *filename, char *filepath, char *buf)$/;"	f
GetFrictionDm	src/drivers/olethros/learn.h	/^	float GetFrictionDm(tTrackSeg* s) {return (dm + segdm[s->id]);}$/;"	f	class:olethros::SegLearn
GetFrictionDm2	src/drivers/olethros/learn.h	/^	float GetFrictionDm2(tTrackSeg* s) {return (dm2 + segdm2[s->id]);}$/;"	f	class:olethros::SegLearn
GetFrictionDm3	src/drivers/olethros/learn.h	/^	float GetFrictionDm3(tTrackSeg* s) {return (dm3 + segdm3[s->id]);}$/;"	f	class:olethros::SegLearn
GetItem	src/libs/learning/List.cpp	/^LISTITEM* GetItem (LIST* list, int n)$/;"	f
GetLibDir	src/libs/tgf/tgf.cpp	/^char * GetLibDir(void)$/;"	f
GetLocalDir	src/libs/tgf/tgf.cpp	/^char * GetLocalDir(void)$/;"	f
GetNextAxis	src/libs/confscreens/mouseconfig.cpp	/^GetNextAxis(void)$/;"	f	file:
GetNextItem	src/libs/learning/List.cpp	/^LISTITEM* GetNextItem(LISTITEM* ptr)$/;"	f
GetNormalToLine	src/drivers/olethros/geometry.cpp	/^Vector* GetNormalToLine(Vector* R)$/;"	f
GetObjectsNb	src/tools/trackgen/objects.cpp	/^GetObjectsNb(void *TrackHandle)$/;"	f
GetPoint	src/drivers/olethros/Trajectory.cpp	/^Point Trajectory::GetPoint (Segment& s, float w)$/;"	f	class:Trajectory
GetPrevItem	src/libs/learning/List.cpp	/^LISTITEM* GetPrevItem(LISTITEM* ptr)$/;"	f
GetSingleTextureMode	src/libs/tgf/tgf.cpp	/^int GetSingleTextureMode (void)$/;"	f
GetTrackHeader	src/modules/track/track.cpp	/^GetTrackHeader(void *TrackHandle)$/;"	f	file:
GetTrackOrientation	src/tools/trackgen/easymesh.cpp	/^GetTrackOrientation(tTrack *track)$/;"	f	file:
GfCreateDir	src/libs/tgf/tgf.cpp	/^int GfCreateDir(char *path)$/;"	f
GfDirFreeList	src/libs/tgf/directory.cpp	/^void GfDirFreeList(tFList *list, tfDirfreeUserData freeUserData, bool freename, bool freedispname)$/;"	f
GfDirGetList	src/libs/tgf/directory.cpp	/^tFList * GfDirGetList(char *dir)$/;"	f
GfDirGetListFiltered	src/libs/tgf/directory.cpp	/^tFList * GfDirGetListFiltered(char *dir, char *suffix)$/;"	f
GfError	export/include/tgf.h	353;"	d
GfError	src/libs/tgf/tgf.h	353;"	d
GfFatal	export/include/tgf.h	/^GfFatal(char *fmt, ...)$/;"	f
GfFatal	export/include/tgf.h	335;"	d
GfFatal	src/libs/tgf/tgf.h	/^GfFatal(char *fmt, ...)$/;"	f
GfFatal	src/libs/tgf/tgf.h	335;"	d
GfGetTimeStr	src/libs/tgf/tgf.cpp	/^char * GfGetTimeStr(void)$/;"	f
GfHashAddBuf	src/libs/tgf/hash.cpp	/^GfHashAddBuf(void *hash, char *key, size_t sz, void *data)$/;"	f
GfHashAddStr	src/libs/tgf/hash.cpp	/^GfHashAddStr(void *hash, const char *key, void *data)$/;"	f
GfHashCreate	src/libs/tgf/hash.cpp	/^GfHashCreate(int type)$/;"	f
GfHashGetBuf	src/libs/tgf/hash.cpp	/^GfHashGetBuf(void *hash, char *key, size_t sz)$/;"	f
GfHashGetFirst	src/libs/tgf/hash.cpp	/^GfHashGetFirst(void *hash)$/;"	f
GfHashGetNext	src/libs/tgf/hash.cpp	/^GfHashGetNext(void *hash)$/;"	f
GfHashGetStr	src/libs/tgf/hash.cpp	/^GfHashGetStr(void *hash, const char *key)$/;"	f
GfHashRelease	src/libs/tgf/hash.cpp	/^GfHashRelease(void *hash, tfHashFree hashFree)$/;"	f
GfHashRemBuf	src/libs/tgf/hash.cpp	/^GfHashRemBuf(void *hash, char *key, size_t sz)$/;"	f
GfHashRemStr	src/libs/tgf/hash.cpp	/^GfHashRemStr(void *hash, char *key)$/;"	f
GfImgFreeTex	src/libs/tgfclient/img.cpp	/^GfImgFreeTex(GLuint tex)$/;"	f
GfImgReadPng	src/libs/tgfclient/img.cpp	/^GfImgReadPng(const char *filename, int *widthp, int *heightp, float screen_gamma)$/;"	f
GfImgReadTex	src/libs/tgfclient/img.cpp	/^GfImgReadTex(char *filename)$/;"	f
GfImgWritePng	src/libs/tgfclient/img.cpp	/^GfImgWritePng(unsigned char *img, const char *filename, int width, int height)$/;"	f
GfInit	src/libs/tgf/tgf.cpp	/^void GfInit(void)$/;"	f
GfInitClient	src/libs/tgfclient/tgfclient.cpp	/^GfInitClient(void)$/;"	f
GfJoyAxis	src/libs/tgfclient/control.cpp	/^static char *GfJoyAxis[] = {$/;"	v	file:
GfJoyBtn	src/libs/tgfclient/control.cpp	/^static char *GfJoyBtn[] = {$/;"	v	file:
GfKey	src/libs/tgfclient/control.cpp	/^static tgfKeyBinding GfKey[] = {$/;"	v	file:
GfModFreeInfoList	src/libs/tgf/module.cpp	/^GfModFreeInfoList(tModList **modlist)$/;"	f
GfModInfo	src/libs/tgf/module.cpp	/^GfModInfo(unsigned int gfid, char *dllname, tModList **modlist)$/;"	f
GfModInfoDir	src/libs/tgf/module.cpp	/^GfModInfoDir(unsigned int gfid, char *dir, int level, tModList **modlist)$/;"	f
GfModLoad	src/libs/tgf/module.cpp	/^GfModLoad(unsigned int gfid, char *dllname, tModList **modlist)$/;"	f
GfModLoadDir	src/libs/tgf/module.cpp	/^GfModLoadDir(unsigned int gfid, char *dir, tModList **modlist)$/;"	f
GfModUnloadList	src/libs/tgf/module.cpp	/^GfModUnloadList(tModList **modlist)$/;"	f
GfMouseAxis	src/libs/tgfclient/control.cpp	/^static char *GfMouseAxis[] = {"MOUSE_LEFT", "MOUSE_RIGHT", "MOUSE_UP", "MOUSE_DOWN"};$/;"	v	file:
GfMouseBtn	src/libs/tgfclient/control.cpp	/^static char *GfMouseBtn[] = {"MOUSE_LEFT_BTN", "MOUSE_MIDDLE_BTN", "MOUSE_RIGHT_BTN"}; \/* glut order *\/$/;"	v	file:
GfNearestPow2	src/libs/tgf/tgf.cpp	/^int GfNearestPow2 (int x)$/;"	f
GfOs	src/libs/tgf/os.cpp	/^tGfOs GfOs = {0};$/;"	v
GfOut	export/include/tgf.h	/^GfOut(char *fmt, ...)$/;"	f
GfOut	export/include/tgf.h	357;"	d
GfOut	export/include/tgf.h	375;"	d
GfOut	src/libs/tgf/tgf.h	/^GfOut(char *fmt, ...)$/;"	f
GfOut	src/libs/tgf/tgf.h	357;"	d
GfOut	src/libs/tgf/tgf.h	375;"	d
GfParmCheckHandle	src/libs/tgf/params.cpp	/^GfParmCheckHandle(void *ref, void *tgt)$/;"	f
GfParmClean	src/libs/tgf/params.cpp	/^GfParmClean (void *parmHandle)$/;"	f
GfParmGetCurNum	src/libs/tgf/params.cpp	/^GfParmGetCurNum (void *handle, char *path, char *key, char *unit, tdble deflt)$/;"	f
GfParmGetCurStr	src/libs/tgf/params.cpp	/^GfParmGetCurStr (void *handle, char *path, char *key, char *deflt)$/;"	f
GfParmGetEltNb	src/libs/tgf/params.cpp	/^GfParmGetEltNb (void *handle, char *path)$/;"	f
GfParmGetFileName	src/libs/tgf/params.cpp	/^GfParmGetFileName (void *handle)$/;"	f
GfParmGetName	src/libs/tgf/params.cpp	/^GfParmGetName (void *handle)$/;"	f
GfParmGetNum	src/libs/tgf/params.cpp	/^GfParmGetNum (void *handle, const char *path, const char *key, const char *unit, tdble deflt)$/;"	f
GfParmGetNumBoundaries	src/libs/tgf/params.cpp	/^GfParmGetNumBoundaries(void *handle, char *path, char *key, tdble *min, tdble *max)$/;"	f
GfParmGetStr	src/libs/tgf/params.cpp	/^GfParmGetStr (void *parmHandle, const char *path, const char *key, char *deflt)$/;"	f
GfParmListClean	src/libs/tgf/params.cpp	/^GfParmListClean (void *handle, char *path)$/;"	f
GfParmListGetCurEltName	src/libs/tgf/params.cpp	/^GfParmListGetCurEltName (void *handle, char *path)$/;"	f
GfParmListSeekFirst	src/libs/tgf/params.cpp	/^GfParmListSeekFirst (void *handle, char *path)$/;"	f
GfParmListSeekNext	src/libs/tgf/params.cpp	/^GfParmListSeekNext (void *handle, char *path)$/;"	f
GfParmMergeHandles	src/libs/tgf/params.cpp	/^GfParmMergeHandles(void *ref, void *tgt, int mode)$/;"	f
GfParmReadBuf	src/libs/tgf/params.cpp	/^GfParmReadBuf (char *buffer)$/;"	f
GfParmReadFile	src/libs/tgf/params.cpp	/^GfParmReadFile (const char *file, int mode)$/;"	f
GfParmReleaseHandle	src/libs/tgf/params.cpp	/^void GfParmReleaseHandle (void *parmHandle)$/;"	f
GfParmRemove	src/libs/tgf/params.cpp	/^GfParmRemove (void *parmHandle, char *sectionName, char *paramName)$/;"	f
GfParmSI2Unit	src/libs/tgf/params.cpp	/^GfParmSI2Unit (const char *unit, tdble val)$/;"	f
GfParmSetCurNum	src/libs/tgf/params.cpp	/^GfParmSetCurNum(void *handle, char *path, char *key, char *unit, tdble val)$/;"	f
GfParmSetCurStr	src/libs/tgf/params.cpp	/^GfParmSetCurStr(void *handle, char *path, char *key, char *val)$/;"	f
GfParmSetDTD	src/libs/tgf/params.cpp	/^GfParmSetDTD (void *parmHandle, char *dtd, char*header)$/;"	f
GfParmSetNum	src/libs/tgf/params.cpp	/^GfParmSetNum(void *handle, const char *path, const char *key, const char *unit, tdble val)$/;"	f
GfParmSetNumEx	src/libs/tgf/params.cpp	/^GfParmSetNumEx(void *handle, char *path, char *key, char *unit, tdble val, tdble min, tdble max)$/;"	f
GfParmSetStr	src/libs/tgf/params.cpp	/^GfParmSetStr(void *handle, char *path, char *key, char *val)$/;"	f
GfParmShutdown	src/libs/tgf/params.cpp	/^GfParmShutdown (void)$/;"	f
GfParmUnit2SI	src/libs/tgf/params.cpp	/^GfParmUnit2SI (const char *unit, tdble val)$/;"	f
GfParmWriteBuf	src/libs/tgf/params.cpp	/^GfParmWriteBuf (void *handle, char *buf, int size)$/;"	f
GfParmWriteFile	src/libs/tgf/params.cpp	/^GfParmWriteFile (const char *file, void *parmHandle, char *name)$/;"	f
GfSKey	src/libs/tgfclient/control.cpp	/^static tgfKeyBinding GfSKey[] = {$/;"	v	file:
GfScrCenX	src/libs/tgfclient/screen.cpp	/^static int GfScrCenX;$/;"	v	file:
GfScrCenY	src/libs/tgfclient/screen.cpp	/^static int GfScrCenY;$/;"	v	file:
GfScrGetSize	src/libs/tgfclient/screen.cpp	/^void GfScrGetSize(int *scrw, int *scrh, int *vieww, int *viewh)$/;"	f
GfScrHeight	src/libs/tgfclient/screen.cpp	/^static int GfScrHeight;$/;"	v	file:
GfScrInit	src/libs/tgfclient/screen.cpp	/^void GfScrInit(int argc, char *argv[])$/;"	f
GfScrMenuInit	src/libs/tgfclient/screen.cpp	/^GfScrMenuInit(void *precMenu)$/;"	f
GfScrReinit	src/libs/tgfclient/screen.cpp	/^GfScrReinit(void * \/* dummy *\/)$/;"	f
GfScrShutdown	src/libs/tgfclient/screen.cpp	/^void GfScrShutdown(void)$/;"	f
GfScrWidth	src/libs/tgfclient/screen.cpp	/^static int GfScrWidth;$/;"	v	file:
GfTime2Str	src/libs/tgf/tgf.cpp	/^char * GfTime2Str(tdble sec, int sgn)$/;"	f
GfTimeClock	src/libs/tgf/os.cpp	/^GfTimeClock(void)$/;"	f
GfTrace	export/include/tgf.h	334;"	d
GfTrace	export/include/tgf.h	338;"	d
GfTrace	src/libs/tgf/tgf.h	334;"	d
GfTrace	src/libs/tgf/tgf.h	338;"	d
GfViewHeight	src/libs/tgfclient/screen.cpp	/^static int GfViewHeight;$/;"	v	file:
GfViewWidth	src/libs/tgfclient/screen.cpp	/^static int GfViewWidth;$/;"	v	file:
GfctrlGetNameByRef	src/libs/tgfclient/control.cpp	/^GfctrlGetNameByRef(int type, int index)$/;"	f
GfctrlGetRefByName	src/libs/tgfclient/control.cpp	/^GfctrlGetRefByName(char *name)$/;"	f
GfctrlJoyGetCurrent	src/libs/tgfclient/control.cpp	/^GfctrlJoyGetCurrent(tCtrlJoyInfo *joyInfo)$/;"	f
GfctrlJoyInit	src/libs/tgfclient/control.cpp	/^GfctrlJoyInit(void)$/;"	f
GfctrlJoyIsPresent	src/libs/tgfclient/control.cpp	/^GfctrlJoyIsPresent(void)$/;"	f
GfctrlJoyRelease	src/libs/tgfclient/control.cpp	/^GfctrlJoyRelease(tCtrlJoyInfo *joyInfo)$/;"	f
GfctrlMouseCenter	src/libs/tgfclient/control.cpp	/^GfctrlMouseCenter(void)$/;"	f
GfctrlMouseGetCurrent	src/libs/tgfclient/control.cpp	/^GfctrlMouseGetCurrent(tCtrlMouseInfo *mouseInfo)$/;"	f
GfctrlMouseInit	src/libs/tgfclient/control.cpp	/^GfctrlMouseInit(void)$/;"	f
GfctrlMouseInitCenter	src/libs/tgfclient/control.cpp	/^GfctrlMouseInitCenter(void)$/;"	f
GfctrlMouseRelease	src/libs/tgfclient/control.cpp	/^GfctrlMouseRelease(tCtrlMouseInfo *mouseInfo)$/;"	f
GfuiAddKey	src/libs/tgfclient/gui.cpp	/^GfuiAddKey(void *scr, unsigned char key, char *descr, void *userData, tfuiCallback onKeyPressed, tfuiCallback onKeyReleased)$/;"	f
GfuiAddSKey	src/libs/tgfclient/gui.cpp	/^GfuiAddSKey(void *scr, int key, char *descr, void *userData, tfuiCallback onKeyPressed, tfuiCallback onKeyReleased)$/;"	f
GfuiButtonCreate	src/libs/tgfclient/guibutton.cpp	/^GfuiButtonCreate(void *scr, char *text, int font, int x, int y, int width, int align, int mouse,$/;"	f
GfuiButtonGetFocused	src/libs/tgfclient/guibutton.cpp	/^GfuiButtonGetFocused(void)$/;"	f
GfuiButtonSetText	src/libs/tgfclient/guibutton.cpp	/^GfuiButtonSetText(void *scr, int id, char *text)$/;"	f
GfuiButtonStateCreate	src/libs/tgfclient/guibutton.cpp	/^GfuiButtonStateCreate(void *scr, char *text, int font, int x, int y, int width, int align, int mouse,$/;"	f
GfuiColor	src/libs/tgfclient/gui.cpp	/^float		GfuiColor[GFUI_COLORNB][4];$/;"	v
GfuiDisplay	src/libs/tgfclient/gui.cpp	/^GfuiDisplay(void)$/;"	f
GfuiDisplayNothing	src/libs/tgfclient/gui.cpp	/^GfuiDisplayNothing(void)$/;"	f
GfuiDraw	src/libs/tgfclient/guiobject.cpp	/^GfuiDraw(tGfuiObject *obj)$/;"	f
GfuiDrawCursor	src/libs/tgfclient/guiobject.cpp	/^GfuiDrawCursor()$/;"	f
GfuiEditboxCreate	src/libs/tgfclient/guiedit.cpp	/^GfuiEditboxCreate(void *scr, char *text, int font, int x, int y, int width, int maxlen,$/;"	f
GfuiEditboxGetFocused	src/libs/tgfclient/guiedit.cpp	/^GfuiEditboxGetFocused(void)$/;"	f
GfuiEditboxGetString	src/libs/tgfclient/guiedit.cpp	/^GfuiEditboxGetString(void *scr, int id)$/;"	f
GfuiEditboxSetString	src/libs/tgfclient/guiedit.cpp	/^void GfuiEditboxSetString(void *scr, int id, char *text)$/;"	f
GfuiEnable	src/libs/tgfclient/guiobject.cpp	/^GfuiEnable(void *scr, int id, int flag)$/;"	f
GfuiFontClass	src/libs/tgfclient/guifont.cpp	/^GfuiFontClass::GfuiFontClass(char *FileName)$/;"	f	class:GfuiFontClass
GfuiFontClass	src/libs/tgfclient/guifont.h	/^class GfuiFontClass$/;"	c
GfuiFontHeight	src/libs/tgfclient/guiobject.cpp	/^int GfuiFontHeight(int font)$/;"	f
GfuiFontWidth	src/libs/tgfclient/guiobject.cpp	/^int GfuiFontWidth(int font, const char *text)$/;"	f
GfuiGlutExtensionSupported	src/libs/tgfclient/screen.cpp	/^int GfuiGlutExtensionSupported(char *str)$/;"	f
GfuiGrButtonCreate	src/libs/tgfclient/guibutton.cpp	/^GfuiGrButtonCreate(void *scr, char *disabled, char *enabled, char *focused, char *pushed,$/;"	f
GfuiHelpScreen	src/libs/tgfclient/guihelp.cpp	/^GfuiHelpScreen(void *prevScreen)$/;"	f
GfuiHookCreate	src/libs/tgfclient/gui.cpp	/^GfuiHookCreate(void *userDataOnActivate, tfuiCallback onActivate)$/;"	f
GfuiHookRelease	src/libs/tgfclient/gui.cpp	/^GfuiHookRelease(void *hook)$/;"	f
GfuiIdle	src/libs/tgfclient/gui.cpp	/^GfuiIdle(void)$/;"	f
GfuiKey	src/libs/tgfclient/gui.h	/^typedef struct GfuiKey$/;"	s
GfuiKeyEventRegister	src/libs/tgfclient/gui.cpp	/^GfuiKeyEventRegister(void *scr, tfuiKeyCallback onKeyAction)$/;"	f
GfuiKeyEventRegisterCurrent	src/libs/tgfclient/gui.cpp	/^GfuiKeyEventRegisterCurrent(tfuiKeyCallback onKeyAction)$/;"	f
GfuiLabelCreate	src/libs/tgfclient/guilabel.cpp	/^GfuiLabelCreate(void *scr, char *text, int font, int x, int y, int align, int maxlen)$/;"	f
GfuiLabelCreateEx	src/libs/tgfclient/guilabel.cpp	/^GfuiLabelCreateEx(void *scr, char *text, float *fgColor, int font, int x, int y, int align, int maxlen)$/;"	f
GfuiLabelSetColor	src/libs/tgfclient/guilabel.cpp	/^GfuiLabelSetColor(void *scr, int id, float *color)$/;"	f
GfuiLabelSetText	src/libs/tgfclient/guilabel.cpp	/^GfuiLabelSetText(void *scr, int id, char *text)$/;"	f
GfuiListElement	src/libs/tgfclient/gui.h	/^typedef struct GfuiListElement$/;"	s
GfuiMenuBackQuitButtonCreate	src/libs/tgfclient/guimenu.cpp	/^GfuiMenuBackQuitButtonCreate(void *scr, char *text, char *tip, void *userdata, tfuiCallback onpush)$/;"	f
GfuiMenuButtonCreate	src/libs/tgfclient/guimenu.cpp	/^GfuiMenuButtonCreate(void *scr, char *text, char *tip, void *userdata, tfuiCallback onpush)$/;"	f
GfuiMenuDefaultKeysAdd	src/libs/tgfclient/guimenu.cpp	/^GfuiMenuDefaultKeysAdd(void *scr)$/;"	f
GfuiMenuScreenCreate	src/libs/tgfclient/guimenu.cpp	/^GfuiMenuScreenCreate(char *title)$/;"	f
GfuiMouse	src/libs/tgfclient/gui.cpp	/^tMouseInfo	GfuiMouse;$/;"	v
GfuiMouseHW	src/libs/tgfclient/gui.cpp	/^int		GfuiMouseHW = 0;$/;"	v
GfuiMouseHide	src/libs/tgfclient/gui.cpp	/^GfuiMouseHide(void)$/;"	f
GfuiMouseInfo	src/libs/tgfclient/gui.cpp	/^tMouseInfo *GfuiMouseInfo(void)$/;"	f
GfuiMouseSetHWPresent	src/libs/tgfclient/gui.cpp	/^GfuiMouseSetHWPresent(void)$/;"	f
GfuiMouseSetPos	src/libs/tgfclient/gui.cpp	/^void GfuiMouseSetPos(int x, int y)$/;"	f
GfuiMouseShow	src/libs/tgfclient/gui.cpp	/^GfuiMouseShow(void)$/;"	f
GfuiMouseVisible	src/libs/tgfclient/gui.cpp	/^static int	GfuiMouseVisible = 1;$/;"	v	file:
GfuiObject	src/libs/tgfclient/gui.h	/^typedef struct GfuiObject$/;"	s
GfuiPrintString	src/libs/tgfclient/guiobject.cpp	/^void GfuiPrintString(const char *text, float *fgColor, int font, int x, int y, int align)$/;"	f
GfuiRegisterKey	src/libs/tgfclient/gui.cpp	/^GfuiRegisterKey(unsigned char key, char *descr, void *userData, tfuiCallback onKeyPressed, tfuiCallback onKeyReleased)$/;"	f
GfuiSKeyEventRegister	src/libs/tgfclient/gui.cpp	/^GfuiSKeyEventRegister(void *scr, tfuiSKeyCallback onSKeyAction)$/;"	f
GfuiSKeyEventRegisterCurrent	src/libs/tgfclient/gui.cpp	/^GfuiSKeyEventRegisterCurrent(tfuiSKeyCallback onSKeyAction)$/;"	f
GfuiScreen	src/libs/tgfclient/gui.cpp	/^tGfuiScreen	*GfuiScreen;	\/* current screen *\/$/;"	v
GfuiScreenActivate	src/libs/tgfclient/gui.cpp	/^GfuiScreenActivate(void *screen)$/;"	f
GfuiScreenAddBgImg	src/libs/tgfclient/gui.cpp	/^GfuiScreenAddBgImg(void *scr, char *filename)$/;"	f
GfuiScreenCreate	src/libs/tgfclient/gui.cpp	/^GfuiScreenCreate(void)$/;"	f
GfuiScreenCreateEx	src/libs/tgfclient/gui.cpp	/^GfuiScreenCreateEx(float *bgColor,$/;"	f
GfuiScreenDeactivate	src/libs/tgfclient/gui.cpp	/^GfuiScreenDeactivate(void)$/;"	f
GfuiScreenIsActive	src/libs/tgfclient/gui.cpp	/^GfuiScreenIsActive(void *screen)$/;"	f
GfuiScreenRelease	src/libs/tgfclient/gui.cpp	/^GfuiScreenRelease(void *scr)$/;"	f
GfuiScreenReplace	src/libs/tgfclient/gui.cpp	/^GfuiScreenReplace(void *screen)$/;"	f
GfuiScreenShot	src/libs/tgfclient/gui.cpp	/^GfuiScreenShot(void * \/* notused *\/)$/;"	f
GfuiScrollBarCreate	src/libs/tgfclient/guiscrollbar.cpp	/^GfuiScrollBarCreate(void *scr, int x, int y, int align, int width, int orientation,$/;"	f
GfuiScrollBarPosGet	src/libs/tgfclient/guiscrollbar.cpp	/^GfuiScrollBarPosGet(void *scr, int id)$/;"	f
GfuiScrollBarPosSet	src/libs/tgfclient/guiscrollbar.cpp	/^GfuiScrollBarPosSet(void *scr, int id, int min, int max, int len, int start)$/;"	f
GfuiScrollListCreate	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListCreate(void *scr, int font, int x, int y, int align, int width, int height,$/;"	f
GfuiScrollListExtractElement	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListExtractElement(void *scr, int Id, int index, void **userData)$/;"	f
GfuiScrollListExtractSelectedElement	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListExtractSelectedElement(void *scr, int Id, void **userData)$/;"	f
GfuiScrollListGetElement	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListGetElement(void *scr, int Id, int index, void **userData)$/;"	f
GfuiScrollListGetSelectedElement	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListGetSelectedElement(void *scr, int Id, void **userData)$/;"	f
GfuiScrollListInsertElement	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListInsertElement(void *scr, int Id, char *element, int index, void *userData)$/;"	f
GfuiScrollListMoveSelectedElement	src/libs/tgfclient/guiscrollist.cpp	/^GfuiScrollListMoveSelectedElement(void *scr, int Id, int delta)$/;"	f
GfuiStaticImageCreate	src/libs/tgfclient/guiimage.cpp	/^int GfuiStaticImageCreate(void *scr, int x, int y, int w, int h, char *name)$/;"	f
GfuiStaticImageSet	src/libs/tgfclient/guiimage.cpp	/^void GfuiStaticImageSet(void *scr, int id, char *name)$/;"	f
GfuiTipCreate	src/libs/tgfclient/guilabel.cpp	/^GfuiTipCreate(void *scr, char *text, int maxlen)$/;"	f
GfuiTitleCreate	src/libs/tgfclient/guilabel.cpp	/^GfuiTitleCreate(void *scr, char *text, int maxlen)$/;"	f
GfuiUnSelectCurrent	src/libs/tgfclient/guiobject.cpp	/^GfuiUnSelectCurrent(void)$/;"	f
GfuiVisibilitySet	src/libs/tgfclient/guiobject.cpp	/^GfuiVisibilitySet(void *scr, int id, int visible)$/;"	f
GlobalStepLen	src/modules/track/track3.cpp	/^static tdble	GlobalStepLen = 0;$/;"	v	file:
GlobalStepLen	src/modules/track/track4.cpp	/^static tdble	GlobalStepLen = 0;$/;"	v	file:
Gmax	src/drivers/inferno2/inferno2.cpp	/^tdble Gmax;$/;"	v
GraphMenuInit	src/libs/confscreens/graphconfig.cpp	/^GraphMenuInit(void *prevMenu)$/;"	f
GridStep	src/tools/trackgen/easymesh.cpp	/^static tdble 	GridStep;$/;"	v	file:
GridStep	src/tools/trackgen/maintrackgen.cpp	/^float	GridStep = 40.0;$/;"	v
GridStep	src/tools/trackgen/relief.cpp	/^static tdble	GridStep;$/;"	v	file:
Group	src/tools/trackgen/objects.cpp	/^Group(tTrack *track, void *TrackHandle, ssgEntity *ent)$/;"	f	file:
GroupNb	src/tools/trackgen/easymesh.cpp	/^static int		GroupNb;$/;"	v	file:
GroupNb	src/tools/trackgen/objects.cpp	/^static int		GroupNb;$/;"	v	file:
GroupNb	src/tools/trackgen/track.cpp	/^static int		GroupNb;$/;"	v	file:
GroupRoot	src/tools/trackgen/objects.cpp	/^static ssgRoot	*GroupRoot = NULL;$/;"	v	file:
GroupSize	src/tools/trackgen/easymesh.cpp	/^static float		GroupSize;$/;"	v	file:
GroupSize	src/tools/trackgen/objects.cpp	/^static float		GroupSize;$/;"	v	file:
Groups	src/tools/trackgen/easymesh.cpp	/^static struct group	*Groups;$/;"	v	typeref:struct:group	file:
Groups	src/tools/trackgen/objects.cpp	/^static struct group	*Groups;$/;"	v	typeref:struct:group	file:
Groups	src/tools/trackgen/track.cpp	/^static tGroup		*Groups;$/;"	v	file:
HANDLE_CHUNK_ALWAYS	src/windows/include/png.h	2507;"	d
HANDLE_CHUNK_AS_DEFAULT	src/windows/include/png.h	2504;"	d
HANDLE_CHUNK_IF_SAFE	src/windows/include/png.h	2506;"	d
HANDLE_CHUNK_NEVER	src/windows/include/png.h	2505;"	d
HASH_BYTE	src/libs/tgf/hash.cpp	53;"	d	file:
HASH_TABLE	src/libs/txml/hashtable.h	/^} HASH_TABLE;$/;"	t	typeref:struct:__anon73
HASH_TABLE_ITER	src/libs/txml/hashtable.h	/^} HASH_TABLE_ITER;$/;"	t	typeref:struct:__anon74
HAVE_CONFIG_H	export/include/portability.h	27;"	d
HAVE_CONFIG_H	src/libs/client/splash.cpp	21;"	d	file:
HAVE_CONFIG_H	src/libs/portability/portability.h	27;"	d
HAVE_INTTYPES_H	config.h	5;"	d
HAVE_LIBDL	config.h	8;"	d
HAVE_LIBGL	config.h	11;"	d
HAVE_LIBGLU	config.h	14;"	d
HAVE_LIBGLUT	config.h	17;"	d
HAVE_LIBICE	config.h	20;"	d
HAVE_LIBM	config.h	23;"	d
HAVE_LIBOPENAL	config.h	26;"	d
HAVE_LIBPLIBSG	config.h	29;"	d
HAVE_LIBPLIBSL	config.h	32;"	d
HAVE_LIBPLIBSM	config.h	35;"	d
HAVE_LIBPLIBSSG	config.h	38;"	d
HAVE_LIBPLIBSSGAUX	config.h	41;"	d
HAVE_LIBPLIBUL	config.h	44;"	d
HAVE_LIBPNG	config.h	47;"	d
HAVE_LIBSM	config.h	50;"	d
HAVE_LIBX11	config.h	53;"	d
HAVE_LIBXEXT	config.h	56;"	d
HAVE_LIBXI	config.h	59;"	d
HAVE_LIBXMU	config.h	62;"	d
HAVE_LIBXRANDR	config.h	65;"	d
HAVE_LIBXRENDER	config.h	68;"	d
HAVE_LIBXT	config.h	71;"	d
HAVE_LIBXXF86VM	config.h	74;"	d
HAVE_LIBZ	config.h	77;"	d
HAVE_MEMORY_H	config.h	80;"	d
HAVE_STDINT_H	config.h	83;"	d
HAVE_STDLIB_H	config.h	86;"	d
HAVE_STRINGS_H	config.h	89;"	d
HAVE_STRING_H	config.h	92;"	d
HAVE_STRNDUP	config.h	95;"	d
HAVE_SYS_STAT_H	config.h	98;"	d
HAVE_SYS_TYPES_H	config.h	101;"	d
HAVE_UNISTD_H	config.h	104;"	d
HCtx	src/drivers/human/human.cpp	/^tHumanContext *HCtx[10] = {0};$/;"	v
HM_ATT_ABS	export/include/playerpref.h	108;"	d
HM_ATT_ABS	src/interfaces/playerpref.h	108;"	d
HM_ATT_ABS_CMD	export/include/playerpref.h	43;"	d
HM_ATT_ABS_CMD	src/interfaces/playerpref.h	43;"	d
HM_ATT_ASR	export/include/playerpref.h	109;"	d
HM_ATT_ASR	src/interfaces/playerpref.h	109;"	d
HM_ATT_ASR_CMD	export/include/playerpref.h	42;"	d
HM_ATT_ASR_CMD	src/interfaces/playerpref.h	42;"	d
HM_ATT_AUTOREVERSE	export/include/playerpref.h	48;"	d
HM_ATT_AUTOREVERSE	src/interfaces/playerpref.h	48;"	d
HM_ATT_BRAKE	export/include/playerpref.h	89;"	d
HM_ATT_BRAKE	src/interfaces/playerpref.h	89;"	d
HM_ATT_BRAKE_DEAD	export/include/playerpref.h	94;"	d
HM_ATT_BRAKE_DEAD	src/interfaces/playerpref.h	94;"	d
HM_ATT_BRAKE_MAX	export/include/playerpref.h	91;"	d
HM_ATT_BRAKE_MAX	src/interfaces/playerpref.h	91;"	d
HM_ATT_BRAKE_MIN	export/include/playerpref.h	90;"	d
HM_ATT_BRAKE_MIN	src/interfaces/playerpref.h	90;"	d
HM_ATT_BRAKE_POW	export/include/playerpref.h	93;"	d
HM_ATT_BRAKE_POW	src/interfaces/playerpref.h	93;"	d
HM_ATT_BRAKE_SENS	export/include/playerpref.h	92;"	d
HM_ATT_BRAKE_SENS	src/interfaces/playerpref.h	92;"	d
HM_ATT_CLUTCH	export/include/playerpref.h	96;"	d
HM_ATT_CLUTCH	src/interfaces/playerpref.h	96;"	d
HM_ATT_CLUTCH_DEAD	export/include/playerpref.h	101;"	d
HM_ATT_CLUTCH_DEAD	src/interfaces/playerpref.h	101;"	d
HM_ATT_CLUTCH_MAX	export/include/playerpref.h	98;"	d
HM_ATT_CLUTCH_MAX	src/interfaces/playerpref.h	98;"	d
HM_ATT_CLUTCH_MIN	export/include/playerpref.h	97;"	d
HM_ATT_CLUTCH_MIN	src/interfaces/playerpref.h	97;"	d
HM_ATT_CLUTCH_POW	export/include/playerpref.h	100;"	d
HM_ATT_CLUTCH_POW	src/interfaces/playerpref.h	100;"	d
HM_ATT_CLUTCH_SENS	export/include/playerpref.h	99;"	d
HM_ATT_CLUTCH_SENS	src/interfaces/playerpref.h	99;"	d
HM_ATT_CONTROL	export/include/playerpref.h	38;"	d
HM_ATT_CONTROL	src/interfaces/playerpref.h	38;"	d
HM_ATT_DN_SHFT	export/include/playerpref.h	41;"	d
HM_ATT_DN_SHFT	src/interfaces/playerpref.h	41;"	d
HM_ATT_GEAR_1	export/include/playerpref.h	52;"	d
HM_ATT_GEAR_1	src/interfaces/playerpref.h	52;"	d
HM_ATT_GEAR_2	export/include/playerpref.h	53;"	d
HM_ATT_GEAR_2	src/interfaces/playerpref.h	53;"	d
HM_ATT_GEAR_3	export/include/playerpref.h	54;"	d
HM_ATT_GEAR_3	src/interfaces/playerpref.h	54;"	d
HM_ATT_GEAR_4	export/include/playerpref.h	55;"	d
HM_ATT_GEAR_4	src/interfaces/playerpref.h	55;"	d
HM_ATT_GEAR_5	export/include/playerpref.h	56;"	d
HM_ATT_GEAR_5	src/interfaces/playerpref.h	56;"	d
HM_ATT_GEAR_6	export/include/playerpref.h	57;"	d
HM_ATT_GEAR_6	src/interfaces/playerpref.h	57;"	d
HM_ATT_GEAR_N	export/include/playerpref.h	51;"	d
HM_ATT_GEAR_N	src/interfaces/playerpref.h	51;"	d
HM_ATT_GEAR_R	export/include/playerpref.h	50;"	d
HM_ATT_GEAR_R	src/interfaces/playerpref.h	50;"	d
HM_ATT_LEFTSTEER	export/include/playerpref.h	70;"	d
HM_ATT_LEFTSTEER	src/interfaces/playerpref.h	70;"	d
HM_ATT_LEFTSTEER_DEAD	export/include/playerpref.h	74;"	d
HM_ATT_LEFTSTEER_DEAD	src/interfaces/playerpref.h	74;"	d
HM_ATT_LEFTSTEER_MAX	export/include/playerpref.h	72;"	d
HM_ATT_LEFTSTEER_MAX	src/interfaces/playerpref.h	72;"	d
HM_ATT_LEFTSTEER_MIN	export/include/playerpref.h	71;"	d
HM_ATT_LEFTSTEER_MIN	src/interfaces/playerpref.h	71;"	d
HM_ATT_LEFTSTEER_POW	export/include/playerpref.h	73;"	d
HM_ATT_LEFTSTEER_POW	src/interfaces/playerpref.h	73;"	d
HM_ATT_LIGHT1_CMD	export/include/playerpref.h	45;"	d
HM_ATT_LIGHT1_CMD	src/interfaces/playerpref.h	45;"	d
HM_ATT_NBPITS	export/include/playerpref.h	110;"	d
HM_ATT_NBPITS	src/interfaces/playerpref.h	110;"	d
HM_ATT_REL_BUT_NEUTRAL	export/include/playerpref.h	60;"	d
HM_ATT_REL_BUT_NEUTRAL	src/interfaces/playerpref.h	60;"	d
HM_ATT_RIGHTSTEER	export/include/playerpref.h	76;"	d
HM_ATT_RIGHTSTEER	src/interfaces/playerpref.h	76;"	d
HM_ATT_RIGHTSTEER_DEAD	export/include/playerpref.h	80;"	d
HM_ATT_RIGHTSTEER_DEAD	src/interfaces/playerpref.h	80;"	d
HM_ATT_RIGHTSTEER_MAX	export/include/playerpref.h	78;"	d
HM_ATT_RIGHTSTEER_MAX	src/interfaces/playerpref.h	78;"	d
HM_ATT_RIGHTSTEER_MIN	export/include/playerpref.h	77;"	d
HM_ATT_RIGHTSTEER_MIN	src/interfaces/playerpref.h	77;"	d
HM_ATT_RIGHTSTEER_POW	export/include/playerpref.h	79;"	d
HM_ATT_RIGHTSTEER_POW	src/interfaces/playerpref.h	79;"	d
HM_ATT_SEQSHFT_ALLOW_NEUTRAL	export/include/playerpref.h	63;"	d
HM_ATT_SEQSHFT_ALLOW_NEUTRAL	src/interfaces/playerpref.h	63;"	d
HM_ATT_SPDLIM_CMD	export/include/playerpref.h	46;"	d
HM_ATT_SPDLIM_CMD	src/interfaces/playerpref.h	46;"	d
HM_ATT_STEER_DEAD	export/include/playerpref.h	68;"	d
HM_ATT_STEER_DEAD	src/interfaces/playerpref.h	68;"	d
HM_ATT_STEER_POW	export/include/playerpref.h	66;"	d
HM_ATT_STEER_POW	src/interfaces/playerpref.h	66;"	d
HM_ATT_STEER_SENS	export/include/playerpref.h	65;"	d
HM_ATT_STEER_SENS	src/interfaces/playerpref.h	65;"	d
HM_ATT_STEER_SPD	export/include/playerpref.h	67;"	d
HM_ATT_STEER_SPD	src/interfaces/playerpref.h	67;"	d
HM_ATT_THROTTLE	export/include/playerpref.h	82;"	d
HM_ATT_THROTTLE	src/interfaces/playerpref.h	82;"	d
HM_ATT_THROTTLE_DEAD	export/include/playerpref.h	87;"	d
HM_ATT_THROTTLE_DEAD	src/interfaces/playerpref.h	87;"	d
HM_ATT_THROTTLE_MAX	export/include/playerpref.h	84;"	d
HM_ATT_THROTTLE_MAX	src/interfaces/playerpref.h	84;"	d
HM_ATT_THROTTLE_MIN	export/include/playerpref.h	83;"	d
HM_ATT_THROTTLE_MIN	src/interfaces/playerpref.h	83;"	d
HM_ATT_THROTTLE_POW	export/include/playerpref.h	86;"	d
HM_ATT_THROTTLE_POW	src/interfaces/playerpref.h	86;"	d
HM_ATT_THROTTLE_SENS	export/include/playerpref.h	85;"	d
HM_ATT_THROTTLE_SENS	src/interfaces/playerpref.h	85;"	d
HM_ATT_TRANS	export/include/playerpref.h	107;"	d
HM_ATT_TRANS	src/interfaces/playerpref.h	107;"	d
HM_ATT_UP_SHFT	export/include/playerpref.h	40;"	d
HM_ATT_UP_SHFT	src/interfaces/playerpref.h	40;"	d
HM_DRV_FILE	export/include/playerpref.h	29;"	d
HM_DRV_FILE	src/interfaces/playerpref.h	29;"	d
HM_LIST_DRV	export/include/playerpref.h	105;"	d
HM_LIST_DRV	src/interfaces/playerpref.h	105;"	d
HM_PREF_FILE	export/include/playerpref.h	30;"	d
HM_PREF_FILE	src/interfaces/playerpref.h	30;"	d
HM_SECT_DRVPREF	export/include/playerpref.h	36;"	d
HM_SECT_DRVPREF	src/interfaces/playerpref.h	36;"	d
HM_SECT_JSPREF	export/include/playerpref.h	32;"	d
HM_SECT_JSPREF	src/interfaces/playerpref.h	32;"	d
HM_SECT_KEYBPREF	export/include/playerpref.h	34;"	d
HM_SECT_KEYBPREF	src/interfaces/playerpref.h	34;"	d
HM_SECT_MOUSEPREF	export/include/playerpref.h	33;"	d
HM_SECT_MOUSEPREF	src/interfaces/playerpref.h	33;"	d
HM_SECT_PREF	export/include/playerpref.h	103;"	d
HM_SECT_PREF	src/interfaces/playerpref.h	103;"	d
HM_VAL_AUTO	export/include/playerpref.h	112;"	d
HM_VAL_AUTO	src/interfaces/playerpref.h	112;"	d
HM_VAL_JOYSTICK	export/include/playerpref.h	118;"	d
HM_VAL_JOYSTICK	src/interfaces/playerpref.h	118;"	d
HM_VAL_KEYBOARD	export/include/playerpref.h	120;"	d
HM_VAL_KEYBOARD	src/interfaces/playerpref.h	120;"	d
HM_VAL_MANUAL	export/include/playerpref.h	113;"	d
HM_VAL_MANUAL	src/interfaces/playerpref.h	113;"	d
HM_VAL_MOUSE	export/include/playerpref.h	119;"	d
HM_VAL_MOUSE	src/interfaces/playerpref.h	119;"	d
HM_VAL_NO	export/include/playerpref.h	116;"	d
HM_VAL_NO	src/interfaces/playerpref.h	116;"	d
HM_VAL_YES	export/include/playerpref.h	115;"	d
HM_VAL_YES	src/interfaces/playerpref.h	115;"	d
HORIZ_MARGIN	src/libs/tgfclient/guibutton.cpp	319;"	d	file:
HORIZ_MARGIN	src/libs/tgfclient/guiedit.cpp	120;"	d	file:
HPBUFFERARB	src/windows/include/GL/wglext.h	/^DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFEREXT	src/windows/include/GL/wglext.h	/^DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HashElem	src/libs/tgf/hash.cpp	/^typedef struct HashElem$/;"	s	file:
HashHeader	src/libs/tgf/hash.cpp	/^typedef struct HashHeader$/;"	s	file:
HeightSteps	src/tools/trackgen/maintrackgen.cpp	/^int	HeightSteps = 30;$/;"	v
HmReadPrefs	src/drivers/human/pref.cpp	/^HmReadPrefs(int index)$/;"	f
HumanContext	src/drivers/human/human.h	/^typedef struct HumanContext$/;"	s
I	src/modules/simu/simuv2/axle.h	/^    tdble	I;	\/* including differential inertia but not wheels *\/$/;"	m	struct:__anon22
I	src/modules/simu/simuv2/brake.h	/^    tdble	I;$/;"	m	struct:__anon23
I	src/modules/simu/simuv2/differential.h	/^    tdble	I;$/;"	m	struct:__anon19
I	src/modules/simu/simuv2/differential.h	/^    tdble	I;$/;"	m	struct:__anon20
I	src/modules/simu/simuv2/engine.h	/^    tdble		I;$/;"	m	struct:__anon12
I	src/modules/simu/simuv2/wheel.h	/^    tdble  	I;       	\/* I = inertial moment of the wheel *\/$/;"	m	struct:__anon21
I1	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int    I1 ;$/;"	m	struct:__anon33	file:
I2	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int    I2 ;$/;"	m	struct:__anon33	file:
I3	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int    I3 ;$/;"	m	struct:__anon33	file:
ICHAR	src/libs/txml/xmlparse.c	/^typedef char ICHAR;$/;"	t	file:
ICHAR	src/libs/txml/xmlparse.c	/^typedef unsigned short ICHAR;$/;"	t	file:
IDENTITY	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    IDENTITY = 0x00, $/;"	e	enum:Transform::__anon7
IDI_ICON1	resource.h	5;"	d
IDX1	doc/tutorials/robot/fdl.html	/^<A NAME="IDX1"><\/A>$/;"	a
IDX1	doc/tutorials/track/fdl.html	/^<A NAME="IDX1"><\/A>$/;"	a
INDEX	src/drivers/bt/driver.h	/^		int INDEX;$/;"	m	class:Driver
INDEX	src/drivers/damned/driver.h	/^		int INDEX;$/;"	m	class:Driver
INDEX	src/drivers/olethros/driver.h	/^	int INDEX;$/;"	m	class:olethros::Driver
INDEX	src/drivers/sparkle/driver.h	/^		int INDEX;$/;"	m	class:Driver
INFINITY_	export/include/3D/Basic.h	/^const Scalar INFINITY_ =      1.0e50;$/;"	v
INFINITY_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar INFINITY_ =      1.0e50;$/;"	v
INIT_ATTS_SIZE	src/libs/txml/xmlparse.c	60;"	d	file:
INIT_BLOCK_SIZE	src/libs/txml/xmlparse.c	61;"	d	file:
INIT_BUFFER_SIZE	src/libs/txml/xmlparse.c	62;"	d	file:
INIT_DATA_BUF_SIZE	src/libs/txml/xmlparse.c	59;"	d	file:
INIT_ENCODING	src/libs/txml/xmltok.h	/^} INIT_ENCODING;$/;"	t	typeref:struct:__anon70
INIT_MSG_LEN	src/libs/learning/string_utils.cpp	87;"	d	file:
INIT_SIZE	src/libs/txml/hashtable.c	34;"	d	file:
INIT_TAG_BUF_SIZE	src/libs/txml/xmlparse.c	58;"	d	file:
INIT_WIN32	Make-default.mk	/^INIT_WIN32       = ${TORCS_BASE}\/setup_win32.bat$/;"	m
INIT_WIN32_D	Make-default.mk	/^INIT_WIN32_D     = ${TORCS_BASE}\/setup_win32_debug.bat$/;"	m
INSANE	src/drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon123
INSANE	src/drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon98
INSANE	src/drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon114
INSANE	src/drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon139
INSANE	src/drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon132
INSANE	src/drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon105
INSERTINGROUP	src/tools/accc/ac3dgroup.cpp	383;"	d	file:
INSIDE	src/tools/trackgen/easymesh.cpp	66;"	d	file:
INSTBASE	src/tools/trackgen/maintrackgen.cpp	303;"	d	file:
INSTBINBASE	Make-default.mk	/^INSTBINBASE  = ${DESTDIR}${bindir}$/;"	m
INSTDATABASE	Make-default.mk	/^INSTDATABASE = ${DESTDIR}${datadir}$/;"	m
INSTLIBBASE	Make-default.mk	/^INSTLIBBASE  = ${DESTDIR}${libdir}$/;"	m
INSTVARBASE	Make-default.mk	/^INSTVARBASE  = ${DESTDIR}${datadir}$/;"	m
INTERNAL	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  enum TagType { LEAF, INTERNAL };$/;"	e	enum:BBoxNode::TagType
INVALID_CASES	src/libs/txml/xmltok_impl.c	1648;"	d	file:
INVALID_CASES	src/libs/txml/xmltok_impl.c	37;"	d	file:
INVALID_LEAD_CASE	src/libs/txml/xmltok_impl.c	26;"	d	file:
IN_LANE	src/drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
ISP_CHECK_ERR	export/include/js.h	189;"	d
ISP_CHECK_ERR	src/interfaces/js.h	189;"	d
IS_INVALID_CHAR	src/libs/txml/xmltok.c	169;"	d	file:
IS_INVALID_CHAR	src/libs/txml/xmltok.c	189;"	d	file:
IS_INVALID_CHAR	src/libs/txml/xmltok.c	466;"	d	file:
IS_INVALID_CHAR	src/libs/txml/xmltok.c	533;"	d	file:
IS_INVALID_CHAR	src/libs/txml/xmltok_impl.c	23;"	d	file:
IS_NAME_CHAR	src/libs/txml/xmltok.c	165;"	d	file:
IS_NAME_CHAR	src/libs/txml/xmltok.c	185;"	d	file:
IS_NAME_CHAR	src/libs/txml/xmltok.c	438;"	d	file:
IS_NAME_CHAR	src/libs/txml/xmltok.c	462;"	d	file:
IS_NAME_CHAR	src/libs/txml/xmltok.c	505;"	d	file:
IS_NAME_CHAR	src/libs/txml/xmltok.c	529;"	d	file:
IS_NAME_CHAR_MINBPC	src/libs/txml/xmltok.c	172;"	d	file:
IS_NAME_CHAR_MINBPC	src/libs/txml/xmltok.c	186;"	d	file:
IS_NAME_CHAR_MINBPC	src/libs/txml/xmltok.c	439;"	d	file:
IS_NAME_CHAR_MINBPC	src/libs/txml/xmltok.c	463;"	d	file:
IS_NAME_CHAR_MINBPC	src/libs/txml/xmltok.c	506;"	d	file:
IS_NAME_CHAR_MINBPC	src/libs/txml/xmltok.c	530;"	d	file:
IS_NMSTRT_CHAR	src/libs/txml/xmltok.c	167;"	d	file:
IS_NMSTRT_CHAR	src/libs/txml/xmltok.c	187;"	d	file:
IS_NMSTRT_CHAR	src/libs/txml/xmltok.c	441;"	d	file:
IS_NMSTRT_CHAR	src/libs/txml/xmltok.c	464;"	d	file:
IS_NMSTRT_CHAR	src/libs/txml/xmltok.c	508;"	d	file:
IS_NMSTRT_CHAR	src/libs/txml/xmltok.c	531;"	d	file:
IS_NMSTRT_CHAR_MINBPC	src/libs/txml/xmltok.c	173;"	d	file:
IS_NMSTRT_CHAR_MINBPC	src/libs/txml/xmltok.c	188;"	d	file:
IS_NMSTRT_CHAR_MINBPC	src/libs/txml/xmltok.c	442;"	d	file:
IS_NMSTRT_CHAR_MINBPC	src/libs/txml/xmltok.c	465;"	d	file:
IS_NMSTRT_CHAR_MINBPC	src/libs/txml/xmltok.c	509;"	d	file:
IS_NMSTRT_CHAR_MINBPC	src/libs/txml/xmltok.c	532;"	d	file:
Id	export/include/controlconfig.h	/^    int		Id;$/;"	m	struct:__anon205
Id	src/libs/confscreens/controlconfig.h	/^    int		Id;$/;"	m	struct:__anon44
Idle	src/libs/confscreens/controlconfig.cpp	/^Idle(void)$/;"	f	file:
Idle2	src/libs/confscreens/joystickconfig.cpp	/^Idle2(void)$/;"	f	file:
Idle2	src/libs/confscreens/mouseconfig.cpp	/^Idle2(void)$/;"	f	file:
IdleMouseInit	src/libs/confscreens/mouseconfig.cpp	/^IdleMouseInit(void)$/;"	f	file:
Iinv	src/modules/simu/simuv2/carstruct.h	/^    t3Dd	Iinv;		\/* inverse of inertial moment along the car's 3 axis *\/$/;"	m	struct:__anon18
ImgReadPng	src/misc/png2jpg/png2jpg.c	/^ImgReadPng(FILE *fp, int *widthp, int *heightp, float screen_gamma)$/;"	f
ImgSize	src/tools/texmapper/maintexmapper.cpp	/^int	ImgSize;$/;"	v
IndexArray	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  IndexArray() : indices(0), count(0) {}$/;"	f	class:IndexArray
IndexArray	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  IndexArray(int n) : indices(new unsigned int[n]), count(n) {}$/;"	f	class:IndexArray
IndexArray	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  IndexArray(int n, const unsigned int v[]) : $/;"	f	class:IndexArray
IndexArray	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^class IndexArray {$/;"	c
IndexBuf	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<unsigned int> IndexBuf;$/;"	t	file:
IndexBuf	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^typedef vector<unsigned int> IndexBuf;$/;"	t	file:
InitFuncPt	src/drivers/berniw/berniw.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/berniw2/berniw2.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/berniw3/berniw3.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/bt/bt.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/damned/damned.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/human/human.cpp	/^InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/inferno/inferno.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/inferno2/inferno2.cpp	/^InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/lliaw/lliaw.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/olethros/olethros.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	namespace:olethros
InitFuncPt	src/drivers/sparkle/sparkle.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitFuncPt	src/drivers/tita/tita.cpp	/^static int InitFuncPt(int index, void *pt)$/;"	f	file:
InitGears	src/drivers/inferno2/common.cpp	/^InitGears(tCarElt* car, int idx)$/;"	f
InitMultiTex	src/modules/graphic/ssggraph/grmain.cpp	/^bool InitMultiTex(void)$/;"	f
InitObjects	src/tools/trackgen/objects.cpp	/^InitObjects(tTrack *track, void *TrackHandle)$/;"	f	file:
InitScene	src/tools/trackgen/track.cpp	/^InitScene(tTrack *Track, void *TrackHandle, int bump)$/;"	f
InitSides	src/modules/track/track2.cpp	/^InitSides(void *TrackHandle, char *section)$/;"	f	file:
InitSides	src/modules/track/track3.cpp	/^InitSides(void *TrackHandle, tTrack *theTrack)$/;"	f	file:
InitSides	src/modules/track/track4.cpp	/^InitSides(void *TrackHandle, tTrack *theTrack)$/;"	f	file:
InputFileName	src/tools/accc/mainaccc.cpp	/^char	*InputFileName = NULL;$/;"	v
InputFileName	src/tools/texmapper/maintexmapper.cpp	/^char	*InputFileName = NULL;$/;"	v
InputWaited	src/libs/confscreens/controlconfig.cpp	/^static int InputWaited = 0;$/;"	v	file:
InsertInGroup	src/tools/trackgen/objects.cpp	/^InsertInGroup(ssgEntity *ent)$/;"	f	file:
InsertInner	src/tools/trackgen/objects.cpp	/^InsertInner(ssgEntity *ent)$/;"	f	file:
InstId	src/libs/confscreens/joystickconfig.cpp	/^static int InstId;$/;"	v	file:
InstId	src/libs/confscreens/mouseconfig.cpp	/^static int	InstId;$/;"	v	file:
Instructions	src/libs/confscreens/joystickconfig.cpp	/^static char *Instructions[] = {$/;"	v	file:
Instructions	src/libs/confscreens/mouseconfig.cpp	/^static char *Instructions[] = {$/;"	v	file:
IntEnd	src/libs/tgfclient/guifont.h	/^    int IntStart, IntEnd;$/;"	m	struct:__anon55
IntStart	src/libs/tgfclient/guifont.h	/^    int IntStart, IntEnd;$/;"	m	struct:__anon55
InteriorList	src/tools/trackgen/relief.cpp	/^tRingListHead	InteriorList;$/;"	v
Intersect	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^typedef bool (*Intersect)(const Shape&, const Shape&, $/;"	t
IntersectLineLine	src/drivers/olethros/geometry.cpp	/^float IntersectLineLine(ParametricLine* A, ParametricLine* B)$/;"	f
IntersectSphereLine	src/drivers/olethros/geometry.cpp	/^Vector* IntersectSphereLine(ParametricLine* line, Vector* C, float r)$/;"	f
IntersectTable	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^typedef AlgoTable<Intersect> IntersectTable;$/;"	t	file:
InvBrkCmd	src/drivers/inferno2/inferno2.cpp	/^static tdble	InvBrkCmd;$/;"	v	file:
J	export/include/learning/ann_policy.h	/^	ANN* J; \/\/\/< Evaluation network$/;"	m	class:ANN_Policy
J	src/libs/learning/ann_policy.h	/^	ANN* J; \/\/\/< Evaluation network$/;"	m	class:ANN_Policy
JQs	export/include/learning/ann_policy.h	/^	real* JQs; \/\/\/< Placeholder for evaluation vector (\\c separate_actions)$/;"	m	class:ANN_Policy
JQs	src/libs/learning/ann_policy.h	/^	real* JQs; \/\/\/< Placeholder for evaluation vector (\\c separate_actions)$/;"	m	class:ANN_Policy
JS_DATA_TYPE	export/include/js.h	/^       struct JS_DATA_TYPE$/;"	s
JS_DATA_TYPE	export/include/js.h	70;"	d
JS_DATA_TYPE	export/include/js.h	74;"	d
JS_DATA_TYPE	src/interfaces/js.h	/^       struct JS_DATA_TYPE$/;"	s
JS_DATA_TYPE	src/interfaces/js.h	70;"	d
JS_DATA_TYPE	src/interfaces/js.h	74;"	d
JS_FALSE	export/include/js.h	114;"	d
JS_FALSE	src/interfaces/js.h	114;"	d
JS_NEW	export/include/js.h	85;"	d
JS_NEW	src/interfaces/js.h	85;"	d
JS_RETURN	export/include/js.h	108;"	d
JS_RETURN	export/include/js.h	71;"	d
JS_RETURN	export/include/js.h	75;"	d
JS_RETURN	src/interfaces/js.h	108;"	d
JS_RETURN	src/interfaces/js.h	71;"	d
JS_RETURN	src/interfaces/js.h	75;"	d
JS_TRUE	export/include/js.h	113;"	d
JS_TRUE	src/interfaces/js.h	113;"	d
J_ps_pa	export/include/learning/ann_policy.h	/^	real J_ps_pa; \/\/\/< Evaluation of last action$/;"	m	class:ANN_Policy
J_ps_pa	src/libs/learning/ann_policy.h	/^	real J_ps_pa; \/\/\/< Evaluation of last action$/;"	m	class:ANN_Policy
Ja	export/include/learning/ann_policy.h	/^	ANN** Ja; \/\/\/< Evaluation networks (for \\c separate_actions case)$/;"	m	class:ANN_Policy
Ja	src/libs/learning/ann_policy.h	/^	ANN** Ja; \/\/\/< Evaluation networks (for \\c separate_actions case)$/;"	m	class:ANN_Policy
JoyCalAutomaton	src/libs/confscreens/joystickconfig.cpp	/^JoyCalAutomaton(void)$/;"	f	file:
JoyCalButton	src/libs/confscreens/controlconfig.cpp	/^static int	JoyCalButton;$/;"	v	file:
JoyCalMenuInit	src/libs/confscreens/joystickconfig.cpp	/^JoyCalMenuInit(void *prevMenu, tCmdInfo *cmd, int maxcmd)$/;"	f
JustCalculate	src/tools/trackgen/maintrackgen.cpp	/^int		JustCalculate;$/;"	v
K	src/modules/simu/simuv2/susp.h	/^    tdble K;          \/* spring coef *\/$/;"	m	struct:__anon17
KEY	src/libs/txml/hashtable.h	/^typedef const char *KEY;$/;"	t
KEY	src/libs/txml/hashtable.h	/^typedef const wchar_t *KEY;$/;"	t
KIDS	src/tools/accc/ac3dload.cpp	39;"	d	file:
KeyBarrierHeight	src/modules/track/track3.cpp	/^static char *KeyBarrierHeight[2]  = {TRK_ATT_RBAH, TRK_ATT_LBAH};$/;"	v	file:
KeyBarrierStyle	src/modules/track/track3.cpp	/^static char *KeyBarrierStyle[2]   = {TRK_ATT_RBAS, TRK_ATT_LBAS};$/;"	v	file:
KeyBarrierSurface	src/modules/track/track3.cpp	/^static char *KeyBarrierSurface[2] = {TRK_ATT_RBASURF, TRK_ATT_LBASURF};$/;"	v	file:
KeyBarrierWidth	src/modules/track/track3.cpp	/^static char *KeyBarrierWidth[2]   = {TRK_ATT_RBAW, TRK_ATT_LBAW};$/;"	v	file:
KeyBorderHeight	src/modules/track/track3.cpp	/^static char *KeyBorderHeight[2]   = {TRK_ATT_RBH, TRK_ATT_LBH};$/;"	v	file:
KeyBorderStyle	src/modules/track/track3.cpp	/^static char *KeyBorderStyle[2]    = {TRK_ATT_RBS, TRK_ATT_LBS};$/;"	v	file:
KeyBorderSurface	src/modules/track/track3.cpp	/^static char *KeyBorderSurface[2]  = {TRK_ATT_RBSURF, TRK_ATT_LBSURF};$/;"	v	file:
KeyBorderWidth	src/modules/track/track3.cpp	/^static char *KeyBorderWidth[2]    = {TRK_ATT_RBW, TRK_ATT_LBW};$/;"	v	file:
KeySideBankType	src/modules/track/track2.cpp	/^static char *KeySideBankType[2] = {TRK_ATT_RST, TRK_ATT_LST};$/;"	v	file:
KeySideBankType	src/modules/track/track3.cpp	/^static char *KeySideBankType[2]   = {TRK_ATT_RST, TRK_ATT_LST};$/;"	v	file:
KeySideEndWidth	src/modules/track/track2.cpp	/^static char *KeySideEndWidth[2] = {TRK_ATT_RSWE, TRK_ATT_LSWE};$/;"	v	file:
KeySideEndWidth	src/modules/track/track3.cpp	/^static char *KeySideEndWidth[2]   = {TRK_ATT_RSWE, TRK_ATT_LSWE};$/;"	v	file:
KeySideStartWidth	src/modules/track/track2.cpp	/^static char *KeySideStartWidth[2] = {TRK_ATT_RSWS, TRK_ATT_LSWS};$/;"	v	file:
KeySideStartWidth	src/modules/track/track3.cpp	/^static char *KeySideStartWidth[2] = {TRK_ATT_RSWS, TRK_ATT_LSWS};$/;"	v	file:
KeySideSurface	src/modules/track/track2.cpp	/^static char *KeySideSurface[2] = {TRK_ATT_RSSURF, TRK_ATT_LSSURF};$/;"	v	file:
KeySideSurface	src/modules/track/track3.cpp	/^static char *KeySideSurface[2]    = {TRK_ATT_RSSURF, TRK_ATT_LSSURF};$/;"	v	file:
KeySideWidth	src/modules/track/track2.cpp	/^static char *KeySideWidth[2] = {TRK_ATT_RSW, TRK_ATT_LSW};$/;"	v	file:
KeySideWidth	src/modules/track/track3.cpp	/^static char *KeySideWidth[2]      = {TRK_ATT_RSW, TRK_ATT_LSW};$/;"	v	file:
Kx	src/modules/simu/simuv2/aero.h	/^    tdble	Kx;$/;"	m	struct:__anon14
Kyl	export/include/track.h	/^    tdble	Kyl;		\/* find y along x *\/$/;"	m	struct:trackSeg
Kyl	src/interfaces/track.h	/^    tdble	Kyl;		\/* find y along x *\/$/;"	m	struct:trackSeg
Kz	src/modules/simu/simuv2/aero.h	/^    tdble	Kz;$/;"	m	struct:__anon14
Kzl	export/include/track.h	/^    tdble Kzl;		\/* long constant *\/$/;"	m	struct:trackSeg
Kzl	src/interfaces/track.h	/^    tdble Kzl;		\/* long constant *\/$/;"	m	struct:trackSeg
Kzw	export/include/track.h	/^    tdble Kzw;		\/* width constant *\/$/;"	m	struct:trackSeg
Kzw	src/interfaces/track.h	/^    tdble Kzw;		\/* width constant *\/$/;"	m	struct:trackSeg
LAPBACKTIMEPENALTY	src/drivers/berniw/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	src/drivers/berniw/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	src/drivers/berniw2/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	src/drivers/berniw2/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	src/drivers/berniw3/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	src/drivers/berniw3/mycar.h	/^		static const double LAPBACKTIMEPENALTY; \/* penalty if i am able to "lap back" [s] *\/$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	src/drivers/inferno/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0;		\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	src/drivers/inferno/mycar.h	/^		static const double LAPBACKTIMEPENALTY; 	\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	src/drivers/lliaw/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0;		\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	src/drivers/lliaw/mycar.h	/^		static const double LAPBACKTIMEPENALTY; 	\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar
LAPBACKTIMEPENALTY	src/drivers/tita/mycar.cpp	/^const double MyCar::LAPBACKTIMEPENALTY = -30.0;		\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar	file:
LAPBACKTIMEPENALTY	src/drivers/tita/mycar.h	/^		static const double LAPBACKTIMEPENALTY; 	\/\/ Penalty if i am able to "lap back" [s].$/;"	m	class:MyCar
LAPLACIAN	export/include/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
LAPLACIAN	src/libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
LAP_BACK_TIME_PENALTY	src/drivers/bt/opponent.cpp	/^const float Opponent::LAP_BACK_TIME_PENALTY = -30.0f;	\/\/ [s]$/;"	m	class:Opponent	file:
LAP_BACK_TIME_PENALTY	src/drivers/bt/opponent.h	/^		static const float LAP_BACK_TIME_PENALTY;$/;"	m	class:Opponent
LAP_BACK_TIME_PENALTY	src/drivers/damned/opponent.cpp	/^const float Opponent::LAP_BACK_TIME_PENALTY = -30.0f;	\/\/ [s]$/;"	m	class:Opponent	file:
LAP_BACK_TIME_PENALTY	src/drivers/damned/opponent.h	/^		static const float LAP_BACK_TIME_PENALTY;$/;"	m	class:Opponent
LAP_BACK_TIME_PENALTY	src/drivers/olethros/opponent.cpp	/^const float Opponent::LAP_BACK_TIME_PENALTY = -30.0;	\/\/ [s]$/;"	m	class:olethros::Opponent	file:
LAP_BACK_TIME_PENALTY	src/drivers/olethros/opponent.h	/^		static const float LAP_BACK_TIME_PENALTY;$/;"	m	class:olethros::Opponent
LDATA	src/windows/include/pngconf.h	994;"	d
LDATA	src/windows/include/pngconf.h	996;"	d
LDFLAGS	src/linux/Makefile	/^LDFLAGS = -rdynamic$/;"	m
LDFLAGS	src/tools/accc/Makefile	/^LDFLAGS		= -rdynamic$/;"	m
LEAD_CASE	src/libs/txml/xmltok_impl.c	1056;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1073;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1148;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1151;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1206;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1209;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1322;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1325;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1494;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1499;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1578;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1581;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1620;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	1625;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	367;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	376;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	798;"	d	file:
LEAD_CASE	src/libs/txml/xmltok_impl.c	807;"	d	file:
LEAF	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  enum TagType { LEAF, INTERNAL };$/;"	e	enum:BBoxNode::TagType
LEFT	export/include/car.h	47;"	d
LEFT	src/interfaces/car.h	47;"	d
LENGTH_MARGIN	src/drivers/bt/opponent.cpp	/^const float Opponent::LENGTH_MARGIN = 3.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
LENGTH_MARGIN	src/drivers/bt/opponent.h	/^		static const float LENGTH_MARGIN;$/;"	m	class:Opponent
LENGTH_MARGIN	src/drivers/damned/opponent.cpp	/^const float Opponent::LENGTH_MARGIN = 3.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
LENGTH_MARGIN	src/drivers/damned/opponent.h	/^		static const float LENGTH_MARGIN;$/;"	m	class:Opponent
LENGTH_MARGIN	src/drivers/olethros/opponent.cpp	/^const float Opponent::LENGTH_MARGIN = 3.0;				\/\/ [m] safety margin.$/;"	m	class:olethros::Opponent	file:
LENGTH_MARGIN	src/drivers/olethros/opponent.h	/^		static const float LENGTH_MARGIN;$/;"	m	class:olethros::Opponent
LENGTH_MARGIN	src/drivers/sparkle/opponent.cpp	/^float Opponent::LENGTH_MARGIN = 2.0;	\/* [m] savety margin *\/$/;"	m	class:Opponent	file:
LENGTH_MARGIN	src/drivers/sparkle/opponent.h	/^		static float LENGTH_MARGIN;$/;"	m	class:Opponent
LEVEL0	src/modules/graphic/ssggraph/grvtxtable.h	55;"	d
LEVEL1	src/modules/graphic/ssggraph/grvtxtable.h	56;"	d
LEVEL2	src/modules/graphic/ssggraph/grvtxtable.h	57;"	d
LEVEL3	src/modules/graphic/ssggraph/grvtxtable.h	58;"	d
LEVELC	src/modules/graphic/ssggraph/grvtxtable.h	49;"	d
LEVELC2	src/modules/graphic/ssggraph/grvtxtable.h	51;"	d
LEVELC3	src/modules/graphic/ssggraph/grvtxtable.h	53;"	d
LG_STEP_MAX	src/tools/trackgen/track.cpp	204;"	d	file:
LIBDIR	src/modules/simu/simuv2/SOLID-2.0/src/Makefile	/^LIBDIR	     =	lib$/;"	m
LIBRARY	src/modules/simu/simuv2/SOLID-2.0/src/Makefile	/^LIBRARY      =	libsolid.a$/;"	m
LIBS	src/drivers/human/Makefile	/^LIBS      =  -lplibul$/;"	m
LIBS	src/drivers/olethros/Makefile	/^LIBS        = -L${EXPORTBASE}\/lib -llearning$/;"	m
LIBS	src/libs/client/Makefile	/^LIBS      =  -lplibssg -lplibsg -lplibul$/;"	m
LIBS	src/modules/graphic/ssggraph/Makefile	/^LIBS      = -lplibsl -lplibsm -lplibsg -lplibssg -lplibul -lplibssgaux -lopenal$/;"	m
LIBS	src/modules/simu/simuv2/Makefile	/^LIBS		=  -lplibsg -lplibul -L${EXPORTBASE}\/lib -lsolid$/;"	m
LIGHT_NO_TYPE	src/modules/graphic/ssggraph/grcarlight.h	96;"	d
LIGHT_TYPE_BRAKE	src/modules/graphic/ssggraph/grcarlight.h	93;"	d
LIGHT_TYPE_BRAKE2	src/modules/graphic/ssggraph/grcarlight.h	94;"	d
LIGHT_TYPE_FRONT	src/modules/graphic/ssggraph/grcarlight.h	89;"	d
LIGHT_TYPE_FRONT2	src/modules/graphic/ssggraph/grcarlight.h	90;"	d
LIGHT_TYPE_REAR	src/modules/graphic/ssggraph/grcarlight.h	91;"	d
LIGHT_TYPE_REAR2	src/modules/graphic/ssggraph/grcarlight.h	92;"	d
LIGHT_TYPE_REVERSE	src/modules/graphic/ssggraph/grcarlight.h	95;"	d
LINEAR	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    LINEAR = ROTATION | SCALING,$/;"	e	enum:Transform::__anon7
LINES	src/libs/raceengineclient/racegl.cpp	254;"	d	file:
LINE_SZ	src/libs/tgf/params.cpp	43;"	d	file:
LINUX_AL	src/windows/include/AL/altypes.h	12;"	d
LINUX_AL	src/windows/include/AL/alut.h	12;"	d
LIST	export/include/learning/List.h	/^} LIST;$/;"	t	typeref:struct:List
LIST	src/libs/learning/List.h	/^} LIST;$/;"	t	typeref:struct:List
LISTITEM	export/include/learning/List.h	/^} LISTITEM;$/;"	t	typeref:struct:ListItem
LISTITEM	src/libs/learning/List.h	/^} LISTITEM;$/;"	t	typeref:struct:ListItem
LIST_H	export/include/learning/List.h	13;"	d
LIST_H	src/libs/learning/List.h	13;"	d
LMAX	src/tools/trackgen/track.cpp	72;"	d	file:
LNorm	src/libs/learning/MathFunctions.cpp	/^real LNorm (real* a, real* b, int n, real p)$/;"	f
LOC	src/tools/accc/ac3dload.cpp	41;"	d	file:
LOCALTOOLS	src/libs/txml/gennmtab/Makefile	/^LOCALTOOLS = gennmtab$/;"	m
LODSelectMask	src/modules/graphic/ssggraph/grcar.h	/^    int			LODSelectMask[32];$/;"	m	struct:__anon5
LODSelector	src/modules/graphic/ssggraph/grcar.h	/^    ssgSelector		*LODSelector;$/;"	m	struct:__anon5
LODThreshold	src/modules/graphic/ssggraph/grcar.h	/^    float		LODThreshold[32];$/;"	m	struct:__anon5
LOOKAHEAD_CONST	src/drivers/bt/driver.cpp	/^const float Driver::LOOKAHEAD_CONST = 17.0f;				\/\/ [m]$/;"	m	class:Driver	file:
LOOKAHEAD_CONST	src/drivers/bt/driver.h	/^		static const float LOOKAHEAD_CONST;$/;"	m	class:Driver
LOOKAHEAD_CONST	src/drivers/damned/driver.cpp	/^const float Driver::LOOKAHEAD_CONST = 17.0f;				\/\/ [m]$/;"	m	class:Driver	file:
LOOKAHEAD_CONST	src/drivers/damned/driver.h	/^		static const float LOOKAHEAD_CONST;$/;"	m	class:Driver
LOOKAHEAD_CONST	src/drivers/olethros/driver.cpp	/^    const float Driver::LOOKAHEAD_CONST = 17.0f;					\/\/\/< [m]$/;"	m	class:olethros::Driver	file:
LOOKAHEAD_CONST	src/drivers/olethros/driver.h	/^	static const float LOOKAHEAD_CONST;$/;"	m	class:olethros::Driver
LOOKAHEAD_CONST	src/drivers/sparkle/driver.cpp	/^const float Driver::LOOKAHEAD_CONST = 17.0;					\/* [m] *\/$/;"	m	class:Driver	file:
LOOKAHEAD_CONST	src/drivers/sparkle/driver.h	/^		static const float LOOKAHEAD_CONST;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	src/drivers/berniw/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	src/drivers/berniw/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	src/drivers/berniw2/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	src/drivers/berniw2/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	src/drivers/berniw3/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/3.0; \/* [-] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	src/drivers/berniw3/mycar.h	/^		static const double LOOKAHEAD_FACTOR;	\/* [-] *\/$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	src/drivers/bt/driver.cpp	/^const float Driver::LOOKAHEAD_FACTOR = 0.33f;				\/\/ [-]$/;"	m	class:Driver	file:
LOOKAHEAD_FACTOR	src/drivers/bt/driver.h	/^		static const float LOOKAHEAD_FACTOR;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	src/drivers/damned/driver.cpp	/^const float Driver::LOOKAHEAD_FACTOR = 0.33f;				\/\/ [-]$/;"	m	class:Driver	file:
LOOKAHEAD_FACTOR	src/drivers/damned/driver.h	/^		static const float LOOKAHEAD_FACTOR;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	src/drivers/inferno/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/(3.0*TRACKRES); \/\/ [-].$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	src/drivers/inferno/mycar.h	/^		static const double LOOKAHEAD_FACTOR;		\/\/ [-].$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	src/drivers/lliaw/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/(3.0*TRACKRES); \/\/ [-].$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	src/drivers/lliaw/mycar.h	/^		static const double LOOKAHEAD_FACTOR;		\/\/ [-].$/;"	m	class:MyCar
LOOKAHEAD_FACTOR	src/drivers/olethros/driver.cpp	/^    const float Driver::LOOKAHEAD_FACTOR = 0.33f;				\/\/\/< [-]$/;"	m	class:olethros::Driver	file:
LOOKAHEAD_FACTOR	src/drivers/olethros/driver.h	/^	static const float LOOKAHEAD_FACTOR;$/;"	m	class:olethros::Driver
LOOKAHEAD_FACTOR	src/drivers/sparkle/driver.cpp	/^const float Driver::LOOKAHEAD_FACTOR = 0.33;				\/* [-] *\/$/;"	m	class:Driver	file:
LOOKAHEAD_FACTOR	src/drivers/sparkle/driver.h	/^		static const float LOOKAHEAD_FACTOR;$/;"	m	class:Driver
LOOKAHEAD_FACTOR	src/drivers/tita/mycar.cpp	/^const double MyCar::LOOKAHEAD_FACTOR = 1.0\/(3.0*TRACKRES); \/\/ [-].$/;"	m	class:MyCar	file:
LOOKAHEAD_FACTOR	src/drivers/tita/mycar.h	/^		static const double LOOKAHEAD_FACTOR;		\/\/ [-].$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	src/drivers/berniw/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	src/drivers/berniw/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	src/drivers/berniw2/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	src/drivers/berniw2/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	src/drivers/berniw3/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;	\/* [m] *\/$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	src/drivers/berniw3/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;\/* [m] *\/$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	src/drivers/inferno/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;		\/\/ [m].$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	src/drivers/inferno/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;	\/\/ [m].$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	src/drivers/lliaw/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;		\/\/ [m].$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	src/drivers/lliaw/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;	\/\/ [m].$/;"	m	class:MyCar
LOOKAHEAD_MAX_ERROR	src/drivers/tita/mycar.cpp	/^const double MyCar::LOOKAHEAD_MAX_ERROR = 2.0;		\/\/ [m].$/;"	m	class:MyCar	file:
LOOKAHEAD_MAX_ERROR	src/drivers/tita/mycar.h	/^		static const double LOOKAHEAD_MAX_ERROR;	\/\/ [m].$/;"	m	class:MyCar
LPALBUFFER3F	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFER3F)( ALuint bid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALBUFFER3I	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFER3I)( ALuint bid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALBUFFERDATA	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERDATA)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	t
LPALBUFFERF	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERF)( ALuint bid, ALenum param, ALfloat value);$/;"	t
LPALBUFFERFV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERFV)( ALuint bid, ALenum param, const ALfloat* values );$/;"	t
LPALBUFFERI	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERI)( ALuint bid, ALenum param, ALint value);$/;"	t
LPALBUFFERIV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALBUFFERIV)( ALuint bid, ALenum param, const ALint* values );$/;"	t
LPALCCAPTURECLOSEDEVICE	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURECLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCAPTUREOPENDEVICE	src/windows/include/AL/alc.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCCAPTUREOPENDEVICE)( const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize );$/;"	t
LPALCCAPTURESAMPLES	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURESAMPLES)( ALCdevice *device, ALCvoid *buffer, ALCsizei samples );$/;"	t
LPALCCAPTURESTART	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURESTART)( ALCdevice *device );$/;"	t
LPALCCAPTURESTOP	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCCAPTURESTOP)( ALCdevice *device );$/;"	t
LPALCCLOSEDEVICE	src/windows/include/AL/alc.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCREATECONTEXT	src/windows/include/AL/alc.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCDESTROYCONTEXT	src/windows/include/AL/alc.h	/^typedef void	       (ALCAPIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCGETCONTEXTSDEVICE	src/windows/include/AL/alc.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCGETCONTEXTSDEVICE)( ALCcontext *context );$/;"	t
LPALCGETCURRENTCONTEXT	src/windows/include/AL/alc.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCGETCURRENTCONTEXT)( ALCvoid );$/;"	t
LPALCGETENUMVALUE	src/windows/include/AL/alc.h	/^typedef ALCenum        (ALCAPIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname );$/;"	t
LPALCGETERROR	src/windows/include/AL/alc.h	/^typedef ALCenum	       (ALCAPIENTRY *LPALCGETERROR)( ALCdevice *device );$/;"	t
LPALCGETINTEGERV	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCGETINTEGERV)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	t
LPALCGETPROCADDRESS	src/windows/include/AL/alc.h	/^typedef void *         (ALCAPIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname );$/;"	t
LPALCGETSTRING	src/windows/include/AL/alc.h	/^typedef const ALCchar* (ALCAPIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCISEXTENSIONPRESENT	src/windows/include/AL/alc.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCMAKECONTEXTCURRENT	src/windows/include/AL/alc.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCOPENDEVICE	src/windows/include/AL/alc.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCPROCESSCONTEXT	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCPROCESSCONTEXT)( ALCcontext *context );$/;"	t
LPALCSUSPENDCONTEXT	src/windows/include/AL/alc.h	/^typedef void           (ALCAPIENTRY *LPALCSUSPENDCONTEXT)( ALCcontext *context );$/;"	t
LPALDELETEBUFFERS	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDELETEBUFFERS)( ALsizei n, const ALuint* buffers );$/;"	t
LPALDELETESOURCES	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDELETESOURCES)( ALsizei n, const ALuint* sources );$/;"	t
LPALDISABLE	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDISABLE)( ALenum capability ); $/;"	t
LPALDISTANCEMODEL	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDISTANCEMODEL)( ALenum distanceModel );$/;"	t
LPALDOPPLERFACTOR	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERFACTOR)( ALfloat value );$/;"	t
LPALDOPPLERVELOCITY	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERVELOCITY)( ALfloat value );$/;"	t
LPALENABLE	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALENABLE)( ALenum capability );$/;"	t
LPALGENBUFFERS	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGENBUFFERS)( ALsizei n, ALuint* buffers );$/;"	t
LPALGENSOURCES	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGENSOURCES)( ALsizei n, ALuint* sources ); $/;"	t
LPALGETBOOLEAN	src/windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALGETBOOLEAN)( ALenum param );$/;"	t
LPALGETBOOLEANV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBOOLEANV)( ALenum param, ALboolean* data );$/;"	t
LPALGETBUFFER3F	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFER3F)( ALuint bid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETBUFFER3I	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFER3I)( ALuint bid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETBUFFERF	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERF)( ALuint bid, ALenum param, ALfloat* value );$/;"	t
LPALGETBUFFERFV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERFV)( ALuint bid, ALenum param, ALfloat* values );$/;"	t
LPALGETBUFFERI	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERI)( ALuint bid, ALenum param, ALint* value );$/;"	t
LPALGETBUFFERIV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERIV)( ALuint bid, ALenum param, ALint* values );$/;"	t
LPALGETDOUBLE	src/windows/include/AL/al.h	/^typedef ALdouble       (ALAPIENTRY *LPALGETDOUBLE)( ALenum param );$/;"	t
LPALGETDOUBLEV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETDOUBLEV)( ALenum param, ALdouble* data );$/;"	t
LPALGETENUMVALUE	src/windows/include/AL/al.h	/^typedef ALenum         (ALAPIENTRY *LPALGETENUMVALUE)( const ALchar* ename );$/;"	t
LPALGETERROR	src/windows/include/AL/al.h	/^typedef ALenum         (ALAPIENTRY *LPALGETERROR)( ALvoid );$/;"	t
LPALGETFLOAT	src/windows/include/AL/al.h	/^typedef ALfloat        (ALAPIENTRY *LPALGETFLOAT)( ALenum param );$/;"	t
LPALGETFLOATV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETFLOATV)( ALenum param, ALfloat* data );$/;"	t
LPALGETINTEGER	src/windows/include/AL/al.h	/^typedef ALint          (ALAPIENTRY *LPALGETINTEGER)( ALenum param );$/;"	t
LPALGETINTEGERV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETINTEGERV)( ALenum param, ALint* data );$/;"	t
LPALGETLISTENER3F	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENER3F)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	t
LPALGETLISTENER3I	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENER3I)( ALenum param, ALint *value1, ALint *value2, ALint *value3 );$/;"	t
LPALGETLISTENERF	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERF)( ALenum param, ALfloat* value );$/;"	t
LPALGETLISTENERFV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERFV)( ALenum param, ALfloat* values );$/;"	t
LPALGETLISTENERI	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERI)( ALenum param, ALint* value );$/;"	t
LPALGETLISTENERIV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERIV)( ALenum param, ALint* values );$/;"	t
LPALGETPROCADDRESS	src/windows/include/AL/al.h	/^typedef void*          (ALAPIENTRY *LPALGETPROCADDRESS)( const ALchar* fname );$/;"	t
LPALGETSOURCE3F	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCE3F)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETSOURCE3I	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCE3I)( ALuint sid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	t
LPALGETSOURCEF	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEF)( ALuint sid, ALenum param, ALfloat* value );$/;"	t
LPALGETSOURCEFV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEFV)( ALuint sid, ALenum param, ALfloat* values );$/;"	t
LPALGETSOURCEI	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEI)( ALuint sid, ALenum param, ALint* value );$/;"	t
LPALGETSOURCEIV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEIV)( ALuint sid, ALenum param, ALint* values );$/;"	t
LPALGETSTRING	src/windows/include/AL/al.h	/^typedef const ALchar*  (ALAPIENTRY *LPALGETSTRING)( ALenum param );$/;"	t
LPALISBUFFER	src/windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISBUFFER)( ALuint bid );$/;"	t
LPALISENABLED	src/windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISENABLED)( ALenum capability ); $/;"	t
LPALISEXTENSIONPRESENT	src/windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISEXTENSIONPRESENT)(const ALchar* extname );$/;"	t
LPALISSOURCE	src/windows/include/AL/al.h	/^typedef ALboolean      (ALAPIENTRY *LPALISSOURCE)( ALuint sid ); $/;"	t
LPALLISTENER3F	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENER3F)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALLISTENER3I	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENER3I)( ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALLISTENERF	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERF)( ALenum param, ALfloat value );$/;"	t
LPALLISTENERFV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERFV)( ALenum param, const ALfloat* values );$/;"	t
LPALLISTENERI	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERI)( ALenum param, ALint value );$/;"	t
LPALLISTENERIV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALLISTENERIV)( ALenum param, const ALint* values );$/;"	t
LPALSOURCE3F	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCE3F)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALSOURCE3I	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCE3I)( ALuint sid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	t
LPALSOURCEF	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEF)( ALuint sid, ALenum param, ALfloat value); $/;"	t
LPALSOURCEFV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEFV)( ALuint sid, ALenum param, const ALfloat* values );$/;"	t
LPALSOURCEI	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEI)( ALuint sid, ALenum param, ALint value); $/;"	t
LPALSOURCEIV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEIV)( ALuint sid, ALenum param, const ALint* values );$/;"	t
LPALSOURCEPAUSE	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSE)( ALuint sid );$/;"	t
LPALSOURCEPAUSEV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSEV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPLAY	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAY)( ALuint sid );$/;"	t
LPALSOURCEPLAYV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAYV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEQUEUEBUFFERS	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	t
LPALSOURCEREWIND	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWIND)( ALuint sid );$/;"	t
LPALSOURCEREWINDV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWINDV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCESTOP	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOP)( ALuint sid );$/;"	t
LPALSOURCESTOPV	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOPV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEUNQUEUEBUFFERS	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	t
LPALSPEEDOFSOUND	src/windows/include/AL/al.h	/^typedef void           (ALAPIENTRY *LPALSPEEDOFSOUND)( ALfloat value );$/;"	t
LST_RANGES	export/include/car.h	527;"	d
LST_RANGES	src/interfaces/car.h	527;"	d
LabAxisId	src/libs/confscreens/joystickconfig.cpp	/^static int  LabAxisId[4];$/;"	v	file:
LabMaxId	src/libs/confscreens/joystickconfig.cpp	/^static int  LabMaxId[4];$/;"	v	file:
LabMinId	src/libs/confscreens/joystickconfig.cpp	/^static int  LabMinId[4];$/;"	v	file:
LabName	src/libs/confscreens/joystickconfig.cpp	/^static char *LabName[] = { "Steer", "Throttle", "Brake", "Clutch" };$/;"	v	file:
LabelColor	src/libs/confscreens/driverconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	src/libs/confscreens/openglconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	src/libs/confscreens/simuconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	src/libs/confscreens/soundconfig.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LabelColor	src/libs/tgfclient/screen.cpp	/^static float LabelColor[] = {1.0, 0.0, 1.0, 1.0};$/;"	v	file:
LandAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *LandAnchor = 0;$/;"	v
LaplacianDistribution	export/include/learning/Distribution.h	/^	LaplacianDistribution() {m=0.0;l=1.0;}$/;"	f	class:LaplacianDistribution
LaplacianDistribution	export/include/learning/Distribution.h	/^	LaplacianDistribution(real lambda)$/;"	f	class:LaplacianDistribution
LaplacianDistribution	export/include/learning/Distribution.h	/^	LaplacianDistribution(real mean, real var)$/;"	f	class:LaplacianDistribution
LaplacianDistribution	export/include/learning/Distribution.h	/^class LaplacianDistribution : public ParametricDistribution {$/;"	c
LaplacianDistribution	src/libs/learning/Distribution.h	/^	LaplacianDistribution() {m=0.0;l=1.0;}$/;"	f	class:LaplacianDistribution
LaplacianDistribution	src/libs/learning/Distribution.h	/^	LaplacianDistribution(real lambda)$/;"	f	class:LaplacianDistribution
LaplacianDistribution	src/libs/learning/Distribution.h	/^	LaplacianDistribution(real mean, real var)$/;"	f	class:LaplacianDistribution
LaplacianDistribution	src/libs/learning/Distribution.h	/^class LaplacianDistribution : public ParametricDistribution {$/;"	c
LastListItem	src/libs/learning/List.cpp	/^LISTITEM* LastListItem(LIST* list)$/;"	f
LastPitStopLap	src/drivers/human/human.h	/^	int		LastPitStopLap;$/;"	m	struct:HumanContext
LastTimeClick	src/libs/tgfclient/gui.cpp	/^static double LastTimeClick;$/;"	v	file:
Layer	export/include/learning/ANN.h	/^} Layer;$/;"	t	typeref:struct:Layer_
Layer	src/libs/learning/ANN.h	/^} Layer;$/;"	t	typeref:struct:Layer_
Layer_	export/include/learning/ANN.h	/^typedef struct Layer_ {$/;"	s
Layer_	src/libs/learning/ANN.h	/^typedef struct Layer_ {$/;"	s
LearningMethod	export/include/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	g
LearningMethod	src/libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	g
Length	src/drivers/olethros/TrackData.h	/^    float Length()$/;"	f	class:Point
LengthId	src/libs/racescreens/trackselect.cpp	/^static int LengthId;$/;"	v	file:
LgfsFinal	src/drivers/inferno2/inferno2.cpp	/^tdble LgfsFinal[10];$/;"	v
Line	src/tools/trackgen/relief.cpp	/^typedef struct Line$/;"	s	file:
LinkNext	src/libs/learning/List.cpp	/^LISTITEM* LinkNext(LISTITEM* src, void* ptr, void (*free_obj) (void* obj))$/;"	f
LinkPrev	src/libs/learning/List.cpp	/^LISTITEM* LinkPrev(LISTITEM* src, void* ptr, void (*free_obj) (void* obj))$/;"	f
LinuxSpecInit	src/linux/linuxspec.cpp	/^LinuxSpecInit(void)$/;"	f
List	export/include/learning/List.h	/^typedef struct List {$/;"	s
List	src/libs/learning/List.cpp	/^LIST* List(void)$/;"	f
List	src/libs/learning/List.h	/^typedef struct List {$/;"	s
ListAppend	src/libs/learning/List.cpp	/^LISTITEM* ListAppend(LIST* list, void* p) {$/;"	f
ListAppend	src/libs/learning/List.cpp	/^LISTITEM* ListAppend(LIST* list, void* p, void (*free_obj) (void* obj))$/;"	f
ListItem	export/include/learning/List.h	/^typedef struct ListItem {$/;"	s
ListItem	src/libs/learning/List.cpp	/^LISTITEM* ListItem(void* ptr, void (*free_obj) (void* obj)) $/;"	f
ListItem	src/libs/learning/List.h	/^typedef struct ListItem {$/;"	s
ListLinearSearchRetrieve	src/libs/learning/List.cpp	/^LISTITEM* ListLinearSearchRetrieve (struct List* list, void* ptr)$/;"	f
ListSize	src/libs/learning/List.cpp	/^int ListSize(LIST* list) {$/;"	f
LoadANN	src/libs/learning/ANN.cpp	/^ANN* LoadANN(FILE* f)$/;"	f
LoadANN	src/libs/learning/ANN.cpp	/^ANN* LoadANN(char* filename)$/;"	f
LoadElevation	src/tools/trackgen/elevation.cpp	/^void LoadElevation(tTrack *track, void *TrackHandle, char *imgFile)$/;"	f
LoadParameter	src/drivers/olethros/learn.cpp	/^bool SegLearn::LoadParameter (float* p, int n, FILE* f)$/;"	f	class:SegLearn
LoadRelief	src/tools/trackgen/relief.cpp	/^LoadRelief(void *TrackHandle, char *reliefFile)$/;"	f
Loaded	src/modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
LodFactorEditId	src/libs/confscreens/graphconfig.cpp	/^static int	LodFactorEditId;$/;"	v	file:
LodFactorValue	src/libs/confscreens/graphconfig.cpp	/^static tdble	LodFactorValue = 1.0;$/;"	v	file:
M	export/include/tgf.h	/^    t3Dd M; \/**< Moments *\/$/;"	m	struct:__anon193
M	src/libs/tgf/tgf.h	/^    t3Dd M; \/**< Moments *\/$/;"	m	struct:__anon51
M	src/modules/graphic/ssggraph/grcam.cpp	87;"	d	file:
M	src/modules/graphic/ssggraph/grcam.cpp	92;"	d	file:
MACINTOSH_AL	src/windows/include/AL/altypes.h	7;"	d
MACINTOSH_AL	src/windows/include/AL/alut.h	7;"	d
MACOS	src/windows/include/pngconf.h	223;"	d
MAGIC1	src/drivers/bt/learn.cpp	24;"	d	file:
MAGIC1	src/drivers/damned/learn.cpp	24;"	d	file:
MAGIC2	src/drivers/bt/learn.cpp	26;"	d	file:
MAGIC2	src/drivers/damned/learn.cpp	26;"	d	file:
MAKE_DEFAULT	Makefile	/^MAKE_DEFAULT = ${TORCS_BASE}\/Make-default.mk$/;"	m
MARGIN	src/drivers/berniw/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	src/drivers/berniw/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	src/drivers/berniw2/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	src/drivers/berniw2/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	src/drivers/berniw3/mycar.cpp	/^const double MyCar::MARGIN = 0.3;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar	file:
MARGIN	src/drivers/berniw3/mycar.h	/^		static const double MARGIN;				\/* security margin from track border [m] *\/$/;"	m	class:MyCar
MARGIN	src/drivers/inferno/mycar.cpp	/^const double MyCar::MARGIN = 0.2;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar	file:
MARGIN	src/drivers/inferno/mycar.h	/^		static const double MARGIN;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar
MARGIN	src/drivers/lliaw/mycar.cpp	/^const double MyCar::MARGIN = 0.2;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar	file:
MARGIN	src/drivers/lliaw/mycar.h	/^		static const double MARGIN;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar
MARGIN	src/drivers/tita/mycar.cpp	/^const double MyCar::MARGIN = 0.2;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar	file:
MARGIN	src/drivers/tita/mycar.h	/^		static const double MARGIN;					\/\/ Security margin from track border [m].$/;"	m	class:MyCar
MAT	src/tools/accc/ac3dload.cpp	48;"	d	file:
MATERIAL	src/tools/accc/ac3dload.cpp	37;"	d	file:
MATH_FUNCTIONS_H	export/include/learning/MathFunctions.h	13;"	d
MATH_FUNCTIONS_H	src/libs/learning/MathFunctions.h	13;"	d
MAX	export/include/tgf.h	54;"	d
MAX	src/libs/tgf/tgf.h	54;"	d
MAX	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^enum { MIN = 0, MAX = 1 };$/;"	e	enum:__anon8
MAXALLOWEDPITCH	src/drivers/berniw/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	src/drivers/berniw/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	src/drivers/berniw2/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	src/drivers/berniw2/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	src/drivers/berniw3/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;		\/* max allowed angle between road and car [radians] *\/$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	src/drivers/berniw3/mycar.h	/^		static const double MAXALLOWEDPITCH;	\/* [-] radians *\/$/;"	m	class:MyCar
MAXALLOWEDPITCH	src/drivers/inferno/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;			\/\/ Max allowed angle between road and car [radians].$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	src/drivers/inferno/mycar.h	/^		static const double MAXALLOWEDPITCH;		\/\/ [-] radians.$/;"	m	class:MyCar
MAXALLOWEDPITCH	src/drivers/lliaw/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;			\/\/ Max allowed angle between road and car [radians].$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	src/drivers/lliaw/mycar.h	/^		static const double MAXALLOWEDPITCH;		\/\/ [-] radians.$/;"	m	class:MyCar
MAXALLOWEDPITCH	src/drivers/tita/mycar.cpp	/^const double MyCar::MAXALLOWEDPITCH = 0.06;			\/\/ Max allowed angle between road and car [radians].$/;"	m	class:MyCar	file:
MAXALLOWEDPITCH	src/drivers/tita/mycar.h	/^		static const double MAXALLOWEDPITCH;		\/\/ [-] radians.$/;"	m	class:MyCar
MAXANGLE	src/drivers/berniw/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	src/drivers/berniw2/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	src/drivers/berniw3/mycar.h	/^		double MAXANGLE;								\/* biggest allowed angle to the path [deg] *\/$/;"	m	class:MyCar
MAXANGLE	src/drivers/inferno/mycar.h	/^		double MAXANGLE;								\/\/ Biggest allowed angle to the path [deg].$/;"	m	class:MyCar
MAXANGLE	src/drivers/lliaw/mycar.h	/^		double MAXANGLE;								\/\/ Biggest allowed angle to the path [deg].$/;"	m	class:MyCar
MAXANGLE	src/drivers/tita/mycar.h	/^		double MAXANGLE;								\/\/ Biggest allowed angle to the path [deg].$/;"	m	class:MyCar
MAXDAMMAGE	src/drivers/berniw/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	src/drivers/berniw2/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	src/drivers/berniw3/mycar.h	/^		int MAXDAMMAGE;									\/* if dammage > MAXDAMMAGE then we plan a pit stop [-] *\/$/;"	m	class:MyCar
MAXDAMMAGE	src/drivers/inferno/mycar.h	/^		int MAXDAMMAGE;									\/\/ If dammage > MAXDAMMAGE then we plan a pit stop [-].$/;"	m	class:MyCar
MAXDAMMAGE	src/drivers/lliaw/mycar.h	/^		int MAXDAMMAGE;									\/\/ If dammage > MAXDAMMAGE then we plan a pit stop [-].$/;"	m	class:MyCar
MAXDAMMAGE	src/drivers/tita/mycar.h	/^		int MAXDAMMAGE;									\/\/ If dammage > MAXDAMMAGE then we plan a pit stop [-].$/;"	m	class:MyCar
MAXLINEWIDTH	src/modules/graphic/ssggraph/grtrackmap.cpp	/^const float cGrTrackMap::MAXLINEWIDTH = 20.0;$/;"	m	class:cGrTrackMap	file:
MAXLINEWIDTH	src/modules/graphic/ssggraph/grtrackmap.h	/^		static const float MAXLINEWIDTH;$/;"	m	class:cGrTrackMap
MAXNAMELEN	src/drivers/human/human.cpp	204;"	d	file:
MAXPOINT_BY_STRIP	src/modules/graphic/ssggraph/grskidmarks.h	4;"	d
MAXRELAX	src/drivers/berniw/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	src/drivers/berniw2/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	src/drivers/berniw3/mycar.h	/^		double MAXRELAX;								\/* to avoid skidding (0..0.99) [-] *\/$/;"	m	class:MyCar
MAXRELAX	src/drivers/inferno/mycar.h	/^		double MAXRELAX;								\/\/ To avoid skidding (0..0.99) [-].$/;"	m	class:MyCar
MAXRELAX	src/drivers/lliaw/mycar.h	/^		double MAXRELAX;								\/\/ To avoid skidding (0..0.99) [-].$/;"	m	class:MyCar
MAXRELAX	src/drivers/tita/mycar.h	/^		double MAXRELAX;								\/\/ To avoid skidding (0..0.99) [-].$/;"	m	class:MyCar
MAXSEG_64K	src/windows/include/zconf.h	68;"	d
MAXSTRIP_BYWHEEL	src/modules/graphic/ssggraph/grskidmarks.h	5;"	d
MAX_AXES	export/include/js.h	37;"	d
MAX_AXES	src/interfaces/js.h	37;"	d
MAX_BRAKE_FOLLOW_DISTANCE	src/drivers/olethros/driver.cpp	/^    const float Driver::MAX_BRAKE_FOLLOW_DISTANCE = 2.0f;        \/\/\/< [m] Predicted minimum distance from next opponent to start applying brake.$/;"	m	class:olethros::Driver	file:
MAX_BRAKE_FOLLOW_DISTANCE	src/drivers/olethros/driver.h	/^	static const float MAX_BRAKE_FOLLOW_DISTANCE;$/;"	m	class:olethros::Driver
MAX_CLR	src/tools/trackgen/elevation.cpp	51;"	d	file:
MAX_DISTANCE	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat MAX_DISTANCE; \/\/\/< maximum allowed distance$/;"	m	class:OpenalTorcsSound
MAX_DISTANCE_LOW	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat MAX_DISTANCE_LOW; \/\/\/< maximum allowed distance$/;"	m	class:OpenalTorcsSound
MAX_FUEL_PER_METER	src/drivers/berniw/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	src/drivers/berniw/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	src/drivers/berniw2/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	src/drivers/berniw2/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	src/drivers/berniw3/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	src/drivers/berniw3/mycar.h	/^		static const double MAX_FUEL_PER_METER;	\/* [liter\/m] fuel consumtion *\/$/;"	m	class:MyCar
MAX_FUEL_PER_METER	src/drivers/bt/driver.cpp	/^const float Driver::MAX_FUEL_PER_METER = 0.0008f;			\/\/ [liter\/m] fuel consumtion.$/;"	m	class:Driver	file:
MAX_FUEL_PER_METER	src/drivers/bt/driver.h	/^		static const float MAX_FUEL_PER_METER;$/;"	m	class:Driver
MAX_FUEL_PER_METER	src/drivers/bt/strategy.cpp	/^const float SimpleStrategy::MAX_FUEL_PER_METER = 0.0008f;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy	file:
MAX_FUEL_PER_METER	src/drivers/bt/strategy.h	/^		static const float MAX_FUEL_PER_METER;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy
MAX_FUEL_PER_METER	src/drivers/damned/driver.cpp	/^const float Driver::MAX_FUEL_PER_METER = 0.0008f;			\/\/ [liter\/m] fuel consumtion.$/;"	m	class:Driver	file:
MAX_FUEL_PER_METER	src/drivers/damned/driver.h	/^		static const float MAX_FUEL_PER_METER;$/;"	m	class:Driver
MAX_FUEL_PER_METER	src/drivers/damned/strategy.cpp	/^const float SimpleStrategy::MAX_FUEL_PER_METER = 0.0008f;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy	file:
MAX_FUEL_PER_METER	src/drivers/damned/strategy.h	/^		static const float MAX_FUEL_PER_METER;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:SimpleStrategy
MAX_FUEL_PER_METER	src/drivers/inferno/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;	\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	src/drivers/inferno/mycar.h	/^		static const double MAX_FUEL_PER_METER;		\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar
MAX_FUEL_PER_METER	src/drivers/lliaw/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;	\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	src/drivers/lliaw/mycar.h	/^		static const double MAX_FUEL_PER_METER;		\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar
MAX_FUEL_PER_METER	src/drivers/olethros/driver.cpp	/^    const float Driver::MAX_FUEL_PER_METER = 0.0008f;			\/\/\/< [liter\/m] fuel consumtion.$/;"	m	class:olethros::Driver	file:
MAX_FUEL_PER_METER	src/drivers/olethros/driver.h	/^	static const float MAX_FUEL_PER_METER;$/;"	m	class:olethros::Driver
MAX_FUEL_PER_METER	src/drivers/olethros/strategy.cpp	/^const float SimpleStrategy::MAX_FUEL_PER_METER = 0.0008f;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:olethros::SimpleStrategy	file:
MAX_FUEL_PER_METER	src/drivers/olethros/strategy.h	/^	static const float MAX_FUEL_PER_METER;	\/\/ [kg\/m] fuel consumtion.$/;"	m	class:olethros::SimpleStrategy
MAX_FUEL_PER_METER	src/drivers/tita/mycar.cpp	/^const double MyCar::MAX_FUEL_PER_METER = 0.0008;	\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar	file:
MAX_FUEL_PER_METER	src/drivers/tita/mycar.h	/^		static const double MAX_FUEL_PER_METER;		\/\/ [liter\/m] fuel consumtion.$/;"	m	class:MyCar
MAX_GEARS	export/include/car.h	273;"	d
MAX_GEARS	src/interfaces/car.h	273;"	d
MAX_INC_FACTOR	src/drivers/bt/driver.cpp	/^const float Driver::MAX_INC_FACTOR = 5.0f;					\/\/ [m] Increment faster if speed is slow [1.0..10.0].$/;"	m	class:Driver	file:
MAX_INC_FACTOR	src/drivers/bt/driver.h	/^		static const float MAX_INC_FACTOR;$/;"	m	class:Driver
MAX_INC_FACTOR	src/drivers/damned/driver.cpp	/^const float Driver::MAX_INC_FACTOR = 5.0f;					\/\/ [m] Increment faster if speed is slow [1.0..10.0].$/;"	m	class:Driver	file:
MAX_INC_FACTOR	src/drivers/damned/driver.h	/^		static const float MAX_INC_FACTOR;$/;"	m	class:Driver
MAX_INC_FACTOR	src/drivers/olethros/driver.cpp	/^    const float Driver::MAX_INC_FACTOR = 5.0f;					\/\/\/< [m] Increment faster if speed is slow [1.0..10.0].$/;"	m	class:olethros::Driver	file:
MAX_INC_FACTOR	src/drivers/olethros/driver.h	/^	static const float MAX_INC_FACTOR;$/;"	m	class:olethros::Driver
MAX_LINES	src/libs/racescreens/miscscreens.cpp	110;"	d	file:
MAX_LINES	src/libs/racescreens/results.cpp	46;"	d	file:
MAX_MATERIALS	src/modules/graphic/ssggraph/grloadac.cpp	98;"	d	file:
MAX_MEM_LEVEL	src/windows/include/zconf.h	103;"	d
MAX_MEM_LEVEL	src/windows/include/zconf.h	105;"	d
MAX_MOD_ITF	export/include/tgf.h	186;"	d
MAX_MOD_ITF	src/libs/tgf/tgf.h	186;"	d
MAX_NAME_LEN	export/include/car.h	37;"	d
MAX_NAME_LEN	src/interfaces/car.h	37;"	d
MAX_NODES	src/tools/trackgen/easymesh.cpp	59;"	d	file:
MAX_NUMBER_LIGHT	src/modules/graphic/ssggraph/grcarlight.h	82;"	d
MAX_SMOKE_LIFE	src/modules/graphic/ssggraph/grsmoke.h	5;"	d
MAX_SMOKE_NUMBER	src/modules/graphic/ssggraph/grsmoke.h	6;"	d
MAX_SPEED	src/drivers/berniw/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	src/drivers/berniw/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	src/drivers/berniw2/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	src/drivers/berniw2/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	src/drivers/berniw3/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
MAX_SPEED	src/drivers/berniw3/mycar.h	/^		static const double MAX_SPEED;			\/* [m\/s] *\/$/;"	m	class:MyCar
MAX_SPEED	src/drivers/bt/driver.cpp	/^const float Driver::MAX_SPEED = 84.0f;						\/\/ [m\/s] Speed to compute the percentage of brake to apply.$/;"	m	class:Driver	file:
MAX_SPEED	src/drivers/bt/driver.h	/^		static const float MAX_SPEED;$/;"	m	class:Driver
MAX_SPEED	src/drivers/damned/driver.cpp	/^const float Driver::MAX_SPEED = 84.0f;						\/\/ [m\/s] Speed to compute the percentage of brake to apply.$/;"	m	class:Driver	file:
MAX_SPEED	src/drivers/damned/driver.h	/^		static const float MAX_SPEED;$/;"	m	class:Driver
MAX_SPEED	src/drivers/inferno/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
MAX_SPEED	src/drivers/inferno/mycar.h	/^		static const double MAX_SPEED;				\/\/ [m\/s].$/;"	m	class:MyCar
MAX_SPEED	src/drivers/lliaw/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
MAX_SPEED	src/drivers/lliaw/mycar.h	/^		static const double MAX_SPEED;				\/\/ [m\/s].$/;"	m	class:MyCar
MAX_SPEED	src/drivers/olethros/driver.cpp	/^    const float Driver::MAX_SPEED = 84.0f;						\/\/\/< [m\/s] Speed to compute the percentage of brake to apply.$/;"	m	class:olethros::Driver	file:
MAX_SPEED	src/drivers/olethros/driver.h	/^	static const float MAX_SPEED;$/;"	m	class:olethros::Driver
MAX_SPEED	src/drivers/sparkle/driver.cpp	/^const float Driver::MAX_SPEED = 84.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
MAX_SPEED	src/drivers/sparkle/driver.h	/^		static const float MAX_SPEED;$/;"	m	class:Driver
MAX_SPEED	src/drivers/tita/mycar.cpp	/^const double MyCar::MAX_SPEED = 84.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
MAX_SPEED	src/drivers/tita/mycar.h	/^		static const double MAX_SPEED;				\/\/ [m\/s].$/;"	m	class:MyCar
MAX_TMP_INTS	src/modules/track/track2.cpp	411;"	d	file:
MAX_TMP_INTS	src/modules/track/track3.cpp	805;"	d	file:
MAX_TMP_INTS	src/modules/track/track4.cpp	816;"	d	file:
MAX_UNSTUCK_ANGLE	src/drivers/bt/driver.cpp	/^const float Driver::MAX_UNSTUCK_ANGLE = 15.0f\/180.0f*PI;	\/\/ [radians] If the angle of the car on the track is smaller, we assume we are not stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_ANGLE	src/drivers/bt/driver.h	/^		static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:Driver
MAX_UNSTUCK_ANGLE	src/drivers/damned/driver.cpp	/^const float Driver::MAX_UNSTUCK_ANGLE = 15.0f\/180.0f*PI;	\/\/ [radians] If the angle of the car on the track is smaller, we assume we are not stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_ANGLE	src/drivers/damned/driver.h	/^		static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:Driver
MAX_UNSTUCK_ANGLE	src/drivers/olethros/driver.cpp	/^    const float Driver::MAX_UNSTUCK_ANGLE = 15.0\/180.0*PI;		\/\/\/< [radians] If the angle of the car on the track is smaller, we assume we are not stuck.$/;"	m	class:olethros::Driver	file:
MAX_UNSTUCK_ANGLE	src/drivers/olethros/driver.h	/^	static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:olethros::Driver
MAX_UNSTUCK_ANGLE	src/drivers/sparkle/driver.cpp	/^const float Driver::MAX_UNSTUCK_ANGLE = 15.0\/180.0*PI;		\/* [radians] *\/$/;"	m	class:Driver	file:
MAX_UNSTUCK_ANGLE	src/drivers/sparkle/driver.h	/^		static const float MAX_UNSTUCK_ANGLE;$/;"	m	class:Driver
MAX_UNSTUCK_COUNT	src/drivers/bt/driver.h	/^		int MAX_UNSTUCK_COUNT;$/;"	m	class:Driver
MAX_UNSTUCK_COUNT	src/drivers/damned/driver.h	/^		int MAX_UNSTUCK_COUNT;$/;"	m	class:Driver
MAX_UNSTUCK_COUNT	src/drivers/olethros/driver.h	/^	int MAX_UNSTUCK_COUNT;$/;"	m	class:olethros::Driver
MAX_UNSTUCK_COUNT	src/drivers/sparkle/driver.h	/^		int MAX_UNSTUCK_COUNT;$/;"	m	class:Driver
MAX_UNSTUCK_SPEED	src/drivers/bt/driver.cpp	/^const float Driver::MAX_UNSTUCK_SPEED = 5.0f;				\/\/ [m\/s] Below this speed we consider being stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_SPEED	src/drivers/bt/driver.h	/^		static const float MAX_UNSTUCK_SPEED;$/;"	m	class:Driver
MAX_UNSTUCK_SPEED	src/drivers/damned/driver.cpp	/^const float Driver::MAX_UNSTUCK_SPEED = 5.0f;				\/\/ [m\/s] Below this speed we consider being stuck.$/;"	m	class:Driver	file:
MAX_UNSTUCK_SPEED	src/drivers/damned/driver.h	/^		static const float MAX_UNSTUCK_SPEED;$/;"	m	class:Driver
MAX_UNSTUCK_SPEED	src/drivers/olethros/driver.cpp	/^    const float Driver::MAX_UNSTUCK_SPEED = 5.0f;				\/\/\/< [m\/s] Below this speed we consider being stuck.$/;"	m	class:olethros::Driver	file:
MAX_UNSTUCK_SPEED	src/drivers/olethros/driver.h	/^	static const float MAX_UNSTUCK_SPEED;$/;"	m	class:olethros::Driver
MAX_UNSTUCK_SPEED	src/drivers/sparkle/driver.cpp	/^const float Driver::MAX_UNSTUCK_SPEED = 5.0;				\/* [m\/s] *\/$/;"	m	class:Driver	file:
MAX_UNSTUCK_SPEED	src/drivers/sparkle/driver.h	/^		static const float MAX_UNSTUCK_SPEED;$/;"	m	class:Driver
MAX_VOL	src/modules/graphic/ssggraph/TorcsSound.h	/^	float MAX_VOL; \/\/\/< Maximum volume$/;"	m	class:TorcsSound
MAX_WBITS	src/windows/include/zconf.h	115;"	d
MEANNB	src/modules/simu/simuv2/simu.cpp	45;"	d	file:
MEANW	src/modules/simu/simuv2/simu.cpp	46;"	d	file:
MIN	export/include/tgf.h	103;"	d
MIN	export/include/tgf.h	58;"	d
MIN	src/libs/tgf/tgf.h	103;"	d
MIN	src/libs/tgf/tgf.h	58;"	d
MIN	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^enum { MIN = 0, MAX = 1 };$/;"	e	enum:__anon8
MINBPC	src/libs/txml/xmltok.c	160;"	d	file:
MINBPC	src/libs/txml/xmltok.c	181;"	d	file:
MINBPC	src/libs/txml/xmltok.c	431;"	d	file:
MINBPC	src/libs/txml/xmltok.c	458;"	d	file:
MINBPC	src/libs/txml/xmltok.c	497;"	d	file:
MINBPC	src/libs/txml/xmltok.c	525;"	d	file:
MINLINEWIDTH	src/modules/graphic/ssggraph/grtrackmap.cpp	/^const float cGrTrackMap::MINLINEWIDTH = 5.0;$/;"	m	class:cGrTrackMap	file:
MINLINEWIDTH	src/modules/graphic/ssggraph/grtrackmap.h	/^		static const float MINLINEWIDTH;$/;"	m	class:cGrTrackMap
MINOVERTAKERANGE	src/drivers/berniw/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	src/drivers/berniw/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	src/drivers/berniw2/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	src/drivers/berniw2/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	src/drivers/berniw3/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 250.0;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	src/drivers/berniw3/mycar.h	/^		static const double MINOVERTAKERANGE;	\/* minimum length for overtaking [m] *\/$/;"	m	class:MyCar
MINOVERTAKERANGE	src/drivers/inferno/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 100.0;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	src/drivers/inferno/mycar.h	/^		static const double MINOVERTAKERANGE;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar
MINOVERTAKERANGE	src/drivers/lliaw/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 100.0;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	src/drivers/lliaw/mycar.h	/^		static const double MINOVERTAKERANGE;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar
MINOVERTAKERANGE	src/drivers/tita/mycar.cpp	/^const double MyCar::MINOVERTAKERANGE = 100.0;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar	file:
MINOVERTAKERANGE	src/drivers/tita/mycar.h	/^		static const double MINOVERTAKERANGE;		\/\/ Minimum length for overtaking [m].$/;"	m	class:MyCar
MINVAL	src/tools/accc/accc.h	170;"	d
MIN_BRAKE_FOLLOW_DISTANCE	src/drivers/olethros/driver.cpp	/^    const float Driver::MIN_BRAKE_FOLLOW_DISTANCE = 1.0f;        \/\/\/< [m] Predicted minimum distance from next opponent to apply full brake$/;"	m	class:olethros::Driver	file:
MIN_BRAKE_FOLLOW_DISTANCE	src/drivers/olethros/driver.h	/^	static const float MIN_BRAKE_FOLLOW_DISTANCE;$/;"	m	class:olethros::Driver
MIN_BYTES_PER_CHAR	src/libs/txml/xmlrole.c	33;"	d	file:
MIN_UNSTUCK_DIST	src/drivers/bt/driver.cpp	/^const float Driver::MIN_UNSTUCK_DIST = 3.0f;				\/\/ [m] If we are closer to the middle we assume to be not stuck.$/;"	m	class:Driver	file:
MIN_UNSTUCK_DIST	src/drivers/bt/driver.h	/^		static const float MIN_UNSTUCK_DIST;$/;"	m	class:Driver
MIN_UNSTUCK_DIST	src/drivers/damned/driver.cpp	/^const float Driver::MIN_UNSTUCK_DIST = 3.0f;				\/\/ [m] If we are closer to the middle we assume to be not stuck.$/;"	m	class:Driver	file:
MIN_UNSTUCK_DIST	src/drivers/damned/driver.h	/^		static const float MIN_UNSTUCK_DIST;$/;"	m	class:Driver
MIN_UNSTUCK_DIST	src/drivers/olethros/driver.cpp	/^    const float Driver::MIN_UNSTUCK_DIST = 2.0f;					\/\/\/< [m] If we are closer to the middle we assume to be not stuck.$/;"	m	class:olethros::Driver	file:
MIN_UNSTUCK_DIST	src/drivers/olethros/driver.h	/^	static const float MIN_UNSTUCK_DIST;$/;"	m	class:olethros::Driver
MIN_UNSTUCK_DIST	src/drivers/sparkle/driver.cpp	/^const float Driver::MIN_UNSTUCK_DIST = 3.0;					\/* [m] *\/$/;"	m	class:Driver	file:
MIN_UNSTUCK_DIST	src/drivers/sparkle/driver.h	/^		static const float MIN_UNSTUCK_DIST;$/;"	m	class:Driver
MODULE	src/drivers/berniw/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	src/drivers/berniw2/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	src/drivers/berniw3/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	src/drivers/bt/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	src/drivers/damned/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	src/drivers/human/Makefile	/^MODULE    = ${ROBOT}.so$/;"	m
MODULE	src/drivers/inferno/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	src/drivers/inferno2/Makefile	/^MODULE    = ${ROBOT}.so$/;"	m
MODULE	src/drivers/lliaw/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	src/drivers/olethros/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	src/drivers/sparkle/Makefile	/^MODULE      = ${ROBOT}.so$/;"	m
MODULE	src/drivers/tita/Makefile	/^MODULE = ${ROBOT}.so$/;"	m
MODULE	src/modules/graphic/ssggraph/Makefile	/^MODULE    = ssggraph.so$/;"	m
MODULE	src/modules/simu/simuv2/Makefile	/^MODULE		= simuv2.so$/;"	m
MODULE	src/modules/telemetry/Makefile	/^MODULE    = telemetry.so$/;"	m
MODULE	src/modules/track/Makefile	/^MODULE    = track.so$/;"	m
MODULEDIR	src/drivers/berniw/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/berniw2/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/berniw3/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/bt/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/damned/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/human/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/inferno/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/inferno2/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/lliaw/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/olethros/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/sparkle/Makefile	/^MODULEDIR   = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/drivers/tita/Makefile	/^MODULEDIR = drivers\/${ROBOT}$/;"	m
MODULEDIR	src/modules/graphic/ssggraph/Makefile	/^MODULEDIR = modules\/graphic$/;"	m
MODULEDIR	src/modules/simu/simuv2/Makefile	/^MODULEDIR	= modules\/simu$/;"	m
MODULEDIR	src/modules/telemetry/Makefile	/^MODULEDIR = modules\/telemetry$/;"	m
MODULEDIR	src/modules/track/Makefile	/^MODULEDIR = modules\/track$/;"	m
MSDOS	src/windows/include/zconf.h	60;"	d
MULT	src/modules/graphic/ssggraph/grcar.cpp	402;"	d	file:
MULTIBYTE_CASES	src/libs/txml/xmltok_impl.c	1647;"	d	file:
MUST_CONVERT	src/libs/txml/xmlparse.c	33;"	d	file:
MUST_CONVERT	src/libs/txml/xmlparse.c	40;"	d	file:
MU_FACTOR	src/drivers/bt/driver.h	/^		float MU_FACTOR;				\/\/ [-]$/;"	m	class:Driver
MU_FACTOR	src/drivers/damned/driver.h	/^		float MU_FACTOR;				\/\/ [-]$/;"	m	class:Driver
MU_FACTOR	src/drivers/olethros/driver.h	/^	float MU_FACTOR;				\/\/\/< [-]$/;"	m	class:olethros::Driver
MU_FACTOR	src/drivers/sparkle/driver.h	/^		float MU_FACTOR;				\/* [-] *\/$/;"	m	class:Driver
M_PI	src/tools/accc/ac3dload.cpp	55;"	d	file:
M_PI	src/windows/osspec.h	53;"	d
ManagedStrategy	src/drivers/olethros/strategy.cpp	/^ManagedStrategy::ManagedStrategy() : SimpleStrategy()$/;"	f	class:olethros::ManagedStrategy
ManagedStrategy	src/drivers/olethros/strategy.h	/^class ManagedStrategy : public SimpleStrategy$/;"	c	namespace:olethros
MapId	src/libs/racescreens/trackselect.cpp	/^static int MapId;$/;"	v	file:
Margin	src/tools/trackgen/easymesh.cpp	/^static tdble 	Margin;$/;"	v	file:
Margin	src/tools/trackgen/elevation.cpp	/^static tdble 	Margin;$/;"	v	file:
Margin	src/tools/trackgen/maintrackgen.cpp	/^float	Margin = 100.0;$/;"	v
Mat3	export/include/3D/Matrix.h	/^typedef Scalar Mat3[3][3];$/;"	t
Mat3	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^typedef Scalar Mat3[3][3];$/;"	t
Matrix	export/include/3D/Matrix.h	/^  Matrix() {}$/;"	f	class:Matrix
Matrix	export/include/3D/Matrix.h	/^  Matrix(Scalar x, Scalar y, Scalar z) { setScaling(x, y, z); }$/;"	f	class:Matrix
Matrix	export/include/3D/Matrix.h	/^  Matrix(Scalar xx, Scalar xy, Scalar xz,$/;"	f	class:Matrix
Matrix	export/include/3D/Matrix.h	/^  Matrix(const Quaternion& q) { setRotation(q); }$/;"	f	class:Matrix
Matrix	export/include/3D/Matrix.h	/^  Matrix(const double *m) { setValue(m); }$/;"	f	class:Matrix
Matrix	export/include/3D/Matrix.h	/^  Matrix(const float *m) { setValue(m); }$/;"	f	class:Matrix
Matrix	export/include/3D/Matrix.h	/^class Matrix {$/;"	c
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix() {}$/;"	f	class:Matrix
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(Scalar x, Scalar y, Scalar z) { setScaling(x, y, z); }$/;"	f	class:Matrix
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(Scalar xx, Scalar xy, Scalar xz,$/;"	f	class:Matrix
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(const Quaternion& q) { setRotation(q); }$/;"	f	class:Matrix
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(const double *m) { setValue(m); }$/;"	f	class:Matrix
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Matrix(const float *m) { setValue(m); }$/;"	f	class:Matrix
Matrix	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^class Matrix {$/;"	c
MaxFreqId	src/libs/tgfclient/screen.cpp	/^static int	MaxFreqId;$/;"	v	file:
MaxSpeed	src/drivers/inferno2/inferno2.cpp	/^tdble	MaxSpeed[10];$/;"	v
Measure	src/drivers/olethros/learn.h	/^		void Measure(float taccel_, float derr_, float dtm_)$/;"	f	class:olethros::SegLearn::Averages
MergeAll	src/tools/trackgen/maintrackgen.cpp	/^int		MergeAll;$/;"	v
MergeTerrain	src/tools/trackgen/maintrackgen.cpp	/^int		MergeTerrain;$/;"	v
Minv	src/modules/simu/simuv2/carstruct.h	/^    tdble	Minv;		\/* 1 \/ mass with pilot (without fuel) *\/$/;"	m	struct:__anon18
ModInfo	export/include/tgf.h	/^typedef struct ModInfo {$/;"	s
ModInfo	src/libs/tgf/tgf.h	/^typedef struct ModInfo {$/;"	s
ModList	export/include/tgf.h	/^typedef struct ModList {$/;"	s
ModList	src/libs/tgf/tgf.h	/^typedef struct ModList {$/;"	s
Mode	src/libs/tgfclient/screen.cpp	/^static char	*Mode[] = {"Full-screen mode", "Window mode"};$/;"	v	file:
ModeLabelId	src/libs/tgfclient/screen.cpp	/^static int	ModeLabelId;$/;"	v	file:
ModePrevNext	src/libs/tgfclient/screen.cpp	/^ModePrevNext(void *vdelta)$/;"	f	file:
MouseCalAutomaton	src/libs/confscreens/mouseconfig.cpp	/^MouseCalAutomaton(void)$/;"	f	file:
MouseCalButton	src/libs/confscreens/controlconfig.cpp	/^static int	MouseCalButton;$/;"	v	file:
MouseCalMenuInit	src/libs/confscreens/mouseconfig.cpp	/^MouseCalMenuInit(void *prevMenu, tCmdInfo *cmd, int maxcmd)$/;"	f
MouseControlUsed	src/drivers/human/human.h	/^	int		MouseControlUsed;$/;"	m	struct:HumanContext
MouseInfo	export/include/tgfclient.h	/^typedef struct MouseInfo$/;"	s
MouseInfo	src/libs/tgfclient/tgfclient.h	/^typedef struct MouseInfo$/;"	s
MultinomialGaussian	export/include/learning/Distribution.h	/^	MultinomialGaussian() {d=1;}$/;"	f	class:MultinomialGaussian
MultinomialGaussian	export/include/learning/Distribution.h	/^	MultinomialGaussian(int d)$/;"	f	class:MultinomialGaussian
MultinomialGaussian	export/include/learning/Distribution.h	/^class MultinomialGaussian : public Distribution {$/;"	c
MultinomialGaussian	src/libs/learning/Distribution.h	/^	MultinomialGaussian() {d=1;}$/;"	f	class:MultinomialGaussian
MultinomialGaussian	src/libs/learning/Distribution.h	/^	MultinomialGaussian(int d)$/;"	f	class:MultinomialGaussian
MultinomialGaussian	src/libs/learning/Distribution.h	/^class MultinomialGaussian : public Distribution {$/;"	c
MyCar	src/drivers/berniw/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	src/drivers/berniw/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	src/drivers/berniw2/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	src/drivers/berniw2/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	src/drivers/berniw3/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	src/drivers/berniw3/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	src/drivers/inferno/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	src/drivers/inferno/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	src/drivers/lliaw/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	src/drivers/lliaw/mycar.h	/^class MyCar : public AbstractCar$/;"	c
MyCar	src/drivers/tita/mycar.cpp	/^MyCar::MyCar(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
MyCar	src/drivers/tita/mycar.h	/^class MyCar : public AbstractCar$/;"	c
N	src/tools/trackgen/easymesh.h	/^    int N;$/;"	m	struct:seg
NAME	src/tools/accc/ac3dload.cpp	40;"	d	file:
NAMED	src/libs/txml/hashtable.h	/^} NAMED;$/;"	t	typeref:struct:__anon72
NAME_LENGTH	export/include/js.h	140;"	d
NAME_LENGTH	src/interfaces/js.h	140;"	d
NBBOTS	src/drivers/bt/bt.cpp	37;"	d	file:
NBBOTS	src/drivers/damned/damned.cpp	37;"	d	file:
NBBOTS	src/drivers/olethros/olethros.cpp	52;"	d	file:
NBBOTS	src/drivers/sparkle/sparkle.cpp	38;"	d	file:
NBELTLIST	src/tools/trackgen/track.cpp	274;"	d	file:
NB_BG_FACES	src/modules/graphic/ssggraph/grscene.cpp	68;"	d	file:
NB_BOARDS	src/modules/graphic/ssggraph/grboard.cpp	47;"	d	file:
NB_CBOARDS	src/modules/graphic/ssggraph/grboard.cpp	49;"	d	file:
NB_CRASH_SOUND	src/modules/graphic/ssggraph/sound_defines.h	11;"	d
NB_DRV	src/libs/confscreens/driverconfig.cpp	55;"	d	file:
NB_ENGINE_SOUND	src/modules/graphic/ssggraph/sound_defines.h	12;"	d
NB_LBOARDS	src/modules/graphic/ssggraph/grboard.cpp	48;"	d	file:
NB_STEPS	src/libs/confscreens/joystickconfig.cpp	45;"	d	file:
NEAR	export/include/js.h	58;"	d
NEAR	src/interfaces/js.h	58;"	d
NEED_DUMMY_RETURN	src/windows/include/zconf.h	96;"	d
NEWDISPLIST	src/tools/trackgen/track.cpp	276;"	d	file:
NOCHECK	src/windows/include/pngconf.h	1262;"	d
NONE	src/drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
NORM0_2PI	export/include/tgf.h	82;"	d
NORM0_2PI	src/libs/tgf/tgf.h	82;"	d
NORMAL	src/drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon123
NORMAL	src/drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon98
NORMAL	src/drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon114
NORMAL	src/drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon139
NORMAL	src/drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon132
NORMAL	src/drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon105
NORMAL_VTABLE	src/libs/txml/xmltok.c	144;"	d	file:
NORM_PI_PI	export/include/tgf.h	89;"	d
NORM_PI_PI	src/libs/tgf/tgf.h	89;"	d
NOTEXTURE	src/modules/graphic/ssggraph/grloadac.cpp	97;"	d	file:
NO_CHECK_BOUNDS	src/drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus {NO_CHECK_BOUNDS=0, CHECK_BOUNDS=1};$/;"	e	enum:Vector::BoundsCheckingStatus
NO_DRV	src/libs/confscreens/driverconfig.cpp	30;"	d	file:
NO_DUMMY_DECL	src/windows/include/zconf.h	91;"	d
NPOINTS	src/drivers/bt/pit.h	/^		enum { NPOINTS = 7 };$/;"	e	enum:Pit::__anon128
NPOINTS	src/drivers/damned/pit.h	/^		enum { NPOINTS = 7 };$/;"	e	enum:Pit::__anon127
NPOINTS	src/drivers/olethros/pit.h	/^		enum { NPOINTS = 7 };$/;"	e	enum:olethros::Pit::__anon143
NPOINTS	src/drivers/sparkle/pit.h	26;"	d
NTPARAMS	src/drivers/berniw/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon122
NTPARAMS	src/drivers/berniw2/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon97
NTPARAMS	src/drivers/berniw3/pathfinder.h	/^		enum { NTPARAMS = 1001 };		\/* # entries in dat files *\/$/;"	e	enum:Pathfinder::__anon113
NUMSURF	src/tools/accc/ac3dload.cpp	46;"	d	file:
NUMVERT	src/tools/accc/ac3dload.cpp	45;"	d	file:
NUM_JOY	export/include/js.h	38;"	d
NUM_JOY	src/interfaces/js.h	38;"	d
NUM_TYPES	src/modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^const int NUM_TYPES = 8;$/;"	v
NameEditId	src/libs/confscreens/driverconfig.cpp	/^static int NameEditId;$/;"	v	file:
NbMaxCols	src/tools/texmapper/maintexmapper.cpp	/^int	NbMaxCols;$/;"	v
NbPitStopProg	src/drivers/human/human.h	/^	int		NbPitStopProg;$/;"	m	struct:HumanContext
NbPitStops	src/drivers/human/human.h	/^	int		NbPitStops;$/;"	m	struct:HumanContext
NbRows	src/tools/texmapper/maintexmapper.cpp	/^int	NbRows;$/;"	v
Nc	src/tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
Ne	src/tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
NewANN	src/libs/learning/ANN.cpp	/^ANN *NewANN(int n_inputs, int n_outputs)$/;"	f
NewElt	src/libs/txml/xml.cpp	/^NewElt(const char *name, const char **atts)$/;"	f	file:
NewStringBuffer	src/libs/learning/string_utils.cpp	/^StringBuffer* NewStringBuffer (int length)$/;"	f
NextListItem	src/libs/learning/List.cpp	/^LISTITEM* NextListItem(LIST* list)$/;"	f
Nn	src/tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
Nne	src/tools/trackgen/easymesh.h	/^    int    Nne;$/;"	m	struct:nod
None	src/modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
NormalDistribution	export/include/learning/Distribution.h	/^	NormalDistribution() {m=0.0; s=1.0; cache = false;}$/;"	f	class:NormalDistribution
NormalDistribution	export/include/learning/Distribution.h	/^	NormalDistribution(real mean, real std)$/;"	f	class:NormalDistribution
NormalDistribution	export/include/learning/Distribution.h	/^class NormalDistribution : public ParametricDistribution {$/;"	c
NormalDistribution	src/libs/learning/Distribution.h	/^	NormalDistribution() {m=0.0; s=1.0; cache = false;}$/;"	f	class:NormalDistribution
NormalDistribution	src/libs/learning/Distribution.h	/^	NormalDistribution(real mean, real std)$/;"	f	class:NormalDistribution
NormalDistribution	src/libs/learning/Distribution.h	/^class NormalDistribution : public ParametricDistribution {$/;"	c
Normalise	src/drivers/olethros/TrackData.h	/^    void Normalise()$/;"	f	class:Point
Normalise	src/libs/learning/MathFunctions.cpp	/^void Normalise (real* src, real* dst, int n_elements)$/;"	f
Ns	src/tools/trackgen/easymesh.cpp	/^int Ne, Nn, Ns, Nc, Fl;             \/* number of: elements, nodes, sides *\/$/;"	v
O1	src/drivers/inferno2/inferno2.cpp	/^tdble O1[10] = {60.0};$/;"	v
O2	src/drivers/inferno2/inferno2.cpp	/^tdble O2[10] = {60.0};$/;"	v
O3	src/drivers/inferno2/inferno2.cpp	/^tdble O3[10] = {0.0};$/;"	v
O4	src/drivers/inferno2/inferno2.cpp	/^tdble O4[10] = {0.0};$/;"	v
O5	src/drivers/inferno2/inferno2.cpp	/^tdble O5[10] = {20.0};$/;"	v
OA	src/drivers/inferno2/inferno2.cpp	/^tdble OA[10] = {0.0};$/;"	v
OB1	Make-default.mk	/^OB1 = $(SOURCES:.cpp=.o)$/;"	m
OBJECT	src/tools/accc/ac3dload.cpp	38;"	d	file:
OBJECTS	Make-default.mk	/^OBJECTS = $(OB1:.c=.o)$/;"	m
OBJ_GROUP	src/modules/graphic/ssggraph/grloadac.cpp	235;"	d	file:
OBJ_LIGHT	src/modules/graphic/ssggraph/grloadac.cpp	236;"	d	file:
OBJ_POLY	src/modules/graphic/ssggraph/grloadac.cpp	234;"	d	file:
OBJ_WORLD	src/modules/graphic/ssggraph/grloadac.cpp	233;"	d	file:
OF	src/windows/include/zconf.h	135;"	d
OF	src/windows/include/zconf.h	137;"	d
OFF	src/tools/trackgen/easymesh.cpp	53;"	d	file:
OFFSET	src/drivers/inferno2/inferno2.cpp	235;"	d	file:
OFFSETAPPROACH	src/drivers/inferno2/inferno2.cpp	236;"	d	file:
OFFSETEXIT	src/drivers/inferno2/inferno2.cpp	238;"	d	file:
OFFSETFINAL	src/drivers/inferno2/inferno2.cpp	237;"	d	file:
OFFSET_CMD	src/libs/confscreens/joystickconfig.cpp	47;"	d	file:
OLETHROS_ATT_FUELCONSUMPTION	src/drivers/olethros/driver.h	46;"	d
OLETHROS_ATT_FUELPERLAP	src/drivers/olethros/driver.h	45;"	d
OLETHROS_ATT_MUFACTOR	src/drivers/olethros/driver.h	47;"	d
OLETHROS_SECT_PRIV	src/drivers/olethros/driver.h	44;"	d
ON	src/tools/trackgen/easymesh.cpp	52;"	d	file:
OP	src/drivers/inferno2/inferno2.cpp	/^tdble OP[10] = {15.0};$/;"	v
OPEN	src/tools/trackgen/easymesh.cpp	65;"	d	file:
OPENAL	src/windows/include/AL/al.h	60;"	d
OPENAL_MODE	src/modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	e	enum:SoundMode	file:
OPP_BACK	src/drivers/bt/opponent.h	40;"	d
OPP_BACK	src/drivers/damned/opponent.h	40;"	d
OPP_BACK	src/drivers/olethros/opponent.h	42;"	d
OPP_BACK	src/drivers/sparkle/opponent.h	40;"	d
OPP_COLL	src/drivers/bt/opponent.h	42;"	d
OPP_COLL	src/drivers/damned/opponent.h	42;"	d
OPP_COLL	src/drivers/olethros/opponent.h	44;"	d
OPP_COLL	src/drivers/sparkle/opponent.h	42;"	d
OPP_FRONT	src/drivers/bt/opponent.h	39;"	d
OPP_FRONT	src/drivers/damned/opponent.h	39;"	d
OPP_FRONT	src/drivers/olethros/opponent.h	41;"	d
OPP_FRONT	src/drivers/sparkle/opponent.h	39;"	d
OPP_FRONT_FAST	src/drivers/bt/opponent.h	44;"	d
OPP_FRONT_FAST	src/drivers/damned/opponent.h	44;"	d
OPP_FRONT_FAST	src/drivers/olethros/opponent.h	46;"	d
OPP_IGNORE	src/drivers/bt/opponent.h	38;"	d
OPP_IGNORE	src/drivers/damned/opponent.h	38;"	d
OPP_IGNORE	src/drivers/olethros/opponent.h	40;"	d
OPP_IGNORE	src/drivers/sparkle/opponent.h	38;"	d
OPP_LETPASS	src/drivers/bt/opponent.h	43;"	d
OPP_LETPASS	src/drivers/damned/opponent.h	43;"	d
OPP_LETPASS	src/drivers/olethros/opponent.h	45;"	d
OPP_SIDE	src/drivers/bt/opponent.h	41;"	d
OPP_SIDE	src/drivers/damned/opponent.h	41;"	d
OPP_SIDE	src/drivers/olethros/opponent.h	43;"	d
OPP_SIDE	src/drivers/sparkle/opponent.h	41;"	d
OSI_MAX_BUFFERS	src/modules/graphic/ssggraph/SoundInterface.h	/^	int OSI_MAX_BUFFERS;$/;"	m	class:OpenalSoundInterface
OSI_MAX_SOURCES	src/modules/graphic/ssggraph/SoundInterface.h	/^	int OSI_MAX_SOURCES;$/;"	m	class:OpenalSoundInterface
OSI_MAX_STATIC_SOURCES	src/modules/graphic/ssggraph/SoundInterface.h	/^	int OSI_MAX_STATIC_SOURCES;$/;"	m	class:OpenalSoundInterface
OSI_MIN_DYNAMIC_SOURCES	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^const int OpenalSoundInterface::OSI_MIN_DYNAMIC_SOURCES = 4;$/;"	m	class:OpenalSoundInterface	file:
OSI_MIN_DYNAMIC_SOURCES	src/modules/graphic/ssggraph/SoundInterface.h	/^	static const int OSI_MIN_DYNAMIC_SOURCES;$/;"	m	class:OpenalSoundInterface
OVERLAPPASSDIST	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	src/drivers/berniw/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	src/drivers/berniw2/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;		\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	src/drivers/berniw3/mycar.h	/^		static const double OVERLAPPASSDIST;	\/* distance smaller than that and waiting long enough -> let him pass *\/$/;"	m	class:MyCar
OVERLAPPASSDIST	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;			\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	src/drivers/inferno/mycar.h	/^		static const double OVERLAPPASSDIST;		\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar
OVERLAPPASSDIST	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;			\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	src/drivers/lliaw/mycar.h	/^		static const double OVERLAPPASSDIST;		\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar
OVERLAPPASSDIST	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERLAPPASSDIST = 30.0;			\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar	file:
OVERLAPPASSDIST	src/drivers/tita/mycar.h	/^		static const double OVERLAPPASSDIST;		\/\/ Distance smaller than that and waiting long enough -> let him pass.$/;"	m	class:MyCar
OVERLAPSTARTDIST	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	src/drivers/berniw/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	src/drivers/berniw2/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	src/drivers/berniw3/mycar.h	/^		static const double OVERLAPSTARTDIST;	\/* distance where we start to check the need to let pass the opponent *\/$/;"	m	class:MyCar
OVERLAPSTARTDIST	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	src/drivers/inferno/mycar.h	/^		static const double OVERLAPSTARTDIST;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar
OVERLAPSTARTDIST	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	src/drivers/lliaw/mycar.h	/^		static const double OVERLAPSTARTDIST;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar
OVERLAPSTARTDIST	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERLAPSTARTDIST = 70.0;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar	file:
OVERLAPSTARTDIST	src/drivers/tita/mycar.h	/^		static const double OVERLAPSTARTDIST;		\/\/ Distance where we start to check the need to let pass the opponent.$/;"	m	class:MyCar
OVERLAPWAITTIME	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	src/drivers/berniw/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	src/drivers/berniw2/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;		\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	src/drivers/berniw3/mycar.h	/^		static const double OVERLAPWAITTIME;	\/* minimal waiting time before we consider let him pass *\/$/;"	m	class:MyCar
OVERLAPWAITTIME	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;			\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	src/drivers/inferno/mycar.h	/^		static const double OVERLAPWAITTIME;		\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar
OVERLAPWAITTIME	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;			\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	src/drivers/lliaw/mycar.h	/^		static const double OVERLAPWAITTIME;		\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar
OVERLAPWAITTIME	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERLAPWAITTIME = 5.0;			\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar	file:
OVERLAPWAITTIME	src/drivers/tita/mycar.h	/^		static const double OVERLAPWAITTIME;		\/\/ Minimal waiting time before we consider let him pass.$/;"	m	class:MyCar
OVERLAP_WAIT_TIME	src/drivers/bt/opponent.cpp	/^const float Opponent::OVERLAP_WAIT_TIME = 5.0f;			\/\/ [s] overlaptimer must reach this time before we let the opponent pass.$/;"	m	class:Opponent	file:
OVERLAP_WAIT_TIME	src/drivers/bt/opponent.h	/^		static const float OVERLAP_WAIT_TIME;$/;"	m	class:Opponent
OVERLAP_WAIT_TIME	src/drivers/damned/opponent.cpp	/^const float Opponent::OVERLAP_WAIT_TIME = 5.0f;			\/\/ [s] overlaptimer must reach this time before we let the opponent pass.$/;"	m	class:Opponent	file:
OVERLAP_WAIT_TIME	src/drivers/damned/opponent.h	/^		static const float OVERLAP_WAIT_TIME;$/;"	m	class:Opponent
OVERLAP_WAIT_TIME	src/drivers/olethros/opponent.cpp	/^const float Opponent::OVERLAP_WAIT_TIME = 5.0;			\/\/ [s] overlaptimer must reach this time before we let the opponent pass.$/;"	m	class:olethros::Opponent	file:
OVERLAP_WAIT_TIME	src/drivers/olethros/opponent.h	/^		static const float OVERLAP_WAIT_TIME;$/;"	m	class:olethros::Opponent
OVERTAKEANGLE	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	src/drivers/berniw/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	src/drivers/berniw2/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;		\/* minimum angle between cars [radians] *\/$/;"	m	class:MyCar	file:
OVERTAKEANGLE	src/drivers/berniw3/mycar.h	/^		static const double OVERTAKEANGLE;		\/* [-] radians *\/$/;"	m	class:MyCar
OVERTAKEANGLE	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;			\/\/ Minimum angle between cars [radians].$/;"	m	class:MyCar	file:
OVERTAKEANGLE	src/drivers/inferno/mycar.h	/^		static const double OVERTAKEANGLE;			\/\/ [-] radians.$/;"	m	class:MyCar
OVERTAKEANGLE	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;			\/\/ Minimum angle between cars [radians].$/;"	m	class:MyCar	file:
OVERTAKEANGLE	src/drivers/lliaw/mycar.h	/^		static const double OVERTAKEANGLE;			\/\/ [-] radians.$/;"	m	class:MyCar
OVERTAKEANGLE	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKEANGLE = 0.03;			\/\/ Minimum angle between cars [radians].$/;"	m	class:MyCar	file:
OVERTAKEANGLE	src/drivers/tita/mycar.h	/^		static const double OVERTAKEANGLE;			\/\/ [-] radians.$/;"	m	class:MyCar
OVERTAKEDIST	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	src/drivers/berniw/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	src/drivers/berniw2/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;			\/* planning distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEDIST	src/drivers/berniw3/mycar.h	/^		static const double OVERTAKEDIST;		\/* planned distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEDIST	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;				\/\/ Planning distance of CG's while overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEDIST	src/drivers/inferno/mycar.h	/^		static const double OVERTAKEDIST;			\/\/ Planned distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEDIST	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;				\/\/ Planning distance of CG's while overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEDIST	src/drivers/lliaw/mycar.h	/^		static const double OVERTAKEDIST;			\/\/ Planned distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEDIST	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKEDIST = 4.0;				\/\/ Planning distance of CG's while overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEDIST	src/drivers/tita/mycar.h	/^		static const double OVERTAKEDIST;			\/\/ Planned distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEMARGIN	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	src/drivers/berniw/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMARGIN	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	src/drivers/berniw2/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMARGIN	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEMARGIN = 1.7;		\/* distance between cars [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMARGIN	src/drivers/berniw3/mycar.h	/^		static const double OVERTAKEMARGIN;		\/* [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	src/drivers/berniw/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	src/drivers/berniw2/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;		\/* minimal distance between cars overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	src/drivers/berniw3/mycar.h	/^		static const double OVERTAKEMINDIST;	\/* minimal distance of CG's while overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKEMINDIST	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;			\/\/ Minimal distance between cars overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	src/drivers/inferno/mycar.h	/^		static const double OVERTAKEMINDIST;		\/\/ Minimal distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEMINDIST	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;			\/\/ Minimal distance between cars overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	src/drivers/lliaw/mycar.h	/^		static const double OVERTAKEMINDIST;		\/\/ Minimal distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKEMINDIST	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKEMINDIST = 1.7;			\/\/ Minimal distance between cars overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKEMINDIST	src/drivers/tita/mycar.h	/^		static const double OVERTAKEMINDIST;		\/\/ Minimal distance of CG's while overtaking [m].$/;"	m	class:MyCar
OVERTAKERADIUS	src/drivers/berniw/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	src/drivers/berniw/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	src/drivers/berniw2/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	src/drivers/berniw2/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	src/drivers/berniw3/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar	file:
OVERTAKERADIUS	src/drivers/berniw3/mycar.h	/^		static const double OVERTAKERADIUS;		\/* min allowed radius to start overtaking [m] *\/$/;"	m	class:MyCar
OVERTAKERADIUS	src/drivers/inferno/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKERADIUS	src/drivers/inferno/mycar.h	/^		static const double OVERTAKERADIUS;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar
OVERTAKERADIUS	src/drivers/lliaw/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKERADIUS	src/drivers/lliaw/mycar.h	/^		static const double OVERTAKERADIUS;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar
OVERTAKERADIUS	src/drivers/tita/mycar.cpp	/^const double MyCar::OVERTAKERADIUS = 100.0;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar	file:
OVERTAKERADIUS	src/drivers/tita/mycar.h	/^		static const double OVERTAKERADIUS;			\/\/ Min allowed radius to start overtaking [m].$/;"	m	class:MyCar
OVERTAKE_OFFSET_INC	src/drivers/bt/driver.h	/^		float OVERTAKE_OFFSET_INC;		\/\/ [m\/timestep]$/;"	m	class:Driver
OVERTAKE_OFFSET_INC	src/drivers/damned/driver.h	/^		float OVERTAKE_OFFSET_INC;		\/\/ [m\/timestep]$/;"	m	class:Driver
OVERTAKE_OFFSET_INC	src/drivers/olethros/driver.h	/^	float OVERTAKE_OFFSET_INC;		\/\/\/< [m\/timestep]$/;"	m	class:olethros::Driver
OVERTAKE_OFFSET_INC	src/drivers/sparkle/driver.h	/^		float OVERTAKE_OFFSET_INC;		\/* [m\/timestep] *\/$/;"	m	class:Driver
OVERTAKE_OFFSET_SPEED	src/drivers/bt/driver.cpp	/^const float Driver::OVERTAKE_OFFSET_SPEED = 5.0f;			\/\/ [m\/s] Offset change speed.$/;"	m	class:Driver	file:
OVERTAKE_OFFSET_SPEED	src/drivers/bt/driver.h	/^		static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:Driver
OVERTAKE_OFFSET_SPEED	src/drivers/damned/driver.cpp	/^const float Driver::OVERTAKE_OFFSET_SPEED = 5.0f;			\/\/ [m\/s] Offset change speed.$/;"	m	class:Driver	file:
OVERTAKE_OFFSET_SPEED	src/drivers/damned/driver.h	/^		static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:Driver
OVERTAKE_OFFSET_SPEED	src/drivers/olethros/driver.cpp	/^    const float Driver::OVERTAKE_OFFSET_SPEED = 2.0f;			\/\/\/< [m\/s] Offset change speed.$/;"	m	class:olethros::Driver	file:
OVERTAKE_OFFSET_SPEED	src/drivers/olethros/driver.h	/^	static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:olethros::Driver
OVERTAKE_OFFSET_SPEED	src/drivers/sparkle/driver.cpp	/^const float Driver::OVERTAKE_OFFSET_SPEED = 5.0;			\/* [m\/s] *\/$/;"	m	class:Driver	file:
OVERTAKE_OFFSET_SPEED	src/drivers/sparkle/driver.h	/^		static const float OVERTAKE_OFFSET_SPEED;$/;"	m	class:Driver
OVERTAKE_TIME	src/drivers/olethros/driver.cpp	/^    const float Driver::OVERTAKE_TIME = 2.0f;			        \/\/\/< [s] Approach time to consider overtaking.$/;"	m	class:olethros::Driver	file:
OVERTAKE_TIME	src/drivers/olethros/driver.h	/^	static const float OVERTAKE_TIME;$/;"	m	class:olethros::Driver
OW	src/drivers/inferno2/inferno2.cpp	/^tdble OW[10] = {2.0};$/;"	v
ObjCopy	export/include/learning/learn_debug.h	33;"	d
ObjCopy	src/libs/learning/learn_debug.h	33;"	d
ObjPair	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^typedef pair<DtObjectRef, DtObjectRef> ObjPair;$/;"	t
ObjUniqId	src/tools/trackgen/objects.cpp	/^static int		ObjUniqId = 0;$/;"	v	file:
Object	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^Object::Object(DtObjectRef obj, ShapePtr shape) : $/;"	f	class:Object
Object	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^class Object {$/;"	c
ObjectList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef map<DtObjectRef, Object *> ObjectList;$/;"	t	file:
ObjectPtr	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^typedef const Object *ObjectPtr;$/;"	t
Offset	src/drivers/inferno2/inferno2.cpp	/^static tdble Offset[10]    = {0.0f};$/;"	v	file:
OffsetApproach	src/drivers/inferno2/inferno2.cpp	/^tdble OffsetApproach[10] = {0.0};$/;"	v
OffsetExit	src/drivers/inferno2/inferno2.cpp	/^tdble OffsetExit[10]     = {0.0};$/;"	v
OffsetFinal	src/drivers/inferno2/inferno2.cpp	/^tdble OffsetFinal[10]    = {0.0};$/;"	v
OldTime	src/modules/graphic/ssggraph/grmain.cpp	/^static double OldTime;$/;"	v	file:
OpenGLMenuInit	src/libs/confscreens/openglconfig.cpp	/^void * OpenGLMenuInit(void *prevMenu)$/;"	f
OpenalSoundInterface	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^OpenalSoundInterface::OpenalSoundInterface(float sampling_rate, int n_channels): SoundInterface (sampling_rate, n_channels)$/;"	f	class:OpenalSoundInterface
OpenalSoundInterface	src/modules/graphic/ssggraph/SoundInterface.h	/^class OpenalSoundInterface : public SoundInterface {$/;"	c
OpenalTorcsSound	src/modules/graphic/ssggraph/TorcsSound.cpp	/^OpenalTorcsSound::OpenalTorcsSound(const char* filename, OpenalSoundInterface* sitf, int flags, bool loop, bool static_pool)$/;"	f	class:OpenalTorcsSound
OpenalTorcsSound	src/modules/graphic/ssggraph/TorcsSound.h	/^class OpenalTorcsSound : public TorcsSound {$/;"	c
Opponent	src/drivers/bt/opponent.cpp	/^Opponent::Opponent() : teammate(false)$/;"	f	class:Opponent
Opponent	src/drivers/bt/opponent.h	/^class Opponent {$/;"	c
Opponent	src/drivers/damned/opponent.cpp	/^Opponent::Opponent() : teammate(false)$/;"	f	class:Opponent
Opponent	src/drivers/damned/opponent.h	/^class Opponent {$/;"	c
Opponent	src/drivers/olethros/opponent.cpp	/^Opponent::Opponent()$/;"	f	class:olethros::Opponent
Opponent	src/drivers/olethros/opponent.h	/^	class Opponent {$/;"	c	namespace:olethros
Opponent	src/drivers/sparkle/opponent.cpp	/^Opponent::Opponent()$/;"	f	class:Opponent
Opponent	src/drivers/sparkle/opponent.h	/^class Opponent {$/;"	c
Opponents	src/drivers/bt/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver, Cardata *c)$/;"	f	class:Opponents
Opponents	src/drivers/bt/opponent.h	/^class Opponents {$/;"	c
Opponents	src/drivers/damned/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver, Cardata *c)$/;"	f	class:Opponents
Opponents	src/drivers/damned/opponent.h	/^class Opponents {$/;"	c
Opponents	src/drivers/olethros/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver, Cardata *c)$/;"	f	class:olethros::Opponents
Opponents	src/drivers/olethros/opponent.h	/^	class Opponents {$/;"	c	namespace:olethros
Opponents	src/drivers/sparkle/opponent.cpp	/^Opponents::Opponents(tSituation *s, Driver *driver)$/;"	f	class:Opponents
Opponents	src/drivers/sparkle/opponent.h	/^class Opponents {$/;"	c
Optimise	src/drivers/olethros/Trajectory.cpp	/^void Trajectory::Optimise(SegmentList track, int max_iter, float alpha, const char* fname, bool reset)$/;"	f	class:Trajectory
OrderString	src/tools/accc/mainaccc.cpp	/^char * OrderString=NULL;$/;"	v
OtherCar	src/drivers/berniw/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	src/drivers/berniw2/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	src/drivers/berniw3/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	src/drivers/inferno/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	src/drivers/lliaw/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OtherCar	src/drivers/tita/mycar.h	/^class OtherCar: public AbstractCar$/;"	c
OutMeshName	src/tools/trackgen/maintrackgen.cpp	/^char		*OutMeshName;$/;"	v
OutTrackName	src/tools/trackgen/maintrackgen.cpp	/^char		*OutTrackName;$/;"	v
OutputFileName	src/tools/accc/mainaccc.cpp	/^char	*OutputFileName = NULL;$/;"	v
OutputFileName	src/tools/texmapper/maintexmapper.cpp	/^char	*OutputFileName = NULL;$/;"	v
OutputFileName	src/tools/trackgen/maintrackgen.cpp	/^char		*OutputFileName;$/;"	v
P	export/include/learning/policy.h	/^	real** P; \/\/\/< pursuit action probabilities$/;"	m	class:DiscretePolicy
P	src/libs/learning/policy.h	/^	real** P; \/\/\/< pursuit action probabilities$/;"	m	class:DiscretePolicy
P2	src/tools/accc/ac3dload.cpp	4391;"	d	file:
PACKAGE	config.h	107;"	d
PACKAGEBASE	Make-default.mk	/^PACKAGEBASE   = ${TORCS_BASE}\/package$/;"	m
PACKAGESBASE	Make-default.mk	/^PACKAGESBASE  = ${TORCS_BASE}\/RPM\/SOURCES$/;"	m
PACKAGE_BUGREPORT	config.h	110;"	d
PACKAGE_NAME	config.h	113;"	d
PACKAGE_STRING	config.h	116;"	d
PACKAGE_TARNAME	config.h	119;"	d
PACKAGE_VERSION	config.h	122;"	d
PARAMEXT	export/include/osspec.h	27;"	d
PARAMEXT	src/linux/osspec.h	27;"	d
PARAMEXT	src/windows/osspec.h	27;"	d
PARAM_CREATE	src/libs/tgf/params.cpp	45;"	d	file:
PARM_HANDLE_FLAG_PARSE_ERROR	src/libs/tgf/params.cpp	106;"	d	file:
PARM_HANDLE_FLAG_PRIVATE	src/libs/tgf/params.cpp	105;"	d	file:
PARM_MAGIC	src/libs/tgf/params.cpp	90;"	d	file:
PARSE_CONT	src/modules/graphic/ssggraph/grloadac.cpp	128;"	d	file:
PARSE_POP	src/modules/graphic/ssggraph/grloadac.cpp	129;"	d	file:
PATHBUF	src/drivers/inferno/pathfinder.h	51;"	d
PATHBUF	src/drivers/lliaw/pathfinder.h	51;"	d
PATHBUF	src/drivers/tita/pathfinder.h	51;"	d
PATHERR	src/drivers/berniw/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	src/drivers/berniw/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	src/drivers/berniw2/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	src/drivers/berniw2/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	src/drivers/berniw3/mycar.cpp	/^const double MyCar::PATHERR = 0.5;				\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar	file:
PATHERR	src/drivers/berniw3/mycar.h	/^		static const double PATHERR;			\/* if derror > PATHERR we take actions to come back to the path [m] *\/$/;"	m	class:MyCar
PATHERR	src/drivers/inferno/mycar.cpp	/^const double MyCar::PATHERR = 0.5;					\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar	file:
PATHERR	src/drivers/inferno/mycar.h	/^		static const double PATHERR;				\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar
PATHERR	src/drivers/lliaw/mycar.cpp	/^const double MyCar::PATHERR = 0.5;					\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar	file:
PATHERR	src/drivers/lliaw/mycar.h	/^		static const double PATHERR;				\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar
PATHERR	src/drivers/tita/mycar.cpp	/^const double MyCar::PATHERR = 0.5;					\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar	file:
PATHERR	src/drivers/tita/mycar.h	/^		static const double PATHERR;				\/\/ If derror > PATHERR we take actions to come back to the path [m].$/;"	m	class:MyCar
PATHERRFACTOR	src/drivers/berniw/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	src/drivers/berniw2/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	src/drivers/berniw3/mycar.h	/^		double PATHERRFACTOR;							\/* if derror > PATHERR*PATHERRFACTOR we compute a corrected path [-] *\/$/;"	m	class:MyCar
PATHERRFACTOR	src/drivers/inferno/mycar.h	/^		double PATHERRFACTOR;							\/\/ If derror > PATHERR*PATHERRFACTOR we compute a corrected path [-].$/;"	m	class:MyCar
PATHERRFACTOR	src/drivers/lliaw/mycar.h	/^		double PATHERRFACTOR;							\/\/ If derror > PATHERR*PATHERRFACTOR we compute a corrected path [-].$/;"	m	class:MyCar
PATHERRFACTOR	src/drivers/tita/mycar.h	/^		double PATHERRFACTOR;							\/\/ If derror > PATHERR*PATHERRFACTOR we compute a corrected path [-].$/;"	m	class:MyCar
PATH_K1999	src/drivers/berniw/pathfinder.h	57;"	d
PATH_K1999	src/drivers/berniw2/pathfinder.h	57;"	d
PATH_K1999	src/drivers/berniw3/pathfinder.h	57;"	d
PFNGLACTIVESTENCILFACEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINQUERYARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDPARAMETEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINORMAL3BEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBUFFERDATAARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	src/windows/include/GL/glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMPILESHADERARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	src/windows/include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	src/windows/include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEOBJECTARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPROGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESHADERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETETEXTURESEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDETACHOBJECTARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDRAWARRAYSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERSARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDQUERYARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLEVALMAPSNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENFENCESAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPROGRAMSARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSYMBOLSEXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETFENCEIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFOGFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETHANDLEARBPROC	src/windows/include/GL/glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETQUERYIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLINDEXFUNCEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISFENCEAPPLEPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMARBPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSHADERPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISTEXTUREEXTPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLLIGHTENVISGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAPBUFFERARBPROC	src/windows/include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	src/windows/include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	src/windows/include/GL/glext.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMINMAXEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	src/windows/include/GL/glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMALPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLPASSTEXCOORDATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPIXELDATARANGENVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	src/windows/include/GL/glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSHADEROP1EXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t
PFNGLSWIZZLEEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESTFENCEAPPLEPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTRACKMATRIXNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLUNIFORM1FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	src/windows/include/GL/glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVERTEX2HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBLENDARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTBVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWRITEMASKEXTPROC	src/windows/include/GL/glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	src/windows/include/GL/wglext.h	/^typedef void* (WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	src/windows/include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	src/windows/include/GL/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	src/windows/include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	src/windows/include/GL/wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	src/windows/include/GL/wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	src/windows/include/GL/wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	src/windows/include/GL/wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	src/windows/include/GL/wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLFREEMEMORYNVPROC	src/windows/include/GL/wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	src/windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	src/windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	src/windows/include/GL/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	src/windows/include/GL/wglext.h	/^typedef const char * (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t
PFNWGLGETMSCRATEOMLPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	src/windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	src/windows/include/GL/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	src/windows/include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	src/windows/include/GL/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	src/windows/include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	src/windows/include/GL/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	src/windows/include/GL/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	src/windows/include/GL/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLWAITFORMSCOMLPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	src/windows/include/GL/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PGAIN	src/drivers/inferno2/inferno2.cpp	224;"	d	file:
PGain	src/drivers/inferno2/inferno2.cpp	/^static tdble PGain[10]     = {0.015f};$/;"	v	file:
PI	export/include/tgf.h	/^const double PI = 3.14159265358979323846;  \/**< PI *\/$/;"	v
PI	src/libs/learning/Distribution.cpp	/^static const double PI = 3.14159265358979323846;$/;"	v	file:
PI	src/libs/tgf/tgf.h	/^const double PI = 3.14159265358979323846;  \/**< PI *\/$/;"	v
PI	src/tools/trackgen/easymesh.cpp	46;"	d	file:
PITCH_SLOT	src/modules/graphic/ssggraph/TorcsSound.h	24;"	d
PITOFFSET1	src/drivers/inferno2/inferno2.cpp	239;"	d	file:
PITOFFSET2	src/drivers/inferno2/inferno2.cpp	240;"	d	file:
PITOFFSET3	src/drivers/inferno2/inferno2.cpp	243;"	d	file:
PITOFFSET4	src/drivers/inferno2/inferno2.cpp	244;"	d	file:
PITOFFSET5	src/drivers/inferno2/inferno2.cpp	245;"	d	file:
PITOFFSETA	src/drivers/inferno2/inferno2.cpp	242;"	d	file:
PITOFFSETP	src/drivers/inferno2/inferno2.cpp	241;"	d	file:
PITPOINTS	src/drivers/berniw/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon121
PITPOINTS	src/drivers/berniw2/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon96
PITPOINTS	src/drivers/berniw3/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/* # points for pit spline *\/$/;"	e	enum:Pathfinder::__anon112
PITPOINTS	src/drivers/inferno/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/\/ # points for pit spline.$/;"	e	enum:Pathfinder::__anon138
PITPOINTS	src/drivers/lliaw/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/\/ # points for pit spline.$/;"	e	enum:Pathfinder::__anon131
PITPOINTS	src/drivers/tita/pathfinder.h	/^		enum { PITPOINTS = 7 };			\/\/ # points for pit spline.$/;"	e	enum:Pathfinder::__anon104
PIT_BRAKE_AHEAD	src/drivers/bt/driver.cpp	/^const float Driver::PIT_BRAKE_AHEAD = 200.0f;				\/\/ [m] Workaround for "broken" pitentries.$/;"	m	class:Driver	file:
PIT_BRAKE_AHEAD	src/drivers/bt/driver.h	/^		static const float PIT_BRAKE_AHEAD;$/;"	m	class:Driver
PIT_BRAKE_AHEAD	src/drivers/damned/driver.cpp	/^const float Driver::PIT_BRAKE_AHEAD = 200.0f;				\/\/ [m] Workaround for "broken" pitentries.$/;"	m	class:Driver	file:
PIT_BRAKE_AHEAD	src/drivers/damned/driver.h	/^		static const float PIT_BRAKE_AHEAD;$/;"	m	class:Driver
PIT_BRAKE_AHEAD	src/drivers/olethros/driver.cpp	/^    const float Driver::PIT_BRAKE_AHEAD = 200.0f;				\/\/\/< [m] Workaround for "broken" pitentries.$/;"	m	class:olethros::Driver	file:
PIT_BRAKE_AHEAD	src/drivers/olethros/driver.h	/^	static const float PIT_BRAKE_AHEAD;$/;"	m	class:olethros::Driver
PIT_BRAKE_AHEAD	src/drivers/sparkle/driver.cpp	/^const float Driver::PIT_BRAKE_AHEAD = 200.0;				\/* [m] *\/$/;"	m	class:Driver	file:
PIT_BRAKE_AHEAD	src/drivers/sparkle/driver.h	/^		static const float PIT_BRAKE_AHEAD;$/;"	m	class:Driver
PIT_DAMMAGE	src/drivers/bt/strategy.cpp	/^const int SimpleStrategy::PIT_DAMMAGE = 5000;				\/\/ [-]$/;"	m	class:SimpleStrategy	file:
PIT_DAMMAGE	src/drivers/bt/strategy.h	/^		static const int PIT_DAMMAGE;			\/\/ If damage > we request a pit stop.$/;"	m	class:SimpleStrategy
PIT_DAMMAGE	src/drivers/damned/strategy.cpp	/^const int SimpleStrategy::PIT_DAMMAGE = 5000;				\/\/ [-]$/;"	m	class:SimpleStrategy	file:
PIT_DAMMAGE	src/drivers/damned/strategy.h	/^		static const int PIT_DAMMAGE;			\/\/ If damage > we request a pit stop.$/;"	m	class:SimpleStrategy
PIT_DAMMAGE	src/drivers/olethros/strategy.cpp	/^const int SimpleStrategy::PIT_DAMMAGE = 1000;				\/\/ [-]$/;"	m	class:olethros::SimpleStrategy	file:
PIT_DAMMAGE	src/drivers/olethros/strategy.h	/^	static const int PIT_DAMMAGE;			\/\/ If damage > we request a pit stop.$/;"	m	class:olethros::SimpleStrategy
PIT_DAMMAGE	src/drivers/sparkle/pit.cpp	/^const int Pit::PIT_DAMMAGE = 5000;              \/* [-] *\/$/;"	m	class:Pit	file:
PIT_DAMMAGE	src/drivers/sparkle/pit.h	/^		static const int PIT_DAMMAGE;$/;"	m	class:Pit
PIT_DEEP	src/tools/trackgen/track.cpp	2360;"	d	file:
PIT_EXIT	src/drivers/olethros/pit.h	/^	NONE=0x0, APPROACHING, IN_LANE, PIT_EXIT$/;"	e	enum:olethros::PitState
PIT_HEIGHT	src/tools/trackgen/track.cpp	2359;"	d	file:
PIT_LOOKAHEAD	src/drivers/bt/driver.cpp	/^const float Driver::PIT_LOOKAHEAD = 6.0f;					\/\/ [m] Lookahead to stop in the pit.$/;"	m	class:Driver	file:
PIT_LOOKAHEAD	src/drivers/bt/driver.h	/^		static const float PIT_LOOKAHEAD;$/;"	m	class:Driver
PIT_LOOKAHEAD	src/drivers/damned/driver.cpp	/^const float Driver::PIT_LOOKAHEAD = 6.0f;					\/\/ [m] Lookahead to stop in the pit.$/;"	m	class:Driver	file:
PIT_LOOKAHEAD	src/drivers/damned/driver.h	/^		static const float PIT_LOOKAHEAD;$/;"	m	class:Driver
PIT_LOOKAHEAD	src/drivers/olethros/driver.cpp	/^    const float Driver::PIT_LOOKAHEAD = 6.0f;					\/\/\/< [m] Lookahead to stop in the pit.$/;"	m	class:olethros::Driver	file:
PIT_LOOKAHEAD	src/drivers/olethros/driver.h	/^	static const float PIT_LOOKAHEAD;$/;"	m	class:olethros::Driver
PIT_LOOKAHEAD	src/drivers/sparkle/driver.cpp	/^const float Driver::PIT_LOOKAHEAD = 6.0;					\/* [m] *\/$/;"	m	class:Driver	file:
PIT_LOOKAHEAD	src/drivers/sparkle/driver.h	/^		static const float PIT_LOOKAHEAD;$/;"	m	class:Driver
PIT_MU	src/drivers/bt/driver.cpp	/^const float Driver::PIT_MU = 0.4f;							\/\/ [-] Friction of pit concrete.$/;"	m	class:Driver	file:
PIT_MU	src/drivers/bt/driver.h	/^		static const float PIT_MU;$/;"	m	class:Driver
PIT_MU	src/drivers/damned/driver.cpp	/^const float Driver::PIT_MU = 0.4f;							\/\/ [-] Friction of pit concrete.$/;"	m	class:Driver	file:
PIT_MU	src/drivers/damned/driver.h	/^		static const float PIT_MU;$/;"	m	class:Driver
PIT_MU	src/drivers/olethros/driver.cpp	/^    const float Driver::PIT_MU = 0.4f;							\/\/\/< [-] Friction of pit concrete.$/;"	m	class:olethros::Driver	file:
PIT_MU	src/drivers/olethros/driver.h	/^	static const float PIT_MU;$/;"	m	class:olethros::Driver
PIT_MU	src/drivers/sparkle/driver.cpp	/^const float Driver::PIT_MU = 0.4;							\/* [-] *\/$/;"	m	class:Driver	file:
PIT_MU	src/drivers/sparkle/driver.h	/^		static const float PIT_MU;$/;"	m	class:Driver
PIT_STATE_ASKED	src/drivers/inferno2/common.h	53;"	d
PIT_STATE_DECEL	src/drivers/inferno2/common.h	61;"	d
PIT_STATE_ENTERED	src/drivers/inferno2/common.h	54;"	d
PIT_STATE_EXIT	src/drivers/inferno2/common.h	60;"	d
PIT_STATE_NO	src/drivers/inferno2/common.h	51;"	d
PIT_STATE_NONE	src/drivers/inferno2/common.h	52;"	d
PIT_STATE_PITLANE_AFTER	src/drivers/inferno2/common.h	59;"	d
PIT_STATE_PITLANE_BEFORE	src/drivers/inferno2/common.h	55;"	d
PIT_STATE_PIT_ALIGN	src/drivers/inferno2/common.h	57;"	d
PIT_STATE_PIT_ENTRY	src/drivers/inferno2/common.h	56;"	d
PIT_STATE_PIT_EXIT	src/drivers/inferno2/common.h	58;"	d
PIT_TOP	src/tools/trackgen/track.cpp	2361;"	d	file:
PKGDIR	Make-default.mk	/^PKGDIR = $($(PKG)_PKGDIR)$/;"	m
PKGFILES	Make-default.mk	/^PKGFILES = ""$/;"	m
PKGFILES	Make-default.mk	/^PKGFILES = $($(PKG)_PKGFILES)$/;"	m
PKGLIST	Makefile	/^PKGLIST		= src \\$/;"	m
PKGSUBDIRS	Makefile	/^PKGSUBDIRS	= src data$/;"	m
PKGSUBDIRS	data/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/cars/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/cars/categories/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/cars/models/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/data/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/tracks/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/tracks/dirt/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/tracks/oval/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	data/tracks/road/Makefile	/^PKGSUBDIRS	= $(DATASUBDIRS)$/;"	m
PKGSUBDIRS	src/Makefile	/^PKGSUBDIRS	= interfaces libs linux modules windows tools drivers doc raceman$/;"	m
PKGSUBDIRS	src/drivers/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/berniw/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/berniw2/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/berniw3/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/bt/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/bt/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/damned/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/human/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/human/tracks/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/inferno/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/inferno2/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/10/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/inferno2/Makefile	/^PKGSUBDIRS		= ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/lliaw/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/drivers/olethros/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/1/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/2/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/3/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/4/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/5/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/6/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/7/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/8/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/9/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/olethros/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/sparkle/0/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/sparkle/Makefile	/^PKGSUBDIRS  = ${SHIPSUBDIRS}$/;"	m
PKGSUBDIRS	src/drivers/tita/Makefile	/^PKGSUBDIRS	= $(SHIPSUBDIRS)$/;"	m
PKGSUBDIRS	src/libs/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/libs/txml/Makefile	/^PKGSUBDIRS	= gennmtab$/;"	m
PKGSUBDIRS	src/modules/Makefile	/^PKGSUBDIRS	= track simu graphic telemetry$/;"	m
PKGSUBDIRS	src/modules/graphic/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/modules/simu/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/modules/simu/simuv2/Makefile	/^PKGSUBDIRS	= $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/modules/simu/simuv2/SOLID-2.0/Makefile	/^PKGSUBDIRS	= $(SUBDIRS) $(EXPINCDIRS)$/;"	m
PKGSUBDIRS	src/modules/simu/simuv2/SOLID-2.0/include/Makefile	/^PKGSUBDIRS	= $(EXPINCDIRS)$/;"	m
PKGSUBDIRS	src/tools/Makefile	/^PKGSUBDIRS	=  $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/tools/package/Makefile	/^PKGSUBDIRS     = $(SUBDIRS)$/;"	m
PKGSUBDIRS	src/windows/Makefile	/^PKGSUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
PKGSUBDIRS	src/windows/include/Makefile	/^PKGSUBDIRS	= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
PLIB_MAJOR_VERSION	src/windows/include/plib/ul.h	153;"	d
PLIB_MAJOR_VERSION	src/windows/include/ul.h	153;"	d
PLIB_MINOR_VERSION	src/windows/include/plib/ul.h	154;"	d
PLIB_MINOR_VERSION	src/windows/include/ul.h	154;"	d
PLIB_MODE	src/modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	e	enum:SoundMode	file:
PLIB_TINY_VERSION	src/windows/include/plib/ul.h	155;"	d
PLIB_TINY_VERSION	src/windows/include/ul.h	155;"	d
PLIB_VERSION	src/windows/include/plib/ul.h	157;"	d
PLIB_VERSION	src/windows/include/ul.h	157;"	d
PNGAIN	src/drivers/inferno2/inferno2.cpp	226;"	d	file:
PNGAPI	src/windows/include/pngconf.h	1167;"	d
PNGAPI	src/windows/include/pngconf.h	1169;"	d
PNGAPI	src/windows/include/pngconf.h	1211;"	d
PNGAPI	src/windows/include/pngconf.h	1214;"	d
PNGAPI	src/windows/include/pngconf.h	1219;"	d
PNGAPI	src/windows/include/pngconf.h	1228;"	d
PNGARG	src/windows/include/pngconf.h	200;"	d
PNGARG	src/windows/include/pngconf.h	204;"	d
PNGARG	src/windows/include/pngconf.h	209;"	d
PNGCONF_H	src/windows/include/pngconf.h	17;"	d
PNG_16_TO_8	src/windows/include/png.h	2455;"	d
PNG_ABORT	src/windows/include/pngconf.h	1249;"	d
PNG_AFTER_IDAT	src/windows/include/png.h	2433;"	d
PNG_ALL_FILTERS	src/windows/include/png.h	1618;"	d
PNG_ALL_MNG_FEATURES	src/windows/include/png.h	983;"	d
PNG_ALWAYS_EXTERN	src/windows/include/pngconf.h	309;"	d
PNG_ASM_FLAGS_INITIALIZED	src/windows/include/png.h	2313;"	d
PNG_ASM_FLAG_MMX_READ_COMBINE_ROW	src/windows/include/png.h	2307;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_AVG	src/windows/include/png.h	2311;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_PAETH	src/windows/include/png.h	2312;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_SUB	src/windows/include/png.h	2309;"	d
PNG_ASM_FLAG_MMX_READ_FILTER_UP	src/windows/include/png.h	2310;"	d
PNG_ASM_FLAG_MMX_READ_INTERLACE	src/windows/include/png.h	2308;"	d
PNG_ASM_FLAG_MMX_SUPPORT_COMPILED	src/windows/include/png.h	2305;"	d
PNG_ASM_FLAG_MMX_SUPPORT_IN_CPU	src/windows/include/png.h	2306;"	d
PNG_ASSEMBLER_CODE_SUPPORTED	src/windows/include/pngconf.h	637;"	d
PNG_BACKGROUND	src/windows/include/png.h	2452;"	d
PNG_BACKGROUND_EXPAND	src/windows/include/png.h	2453;"	d
PNG_BACKGROUND_GAMMA_FILE	src/windows/include/png.h	1472;"	d
PNG_BACKGROUND_GAMMA_SCREEN	src/windows/include/png.h	1471;"	d
PNG_BACKGROUND_GAMMA_UNIQUE	src/windows/include/png.h	1473;"	d
PNG_BACKGROUND_GAMMA_UNKNOWN	src/windows/include/png.h	1470;"	d
PNG_BACKGROUND_IS_GRAY	src/windows/include/png.h	2441;"	d
PNG_BGR	src/windows/include/png.h	2445;"	d
PNG_BUILD_DLL	src/windows/include/pngconf.h	102;"	d
PNG_BYTES_TO_CHECK	src/libs/tgfclient/img.cpp	42;"	d	file:
PNG_BYTES_TO_CHECK	src/misc/png2jpg/png2jpg.c	41;"	d	file:
PNG_COLOR_DIST	src/windows/include/png.h	2519;"	d
PNG_COLOR_MASK_ALPHA	src/windows/include/png.h	826;"	d
PNG_COLOR_MASK_COLOR	src/windows/include/png.h	825;"	d
PNG_COLOR_MASK_PALETTE	src/windows/include/png.h	824;"	d
PNG_COLOR_TYPE_GA	src/windows/include/png.h	836;"	d
PNG_COLOR_TYPE_GRAY	src/windows/include/png.h	829;"	d
PNG_COLOR_TYPE_GRAY_ALPHA	src/windows/include/png.h	833;"	d
PNG_COLOR_TYPE_PALETTE	src/windows/include/png.h	830;"	d
PNG_COLOR_TYPE_RGB	src/windows/include/png.h	831;"	d
PNG_COLOR_TYPE_RGBA	src/windows/include/png.h	835;"	d
PNG_COLOR_TYPE_RGB_ALPHA	src/windows/include/png.h	832;"	d
PNG_COMPRESSION_TYPE_BASE	src/windows/include/png.h	839;"	d
PNG_COMPRESSION_TYPE_DEFAULT	src/windows/include/png.h	840;"	d
PNG_CONST	src/windows/include/pngconf.h	366;"	d
PNG_CONST	src/windows/include/pngconf.h	368;"	d
PNG_COST_FACTOR	src/windows/include/png.h	2478;"	d
PNG_COST_SHIFT	src/windows/include/png.h	2477;"	d
PNG_CRC_DEFAULT	src/windows/include/png.h	1586;"	d
PNG_CRC_ERROR_QUIT	src/windows/include/png.h	1587;"	d
PNG_CRC_NO_CHANGE	src/windows/include/png.h	1591;"	d
PNG_CRC_QUIET_USE	src/windows/include/png.h	1590;"	d
PNG_CRC_WARN_DISCARD	src/windows/include/png.h	1588;"	d
PNG_CRC_WARN_USE	src/windows/include/png.h	1589;"	d
PNG_DEBUG	src/windows/include/pngconf.h	162;"	d
PNG_DEBUG_FILE	src/windows/include/png.h	2256;"	d
PNG_DESTROY_WILL_FREE_DATA	src/windows/include/png.h	1824;"	d
PNG_DITHER	src/windows/include/png.h	2451;"	d
PNG_DITHER_BLUE_BITS	src/windows/include/pngconf.h	337;"	d
PNG_DITHER_GREEN_BITS	src/windows/include/pngconf.h	334;"	d
PNG_DITHER_RED_BITS	src/windows/include/pngconf.h	331;"	d
PNG_DLL	src/windows/include/pngconf.h	108;"	d
PNG_DLL	src/windows/include/pngconf.h	1110;"	d
PNG_DLL	src/windows/include/pngconf.h	122;"	d
PNG_DLL	src/windows/include/pngconf.h	130;"	d
PNG_DLL	src/windows/include/pngconf.h	137;"	d
PNG_EASY_ACCESS_SUPPORTED	src/windows/include/pngconf.h	630;"	d
PNG_EQUATION_ARBITRARY	src/windows/include/png.h	860;"	d
PNG_EQUATION_BASE_E	src/windows/include/png.h	859;"	d
PNG_EQUATION_HYPERBOLIC	src/windows/include/png.h	861;"	d
PNG_EQUATION_LAST	src/windows/include/png.h	862;"	d
PNG_EQUATION_LINEAR	src/windows/include/png.h	858;"	d
PNG_ERROR_NUMBERS_SUPPORTED	src/windows/include/pngconf.h	595;"	d
PNG_EXPAND	src/windows/include/png.h	2457;"	d
PNG_EXPORT	src/windows/include/pngconf.h	1185;"	d
PNG_EXPORT	src/windows/include/pngconf.h	1187;"	d
PNG_EXPORT	src/windows/include/pngconf.h	1235;"	d
PNG_EXPORT_TYPE1	src/windows/include/pngconf.h	1179;"	d
PNG_EXPORT_TYPE2	src/windows/include/pngconf.h	1180;"	d
PNG_EXPORT_VAR	src/windows/include/pngconf.h	1240;"	d
PNG_EXTERN	src/windows/include/pngconf.h	281;"	d
PNG_FILLER	src/windows/include/png.h	2460;"	d
PNG_FILLER_AFTER	src/windows/include/png.h	1428;"	d
PNG_FILLER_BEFORE	src/windows/include/png.h	1427;"	d
PNG_FILTER_AVG	src/windows/include/png.h	1616;"	d
PNG_FILTER_HEURISTIC_DEFAULT	src/windows/include/png.h	1670;"	d
PNG_FILTER_HEURISTIC_LAST	src/windows/include/png.h	1673;"	d
PNG_FILTER_HEURISTIC_UNWEIGHTED	src/windows/include/png.h	1671;"	d
PNG_FILTER_HEURISTIC_WEIGHTED	src/windows/include/png.h	1672;"	d
PNG_FILTER_NONE	src/windows/include/png.h	1613;"	d
PNG_FILTER_PAETH	src/windows/include/png.h	1617;"	d
PNG_FILTER_SUB	src/windows/include/png.h	1614;"	d
PNG_FILTER_TYPE_BASE	src/windows/include/png.h	843;"	d
PNG_FILTER_TYPE_DEFAULT	src/windows/include/png.h	845;"	d
PNG_FILTER_UP	src/windows/include/png.h	1615;"	d
PNG_FILTER_VALUE_AVG	src/windows/include/png.h	1627;"	d
PNG_FILTER_VALUE_LAST	src/windows/include/png.h	1629;"	d
PNG_FILTER_VALUE_NONE	src/windows/include/png.h	1624;"	d
PNG_FILTER_VALUE_PAETH	src/windows/include/png.h	1628;"	d
PNG_FILTER_VALUE_SUB	src/windows/include/png.h	1625;"	d
PNG_FILTER_VALUE_UP	src/windows/include/png.h	1626;"	d
PNG_FIXED_POINT_SUPPORTED	src/windows/include/pngconf.h	445;"	d
PNG_FLAG_CRC_ANCILLARY_MASK	src/windows/include/png.h	2509;"	d
PNG_FLAG_CRC_ANCILLARY_NOWARN	src/windows/include/png.h	2490;"	d
PNG_FLAG_CRC_ANCILLARY_USE	src/windows/include/png.h	2489;"	d
PNG_FLAG_CRC_CRITICAL_IGNORE	src/windows/include/png.h	2492;"	d
PNG_FLAG_CRC_CRITICAL_MASK	src/windows/include/png.h	2512;"	d
PNG_FLAG_CRC_CRITICAL_USE	src/windows/include/png.h	2491;"	d
PNG_FLAG_CRC_MASK	src/windows/include/png.h	2515;"	d
PNG_FLAG_FILLER_AFTER	src/windows/include/png.h	2488;"	d
PNG_FLAG_FREE_HIST	src/windows/include/png.h	2495;"	d
PNG_FLAG_FREE_PLTE	src/windows/include/png.h	2493;"	d
PNG_FLAG_FREE_TRNS	src/windows/include/png.h	2494;"	d
PNG_FLAG_KEEP_UNKNOWN_CHUNKS	src/windows/include/png.h	2496;"	d
PNG_FLAG_KEEP_UNSAFE_CHUNKS	src/windows/include/png.h	2497;"	d
PNG_FLAG_LIBRARY_MISMATCH	src/windows/include/png.h	2498;"	d
PNG_FLAG_MALLOC_NULL_MEM_OK	src/windows/include/png.h	2501;"	d
PNG_FLAG_MNG_EMPTY_PLTE	src/windows/include/png.h	981;"	d
PNG_FLAG_MNG_FILTER_64	src/windows/include/png.h	982;"	d
PNG_FLAG_ROW_INIT	src/windows/include/png.h	2487;"	d
PNG_FLAG_STRIP_ERROR_NUMBERS	src/windows/include/png.h	2499;"	d
PNG_FLAG_STRIP_ERROR_TEXT	src/windows/include/png.h	2500;"	d
PNG_FLAG_ZLIB_CUSTOM_LEVEL	src/windows/include/png.h	2482;"	d
PNG_FLAG_ZLIB_CUSTOM_MEM_LEVEL	src/windows/include/png.h	2483;"	d
PNG_FLAG_ZLIB_CUSTOM_METHOD	src/windows/include/png.h	2485;"	d
PNG_FLAG_ZLIB_CUSTOM_STRATEGY	src/windows/include/png.h	2481;"	d
PNG_FLAG_ZLIB_CUSTOM_WINDOW_BITS	src/windows/include/png.h	2484;"	d
PNG_FLAG_ZLIB_FINISHED	src/windows/include/png.h	2486;"	d
PNG_FLOATING_POINT_SUPPORTED	src/windows/include/pngconf.h	58;"	d
PNG_FREE_ALL	src/windows/include/png.h	1839;"	d
PNG_FREE_HIST	src/windows/include/png.h	1828;"	d
PNG_FREE_ICCP	src/windows/include/png.h	1829;"	d
PNG_FREE_LIST	src/windows/include/png.h	1835;"	d
PNG_FREE_ME_SUPPORTED	src/windows/include/pngconf.h	449;"	d
PNG_FREE_MUL	src/windows/include/png.h	1840;"	d
PNG_FREE_PCAL	src/windows/include/png.h	1832;"	d
PNG_FREE_PLTE	src/windows/include/png.h	1836;"	d
PNG_FREE_ROWS	src/windows/include/png.h	1831;"	d
PNG_FREE_SCAL	src/windows/include/png.h	1833;"	d
PNG_FREE_SPLT	src/windows/include/png.h	1830;"	d
PNG_FREE_TEXT	src/windows/include/png.h	1838;"	d
PNG_FREE_TRNS	src/windows/include/png.h	1837;"	d
PNG_FREE_UNKN	src/windows/include/png.h	1834;"	d
PNG_GAMMA	src/windows/include/png.h	2458;"	d
PNG_GAMMA_THRESHOLD	src/windows/include/pngconf.h	355;"	d
PNG_GRAY_TO_RGB	src/windows/include/png.h	2459;"	d
PNG_H	src/windows/include/png.h	272;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	src/windows/include/pngconf.h	789;"	d
PNG_HANDLE_AS_UNKNOWN_SUPPORTED	src/windows/include/pngconf.h	932;"	d
PNG_HAVE_ASSEMBLER_COMBINE_ROW	src/windows/include/pngconf.h	1311;"	d
PNG_HAVE_ASSEMBLER_COMBINE_ROW	src/windows/include/pngconf.h	1321;"	d
PNG_HAVE_ASSEMBLER_READ_FILTER_ROW	src/windows/include/pngconf.h	1313;"	d
PNG_HAVE_ASSEMBLER_READ_FILTER_ROW	src/windows/include/pngconf.h	1323;"	d
PNG_HAVE_ASSEMBLER_READ_INTERLACE	src/windows/include/pngconf.h	1312;"	d
PNG_HAVE_ASSEMBLER_READ_INTERLACE	src/windows/include/pngconf.h	1322;"	d
PNG_HAVE_CHUNK_HEADER	src/windows/include/png.h	2438;"	d
PNG_HAVE_IDAT	src/windows/include/png.h	2432;"	d
PNG_HAVE_IEND	src/windows/include/png.h	2434;"	d
PNG_HAVE_IHDR	src/windows/include/png.h	2430;"	d
PNG_HAVE_PLTE	src/windows/include/png.h	2431;"	d
PNG_HAVE_PNG_SIGNATURE	src/windows/include/png.h	2442;"	d
PNG_HAVE_cHRM	src/windows/include/png.h	2436;"	d
PNG_HAVE_gAMA	src/windows/include/png.h	2435;"	d
PNG_HAVE_sRGB	src/windows/include/png.h	2437;"	d
PNG_HEADER_VERSION_STRING	src/windows/include/png.h	2375;"	d
PNG_IDAT	src/windows/include/png.h	2538;"	d
PNG_IEND	src/windows/include/png.h	2539;"	d
PNG_IHDR	src/windows/include/png.h	2537;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1158;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1174;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1189;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1191;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1200;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1202;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1209;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1215;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1220;"	d
PNG_IMPEXP	src/windows/include/pngconf.h	1231;"	d
PNG_INFO_IDAT	src/windows/include/png.h	908;"	d
PNG_INFO_IMAGE_SUPPORTED	src/windows/include/pngconf.h	951;"	d
PNG_INFO_PLTE	src/windows/include/png.h	896;"	d
PNG_INFO_bKGD	src/windows/include/png.h	898;"	d
PNG_INFO_cHRM	src/windows/include/png.h	895;"	d
PNG_INFO_gAMA	src/windows/include/png.h	893;"	d
PNG_INFO_hIST	src/windows/include/png.h	899;"	d
PNG_INFO_iCCP	src/windows/include/png.h	905;"	d
PNG_INFO_oFFs	src/windows/include/png.h	901;"	d
PNG_INFO_pCAL	src/windows/include/png.h	903;"	d
PNG_INFO_pHYs	src/windows/include/png.h	900;"	d
PNG_INFO_sBIT	src/windows/include/png.h	894;"	d
PNG_INFO_sCAL	src/windows/include/png.h	907;"	d
PNG_INFO_sPLT	src/windows/include/png.h	906;"	d
PNG_INFO_sRGB	src/windows/include/png.h	904;"	d
PNG_INFO_tIME	src/windows/include/png.h	902;"	d
PNG_INFO_tRNS	src/windows/include/png.h	897;"	d
PNG_INTERLACE	src/windows/include/png.h	2446;"	d
PNG_INTERLACE_ADAM7	src/windows/include/png.h	849;"	d
PNG_INTERLACE_LAST	src/windows/include/png.h	850;"	d
PNG_INTERLACE_NONE	src/windows/include/png.h	848;"	d
PNG_INTRAPIXEL_DIFFERENCING	src/windows/include/png.h	844;"	d
PNG_INVERT_ALPHA	src/windows/include/png.h	2464;"	d
PNG_INVERT_MONO	src/windows/include/png.h	2450;"	d
PNG_ITXT_COMPRESSION_NONE	src/windows/include/png.h	497;"	d
PNG_ITXT_COMPRESSION_zTXt	src/windows/include/png.h	498;"	d
PNG_KEYWORD_MAX_LENGTH	src/windows/include/png.h	883;"	d
PNG_LIBPNG_BUILD_ALPHA	src/windows/include/png.h	295;"	d
PNG_LIBPNG_BUILD_BETA	src/windows/include/png.h	296;"	d
PNG_LIBPNG_BUILD_PATCH	src/windows/include/png.h	300;"	d
PNG_LIBPNG_BUILD_RC	src/windows/include/png.h	297;"	d
PNG_LIBPNG_BUILD_STABLE	src/windows/include/png.h	298;"	d
PNG_LIBPNG_BUILD_TYPE	src/windows/include/png.h	301;"	d
PNG_LIBPNG_BUILD_TYPEMASK	src/windows/include/png.h	299;"	d
PNG_LIBPNG_VER	src/windows/include/png.h	308;"	d
PNG_LIBPNG_VER_BUILD	src/windows/include/png.h	293;"	d
PNG_LIBPNG_VER_DLLNUM	src/windows/include/png.h	284;"	d
PNG_LIBPNG_VER_MAJOR	src/windows/include/png.h	287;"	d
PNG_LIBPNG_VER_MINOR	src/windows/include/png.h	288;"	d
PNG_LIBPNG_VER_RELEASE	src/windows/include/png.h	289;"	d
PNG_LIBPNG_VER_SONUM	src/windows/include/png.h	283;"	d
PNG_LIBPNG_VER_STRING	src/windows/include/png.h	281;"	d
PNG_MAX_GAMMA_8	src/windows/include/pngconf.h	348;"	d
PNG_MAX_MALLOC_64K	src/windows/include/pngconf.h	1000;"	d
PNG_MAX_MALLOC_64K	src/windows/include/pngconf.h	71;"	d
PNG_MAX_PALETTE_LENGTH	src/windows/include/png.h	886;"	d
PNG_MAX_UINT	src/windows/include/png.h	820;"	d
PNG_MMX_BITDEPTH_THRESHOLD_DEFAULT	src/windows/include/pngconf.h	1303;"	d
PNG_MMX_CODE_SUPPORTED	src/windows/include/pngconf.h	640;"	d
PNG_MMX_FLAGS	src/windows/include/png.h	2323;"	d
PNG_MMX_READ_FLAGS	src/windows/include/png.h	2315;"	d
PNG_MMX_ROWBYTES_THRESHOLD_DEFAULT	src/windows/include/pngconf.h	1300;"	d
PNG_MMX_WRITE_FLAGS	src/windows/include/png.h	2321;"	d
PNG_MNG_FEATURES_SUPPORTED	src/windows/include/pngconf.h	52;"	d
PNG_NO_CONSOLE_IO	src/windows/include/pngconf.h	160;"	d
PNG_NO_CONSOLE_IO	src/windows/include/pngconf.h	169;"	d
PNG_NO_CONSOLE_IO	src/windows/include/pngconf.h	176;"	d
PNG_NO_FILTERS	src/windows/include/png.h	1612;"	d
PNG_NO_FIXED_POINT_SUPPORTED	src/windows/include/pngconf.h	439;"	d
PNG_NO_FREE_ME	src/windows/include/pngconf.h	420;"	d
PNG_NO_HANDLE_AS_UNKNOWN	src/windows/include/pngconf.h	800;"	d
PNG_NO_INFO_IMAGE	src/windows/include/pngconf.h	432;"	d
PNG_NO_MNG_FEATURES	src/windows/include/pngconf.h	438;"	d
PNG_NO_MODULEDEF	src/windows/include/pngconf.h	1153;"	d
PNG_NO_READ_EMPTY_PLTE	src/windows/include/pngconf.h	437;"	d
PNG_NO_READ_RGB_TO_GRAY	src/windows/include/pngconf.h	433;"	d
PNG_NO_READ_UNKNOWN_CHUNKS	src/windows/include/pngconf.h	421;"	d
PNG_NO_READ_UNKNOWN_CHUNKS	src/windows/include/pngconf.h	797;"	d
PNG_NO_READ_USER_CHUNKS	src/windows/include/pngconf.h	423;"	d
PNG_NO_READ_USER_TRANSFORM	src/windows/include/pngconf.h	434;"	d
PNG_NO_READ_iCCP	src/windows/include/pngconf.h	424;"	d
PNG_NO_READ_iTXt	src/windows/include/pngconf.h	406;"	d
PNG_NO_READ_iTXt	src/windows/include/pngconf.h	426;"	d
PNG_NO_READ_iTXt	src/windows/include/pngconf.h	707;"	d
PNG_NO_READ_sCAL	src/windows/include/pngconf.h	428;"	d
PNG_NO_READ_sPLT	src/windows/include/pngconf.h	430;"	d
PNG_NO_READ_tEXt	src/windows/include/pngconf.h	708;"	d
PNG_NO_READ_zTXt	src/windows/include/pngconf.h	709;"	d
PNG_NO_USER_MEM	src/windows/include/pngconf.h	436;"	d
PNG_NO_WRITE_UNKNOWN_CHUNKS	src/windows/include/pngconf.h	422;"	d
PNG_NO_WRITE_USER_TRANSFORM	src/windows/include/pngconf.h	435;"	d
PNG_NO_WRITE_iCCP	src/windows/include/pngconf.h	425;"	d
PNG_NO_WRITE_iTXt	src/windows/include/pngconf.h	409;"	d
PNG_NO_WRITE_iTXt	src/windows/include/pngconf.h	427;"	d
PNG_NO_WRITE_iTXt	src/windows/include/pngconf.h	817;"	d
PNG_NO_WRITE_sCAL	src/windows/include/pngconf.h	429;"	d
PNG_NO_WRITE_sPLT	src/windows/include/pngconf.h	431;"	d
PNG_NO_WRITE_tEXt	src/windows/include/pngconf.h	818;"	d
PNG_NO_WRITE_zTXt	src/windows/include/pngconf.h	819;"	d
PNG_OFFSET_LAST	src/windows/include/png.h	855;"	d
PNG_OFFSET_MICROMETER	src/windows/include/png.h	854;"	d
PNG_OFFSET_PIXEL	src/windows/include/png.h	853;"	d
PNG_PACK	src/windows/include/png.h	2447;"	d
PNG_PACKSWAP	src/windows/include/png.h	2461;"	d
PNG_PLTE	src/windows/include/png.h	2540;"	d
PNG_PROGRESSIVE_READ_SUPPORTED	src/windows/include/pngconf.h	518;"	d
PNG_READ_16_TO_8_SUPPORTED	src/windows/include/pngconf.h	488;"	d
PNG_READ_ANCILLARY_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	695;"	d
PNG_READ_BACKGROUND_SUPPORTED	src/windows/include/pngconf.h	485;"	d
PNG_READ_BGR_SUPPORTED	src/windows/include/pngconf.h	470;"	d
PNG_READ_COMPOSITE_NODIV_SUPPORTED	src/windows/include/pngconf.h	526;"	d
PNG_READ_DITHER_SUPPORTED	src/windows/include/pngconf.h	482;"	d
PNG_READ_EMPTY_PLTE_SUPPORTED	src/windows/include/pngconf.h	533;"	d
PNG_READ_EXPAND_SUPPORTED	src/windows/include/pngconf.h	461;"	d
PNG_READ_FILLER_SUPPORTED	src/windows/include/pngconf.h	491;"	d
PNG_READ_GAMMA_SUPPORTED	src/windows/include/pngconf.h	494;"	d
PNG_READ_GRAY_TO_RGB_SUPPORTED	src/windows/include/pngconf.h	497;"	d
PNG_READ_INTERLACING_SUPPORTED	src/windows/include/pngconf.h	522;"	d
PNG_READ_INVERT_ALPHA_SUPPORTED	src/windows/include/pngconf.h	503;"	d
PNG_READ_INVERT_SUPPORTED	src/windows/include/pngconf.h	479;"	d
PNG_READ_OPT_PLTE_SUPPORTED	src/windows/include/pngconf.h	804;"	d
PNG_READ_PACKSWAP_SUPPORTED	src/windows/include/pngconf.h	476;"	d
PNG_READ_PACK_SUPPORTED	src/windows/include/pngconf.h	467;"	d
PNG_READ_RGB_TO_GRAY_SUPPORTED	src/windows/include/pngconf.h	512;"	d
PNG_READ_SHIFT_SUPPORTED	src/windows/include/pngconf.h	464;"	d
PNG_READ_STRIP_ALPHA_SUPPORTED	src/windows/include/pngconf.h	506;"	d
PNG_READ_SUPPORTED	src/windows/include/pngconf.h	39;"	d
PNG_READ_SWAP_ALPHA_SUPPORTED	src/windows/include/pngconf.h	500;"	d
PNG_READ_SWAP_SUPPORTED	src/windows/include/pngconf.h	473;"	d
PNG_READ_TEXT_SUPPORTED	src/windows/include/pngconf.h	808;"	d
PNG_READ_TRANSFORMS_SUPPORTED	src/windows/include/pngconf.h	456;"	d
PNG_READ_UNKNOWN_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	784;"	d
PNG_READ_USER_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	794;"	d
PNG_READ_USER_TRANSFORM_SUPPORTED	src/windows/include/pngconf.h	509;"	d
PNG_READ_bKGD_SUPPORTED	src/windows/include/pngconf.h	712;"	d
PNG_READ_cHRM_SUPPORTED	src/windows/include/pngconf.h	716;"	d
PNG_READ_gAMA_SUPPORTED	src/windows/include/pngconf.h	720;"	d
PNG_READ_hIST_SUPPORTED	src/windows/include/pngconf.h	724;"	d
PNG_READ_iCCP_SUPPORTED	src/windows/include/pngconf.h	728;"	d
PNG_READ_iTXt_SUPPORTED	src/windows/include/pngconf.h	733;"	d
PNG_READ_oFFs_SUPPORTED	src/windows/include/pngconf.h	740;"	d
PNG_READ_pCAL_SUPPORTED	src/windows/include/pngconf.h	744;"	d
PNG_READ_pHYs_SUPPORTED	src/windows/include/pngconf.h	752;"	d
PNG_READ_sBIT_SUPPORTED	src/windows/include/pngconf.h	756;"	d
PNG_READ_sCAL_SUPPORTED	src/windows/include/pngconf.h	748;"	d
PNG_READ_sPLT_SUPPORTED	src/windows/include/pngconf.h	760;"	d
PNG_READ_sRGB_SUPPORTED	src/windows/include/pngconf.h	764;"	d
PNG_READ_tEXt_SUPPORTED	src/windows/include/pngconf.h	768;"	d
PNG_READ_tIME_SUPPORTED	src/windows/include/pngconf.h	772;"	d
PNG_READ_tRNS_SUPPORTED	src/windows/include/pngconf.h	776;"	d
PNG_READ_zTXt_SUPPORTED	src/windows/include/pngconf.h	780;"	d
PNG_RESOLUTION_LAST	src/windows/include/png.h	873;"	d
PNG_RESOLUTION_METER	src/windows/include/png.h	872;"	d
PNG_RESOLUTION_UNKNOWN	src/windows/include/png.h	871;"	d
PNG_RGBA	src/windows/include/png.h	2456;"	d
PNG_RGB_TO_GRAY	src/windows/include/png.h	2468;"	d
PNG_RGB_TO_GRAY_ERR	src/windows/include/png.h	2466;"	d
PNG_RGB_TO_GRAY_WARN	src/windows/include/png.h	2467;"	d
PNG_SAVE_BSD_SOURCE	src/windows/include/pngconf.h	243;"	d
PNG_SAVE_BSD_SOURCE	src/windows/include/pngconf.h	258;"	d
PNG_SCALE_LAST	src/windows/include/png.h	868;"	d
PNG_SCALE_METER	src/windows/include/png.h	866;"	d
PNG_SCALE_RADIAN	src/windows/include/png.h	867;"	d
PNG_SCALE_UNKNOWN	src/windows/include/png.h	865;"	d
PNG_SELECT_READ	src/windows/include/png.h	2328;"	d
PNG_SELECT_WRITE	src/windows/include/png.h	2329;"	d
PNG_SETJMP_SUPPORTED	src/windows/include/pngconf.h	233;"	d
PNG_SET_WILL_FREE_DATA	src/windows/include/png.h	1825;"	d
PNG_SHIFT	src/windows/include/png.h	2448;"	d
PNG_STATIC	src/windows/include/pngconf.h	111;"	d
PNG_STATIC	src/windows/include/pngconf.h	116;"	d
PNG_STRIP_ALPHA	src/windows/include/png.h	2463;"	d
PNG_STRUCT_INFO	src/windows/include/png.h	2472;"	d
PNG_STRUCT_PNG	src/windows/include/png.h	2471;"	d
PNG_SWAP_ALPHA	src/windows/include/png.h	2462;"	d
PNG_SWAP_BYTES	src/windows/include/png.h	2449;"	d
PNG_TEXT_COMPRESSION_LAST	src/windows/include/png.h	499;"	d
PNG_TEXT_COMPRESSION_NONE	src/windows/include/png.h	495;"	d
PNG_TEXT_COMPRESSION_NONE_WR	src/windows/include/png.h	493;"	d
PNG_TEXT_COMPRESSION_zTXt	src/windows/include/png.h	496;"	d
PNG_TEXT_COMPRESSION_zTXt_WR	src/windows/include/png.h	494;"	d
PNG_TEXT_SUPPORTED	src/windows/include/pngconf.h	809;"	d
PNG_TEXT_SUPPORTED	src/windows/include/pngconf.h	940;"	d
PNG_TIME_RFC1123_SUPPORTED	src/windows/include/pngconf.h	610;"	d
PNG_TRANSFORM_BGR	src/windows/include/png.h	974;"	d
PNG_TRANSFORM_EXPAND	src/windows/include/png.h	971;"	d
PNG_TRANSFORM_IDENTITY	src/windows/include/png.h	966;"	d
PNG_TRANSFORM_INVERT_ALPHA	src/windows/include/png.h	977;"	d
PNG_TRANSFORM_INVERT_MONO	src/windows/include/png.h	972;"	d
PNG_TRANSFORM_PACKING	src/windows/include/png.h	969;"	d
PNG_TRANSFORM_PACKSWAP	src/windows/include/png.h	970;"	d
PNG_TRANSFORM_SHIFT	src/windows/include/png.h	973;"	d
PNG_TRANSFORM_STRIP_16	src/windows/include/png.h	967;"	d
PNG_TRANSFORM_STRIP_ALPHA	src/windows/include/png.h	968;"	d
PNG_TRANSFORM_STRIP_FILLER	src/windows/include/png.h	978;"	d
PNG_TRANSFORM_SWAP_ALPHA	src/windows/include/png.h	975;"	d
PNG_TRANSFORM_SWAP_ENDIAN	src/windows/include/png.h	976;"	d
PNG_TYPECAST_NULL	src/windows/include/pngconf.h	206;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	786;"	d
PNG_UNKNOWN_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	928;"	d
PNG_USER_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	795;"	d
PNG_USER_MEM_SUPPORTED	src/windows/include/pngconf.h	651;"	d
PNG_USER_TRANSFORM	src/windows/include/png.h	2465;"	d
PNG_USER_TRANSFORM_PTR_SUPPORTED	src/windows/include/pngconf.h	581;"	d
PNG_USER_WILL_FREE_DATA	src/windows/include/png.h	1826;"	d
PNG_USE_DLL	src/windows/include/pngconf.h	105;"	d
PNG_USE_DLL	src/windows/include/pngconf.h	119;"	d
PNG_USE_DLL	src/windows/include/pngconf.h	127;"	d
PNG_USE_DLL	src/windows/include/pngconf.h	134;"	d
PNG_USE_GLOBAL_ARRAYS	src/windows/include/pngconf.h	1119;"	d
PNG_USE_GLOBAL_ARRAYS	src/windows/include/pngconf.h	1127;"	d
PNG_USE_GLOBAL_ARRAYS	src/windows/include/pngconf.h	1144;"	d
PNG_USE_LOCAL_ARRAYS	src/windows/include/pngconf.h	1122;"	d
PNG_USE_LOCAL_ARRAYS	src/windows/include/pngconf.h	1132;"	d
PNG_USE_LOCAL_ARRAYS	src/windows/include/pngconf.h	1142;"	d
PNG_WEIGHT_FACTOR	src/windows/include/png.h	2476;"	d
PNG_WEIGHT_SHIFT	src/windows/include/png.h	2475;"	d
PNG_WRITE_ANCILLARY_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	701;"	d
PNG_WRITE_BGR_SUPPORTED	src/windows/include/pngconf.h	553;"	d
PNG_WRITE_EMPTY_PLTE_SUPPORTED	src/windows/include/pngconf.h	604;"	d
PNG_WRITE_FILLER_SUPPORTED	src/windows/include/pngconf.h	565;"	d
PNG_WRITE_FLUSH_SUPPORTED	src/windows/include/pngconf.h	599;"	d
PNG_WRITE_INTERLACING_SUPPORTED	src/windows/include/pngconf.h	585;"	d
PNG_WRITE_INVERT_ALPHA_SUPPORTED	src/windows/include/pngconf.h	571;"	d
PNG_WRITE_INVERT_SUPPORTED	src/windows/include/pngconf.h	562;"	d
PNG_WRITE_PACKSWAP_SUPPORTED	src/windows/include/pngconf.h	559;"	d
PNG_WRITE_PACK_SUPPORTED	src/windows/include/pngconf.h	550;"	d
PNG_WRITE_SHIFT_SUPPORTED	src/windows/include/pngconf.h	547;"	d
PNG_WRITE_SUPPORTED	src/windows/include/pngconf.h	45;"	d
PNG_WRITE_SWAP_ALPHA_SUPPORTED	src/windows/include/pngconf.h	568;"	d
PNG_WRITE_SWAP_SUPPORTED	src/windows/include/pngconf.h	556;"	d
PNG_WRITE_TEXT_SUPPORTED	src/windows/include/pngconf.h	938;"	d
PNG_WRITE_TRANSFORMS_SUPPORTED	src/windows/include/pngconf.h	542;"	d
PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED	src/windows/include/pngconf.h	926;"	d
PNG_WRITE_USER_TRANSFORM_SUPPORTED	src/windows/include/pngconf.h	574;"	d
PNG_WRITE_WEIGHTED_FILTER_SUPPORTED	src/windows/include/pngconf.h	591;"	d
PNG_WRITE_bKGD_SUPPORTED	src/windows/include/pngconf.h	822;"	d
PNG_WRITE_cHRM_SUPPORTED	src/windows/include/pngconf.h	828;"	d
PNG_WRITE_gAMA_SUPPORTED	src/windows/include/pngconf.h	834;"	d
PNG_WRITE_hIST_SUPPORTED	src/windows/include/pngconf.h	840;"	d
PNG_WRITE_iCCP_SUPPORTED	src/windows/include/pngconf.h	846;"	d
PNG_WRITE_iTXt_SUPPORTED	src/windows/include/pngconf.h	853;"	d
PNG_WRITE_oFFs_SUPPORTED	src/windows/include/pngconf.h	860;"	d
PNG_WRITE_pCAL_SUPPORTED	src/windows/include/pngconf.h	866;"	d
PNG_WRITE_pHYs_SUPPORTED	src/windows/include/pngconf.h	878;"	d
PNG_WRITE_sBIT_SUPPORTED	src/windows/include/pngconf.h	884;"	d
PNG_WRITE_sCAL_SUPPORTED	src/windows/include/pngconf.h	872;"	d
PNG_WRITE_sPLT_SUPPORTED	src/windows/include/pngconf.h	890;"	d
PNG_WRITE_sRGB_SUPPORTED	src/windows/include/pngconf.h	896;"	d
PNG_WRITE_tEXt_SUPPORTED	src/windows/include/pngconf.h	902;"	d
PNG_WRITE_tIME_SUPPORTED	src/windows/include/pngconf.h	908;"	d
PNG_WRITE_tRNS_SUPPORTED	src/windows/include/pngconf.h	914;"	d
PNG_WRITE_zTXt_SUPPORTED	src/windows/include/pngconf.h	920;"	d
PNG_WROTE_INFO_BEFORE_PLTE	src/windows/include/png.h	2440;"	d
PNG_WROTE_tIME	src/windows/include/png.h	2439;"	d
PNG_ZBUF_SIZE	src/windows/include/pngconf.h	1285;"	d
PNG_ZBUF_SIZE	src/windows/include/pngconf.h	1286;"	d
PNG_ZBUF_SIZE	src/windows/include/pngconf.h	33;"	d
PNG_bKGD	src/windows/include/png.h	2541;"	d
PNG_bKGD_SUPPORTED	src/windows/include/pngconf.h	713;"	d
PNG_bKGD_SUPPORTED	src/windows/include/pngconf.h	824;"	d
PNG_cHRM	src/windows/include/png.h	2542;"	d
PNG_cHRM_SUPPORTED	src/windows/include/pngconf.h	717;"	d
PNG_cHRM_SUPPORTED	src/windows/include/pngconf.h	830;"	d
PNG_gAMA	src/windows/include/png.h	2543;"	d
PNG_gAMA_SUPPORTED	src/windows/include/pngconf.h	721;"	d
PNG_gAMA_SUPPORTED	src/windows/include/pngconf.h	836;"	d
PNG_hIST	src/windows/include/png.h	2544;"	d
PNG_hIST_SUPPORTED	src/windows/include/pngconf.h	725;"	d
PNG_hIST_SUPPORTED	src/windows/include/pngconf.h	842;"	d
PNG_iCCP	src/windows/include/png.h	2545;"	d
PNG_iCCP_SUPPORTED	src/windows/include/pngconf.h	729;"	d
PNG_iCCP_SUPPORTED	src/windows/include/pngconf.h	848;"	d
PNG_iTXt	src/windows/include/png.h	2546;"	d
PNG_iTXt_SUPPORTED	src/windows/include/pngconf.h	736;"	d
PNG_iTXt_SUPPORTED	src/windows/include/pngconf.h	856;"	d
PNG_oFFs	src/windows/include/png.h	2547;"	d
PNG_oFFs_SUPPORTED	src/windows/include/pngconf.h	741;"	d
PNG_oFFs_SUPPORTED	src/windows/include/pngconf.h	862;"	d
PNG_pCAL	src/windows/include/png.h	2548;"	d
PNG_pCAL_SUPPORTED	src/windows/include/pngconf.h	745;"	d
PNG_pCAL_SUPPORTED	src/windows/include/pngconf.h	868;"	d
PNG_pHYs	src/windows/include/png.h	2550;"	d
PNG_pHYs_SUPPORTED	src/windows/include/pngconf.h	753;"	d
PNG_pHYs_SUPPORTED	src/windows/include/pngconf.h	880;"	d
PNG_sBIT	src/windows/include/png.h	2551;"	d
PNG_sBIT_SUPPORTED	src/windows/include/pngconf.h	757;"	d
PNG_sBIT_SUPPORTED	src/windows/include/pngconf.h	886;"	d
PNG_sCAL	src/windows/include/png.h	2549;"	d
PNG_sCAL_SUPPORTED	src/windows/include/pngconf.h	749;"	d
PNG_sCAL_SUPPORTED	src/windows/include/pngconf.h	874;"	d
PNG_sPLT	src/windows/include/png.h	2552;"	d
PNG_sPLT_SUPPORTED	src/windows/include/pngconf.h	761;"	d
PNG_sPLT_SUPPORTED	src/windows/include/pngconf.h	892;"	d
PNG_sRGB	src/windows/include/png.h	2553;"	d
PNG_sRGB_INTENT_ABSOLUTE	src/windows/include/png.h	879;"	d
PNG_sRGB_INTENT_LAST	src/windows/include/png.h	880;"	d
PNG_sRGB_INTENT_PERCEPTUAL	src/windows/include/png.h	876;"	d
PNG_sRGB_INTENT_RELATIVE	src/windows/include/png.h	877;"	d
PNG_sRGB_INTENT_SATURATION	src/windows/include/png.h	878;"	d
PNG_sRGB_SUPPORTED	src/windows/include/pngconf.h	765;"	d
PNG_sRGB_SUPPORTED	src/windows/include/pngconf.h	898;"	d
PNG_tEXt	src/windows/include/png.h	2554;"	d
PNG_tEXt_SUPPORTED	src/windows/include/pngconf.h	769;"	d
PNG_tEXt_SUPPORTED	src/windows/include/pngconf.h	904;"	d
PNG_tIME	src/windows/include/png.h	2555;"	d
PNG_tIME_SUPPORTED	src/windows/include/pngconf.h	773;"	d
PNG_tIME_SUPPORTED	src/windows/include/pngconf.h	910;"	d
PNG_tRNS	src/windows/include/png.h	2556;"	d
PNG_tRNS_SUPPORTED	src/windows/include/pngconf.h	777;"	d
PNG_tRNS_SUPPORTED	src/windows/include/pngconf.h	916;"	d
PNG_zTXt	src/windows/include/png.h	2557;"	d
PNG_zTXt_SUPPORTED	src/windows/include/pngconf.h	781;"	d
PNG_zTXt_SUPPORTED	src/windows/include/pngconf.h	922;"	d
POLICY_H	export/include/learning/policy.h	15;"	d
POLICY_H	src/libs/learning/policy.h	15;"	d
POLICY_LOG	src/libs/learning/policy.cpp	23;"	d	file:
POSITION	src/libs/txml/xmltok.h	/^} POSITION;$/;"	t	typeref:struct:position
PREDY	src/drivers/inferno2/inferno2.cpp	231;"	d	file:
PREFIX	src/libs/txml/xmltok.c	178;"	d	file:
PREFIX	src/libs/txml/xmltok.c	333;"	d	file:
PREFIX	src/libs/txml/xmltok.c	430;"	d	file:
PREFIX	src/libs/txml/xmltok.c	494;"	d	file:
PREFIX	src/libs/txml/xmltok.c	496;"	d	file:
PREFIX	src/libs/txml/xmltok.c	561;"	d	file:
PREFIX	src/libs/txml/xmltok_impl.c	101;"	d	file:
PRINT_PROFILE	export/include/tgf.h	561;"	d
PRINT_PROFILE	export/include/tgf.h	601;"	d
PRINT_PROFILE	src/libs/tgf/tgf.h	561;"	d
PRINT_PROFILE	src/libs/tgf/tgf.h	601;"	d
PRM_BELLCRANK	export/include/car.h	478;"	d
PRM_BELLCRANK	src/interfaces/car.h	478;"	d
PRM_BIAS	export/include/car.h	520;"	d
PRM_BIAS	src/interfaces/car.h	520;"	d
PRM_BONNET	export/include/car.h	532;"	d
PRM_BONNET	src/interfaces/car.h	532;"	d
PRM_BRKAREA	export/include/car.h	493;"	d
PRM_BRKAREA	src/interfaces/car.h	493;"	d
PRM_BRKDIAM	export/include/car.h	492;"	d
PRM_BRKDIAM	src/interfaces/car.h	492;"	d
PRM_BRKPRESS	export/include/car.h	495;"	d
PRM_BRKPRESS	src/interfaces/car.h	495;"	d
PRM_BRKREP	export/include/car.h	494;"	d
PRM_BRKREP	src/interfaces/car.h	494;"	d
PRM_CA	export/include/car.h	467;"	d
PRM_CA	src/interfaces/car.h	467;"	d
PRM_CAMBER	export/include/car.h	466;"	d
PRM_CAMBER	src/interfaces/car.h	466;"	d
PRM_CAR	export/include/car.h	529;"	d
PRM_CAR	src/interfaces/car.h	529;"	d
PRM_CATEGORY	export/include/car.h	439;"	d
PRM_CATEGORY	src/interfaces/car.h	439;"	d
PRM_CENTR	export/include/car.h	452;"	d
PRM_CENTR	src/interfaces/car.h	452;"	d
PRM_CX	export/include/car.h	497;"	d
PRM_CX	src/interfaces/car.h	497;"	d
PRM_DAMAGE_AERO	export/include/car.h	598;"	d
PRM_DAMAGE_AERO	src/interfaces/car.h	598;"	d
PRM_DAMAGE_ALIGNMENT	export/include/car.h	597;"	d
PRM_DAMAGE_ALIGNMENT	src/interfaces/car.h	597;"	d
PRM_DAMAGE_SUSPENSION	export/include/car.h	596;"	d
PRM_DAMAGE_SUSPENSION	src/interfaces/car.h	596;"	d
PRM_DAMAGE_TYRES	export/include/car.h	595;"	d
PRM_DAMAGE_TYRES	src/interfaces/car.h	595;"	d
PRM_EFACTOR	export/include/car.h	469;"	d
PRM_EFACTOR	src/interfaces/car.h	469;"	d
PRM_EFFICIENCY	export/include/car.h	454;"	d
PRM_EFFICIENCY	src/interfaces/car.h	454;"	d
PRM_ENGBRKCOEFF	export/include/car.h	512;"	d
PRM_ENGBRKCOEFF	src/interfaces/car.h	512;"	d
PRM_ENV	export/include/car.h	531;"	d
PRM_ENV	src/interfaces/car.h	531;"	d
PRM_FASTBUMP	export/include/car.h	482;"	d
PRM_FASTBUMP	src/interfaces/car.h	482;"	d
PRM_FASTREBOUND	export/include/car.h	483;"	d
PRM_FASTREBOUND	src/interfaces/car.h	483;"	d
PRM_FCL	export/include/car.h	498;"	d
PRM_FCL	src/interfaces/car.h	498;"	d
PRM_FRLWEIGHTREP	export/include/car.h	447;"	d
PRM_FRLWEIGHTREP	src/interfaces/car.h	447;"	d
PRM_FRNTAREA	export/include/car.h	500;"	d
PRM_FRNTAREA	src/interfaces/car.h	500;"	d
PRM_FRWEIGHTREP	export/include/car.h	446;"	d
PRM_FRWEIGHTREP	src/interfaces/car.h	446;"	d
PRM_FUEL	export/include/car.h	451;"	d
PRM_FUEL	src/interfaces/car.h	451;"	d
PRM_FUELCONS	export/include/car.h	511;"	d
PRM_FUELCONS	src/interfaces/car.h	511;"	d
PRM_GCHEIGHT	export/include/car.h	449;"	d
PRM_GCHEIGHT	src/interfaces/car.h	449;"	d
PRM_HEIGHT	export/include/car.h	444;"	d
PRM_HEIGHT	src/interfaces/car.h	444;"	d
PRM_INERTIA	export/include/car.h	453;"	d
PRM_INERTIA	src/interfaces/car.h	453;"	d
PRM_LEN	export/include/car.h	440;"	d
PRM_LEN	src/interfaces/car.h	440;"	d
PRM_LOADFMAX	export/include/car.h	471;"	d
PRM_LOADFMAX	src/interfaces/car.h	471;"	d
PRM_LOADFMIN	export/include/car.h	472;"	d
PRM_LOADFMIN	src/interfaces/car.h	472;"	d
PRM_LOCKING_TQ	export/include/car.h	539;"	d
PRM_LOCKING_TQ	src/interfaces/car.h	539;"	d
PRM_MASS	export/include/car.h	445;"	d
PRM_MASS	src/interfaces/car.h	445;"	d
PRM_MAX_SLIP_BIAS	export/include/car.h	538;"	d
PRM_MAX_SLIP_BIAS	src/interfaces/car.h	538;"	d
PRM_MAX_TQ_BIAS	export/include/car.h	537;"	d
PRM_MAX_TQ_BIAS	src/interfaces/car.h	537;"	d
PRM_MIN_TQ_BIAS	export/include/car.h	536;"	d
PRM_MIN_TQ_BIAS	src/interfaces/car.h	536;"	d
PRM_MODEL_AEROFLOW	export/include/car.h	599;"	d
PRM_MODEL_AEROFLOW	src/interfaces/car.h	599;"	d
PRM_MODEL_AERO_FACTOR	export/include/car.h	600;"	d
PRM_MODEL_AERO_FACTOR	src/interfaces/car.h	600;"	d
PRM_MODEL_TYRE_TEMPERATURE	export/include/car.h	601;"	d
PRM_MODEL_TYRE_TEMPERATURE	src/interfaces/car.h	601;"	d
PRM_MU	export/include/car.h	459;"	d
PRM_MU	src/interfaces/car.h	459;"	d
PRM_OPLOAD	export/include/car.h	473;"	d
PRM_OPLOAD	src/interfaces/car.h	473;"	d
PRM_OVERALLLEN	export/include/car.h	442;"	d
PRM_OVERALLLEN	src/interfaces/car.h	442;"	d
PRM_OVERALLWIDTH	export/include/car.h	443;"	d
PRM_OVERALLWIDTH	src/interfaces/car.h	443;"	d
PRM_PACKERS	export/include/car.h	479;"	d
PRM_PACKERS	src/interfaces/car.h	479;"	d
PRM_POWER	export/include/car.h	513;"	d
PRM_POWER	src/interfaces/car.h	513;"	d
PRM_PRESSURE	export/include/car.h	470;"	d
PRM_PRESSURE	src/interfaces/car.h	470;"	d
PRM_RATIO	export/include/car.h	519;"	d
PRM_RATIO	src/interfaces/car.h	519;"	d
PRM_RCL	export/include/car.h	499;"	d
PRM_RCL	src/interfaces/car.h	499;"	d
PRM_REVSLIM	export/include/car.h	505;"	d
PRM_REVSLIM	src/interfaces/car.h	505;"	d
PRM_REVSMAX	export/include/car.h	506;"	d
PRM_REVSMAX	src/interfaces/car.h	506;"	d
PRM_RFACTOR	export/include/car.h	468;"	d
PRM_RFACTOR	src/interfaces/car.h	468;"	d
PRM_RIDEHEIGHT	export/include/car.h	463;"	d
PRM_RIDEHEIGHT	src/interfaces/car.h	463;"	d
PRM_RIMDIAM	export/include/car.h	460;"	d
PRM_RIMDIAM	src/interfaces/car.h	460;"	d
PRM_ROLLCENTER	export/include/car.h	525;"	d
PRM_ROLLCENTER	src/interfaces/car.h	525;"	d
PRM_ROLLINGRESIST	export/include/car.h	464;"	d
PRM_ROLLINGRESIST	src/interfaces/car.h	464;"	d
PRM_RPM	export/include/car.h	508;"	d
PRM_RPM	src/interfaces/car.h	508;"	d
PRM_RRLWEIGHTREP	export/include/car.h	448;"	d
PRM_RRLWEIGHTREP	src/interfaces/car.h	448;"	d
PRM_SHADOW_TEXTURE	export/include/car.h	534;"	d
PRM_SHADOW_TEXTURE	src/interfaces/car.h	534;"	d
PRM_SHIFTTIME	export/include/car.h	523;"	d
PRM_SHIFTTIME	src/interfaces/car.h	523;"	d
PRM_SIZE	export/include/car.h	456;"	d
PRM_SIZE	src/interfaces/car.h	456;"	d
PRM_SLOWBUMP	export/include/car.h	480;"	d
PRM_SLOWBUMP	src/interfaces/car.h	480;"	d
PRM_SLOWREBOUND	export/include/car.h	481;"	d
PRM_SLOWREBOUND	src/interfaces/car.h	481;"	d
PRM_SPEEDO_DIGITAL	export/include/car.h	586;"	d
PRM_SPEEDO_DIGITAL	src/interfaces/car.h	586;"	d
PRM_SPEEDO_MAXANG	export/include/car.h	585;"	d
PRM_SPEEDO_MAXANG	src/interfaces/car.h	585;"	d
PRM_SPEEDO_MAXVAL	export/include/car.h	583;"	d
PRM_SPEEDO_MAXVAL	src/interfaces/car.h	583;"	d
PRM_SPEEDO_MINANG	export/include/car.h	584;"	d
PRM_SPEEDO_MINANG	src/interfaces/car.h	584;"	d
PRM_SPEEDO_MINVAL	export/include/car.h	582;"	d
PRM_SPEEDO_MINVAL	src/interfaces/car.h	582;"	d
PRM_SPEEDO_NDLXSZ	export/include/car.h	576;"	d
PRM_SPEEDO_NDLXSZ	src/interfaces/car.h	576;"	d
PRM_SPEEDO_NDLYSZ	export/include/car.h	577;"	d
PRM_SPEEDO_NDLYSZ	src/interfaces/car.h	577;"	d
PRM_SPEEDO_TEX	export/include/car.h	571;"	d
PRM_SPEEDO_TEX	src/interfaces/car.h	571;"	d
PRM_SPEEDO_XCENTER	export/include/car.h	578;"	d
PRM_SPEEDO_XCENTER	src/interfaces/car.h	578;"	d
PRM_SPEEDO_XDIGITCENTER	export/include/car.h	580;"	d
PRM_SPEEDO_XDIGITCENTER	src/interfaces/car.h	580;"	d
PRM_SPEEDO_XPOS	export/include/car.h	574;"	d
PRM_SPEEDO_XPOS	src/interfaces/car.h	574;"	d
PRM_SPEEDO_XSZ	export/include/car.h	572;"	d
PRM_SPEEDO_XSZ	src/interfaces/car.h	572;"	d
PRM_SPEEDO_YCENTER	export/include/car.h	579;"	d
PRM_SPEEDO_YCENTER	src/interfaces/car.h	579;"	d
PRM_SPEEDO_YDIGITCENTER	export/include/car.h	581;"	d
PRM_SPEEDO_YDIGITCENTER	src/interfaces/car.h	581;"	d
PRM_SPEEDO_YPOS	export/include/car.h	575;"	d
PRM_SPEEDO_YPOS	src/interfaces/car.h	575;"	d
PRM_SPEEDO_YSZ	export/include/car.h	573;"	d
PRM_SPEEDO_YSZ	src/interfaces/car.h	573;"	d
PRM_SPR	export/include/car.h	476;"	d
PRM_SPR	src/interfaces/car.h	476;"	d
PRM_STEERLOCK	export/include/car.h	489;"	d
PRM_STEERLOCK	src/interfaces/car.h	489;"	d
PRM_STEERSPD	export/include/car.h	490;"	d
PRM_STEERSPD	src/interfaces/car.h	490;"	d
PRM_SUSPCOURSE	export/include/car.h	477;"	d
PRM_SUSPCOURSE	src/interfaces/car.h	477;"	d
PRM_TACHO_MAXANG	export/include/car.h	569;"	d
PRM_TACHO_MAXANG	src/interfaces/car.h	569;"	d
PRM_TACHO_MAXVAL	export/include/car.h	567;"	d
PRM_TACHO_MAXVAL	src/interfaces/car.h	567;"	d
PRM_TACHO_MINANG	export/include/car.h	568;"	d
PRM_TACHO_MINANG	src/interfaces/car.h	568;"	d
PRM_TACHO_MINVAL	export/include/car.h	566;"	d
PRM_TACHO_MINVAL	src/interfaces/car.h	566;"	d
PRM_TACHO_NDLXSZ	export/include/car.h	560;"	d
PRM_TACHO_NDLXSZ	src/interfaces/car.h	560;"	d
PRM_TACHO_NDLYSZ	export/include/car.h	561;"	d
PRM_TACHO_NDLYSZ	src/interfaces/car.h	561;"	d
PRM_TACHO_TEX	export/include/car.h	555;"	d
PRM_TACHO_TEX	src/interfaces/car.h	555;"	d
PRM_TACHO_XCENTER	export/include/car.h	562;"	d
PRM_TACHO_XCENTER	src/interfaces/car.h	562;"	d
PRM_TACHO_XDIGITCENTER	export/include/car.h	564;"	d
PRM_TACHO_XDIGITCENTER	src/interfaces/car.h	564;"	d
PRM_TACHO_XPOS	export/include/car.h	558;"	d
PRM_TACHO_XPOS	src/interfaces/car.h	558;"	d
PRM_TACHO_XSZ	export/include/car.h	556;"	d
PRM_TACHO_XSZ	src/interfaces/car.h	556;"	d
PRM_TACHO_YCENTER	export/include/car.h	563;"	d
PRM_TACHO_YCENTER	src/interfaces/car.h	563;"	d
PRM_TACHO_YDIGITCENTER	export/include/car.h	565;"	d
PRM_TACHO_YDIGITCENTER	src/interfaces/car.h	565;"	d
PRM_TACHO_YPOS	export/include/car.h	559;"	d
PRM_TACHO_YPOS	src/interfaces/car.h	559;"	d
PRM_TACHO_YSZ	export/include/car.h	557;"	d
PRM_TACHO_YSZ	src/interfaces/car.h	557;"	d
PRM_TANK	export/include/car.h	450;"	d
PRM_TANK	src/interfaces/car.h	450;"	d
PRM_THRESHOLD	export/include/car.h	528;"	d
PRM_THRESHOLD	src/interfaces/car.h	528;"	d
PRM_TICKOVER	export/include/car.h	507;"	d
PRM_TICKOVER	src/interfaces/car.h	507;"	d
PRM_TIRERATIO	export/include/car.h	462;"	d
PRM_TIRERATIO	src/interfaces/car.h	462;"	d
PRM_TIREWIDTH	export/include/car.h	461;"	d
PRM_TIREWIDTH	src/interfaces/car.h	461;"	d
PRM_TOE	export/include/car.h	465;"	d
PRM_TOE	src/interfaces/car.h	465;"	d
PRM_TQ	export/include/car.h	509;"	d
PRM_TQ	src/interfaces/car.h	509;"	d
PRM_TURBO	export/include/car.h	514;"	d
PRM_TURBO	src/interfaces/car.h	514;"	d
PRM_TURBO_FACTOR	export/include/car.h	516;"	d
PRM_TURBO_FACTOR	src/interfaces/car.h	516;"	d
PRM_TURBO_LAG	export/include/car.h	517;"	d
PRM_TURBO_LAG	src/interfaces/car.h	517;"	d
PRM_TURBO_RPM	export/include/car.h	515;"	d
PRM_TURBO_RPM	src/interfaces/car.h	515;"	d
PRM_TYPE	export/include/car.h	455;"	d
PRM_TYPE	src/interfaces/car.h	455;"	d
PRM_VISCOSITY_FACTOR	export/include/car.h	540;"	d
PRM_VISCOSITY_FACTOR	src/interfaces/car.h	540;"	d
PRM_WHEELSON	export/include/car.h	530;"	d
PRM_WHEELSON	src/interfaces/car.h	530;"	d
PRM_WHEEL_TEXTURE	export/include/car.h	533;"	d
PRM_WHEEL_TEXTURE	src/interfaces/car.h	533;"	d
PRM_WIDTH	export/include/car.h	441;"	d
PRM_WIDTH	src/interfaces/car.h	441;"	d
PRM_WINGANGLE	export/include/car.h	502;"	d
PRM_WINGANGLE	src/interfaces/car.h	502;"	d
PRM_WINGAREA	export/include/car.h	501;"	d
PRM_WINGAREA	src/interfaces/car.h	501;"	d
PRM_XPOS	export/include/car.h	485;"	d
PRM_XPOS	src/interfaces/car.h	485;"	d
PRM_YPOS	export/include/car.h	486;"	d
PRM_YPOS	src/interfaces/car.h	486;"	d
PRM_ZPOS	export/include/car.h	487;"	d
PRM_ZPOS	src/interfaces/car.h	487;"	d
PROGRAM	src/linux/Makefile	/^PROGRAM = torcs-bin$/;"	m
PROGRAM	src/tools/accc/Makefile	/^PROGRAM		= accc-bin$/;"	m
PROGRAM	src/tools/nfs2ac/Makefile	/^PROGRAM		= nfs2ac-bin$/;"	m
PROGRAM	src/tools/nfsperf/Makefile	/^PROGRAM		= nfsperf-bin$/;"	m
PROGRAM	src/tools/texmapper/Makefile	/^PROGRAM   	= texmapper-bin$/;"	m
PROGRAM	src/tools/trackgen/Makefile	/^PROGRAM      	= trackgen-bin$/;"	m
PROLOG_HANDLER	src/libs/txml/xmlrole.c	/^typedef int PROLOG_HANDLER(struct prolog_state *state,$/;"	t	file:
PROLOG_STATE	src/libs/txml/xmlrole.h	/^} PROLOG_STATE;$/;"	t	typeref:struct:prolog_state
PUSH	src/drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon123
PUSH	src/drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon98
PUSH	src/drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon114
PUSH	src/drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon139
PUSH	src/drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon132
PUSH	src/drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon105
P_NUM	src/libs/tgf/params.cpp	55;"	d	file:
P_STR	src/libs/tgf/params.cpp	56;"	d	file:
PairList	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^typedef map<ObjPair, Response, less<ObjPair> > PairList;$/;"	t
ParamAbs	src/drivers/human/human.h	/^	int		ParamAbs;$/;"	m	struct:HumanContext
ParamAsr	src/drivers/human/human.h	/^	int		ParamAsr;$/;"	m	struct:HumanContext
ParamFileName	src/tools/texmapper/maintexmapper.cpp	/^char	*ParamFileName = NULL;$/;"	v
ParamHandle	src/tools/texmapper/maintexmapper.cpp	/^void	*ParamHandle = NULL;$/;"	v
ParamNames	src/drivers/inferno2/inferno2.cpp	/^static char	ParamNames[256];$/;"	v	file:
ParametricDistribution	export/include/learning/Distribution.h	/^	ParametricDistribution() {}$/;"	f	class:ParametricDistribution
ParametricDistribution	export/include/learning/Distribution.h	/^class ParametricDistribution : public Distribution {$/;"	c
ParametricDistribution	src/libs/learning/Distribution.h	/^	ParametricDistribution() {}$/;"	f	class:ParametricDistribution
ParametricDistribution	src/libs/learning/Distribution.h	/^class ParametricDistribution : public Distribution {$/;"	c
ParametricLine	src/drivers/olethros/geometry.cpp	/^ParametricLine::ParametricLine (Vector* A, Vector* B)$/;"	f	class:ParametricLine
ParametricLine	src/drivers/olethros/geometry.h	/^class ParametricLine$/;"	c
ParametricSphere	src/drivers/olethros/geometry.cpp	/^ParametricSphere::ParametricSphere(Vector* C, float r)$/;"	f	class:ParametricSphere
ParametricSphere	src/drivers/olethros/geometry.cpp	/^ParametricSphere::ParametricSphere(int N)$/;"	f	class:ParametricSphere
ParametricSphere	src/drivers/olethros/geometry.h	/^class ParametricSphere$/;"	c
Parser	src/libs/txml/xmlparse.c	/^} Parser;$/;"	t	typeref:struct:__anon82	file:
PartnerList	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^typedef vector<DtObjectRef> PartnerList;$/;"	t	file:
PathSeg	src/drivers/berniw/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	src/drivers/berniw2/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	src/drivers/berniw3/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	src/drivers/inferno/pathfinder.h	/^		PathSeg(int segments, int tracksegments) {$/;"	f	class:PathSeg
PathSeg	src/drivers/inferno/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	src/drivers/lliaw/pathfinder.h	/^		PathSeg(int segments, int tracksegments) {$/;"	f	class:PathSeg
PathSeg	src/drivers/lliaw/pathfinder.h	/^class PathSeg$/;"	c
PathSeg	src/drivers/tita/pathfinder.h	/^		PathSeg(int segments, int tracksegments) {$/;"	f	class:PathSeg
PathSeg	src/drivers/tita/pathfinder.h	/^class PathSeg$/;"	c
PathSegOpt	src/drivers/inferno/pathfinder.h	/^		PathSegOpt(int segments) {$/;"	f	class:PathSegOpt
PathSegOpt	src/drivers/inferno/pathfinder.h	/^class PathSegOpt$/;"	c
PathSegOpt	src/drivers/lliaw/pathfinder.h	/^		PathSegOpt(int segments) {$/;"	f	class:PathSegOpt
PathSegOpt	src/drivers/lliaw/pathfinder.h	/^class PathSegOpt$/;"	c
PathSegOpt	src/drivers/tita/pathfinder.h	/^		PathSegOpt(int segments) {$/;"	f	class:PathSegOpt
PathSegOpt	src/drivers/tita/pathfinder.h	/^class PathSegOpt$/;"	c
PathSegPit	src/drivers/inferno/pathfinder.h	/^		PathSegPit(int pitsegments, int segments, int start, int end, PathSegOpt* p) :$/;"	f	class:PathSegPit
PathSegPit	src/drivers/inferno/pathfinder.h	/^class PathSegPit$/;"	c
PathSegPit	src/drivers/lliaw/pathfinder.h	/^		PathSegPit(int pitsegments, int segments, int start, int end, PathSegOpt* p) :$/;"	f	class:PathSegPit
PathSegPit	src/drivers/lliaw/pathfinder.h	/^class PathSegPit$/;"	c
PathSegPit	src/drivers/tita/pathfinder.h	/^		PathSegPit(int pitsegments, int segments, int start, int end, PathSegOpt* p) :$/;"	f	class:PathSegPit
PathSegPit	src/drivers/tita/pathfinder.h	/^class PathSegPit$/;"	c
Pathfinder	src/drivers/berniw/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	src/drivers/berniw/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	src/drivers/berniw2/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	src/drivers/berniw2/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	src/drivers/berniw3/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	src/drivers/berniw3/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	src/drivers/inferno/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	src/drivers/inferno/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	src/drivers/lliaw/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	src/drivers/lliaw/pathfinder.h	/^class Pathfinder$/;"	c
Pathfinder	src/drivers/tita/pathfinder.cpp	/^Pathfinder::Pathfinder(TrackDesc* itrack, tCarElt* car, tSituation *s)$/;"	f	class:Pathfinder
Pathfinder	src/drivers/tita/pathfinder.h	/^class Pathfinder$/;"	c
Paused	src/modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
PickDrvCarLabelId	src/libs/racescreens/driverselect.cpp	/^static int		PickDrvCarLabelId;$/;"	v	file:
PickDrvCategoryLabelId	src/libs/racescreens/driverselect.cpp	/^static int		PickDrvCategoryLabelId;$/;"	v	file:
PickDrvNameLabelId	src/libs/racescreens/driverselect.cpp	/^static int		PickDrvNameLabelId;$/;"	v	file:
Pit	src/drivers/bt/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:Pit
Pit	src/drivers/bt/pit.h	/^class Pit {$/;"	c
Pit	src/drivers/damned/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:Pit
Pit	src/drivers/damned/pit.h	/^class Pit {$/;"	c
Pit	src/drivers/olethros/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:olethros::Pit
Pit	src/drivers/olethros/pit.h	/^class Pit {$/;"	c	namespace:olethros
Pit	src/drivers/sparkle/pit.cpp	/^Pit::Pit(tSituation *s, Driver *driver)$/;"	f	class:Pit
Pit	src/drivers/sparkle/pit.h	/^class Pit {$/;"	c
PitState	src/drivers/inferno2/inferno2.cpp	/^int   PitState[10]  = {0};$/;"	v
PitState	src/drivers/olethros/pit.h	/^enum PitState {$/;"	g	namespace:olethros
PitsAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *PitsAnchor = 0;$/;"	v
PitsEditId	src/libs/confscreens/driverconfig.cpp	/^static int PitsEditId;$/;"	v	file:
PitsId	src/libs/racescreens/trackselect.cpp	/^static int PitsId;$/;"	v	file:
PlayerInfo	src/libs/confscreens/driverconfig.cpp	/^typedef struct PlayerInfo$/;"	s	file:
PlayersInfo	src/libs/confscreens/driverconfig.cpp	/^static tPlayerInfo PlayersInfo[NB_DRV];$/;"	v	file:
Playing	src/modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
PlibSoundInterface	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^PlibSoundInterface::PlibSoundInterface(float sampling_rate, int n_channels) : SoundInterface (sampling_rate, n_channels)$/;"	f	class:PlibSoundInterface
PlibSoundInterface	src/modules/graphic/ssggraph/SoundInterface.h	/^class PlibSoundInterface : public SoundInterface {$/;"	c
PlibTorcsSound	src/modules/graphic/ssggraph/TorcsSound.cpp	/^PlibTorcsSound::PlibTorcsSound(slScheduler* sched,$/;"	f	class:PlibTorcsSound
PlibTorcsSound	src/modules/graphic/ssggraph/TorcsSound.h	/^class PlibTorcsSound : public TorcsSound {$/;"	c
PnGain	src/drivers/inferno2/inferno2.cpp	/^static tdble PnGain[10]    = {0.02f};$/;"	v	file:
Point	export/include/3D/Point.h	/^  Point() {}$/;"	f	class:Point
Point	export/include/3D/Point.h	/^  Point(Scalar x, Scalar y, Scalar z) : Vector(x, y, z) {}$/;"	f	class:Point
Point	export/include/3D/Point.h	/^  Point(const double p[3]) : Vector(p) {}$/;"	f	class:Point
Point	export/include/3D/Point.h	/^  Point(const float p[3]) : Vector(p) {} $/;"	f	class:Point
Point	export/include/3D/Point.h	/^class Point : public Vector {$/;"	c
Point	src/drivers/olethros/TrackData.h	/^    Point()$/;"	f	class:Point
Point	src/drivers/olethros/TrackData.h	/^    Point(float x, float y, float z  = 0.0)$/;"	f	class:Point
Point	src/drivers/olethros/TrackData.h	/^class Point$/;"	c
Point	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point() {}$/;"	f	class:Point
Point	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point(Scalar x, Scalar y, Scalar z) : Vector(x, y, z) {}$/;"	f	class:Point
Point	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point(const double p[3]) : Vector(p) {}$/;"	f	class:Point
Point	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^  Point(const float p[3]) : Vector(p) {} $/;"	f	class:Point
Point	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^class Point : public Vector {$/;"	c
PointBuf	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<Point> PointBuf;$/;"	t	file:
PointCoords	src/drivers/olethros/geometry.cpp	/^void ParametricLine::PointCoords (float t, Vector* X)$/;"	f	class:ParametricLine
PolyList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef vector<const Polytope *> PolyList;$/;"	t	file:
Polygon	src/modules/simu/simuv2/SOLID-2.0/src/Polygon.h	/^  Polygon(const VertexBase& b, int c, const unsigned int v[]) : $/;"	f	class:Polygon
Polygon	src/modules/simu/simuv2/SOLID-2.0/src/Polygon.h	/^class Polygon : public Polytope {$/;"	c
Polyhedron	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Polyhedron::Polyhedron(const VertexBase& b, int c, const unsigned int v[]) :$/;"	f	class:Polyhedron
Polyhedron	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	/^class Polyhedron : public Polytope {$/;"	c
Polytope	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  Polytope(const VertexBase& b, int c, const unsigned int v[]) : $/;"	f	class:Polytope
Polytope	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^class Polytope : public Convex {$/;"	c
PopItem	src/libs/learning/List.cpp	/^int PopItem(LIST* list) {$/;"	f
PreA	src/modules/graphic/ssggraph/grcam.cpp	/^    tdble PreA;$/;"	m	class:cGrCarCamBehind	file:
PreA	src/modules/graphic/ssggraph/grcam.cpp	/^    tdble PreA;$/;"	m	class:cGrCarCamBehind2	file:
PrefHdle	src/drivers/human/pref.cpp	/^void	*PrefHdle;$/;"	v
PrefHdle	src/libs/confscreens/controlconfig.cpp	/^static void	*PrefHdle = NULL;$/;"	v	file:
PrefHdle	src/libs/confscreens/driverconfig.cpp	/^static void	*PrefHdle = NULL;$/;"	v	file:
PrintSegments	src/drivers/olethros/TrackData.h	/^    void PrintSegments()$/;"	f	class:SegmentList
Processor	src/libs/txml/xmlparse.c	/^typedef enum XML_Error Processor(XML_Parser parser,$/;"	t	typeref:enum:Processor	file:
ProfileInstance	export/include/tgf.h	/^class ProfileInstance {$/;"	c
ProfileInstance	src/libs/tgf/profiler.cpp	/^ProfileInstance::ProfileInstance(const char * pname) {$/;"	f	class:ProfileInstance
ProfileInstance	src/libs/tgf/tgf.h	/^class ProfileInstance {$/;"	c
Profiler	export/include/tgf.h	/^class Profiler {$/;"	c
Profiler	src/libs/tgf/profiler.cpp	/^Profiler::Profiler() {$/;"	f	class:Profiler
Profiler	src/libs/tgf/tgf.h	/^class Profiler {$/;"	c
PropagateUpdateBackwards	src/drivers/olethros/learn.cpp	/^void SegLearn::PropagateUpdateBackwards (tTrackSeg* pseg, float d, float beta, float max_length)$/;"	f	class:SegLearn
ProxList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^typedef set<Encounter> ProxList;$/;"	t	file:
Q	export/include/learning/policy.h	/^	real** Q; \/\/\/< state-action evaluation$/;"	m	class:DiscretePolicy
Q	src/drivers/olethros/geometry.h	/^	Vector* Q; \/\/ direction$/;"	m	class:ParametricLine
Q	src/libs/learning/policy.h	/^	real** Q; \/\/\/< state-action evaluation$/;"	m	class:DiscretePolicy
QLearning	export/include/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
QLearning	src/libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
QSOUND_CHAR_H	src/modules/graphic/ssggraph/QSoundChar.h	2;"	d
QSoundChar	src/modules/graphic/ssggraph/QSoundChar.h	/^}QSoundChar;$/;"	t	typeref:struct:QSoundChar_
QSoundChar_	src/modules/graphic/ssggraph/QSoundChar.h	/^typedef struct QSoundChar_ $/;"	s
Quaternion	export/include/3D/Quaternion.h	/^  Quaternion() {}$/;"	f	class:Quaternion
Quaternion	export/include/3D/Quaternion.h	/^  Quaternion(Scalar x, Scalar y, Scalar z, Scalar w) : Tuple4(x, y, z, w) {}$/;"	f	class:Quaternion
Quaternion	export/include/3D/Quaternion.h	/^  Quaternion(Scalar yaw, Scalar pitch, Scalar roll) { $/;"	f	class:Quaternion
Quaternion	export/include/3D/Quaternion.h	/^  Quaternion(const Vector& axis, Scalar angle) { setRotation(axis, angle); }$/;"	f	class:Quaternion
Quaternion	export/include/3D/Quaternion.h	/^  Quaternion(const double v[4]) : Tuple4(v) {}$/;"	f	class:Quaternion
Quaternion	export/include/3D/Quaternion.h	/^  Quaternion(const float v[4]) : Tuple4(v) {}$/;"	f	class:Quaternion
Quaternion	export/include/3D/Quaternion.h	/^class Quaternion : public Tuple4 {$/;"	c
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion() {}$/;"	f	class:Quaternion
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(Scalar x, Scalar y, Scalar z, Scalar w) : Tuple4(x, y, z, w) {}$/;"	f	class:Quaternion
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(Scalar yaw, Scalar pitch, Scalar roll) { $/;"	f	class:Quaternion
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(const Vector& axis, Scalar angle) { setRotation(axis, angle); }$/;"	f	class:Quaternion
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(const double v[4]) : Tuple4(v) {}$/;"	f	class:Quaternion
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  Quaternion(const float v[4]) : Tuple4(v) {}$/;"	f	class:Quaternion
Quaternion	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^class Quaternion : public Tuple4 {$/;"	c
QueueSoundMap	src/modules/graphic/ssggraph/SoundInterface.h	/^} QueueSoundMap;$/;"	t	typeref:struct:QueueSoundMap_
QueueSoundMap_	src/modules/graphic/ssggraph/SoundInterface.h	/^typedef struct QueueSoundMap_ {$/;"	s
QuitHookActivate	src/libs/raceengineclient/racemain.cpp	/^QuitHookActivate(void * \/* dummy *\/)$/;"	f	file:
QuitHookHandle	src/libs/raceengineclient/racemain.cpp	/^static void	*QuitHookHandle = 0;$/;"	v	file:
QuitHookInit	src/libs/raceengineclient/racemain.cpp	/^QuitHookInit(void)$/;"	f	file:
R	src/drivers/olethros/geometry.h	/^	Vector* R; \/\/ origin$/;"	m	class:ParametricLine
R	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
RACE_ENG_CFG	export/include/raceinit.h	29;"	d
RACE_ENG_CFG	src/libs/raceengineclient/raceinit.h	29;"	d
RAD2DEG	export/include/tgf.h	76;"	d
RAD2DEG	src/libs/tgf/tgf.h	76;"	d
RADS2RPM	export/include/tgf.h	74;"	d
RADS2RPM	src/libs/tgf/tgf.h	74;"	d
RADS_PER_DEG	export/include/3D/Basic.h	/^const Scalar RADS_PER_DEG =  0.01745329251994329547;$/;"	v
RADS_PER_DEG	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar RADS_PER_DEG =  0.01745329251994329547;$/;"	v
RBFConnection	export/include/learning/ANN.h	/^} RBFConnection;$/;"	t	typeref:struct:RBFConnection_
RBFConnection	src/libs/learning/ANN.h	/^} RBFConnection;$/;"	t	typeref:struct:RBFConnection_
RBFConnection_	export/include/learning/ANN.h	/^typedef struct RBFConnection_ {$/;"	s
RBFConnection_	src/libs/learning/ANN.h	/^typedef struct RBFConnection_ {$/;"	s
RCM_IDENT	export/include/raceman.h	36;"	d
RCM_IDENT	src/interfaces/raceman.h	36;"	d
RCM_MAX_DT_ROBOTS	export/include/raceman.h	57;"	d
RCM_MAX_DT_ROBOTS	src/interfaces/raceman.h	57;"	d
RCM_MAX_DT_SIMU	export/include/raceman.h	56;"	d
RCM_MAX_DT_SIMU	src/interfaces/raceman.h	56;"	d
REAL_H	export/include/learning/real.h	2;"	d
REAL_H	src/libs/learning/real.h	2;"	d
REAR	export/include/car.h	45;"	d
REAR	src/interfaces/car.h	45;"	d
REAR_LFT	export/include/car.h	43;"	d
REAR_LFT	src/interfaces/car.h	43;"	d
REAR_RGT	export/include/car.h	42;"	d
REAR_RGT	src/interfaces/car.h	42;"	d
REFERENCE_DISTANCE	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat REFERENCE_DISTANCE; \/\/\/< reference distance for sound$/;"	m	class:OpenalTorcsSound
REFS	src/tools/accc/ac3dload.cpp	49;"	d	file:
RELAXATION	export/include/robottools.h	40;"	d
RELAXATION	src/libs/robottools/robottools.h	40;"	d
RELAXATION2	export/include/robottools.h	32;"	d
RELAXATION2	src/libs/robottools/robottools.h	32;"	d
REPEAT1	src/libs/tgfclient/gui.cpp	49;"	d	file:
REPEAT2	src/libs/tgfclient/gui.cpp	50;"	d	file:
RESOLUTION	src/modules/graphic/ssggraph/grtrackmap.cpp	/^const float cGrTrackMap::RESOLUTION = 5.0;$/;"	m	class:cGrTrackMap	file:
RESOLUTION	src/modules/graphic/ssggraph/grtrackmap.h	/^		static const float RESOLUTION;$/;"	m	class:cGrTrackMap
RE_ATTR_BEST_LAP_TIME	export/include/raceman.h	332;"	d
RE_ATTR_BEST_LAP_TIME	src/interfaces/raceman.h	332;"	d
RE_ATTR_BOT_SPEED	export/include/raceman.h	335;"	d
RE_ATTR_BOT_SPEED	src/interfaces/raceman.h	335;"	d
RE_ATTR_CAR	export/include/raceman.h	328;"	d
RE_ATTR_CAR	src/interfaces/raceman.h	328;"	d
RE_ATTR_CUR_DRIVER	export/include/raceman.h	309;"	d
RE_ATTR_CUR_DRIVER	src/interfaces/raceman.h	309;"	d
RE_ATTR_CUR_RACE	export/include/raceman.h	307;"	d
RE_ATTR_CUR_RACE	src/interfaces/raceman.h	307;"	d
RE_ATTR_CUR_TRACK	export/include/raceman.h	308;"	d
RE_ATTR_CUR_TRACK	src/interfaces/raceman.h	308;"	d
RE_ATTR_DAMMAGES	export/include/raceman.h	336;"	d
RE_ATTR_DAMMAGES	src/interfaces/raceman.h	336;"	d
RE_ATTR_DATE	export/include/raceman.h	303;"	d
RE_ATTR_DATE	src/interfaces/raceman.h	303;"	d
RE_ATTR_DLL_NAME	export/include/raceman.h	313;"	d
RE_ATTR_DLL_NAME	src/interfaces/raceman.h	313;"	d
RE_ATTR_IDX	export/include/raceman.h	330;"	d
RE_ATTR_IDX	src/interfaces/raceman.h	330;"	d
RE_ATTR_INDEX	export/include/raceman.h	314;"	d
RE_ATTR_INDEX	src/interfaces/raceman.h	314;"	d
RE_ATTR_LAPS	export/include/raceman.h	331;"	d
RE_ATTR_LAPS	src/interfaces/raceman.h	331;"	d
RE_ATTR_MODULE	export/include/raceman.h	329;"	d
RE_ATTR_MODULE	src/interfaces/raceman.h	329;"	d
RE_ATTR_NAME	export/include/raceman.h	327;"	d
RE_ATTR_NAME	src/interfaces/raceman.h	327;"	d
RE_ATTR_NB_PIT_STOPS	export/include/raceman.h	337;"	d
RE_ATTR_NB_PIT_STOPS	src/interfaces/raceman.h	337;"	d
RE_ATTR_POINTS	export/include/raceman.h	338;"	d
RE_ATTR_POINTS	src/interfaces/raceman.h	338;"	d
RE_ATTR_TIME	export/include/raceman.h	333;"	d
RE_ATTR_TIME	src/interfaces/raceman.h	333;"	d
RE_ATTR_TOP_SPEED	export/include/raceman.h	334;"	d
RE_ATTR_TOP_SPEED	src/interfaces/raceman.h	334;"	d
RE_ATTR_TYPE	export/include/raceman.h	304;"	d
RE_ATTR_TYPE	src/interfaces/raceman.h	304;"	d
RE_SECT_CURRENT	export/include/raceman.h	306;"	d
RE_SECT_CURRENT	src/interfaces/raceman.h	306;"	d
RE_SECT_DRIVER	export/include/raceman.h	312;"	d
RE_SECT_DRIVER	src/interfaces/raceman.h	312;"	d
RE_SECT_DRIVERS	export/include/raceman.h	311;"	d
RE_SECT_DRIVERS	src/interfaces/raceman.h	311;"	d
RE_SECT_FINAL	export/include/raceman.h	323;"	d
RE_SECT_FINAL	src/interfaces/raceman.h	323;"	d
RE_SECT_HEADER	export/include/raceman.h	302;"	d
RE_SECT_HEADER	src/interfaces/raceman.h	302;"	d
RE_SECT_QUALIF	export/include/raceman.h	321;"	d
RE_SECT_QUALIF	src/interfaces/raceman.h	321;"	d
RE_SECT_RANK	export/include/raceman.h	325;"	d
RE_SECT_RANK	src/interfaces/raceman.h	325;"	d
RE_SECT_RESULTS	export/include/raceman.h	318;"	d
RE_SECT_RESULTS	src/interfaces/raceman.h	318;"	d
RE_SECT_STANDINGS	export/include/raceman.h	316;"	d
RE_SECT_STANDINGS	src/interfaces/raceman.h	316;"	d
RE_SECT_STARTINGGRID	export/include/raceman.h	319;"	d
RE_SECT_STARTINGGRID	src/interfaces/raceman.h	319;"	d
RE_STATE_CONFIG	export/include/raceman.h	101;"	d
RE_STATE_CONFIG	src/interfaces/raceman.h	101;"	d
RE_STATE_ERROR	export/include/raceman.h	111;"	d
RE_STATE_ERROR	src/interfaces/raceman.h	111;"	d
RE_STATE_EVENT_INIT	export/include/raceman.h	102;"	d
RE_STATE_EVENT_INIT	src/interfaces/raceman.h	102;"	d
RE_STATE_EVENT_SHUTDOWN	export/include/raceman.h	109;"	d
RE_STATE_EVENT_SHUTDOWN	src/interfaces/raceman.h	109;"	d
RE_STATE_EXIT	export/include/raceman.h	112;"	d
RE_STATE_EXIT	src/interfaces/raceman.h	112;"	d
RE_STATE_POST_RACE	export/include/raceman.h	108;"	d
RE_STATE_POST_RACE	src/interfaces/raceman.h	108;"	d
RE_STATE_PRE_RACE	export/include/raceman.h	103;"	d
RE_STATE_PRE_RACE	src/interfaces/raceman.h	103;"	d
RE_STATE_RACE	export/include/raceman.h	105;"	d
RE_STATE_RACE	src/interfaces/raceman.h	105;"	d
RE_STATE_RACE_END	export/include/raceman.h	107;"	d
RE_STATE_RACE_END	src/interfaces/raceman.h	107;"	d
RE_STATE_RACE_START	export/include/raceman.h	104;"	d
RE_STATE_RACE_START	src/interfaces/raceman.h	104;"	d
RE_STATE_RACE_STOP	export/include/raceman.h	106;"	d
RE_STATE_RACE_STOP	src/interfaces/raceman.h	106;"	d
RE_STATE_SHUTDOWN	export/include/raceman.h	110;"	d
RE_STATE_SHUTDOWN	src/interfaces/raceman.h	110;"	d
RIGHT	export/include/car.h	46;"	d
RIGHT	src/interfaces/car.h	46;"	d
RMAX	src/drivers/berniw/berniw.h	41;"	d
RMAX	src/drivers/berniw/trackdesc.h	45;"	d
RMAX	src/drivers/berniw2/berniw.h	41;"	d
RMAX	src/drivers/berniw2/trackdesc.h	45;"	d
RMAX	src/drivers/berniw3/berniw.h	41;"	d
RMAX	src/drivers/berniw3/trackdesc.h	45;"	d
RMAX	src/drivers/inferno/berniw.h	45;"	d
RMAX	src/drivers/inferno/trackdesc.h	46;"	d
RMAX	src/drivers/lliaw/berniw.h	45;"	d
RMAX	src/drivers/lliaw/trackdesc.h	46;"	d
RMAX	src/drivers/tita/berniw.h	45;"	d
RMAX	src/drivers/tita/trackdesc.h	46;"	d
RM_ACTIVGAMESCR	export/include/raceman.h	52;"	d
RM_ACTIVGAMESCR	src/interfaces/raceman.h	52;"	d
RM_ASYNC	export/include/raceman.h	43;"	d
RM_ASYNC	src/interfaces/raceman.h	43;"	d
RM_ATTR_ALLOW_RESTART	export/include/raceman.h	228;"	d
RM_ATTR_ALLOW_RESTART	src/interfaces/raceman.h	228;"	d
RM_ATTR_BGIMG	export/include/raceman.h	242;"	d
RM_ATTR_BGIMG	src/interfaces/raceman.h	242;"	d
RM_ATTR_CAR	export/include/raceman.h	235;"	d
RM_ATTR_CAR	src/interfaces/raceman.h	235;"	d
RM_ATTR_CARSPERPIT	export/include/raceman.h	269;"	d
RM_ATTR_CARSPERPIT	src/interfaces/raceman.h	269;"	d
RM_ATTR_CATEGORY	export/include/raceman.h	240;"	d
RM_ATTR_CATEGORY	src/interfaces/raceman.h	240;"	d
RM_ATTR_COLDIST	export/include/raceman.h	259;"	d
RM_ATTR_COLDIST	src/interfaces/raceman.h	259;"	d
RM_ATTR_COLOFFSET	export/include/raceman.h	260;"	d
RM_ATTR_COLOFFSET	src/interfaces/raceman.h	260;"	d
RM_ATTR_CUR_CONF	export/include/raceman.h	226;"	d
RM_ATTR_CUR_CONF	src/interfaces/raceman.h	226;"	d
RM_ATTR_DESCR	export/include/raceman.h	241;"	d
RM_ATTR_DESCR	src/interfaces/raceman.h	241;"	d
RM_ATTR_DISPMODE	export/include/raceman.h	250;"	d
RM_ATTR_DISPMODE	src/interfaces/raceman.h	250;"	d
RM_ATTR_DISPRES	export/include/raceman.h	251;"	d
RM_ATTR_DISPRES	src/interfaces/raceman.h	251;"	d
RM_ATTR_DISP_START_GRID	export/include/raceman.h	231;"	d
RM_ATTR_DISP_START_GRID	src/interfaces/raceman.h	231;"	d
RM_ATTR_DISTANCE	export/include/raceman.h	265;"	d
RM_ATTR_DISTANCE	src/interfaces/raceman.h	265;"	d
RM_ATTR_DRVNAME	export/include/raceman.h	239;"	d
RM_ATTR_DRVNAME	src/interfaces/raceman.h	239;"	d
RM_ATTR_FOCUSED	export/include/raceman.h	248;"	d
RM_ATTR_FOCUSED	src/interfaces/raceman.h	248;"	d
RM_ATTR_FOCUSEDIDX	export/include/raceman.h	249;"	d
RM_ATTR_FOCUSEDIDX	src/interfaces/raceman.h	249;"	d
RM_ATTR_IDX	export/include/raceman.h	247;"	d
RM_ATTR_IDX	src/interfaces/raceman.h	247;"	d
RM_ATTR_INITHEIGHT	export/include/raceman.h	262;"	d
RM_ATTR_INITHEIGHT	src/interfaces/raceman.h	262;"	d
RM_ATTR_INITSPEED	export/include/raceman.h	261;"	d
RM_ATTR_INITSPEED	src/interfaces/raceman.h	261;"	d
RM_ATTR_LAPS	export/include/raceman.h	266;"	d
RM_ATTR_LAPS	src/interfaces/raceman.h	266;"	d
RM_ATTR_MAXNUM	export/include/raceman.h	233;"	d
RM_ATTR_MAXNUM	src/interfaces/raceman.h	233;"	d
RM_ATTR_MAX_DMG	export/include/raceman.h	264;"	d
RM_ATTR_MAX_DMG	src/interfaces/raceman.h	264;"	d
RM_ATTR_MAX_DRV	export/include/raceman.h	234;"	d
RM_ATTR_MAX_DRV	src/interfaces/raceman.h	234;"	d
RM_ATTR_MODULE	export/include/raceman.h	246;"	d
RM_ATTR_MODULE	src/interfaces/raceman.h	246;"	d
RM_ATTR_MUST_COMPLETE	export/include/raceman.h	229;"	d
RM_ATTR_MUST_COMPLETE	src/interfaces/raceman.h	229;"	d
RM_ATTR_NAME	export/include/raceman.h	238;"	d
RM_ATTR_NAME	src/interfaces/raceman.h	238;"	d
RM_ATTR_POINTS	export/include/raceman.h	271;"	d
RM_ATTR_POINTS	src/interfaces/raceman.h	271;"	d
RM_ATTR_POLE	export/include/raceman.h	268;"	d
RM_ATTR_POLE	src/interfaces/raceman.h	268;"	d
RM_ATTR_PRIO	export/include/raceman.h	237;"	d
RM_ATTR_PRIO	src/interfaces/raceman.h	237;"	d
RM_ATTR_QUAL_LAPS	export/include/raceman.h	267;"	d
RM_ATTR_QUAL_LAPS	src/interfaces/raceman.h	267;"	d
RM_ATTR_RACE	export/include/raceman.h	256;"	d
RM_ATTR_RACE	src/interfaces/raceman.h	256;"	d
RM_ATTR_ROWS	export/include/raceman.h	257;"	d
RM_ATTR_ROWS	src/interfaces/raceman.h	257;"	d
RM_ATTR_RUNIMG	export/include/raceman.h	243;"	d
RM_ATTR_RUNIMG	src/interfaces/raceman.h	243;"	d
RM_ATTR_SHOW_RACE	export/include/raceman.h	263;"	d
RM_ATTR_SHOW_RACE	src/interfaces/raceman.h	263;"	d
RM_ATTR_SPLASH_MENU	export/include/raceman.h	230;"	d
RM_ATTR_SPLASH_MENU	src/interfaces/raceman.h	230;"	d
RM_ATTR_STARTIMG	export/include/raceman.h	244;"	d
RM_ATTR_STARTIMG	src/interfaces/raceman.h	244;"	d
RM_ATTR_START_ORDER	export/include/raceman.h	227;"	d
RM_ATTR_START_ORDER	src/interfaces/raceman.h	227;"	d
RM_ATTR_TIMESTEP	export/include/raceman.h	253;"	d
RM_ATTR_TIMESTEP	src/interfaces/raceman.h	253;"	d
RM_ATTR_TOSTART	export/include/raceman.h	258;"	d
RM_ATTR_TOSTART	src/interfaces/raceman.h	258;"	d
RM_ATTR_TYPE	export/include/raceman.h	255;"	d
RM_ATTR_TYPE	src/interfaces/raceman.h	255;"	d
RM_ATT_CAPTURE_ENABLE	export/include/raceman.h	296;"	d
RM_ATT_CAPTURE_ENABLE	src/interfaces/raceman.h	296;"	d
RM_ATT_CAPTURE_FPS	export/include/raceman.h	297;"	d
RM_ATT_CAPTURE_FPS	src/interfaces/raceman.h	297;"	d
RM_ATT_CAPTURE_OUT_DIR	export/include/raceman.h	298;"	d
RM_ATT_CAPTURE_OUT_DIR	src/interfaces/raceman.h	298;"	d
RM_CAR_STATE_BROKEN	export/include/car.h	212;"	d
RM_CAR_STATE_BROKEN	src/interfaces/car.h	212;"	d
RM_CAR_STATE_DNF	export/include/car.h	206;"	d
RM_CAR_STATE_DNF	src/interfaces/car.h	206;"	d
RM_CAR_STATE_ELIMINATED	export/include/car.h	214;"	d
RM_CAR_STATE_ELIMINATED	src/interfaces/car.h	214;"	d
RM_CAR_STATE_FINISH	export/include/car.h	204;"	d
RM_CAR_STATE_FINISH	src/interfaces/car.h	204;"	d
RM_CAR_STATE_NO_SIMU	export/include/car.h	211;"	d
RM_CAR_STATE_NO_SIMU	src/interfaces/car.h	211;"	d
RM_CAR_STATE_OUT	export/include/car.h	210;"	d
RM_CAR_STATE_OUT	src/interfaces/car.h	210;"	d
RM_CAR_STATE_OUTOFGAS	export/include/car.h	213;"	d
RM_CAR_STATE_OUTOFGAS	src/interfaces/car.h	213;"	d
RM_CAR_STATE_PIT	export/include/car.h	205;"	d
RM_CAR_STATE_PIT	src/interfaces/car.h	205;"	d
RM_CAR_STATE_PULLDN	export/include/car.h	209;"	d
RM_CAR_STATE_PULLDN	src/interfaces/car.h	209;"	d
RM_CAR_STATE_PULLSIDE	export/include/car.h	208;"	d
RM_CAR_STATE_PULLSIDE	src/interfaces/car.h	208;"	d
RM_CAR_STATE_PULLUP	export/include/car.h	207;"	d
RM_CAR_STATE_PULLUP	src/interfaces/car.h	207;"	d
RM_CAR_STATE_SIMU_NO_MOVE	export/include/car.h	215;"	d
RM_CAR_STATE_SIMU_NO_MOVE	src/interfaces/car.h	215;"	d
RM_CMD_NONE	export/include/car.h	345;"	d
RM_CMD_NONE	src/interfaces/car.h	345;"	d
RM_CMD_PIT_ASKED	export/include/car.h	346;"	d
RM_CMD_PIT_ASKED	src/interfaces/car.h	346;"	d
RM_CONF_DISP_MODE	export/include/confscreens.h	56;"	d
RM_CONF_DISP_MODE	export/include/racescreens.h	56;"	d
RM_CONF_DISP_MODE	src/libs/confscreens/confscreens.h	56;"	d
RM_CONF_DISP_MODE	src/libs/racescreens/racescreens.h	56;"	d
RM_CONF_RACE_LEN	export/include/confscreens.h	55;"	d
RM_CONF_RACE_LEN	export/include/racescreens.h	55;"	d
RM_CONF_RACE_LEN	src/libs/confscreens/confscreens.h	55;"	d
RM_CONF_RACE_LEN	src/libs/racescreens/racescreens.h	55;"	d
RM_CONTINUE_RACE	export/include/raceman.h	46;"	d
RM_CONTINUE_RACE	src/interfaces/raceman.h	46;"	d
RM_DISP_MODE_CAPTURE	export/include/raceman.h	147;"	d
RM_DISP_MODE_CAPTURE	src/interfaces/raceman.h	147;"	d
RM_DISP_MODE_NONE	export/include/raceman.h	148;"	d
RM_DISP_MODE_NONE	src/interfaces/raceman.h	148;"	d
RM_DISP_MODE_NORMAL	export/include/raceman.h	146;"	d
RM_DISP_MODE_NORMAL	src/interfaces/raceman.h	146;"	d
RM_DRV_HUMAN	export/include/car.h	123;"	d
RM_DRV_HUMAN	src/interfaces/car.h	123;"	d
RM_DRV_ROBOT	export/include/car.h	124;"	d
RM_DRV_ROBOT	src/interfaces/car.h	124;"	d
RM_END_RACE	export/include/raceman.h	45;"	d
RM_END_RACE	src/interfaces/raceman.h	45;"	d
RM_LIGHT_HEAD1	export/include/car.h	351;"	d
RM_LIGHT_HEAD1	src/interfaces/car.h	351;"	d
RM_LIGHT_HEAD2	export/include/car.h	352;"	d
RM_LIGHT_HEAD2	src/interfaces/car.h	352;"	d
RM_MSG_LEN	export/include/car.h	348;"	d
RM_MSG_LEN	src/interfaces/car.h	348;"	d
RM_NEXT_EVENT	export/include/raceman.h	50;"	d
RM_NEXT_EVENT	src/interfaces/raceman.h	50;"	d
RM_NEXT_RACE	export/include/raceman.h	49;"	d
RM_NEXT_RACE	src/interfaces/raceman.h	49;"	d
RM_NEXT_STEP	export/include/raceman.h	48;"	d
RM_NEXT_STEP	src/interfaces/raceman.h	48;"	d
RM_PENALTY_DRIVETHROUGH	export/include/car.h	127;"	d
RM_PENALTY_DRIVETHROUGH	src/interfaces/car.h	127;"	d
RM_PENALTY_STOPANDGO	export/include/car.h	128;"	d
RM_PENALTY_STOPANDGO	src/interfaces/car.h	128;"	d
RM_PIT_REPAIR	export/include/car.h	371;"	d
RM_PIT_REPAIR	src/interfaces/car.h	371;"	d
RM_PIT_STOPANDGO	export/include/car.h	372;"	d
RM_PIT_STOPANDGO	src/interfaces/car.h	372;"	d
RM_PNST_DRIVETHROUGH	export/include/raceman.h	172;"	d
RM_PNST_DRIVETHROUGH	src/interfaces/raceman.h	172;"	d
RM_PNST_SPD	export/include/raceman.h	175;"	d
RM_PNST_SPD	src/interfaces/raceman.h	175;"	d
RM_PNST_STNGO	export/include/raceman.h	176;"	d
RM_PNST_STNGO	src/interfaces/raceman.h	176;"	d
RM_PNST_STOPANDGO	export/include/raceman.h	173;"	d
RM_PNST_STOPANDGO	src/interfaces/raceman.h	173;"	d
RM_PNST_STOPANDGO_OK	export/include/raceman.h	174;"	d
RM_PNST_STOPANDGO_OK	src/interfaces/raceman.h	174;"	d
RM_QUIT	export/include/raceman.h	53;"	d
RM_QUIT	src/interfaces/raceman.h	53;"	d
RM_RACE_ENDED	export/include/raceman.h	66;"	d
RM_RACE_ENDED	src/interfaces/raceman.h	66;"	d
RM_RACE_FINISHING	export/include/raceman.h	65;"	d
RM_RACE_FINISHING	src/interfaces/raceman.h	65;"	d
RM_RACE_PAUSED	export/include/raceman.h	69;"	d
RM_RACE_PAUSED	src/interfaces/raceman.h	69;"	d
RM_RACE_PRESTART	export/include/raceman.h	68;"	d
RM_RACE_PRESTART	src/interfaces/raceman.h	68;"	d
RM_RACE_RUNNING	export/include/raceman.h	64;"	d
RM_RACE_RUNNING	src/interfaces/raceman.h	64;"	d
RM_RACE_STARTING	export/include/raceman.h	67;"	d
RM_RACE_STARTING	src/interfaces/raceman.h	67;"	d
RM_SECT_CONF	export/include/raceman.h	220;"	d
RM_SECT_CONF	src/interfaces/raceman.h	220;"	d
RM_SECT_DRIVERS	export/include/raceman.h	216;"	d
RM_SECT_DRIVERS	src/interfaces/raceman.h	216;"	d
RM_SECT_DRIVERS_RACING	export/include/raceman.h	224;"	d
RM_SECT_DRIVERS_RACING	src/interfaces/raceman.h	224;"	d
RM_SECT_HEADER	export/include/raceman.h	215;"	d
RM_SECT_HEADER	src/interfaces/raceman.h	215;"	d
RM_SECT_MOVIE_CAPTURE	export/include/raceman.h	294;"	d
RM_SECT_MOVIE_CAPTURE	src/interfaces/raceman.h	294;"	d
RM_SECT_OPTIONS	export/include/raceman.h	221;"	d
RM_SECT_OPTIONS	src/interfaces/raceman.h	221;"	d
RM_SECT_POINTS	export/include/raceman.h	222;"	d
RM_SECT_POINTS	src/interfaces/raceman.h	222;"	d
RM_SECT_RACES	export/include/raceman.h	218;"	d
RM_SECT_RACES	src/interfaces/raceman.h	218;"	d
RM_SECT_STARTINGGRID	export/include/raceman.h	217;"	d
RM_SECT_STARTINGGRID	src/interfaces/raceman.h	217;"	d
RM_SECT_TRACKS	export/include/raceman.h	219;"	d
RM_SECT_TRACKS	src/interfaces/raceman.h	219;"	d
RM_SYNC	export/include/raceman.h	42;"	d
RM_SYNC	src/interfaces/raceman.h	42;"	d
RM_TYPE_PRACTICE	export/include/raceman.h	71;"	d
RM_TYPE_PRACTICE	src/interfaces/raceman.h	71;"	d
RM_TYPE_QUALIF	export/include/raceman.h	72;"	d
RM_TYPE_QUALIF	src/interfaces/raceman.h	72;"	d
RM_TYPE_RACE	export/include/raceman.h	73;"	d
RM_TYPE_RACE	src/interfaces/raceman.h	73;"	d
RM_VAL_CONFDISPMODE	export/include/raceman.h	277;"	d
RM_VAL_CONFDISPMODE	src/interfaces/raceman.h	277;"	d
RM_VAL_CONFRACELEN	export/include/raceman.h	276;"	d
RM_VAL_CONFRACELEN	src/interfaces/raceman.h	276;"	d
RM_VAL_DRVSEL	export/include/raceman.h	274;"	d
RM_VAL_DRVSEL	src/interfaces/raceman.h	274;"	d
RM_VAL_DRV_LIST_ORDER	export/include/raceman.h	279;"	d
RM_VAL_DRV_LIST_ORDER	src/interfaces/raceman.h	279;"	d
RM_VAL_INVISIBLE	export/include/raceman.h	291;"	d
RM_VAL_INVISIBLE	src/interfaces/raceman.h	291;"	d
RM_VAL_LAST_RACE_ORDER	export/include/raceman.h	280;"	d
RM_VAL_LAST_RACE_ORDER	src/interfaces/raceman.h	280;"	d
RM_VAL_LAST_RACE_RORDER	export/include/raceman.h	281;"	d
RM_VAL_LAST_RACE_RORDER	src/interfaces/raceman.h	281;"	d
RM_VAL_NO	export/include/raceman.h	288;"	d
RM_VAL_NO	src/interfaces/raceman.h	288;"	d
RM_VAL_PRACTICE	export/include/raceman.h	285;"	d
RM_VAL_PRACTICE	src/interfaces/raceman.h	285;"	d
RM_VAL_QUALIF	export/include/raceman.h	284;"	d
RM_VAL_QUALIF	src/interfaces/raceman.h	284;"	d
RM_VAL_RACE	export/include/raceman.h	283;"	d
RM_VAL_RACE	src/interfaces/raceman.h	283;"	d
RM_VAL_RACECONF	export/include/raceman.h	275;"	d
RM_VAL_RACECONF	src/interfaces/raceman.h	275;"	d
RM_VAL_TRACKSEL	export/include/raceman.h	273;"	d
RM_VAL_TRACKSEL	src/interfaces/raceman.h	273;"	d
RM_VAL_VISIBLE	export/include/raceman.h	290;"	d
RM_VAL_VISIBLE	src/interfaces/raceman.h	290;"	d
RM_VAL_YES	export/include/raceman.h	287;"	d
RM_VAL_YES	src/interfaces/raceman.h	287;"	d
ROBOT	src/drivers/berniw/1/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/10/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/2/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/3/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/4/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/5/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/6/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/7/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/8/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/9/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw/Makefile	/^ROBOT = berniw$/;"	m
ROBOT	src/drivers/berniw2/1/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/10/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/2/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/3/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/4/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/5/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/6/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/7/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/8/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/9/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw2/Makefile	/^ROBOT = berniw2$/;"	m
ROBOT	src/drivers/berniw3/1/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/10/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/2/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/3/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/4/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/5/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/6/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/7/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/8/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/9/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/berniw3/Makefile	/^ROBOT = berniw3$/;"	m
ROBOT	src/drivers/bt/0/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/0/practice/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/0/qualifying/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/0/race/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/1/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/1/practice/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/1/qualifying/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/1/race/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/2/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/3/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/4/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/5/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/6/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/7/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/8/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/9/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/bt/Makefile	/^ROBOT       = bt$/;"	m
ROBOT	src/drivers/damned/0/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/1/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/2/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/3/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/4/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/5/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/6/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/7/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/8/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/9/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/damned/Makefile	/^ROBOT       = damned$/;"	m
ROBOT	src/drivers/human/Makefile	/^ROBOT = human$/;"	m
ROBOT	src/drivers/human/tracks/dirt-2/Makefile	/^ROBOT = human$/;"	m
ROBOT	src/drivers/inferno/1/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/10/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/2/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/3/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/4/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/5/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/6/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/7/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/8/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/9/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno/Makefile	/^ROBOT = inferno$/;"	m
ROBOT	src/drivers/inferno2/Makefile	/^ROBOT     = inferno2$/;"	m
ROBOT	src/drivers/lliaw/1/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/10/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/2/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/3/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/4/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/5/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/6/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/7/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/8/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/9/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/lliaw/Makefile	/^ROBOT = lliaw$/;"	m
ROBOT	src/drivers/olethros/0/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/1/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/2/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/3/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/4/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/5/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/6/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/7/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/8/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/9/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/olethros/Makefile	/^ROBOT       = olethros$/;"	m
ROBOT	src/drivers/sparkle/0/Makefile	/^ROBOT       = sparkle$/;"	m
ROBOT	src/drivers/sparkle/Makefile	/^ROBOT       = sparkle$/;"	m
ROBOT	src/drivers/tita/1/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/10/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/2/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/3/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/4/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/5/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/6/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/7/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/8/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/9/Makefile	/^ROBOT = tita$/;"	m
ROBOT	src/drivers/tita/Makefile	/^ROBOT = tita$/;"	m
ROB_ATTR_AUTHOR	export/include/robot.h	89;"	d
ROB_ATTR_AUTHOR	src/interfaces/robot.h	89;"	d
ROB_ATTR_BLUE	export/include/robot.h	95;"	d
ROB_ATTR_BLUE	src/interfaces/robot.h	95;"	d
ROB_ATTR_CAR	export/include/robot.h	90;"	d
ROB_ATTR_CAR	src/interfaces/robot.h	90;"	d
ROB_ATTR_CATEGORY	export/include/robot.h	91;"	d
ROB_ATTR_CATEGORY	src/interfaces/robot.h	91;"	d
ROB_ATTR_DESC	export/include/robot.h	88;"	d
ROB_ATTR_DESC	src/interfaces/robot.h	88;"	d
ROB_ATTR_GREEN	export/include/robot.h	94;"	d
ROB_ATTR_GREEN	src/interfaces/robot.h	94;"	d
ROB_ATTR_LEVEL	export/include/robot.h	102;"	d
ROB_ATTR_LEVEL	src/interfaces/robot.h	102;"	d
ROB_ATTR_NAME	export/include/robot.h	86;"	d
ROB_ATTR_NAME	src/interfaces/robot.h	86;"	d
ROB_ATTR_RACENUM	export/include/robot.h	92;"	d
ROB_ATTR_RACENUM	src/interfaces/robot.h	92;"	d
ROB_ATTR_RED	export/include/robot.h	93;"	d
ROB_ATTR_RED	src/interfaces/robot.h	93;"	d
ROB_ATTR_TEAM	export/include/robot.h	87;"	d
ROB_ATTR_TEAM	src/interfaces/robot.h	87;"	d
ROB_ATTR_TYPE	export/include/robot.h	97;"	d
ROB_ATTR_TYPE	src/interfaces/robot.h	97;"	d
ROB_IDENT	export/include/robot.h	41;"	d
ROB_IDENT	src/interfaces/robot.h	41;"	d
ROB_LIST_INDEX	export/include/robot.h	84;"	d
ROB_LIST_INDEX	src/interfaces/robot.h	84;"	d
ROB_PIT_IM	export/include/robot.h	56;"	d
ROB_PIT_IM	src/interfaces/robot.h	56;"	d
ROB_PIT_MENU	export/include/robot.h	57;"	d
ROB_PIT_MENU	src/interfaces/robot.h	57;"	d
ROB_SECT_ROBOTS	export/include/robot.h	82;"	d
ROB_SECT_ROBOTS	src/interfaces/robot.h	82;"	d
ROB_VAL_AMATEUR	export/include/robot.h	105;"	d
ROB_VAL_AMATEUR	src/interfaces/robot.h	105;"	d
ROB_VAL_HUMAN	export/include/robot.h	99;"	d
ROB_VAL_HUMAN	src/interfaces/robot.h	99;"	d
ROB_VAL_PRO	export/include/robot.h	107;"	d
ROB_VAL_PRO	src/interfaces/robot.h	107;"	d
ROB_VAL_ROBOT	export/include/robot.h	100;"	d
ROB_VAL_ROBOT	src/interfaces/robot.h	100;"	d
ROB_VAL_ROOKIE	export/include/robot.h	104;"	d
ROB_VAL_ROOKIE	src/interfaces/robot.h	104;"	d
ROB_VAL_SEMI_PRO	export/include/robot.h	106;"	d
ROB_VAL_SEMI_PRO	src/interfaces/robot.h	106;"	d
ROLLOFF_FACTOR	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat ROLLOFF_FACTOR; \/\/\/< how fast we need to roll off$/;"	m	class:OpenalTorcsSound
ROTATION	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    ROTATION = 0x02,$/;"	e	enum:Transform::__anon7
ROUND_UP	src/libs/txml/xmlparse.c	51;"	d	file:
RPL_IDENT	export/include/replay.h	24;"	d
RPL_IDENT	src/interfaces/replay.h	24;"	d
RPM2RADS	export/include/tgf.h	75;"	d
RPM2RADS	src/libs/tgf/tgf.h	75;"	d
RREL	src/drivers/berniw/trackdesc.h	48;"	d
RREL	src/drivers/berniw2/trackdesc.h	48;"	d
RREL	src/drivers/berniw3/trackdesc.h	48;"	d
RREL	src/drivers/inferno/trackdesc.h	49;"	d
RREL	src/drivers/lliaw/trackdesc.h	49;"	d
RREL	src/drivers/tita/trackdesc.h	49;"	d
RUNTIMEDIR	setup_win32-data-from-CVS_generic.bat	/^set RUNTIMEDIR=%1$/;"	v
RUNTIMEDIR	setup_win32_generic.bat	/^set RUNTIMEDIR=%1$/;"	v
RaceNumEditId	src/libs/confscreens/driverconfig.cpp	/^static int RaceNumEditId;$/;"	v	file:
RacemanModLoaded	src/libs/client/mainmenu.cpp	/^tModList *RacemanModLoaded = (tModList*)NULL;$/;"	v
ReAddRacemanListButton	src/libs/raceengineclient/raceinit.cpp	/^void ReAddRacemanListButton(void *menuHandle)$/;"	f
ReBoardInfo	src/libs/raceengineclient/racegl.cpp	/^ReBoardInfo(void * \/* vboard *\/)$/;"	f	file:
ReDisplayResults	src/libs/raceengineclient/raceresults.cpp	/^ReDisplayResults(void)$/;"	f
ReDisplayStandings	src/libs/raceengineclient/raceresults.cpp	/^ReDisplayStandings(void)$/;"	f
ReEventInitResults	src/libs/raceengineclient/raceresults.cpp	/^ReEventInitResults(void)$/;"	f
ReEventShutdown	src/libs/raceengineclient/racemain.cpp	/^ReEventShutdown(void)$/;"	f
ReGetCurrentRaceName	src/libs/raceengineclient/raceinit.cpp	/^ReGetCurrentRaceName(void)$/;"	f
ReGetPrevRaceName	src/libs/raceengineclient/raceinit.cpp	/^ReGetPrevRaceName(void)$/;"	f
ReHookInit	src/libs/raceengineclient/racegl.cpp	/^ReHookInit(void)$/;"	f
ReHookShutdown	src/libs/raceengineclient/racegl.cpp	/^ReHookShutdown(void)$/;"	f
ReInfo	src/libs/raceengineclient/raceengine.cpp	/^tRmInfo	*ReInfo = 0;$/;"	v
ReInit	src/libs/raceengineclient/raceinit.cpp	/^ReInit(void)$/;"	f
ReInitCars	src/libs/raceengineclient/raceinit.cpp	/^ReInitCars(void)$/;"	f
ReInitResults	src/libs/raceengineclient/raceresults.cpp	/^ReInitResults(void)$/;"	f
ReInitTrack	src/libs/raceengineclient/raceinit.cpp	/^ReInitTrack(void)$/;"	f
ReManage	src/libs/raceengineclient/raceengine.cpp	/^ReManage(tCarElt *car)$/;"	f	file:
ReNewTrackMenu	src/libs/raceengineclient/racemanmenu.cpp	/^ReNewTrackMenu(void)$/;"	f
ReOneStep	src/libs/raceengineclient/raceengine.cpp	/^ReOneStep(double deltaTimeIncrement)$/;"	f	file:
RePostRace	src/libs/raceengineclient/racemain.cpp	/^RePostRace(void)$/;"	f
RePreRace	src/libs/raceengineclient/racemain.cpp	/^RePreRace(void)$/;"	f
ReRaceBigMsgSet	src/libs/raceengineclient/raceengine.cpp	/^ReRaceBigMsgSet(char *msg, double life)$/;"	f	file:
ReRaceCleanDrivers	src/libs/raceengineclient/raceinit.cpp	/^ReRaceCleanDrivers(void)$/;"	f
ReRaceCleanup	src/libs/raceengineclient/raceinit.cpp	/^ReRaceCleanup(void)$/;"	f
ReRaceEnd	src/libs/raceengineclient/racemain.cpp	/^ReRaceEnd(void)$/;"	f
ReRaceEventInit	src/libs/raceengineclient/racemain.cpp	/^ReRaceEventInit(void)$/;"	f
ReRaceModList	src/libs/raceengineclient/raceinit.cpp	/^tModList *ReRaceModList = 0;$/;"	v
ReRaceMsgSet	src/libs/raceengineclient/raceengine.cpp	/^ReRaceMsgSet(char *msg, double life)$/;"	f	file:
ReRaceMsgUpdate	src/libs/raceengineclient/raceengine.cpp	/^ReRaceMsgUpdate(void)$/;"	f	file:
ReRaceRules	src/libs/raceengineclient/raceengine.cpp	/^ReRaceRules(tCarElt *car)$/;"	f	file:
ReRaceStart	src/libs/raceengineclient/racemain.cpp	/^ReRaceStart(void)$/;"	f
ReRaceStop	src/libs/raceengineclient/racemain.cpp	/^ReRaceStop(void)$/;"	f
ReRacemanMenu	src/libs/raceengineclient/racemanmenu.cpp	/^ReRacemanMenu(void)$/;"	f
ReResEraseScreen	src/libs/raceengineclient/racegl.cpp	/^ReResEraseScreen(void)$/;"	f
ReResGetLines	src/libs/raceengineclient/racegl.cpp	/^ReResGetLines(void)$/;"	f
ReResScreenAddText	src/libs/raceengineclient/racegl.cpp	/^ReResScreenAddText(char *text)$/;"	f
ReResScreenInit	src/libs/raceengineclient/racegl.cpp	/^ReResScreenInit(void)$/;"	f
ReResScreenRemoveText	src/libs/raceengineclient/racegl.cpp	/^ReResScreenRemoveText(int line)$/;"	f
ReResScreenSetText	src/libs/raceengineclient/racegl.cpp	/^ReResScreenSetText(char *text, int line, int clr)$/;"	f
ReResScreenSetTitle	src/libs/raceengineclient/racegl.cpp	/^ReResScreenSetTitle(char *title)$/;"	f
ReResShowCont	src/libs/raceengineclient/racegl.cpp	/^ReResShowCont(void)$/;"	f
ReSavePracticeLap	src/libs/raceengineclient/raceresults.cpp	/^ReSavePracticeLap(tCarElt *car)$/;"	f
ReScreenInit	src/libs/raceengineclient/racegl.cpp	/^ReScreenInit(void)$/;"	f
ReScreenShutdown	src/libs/raceengineclient/racegl.cpp	/^ReScreenShutdown(void)$/;"	f
ReSetRaceBigMsg	src/libs/raceengineclient/racegl.cpp	/^ReSetRaceBigMsg(char *msg)$/;"	f
ReSetRaceMsg	src/libs/raceengineclient/racegl.cpp	/^ReSetRaceMsg(char *msg)$/;"	f
ReShutdown	src/libs/raceengineclient/raceinit.cpp	/^void ReShutdown(void)$/;"	f
ReSinglePlayerInit	src/libs/raceengineclient/singleplayer.cpp	/^ReSinglePlayerInit(void *precMenu)$/;"	f
ReSortCars	src/libs/raceengineclient/raceengine.cpp	/^ReSortCars(void)$/;"	f	file:
ReStart	src/libs/raceengineclient/raceengine.cpp	/^ReStart(void)$/;"	f
ReStartNewRace	src/libs/raceengineclient/raceinit.cpp	/^ReStartNewRace(void * \/* dummy *\/)$/;"	f
ReStateApply	src/libs/raceengineclient/racestate.cpp	/^ReStateApply(void *vstate)$/;"	f
ReStateInit	src/libs/raceengineclient/racestate.cpp	/^ReStateInit(void *prevMenu)$/;"	f
ReStateManage	src/libs/raceengineclient/racestate.cpp	/^ReStateManage(void)$/;"	f
ReStop	src/libs/raceengineclient/raceengine.cpp	/^ReStop(void)$/;"	f
ReStoreRaceResults	src/libs/raceengineclient/raceresults.cpp	/^ReStoreRaceResults(char *race)$/;"	f
ReTimeMod	src/libs/raceengineclient/raceengine.cpp	/^ReTimeMod (void *vcmd)$/;"	f
ReUpdate	src/libs/raceengineclient/raceengine.cpp	/^ReUpdate(void)$/;"	f
ReUpdateQualifCurRes	src/libs/raceengineclient/raceresults.cpp	/^ReUpdateQualifCurRes(tCarElt *car)$/;"	f
ReUpdateStandings	src/libs/raceengineclient/raceresults.cpp	/^ReUpdateStandings(void)$/;"	f
ReUpdtPitCmd	src/libs/raceengineclient/raceengine.cpp	/^ReUpdtPitCmd(void *pvcar)$/;"	f	file:
ReUpdtPitTime	src/libs/raceengineclient/raceengine.cpp	/^ReUpdtPitTime(tCarElt *car)$/;"	f	file:
ReadFile	export/include/learning/learn_debug.h	26;"	d
ReadFile	src/libs/learning/learn_debug.h	26;"	d
ReadSimuCfg	src/libs/confscreens/simuconfig.cpp	/^static void ReadSimuCfg(void)$/;"	f	file:
ReadTrack0	src/modules/track/track0.cpp	/^ReadTrack0(tTrack *theTrack, void *TrackHandle, tRoadCam **camList)$/;"	f
ReadTrack1	src/modules/track/track1.cpp	/^ReadTrack1(tTrack *theTrack, void *TrackHandle, tRoadCam **camList)$/;"	f
ReadTrack2	src/modules/track/track2.cpp	/^ReadTrack2(tTrack *theTrack, void *TrackHandle, tRoadCam **camList, int ext)$/;"	f
ReadTrack3	src/modules/track/track3.cpp	/^ReadTrack3(tTrack *theTrack, void *TrackHandle, tRoadCam **camList, int ext)$/;"	f
ReadTrack4	src/modules/track/track4.cpp	/^ReadTrack4(tTrack *theTrack, void *TrackHandle, tRoadCam **camList, int ext)$/;"	f
RearLevelGroup1	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroup1;$/;"	m	struct:DoV
RearLevelGroup2	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroup2;$/;"	m	struct:DoV
RearLevelGroup3	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroup3;$/;"	m	struct:DoV
RearLevelGroupGlobal	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelGroupGlobal; \/* the distance for the end of the front scene *\/$/;"	m	struct:DoV
RearLevelMap1	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelMap1;$/;"	m	struct:DoV
RearLevelMap2	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelMap2;$/;"	m	struct:DoV
RearLevelMap3	src/modules/graphic/ssggraph/grscene.h	/^  tdble RearLevelMap3;$/;"	m	struct:DoV
RelButNeutral	src/drivers/human/human.h	/^	int		RelButNeutral;$/;"	m	struct:HumanContext
ReloadValues	src/libs/confscreens/controlconfig.cpp	/^static int ReloadValues = 1;$/;"	v	file:
RemoveCar	src/modules/simu/simuv2/simu.cpp	/^RemoveCar(tCar *car, tSituation *s)$/;"	f	file:
RemoveListItem	src/libs/learning/List.cpp	/^int RemoveListItem(LIST* list, LISTITEM* ptr) {$/;"	f
RepairDamage	src/drivers/olethros/strategy.cpp	/^bool ManagedStrategy::RepairDamage(tCarElt* car, Opponents* opponents)$/;"	f	class:olethros::ManagedStrategy
Res	src/libs/tgfclient/screen.cpp	/^static char	**Res = NULL;$/;"	v	file:
Res	src/libs/tgfclient/screen.cpp	/^static char	*Res[] = {"640x480", "800x600", "1024x768", "1152x768", "1152x864", "1200x854", "1200x960", "1280x1024", "1400x900", "1600x1200", "1680x1050", "1920x1200", "320x200"};$/;"	v	file:
ResLabelId	src/libs/tgfclient/screen.cpp	/^static int	ResLabelId;$/;"	v	file:
ResPrevNext	src/libs/tgfclient/screen.cpp	/^ResPrevNext(void *vdelta)$/;"	f	file:
Reset	src/libs/learning/ann_policy.cpp	/^void ANN_Policy::Reset()$/;"	f	class:ANN_Policy
Reset	src/libs/learning/policy.cpp	/^void DiscretePolicy::Reset ()$/;"	f	class:DiscretePolicy
Reshape	src/libs/tgfclient/screen.cpp	/^static void Reshape(int width, int height)$/;"	f	file:
Resize	src/drivers/olethros/geometry.cpp	/^void Vector::Resize(int N_)$/;"	f	class:Vector
RespTable	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^class RespTable {$/;"	c
Response	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  Response(DtResponse r = 0, $/;"	f	class:Response
Response	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	/^class Response {$/;"	c
RestartRaceHookActivate	src/libs/raceengineclient/racemain.cpp	/^RestartRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
RestartRaceHookHandle	src/libs/raceengineclient/racemain.cpp	/^static void	*RestartRaceHookHandle = 0;$/;"	v	file:
RestartRaceHookInit	src/libs/raceengineclient/racemain.cpp	/^RestartRaceHookInit(void)$/;"	f	file:
RmCarRules	export/include/raceman.h	/^typedef struct RmCarRules$/;"	s
RmCarRules	src/interfaces/raceman.h	/^typedef struct RmCarRules$/;"	s
RmDisplayStartRace	src/libs/racescreens/miscscreens.cpp	/^RmDisplayStartRace(tRmInfo *info, void *startScr, void *abortScr)$/;"	f
RmDriversSelect	src/libs/racescreens/driverselect.cpp	/^RmDriversSelect(void *vs)$/;"	f
RmFileSelect	src/libs/racescreens/fileselect.cpp	/^RmFileSelect(void *vs)$/;"	f
RmFourStateScreen	src/libs/racescreens/miscscreens.cpp	/^RmFourStateScreen($/;"	f
RmGetCategoryName	src/libs/racescreens/trackselect.cpp	/^RmGetCategoryName(char *category)$/;"	f
RmGetTrackName	src/libs/racescreens/trackselect.cpp	/^RmGetTrackName(char *category, char *trackName)$/;"	f
RmInfo	export/include/raceman.h	/^typedef struct RmInfo$/;"	s
RmInfo	src/interfaces/raceman.h	/^typedef struct RmInfo$/;"	s
RmLoadingScreenSetText	src/libs/racescreens/loadingscreen.cpp	/^RmLoadingScreenSetText(char *text)$/;"	f
RmLoadingScreenStart	src/libs/racescreens/loadingscreen.cpp	/^RmLoadingScreenStart(char *title, char *bgimg)$/;"	f
RmMovieCapture	export/include/raceman.h	/^typedef struct RmMovieCapture$/;"	s
RmMovieCapture	src/interfaces/raceman.h	/^typedef struct RmMovieCapture$/;"	s
RmNextRace	src/libs/racescreens/results.cpp	/^tRaceCall	RmNextRace;$/;"	v
RmPitMenuStart	src/libs/racescreens/pitmenu.cpp	/^RmPitMenuStart(tCarElt *car, void *userdata, tfuiCallback callback)$/;"	f
RmPrevRace	src/libs/racescreens/results.cpp	/^tRaceCall	RmPrevRace;$/;"	v
RmRaceParamMenu	src/libs/racescreens/racemenu.cpp	/^RmRaceParamMenu(void *vrp)$/;"	f
RmShowResults	src/libs/racescreens/results.cpp	/^RmShowResults(void *prevHdle, tRmInfo *info)$/;"	f
RmShowStandings	src/libs/racescreens/results.cpp	/^RmShowStandings(void *prevHdle, tRmInfo *info)$/;"	f
RmShutdownLoadingScreen	src/libs/racescreens/loadingscreen.cpp	/^RmShutdownLoadingScreen(void)$/;"	f
RmTrackSelect	src/libs/racescreens/trackselect.cpp	/^RmTrackSelect(void *vs)$/;"	f
RmTriStateScreen	src/libs/racescreens/miscscreens.cpp	/^RmTriStateScreen($/;"	f
RmTwoStateScreen	src/libs/racescreens/miscscreens.cpp	/^RmTwoStateScreen($/;"	f
RoadCam	export/include/track.h	/^typedef struct RoadCam$/;"	s
RoadCam	src/interfaces/track.h	/^typedef struct RoadCam$/;"	s
RobotItf	export/include/robot.h	/^typedef struct RobotItf {$/;"	s
RobotItf	src/interfaces/robot.h	/^typedef struct RobotItf {$/;"	s
Root	src/tools/texmapper/maintexmapper.cpp	/^ssgEntity	*Root;$/;"	v
Root	src/tools/trackgen/objects.cpp	/^static ssgRoot	*Root = NULL;$/;"	v	file:
Root	src/tools/trackgen/relief.cpp	/^static ssgEntity	*Root = NULL;$/;"	v	file:
RootWindow	src/libs/tgfclient/fg_gm.cpp	/^	Window				RootWindow;			\/\/The screen's root window.$/;"	m	struct:tagSFG_Display	file:
Row	src/tools/texmapper/maintexmapper.cpp	/^tRow	*Row;$/;"	v
RtDistToPit	src/libs/robottools/rttrack.cpp	/^RtDistToPit(struct CarElt *car, tTrack *track, tdble *dL, tdble *dW)$/;"	f
RtGetDistFromStart	src/libs/robottools/rttrack.cpp	/^RtGetDistFromStart(tCarElt *car)$/;"	f
RtGetDistFromStart2	src/libs/robottools/rttrack.cpp	/^RtGetDistFromStart2(tTrkLocPos *p)$/;"	f
RtTelemInit	src/libs/robottools/rttelem.cpp	/^void RtTelemInit(tdble ymin, tdble ymax)$/;"	f
RtTelemNewChannel	src/libs/robottools/rttelem.cpp	/^void RtTelemNewChannel(const char * name, tdble * var, tdble min, tdble max)$/;"	f
RtTelemShutdown	src/libs/robottools/rttelem.cpp	/^void RtTelemShutdown(void)$/;"	f
RtTelemStartMonitoring	src/libs/robottools/rttelem.cpp	/^void RtTelemStartMonitoring(const char * filename)$/;"	f
RtTelemStopMonitoring	src/libs/robottools/rttelem.cpp	/^void RtTelemStopMonitoring(void)$/;"	f
RtTelemUpdate	src/libs/robottools/rttelem.cpp	/^void RtTelemUpdate(double time)$/;"	f
RtTrackGetSeg	src/libs/robottools/rttrack.cpp	/^RtTrackGetSeg(tTrkLocPos *p)$/;"	f
RtTrackGetWidth	src/libs/robottools/rttrack.cpp	/^RtTrackGetWidth(tTrackSeg *seg, tdble toStart)$/;"	f
RtTrackGlobal2Local	src/libs/robottools/rttrack.cpp	/^RtTrackGlobal2Local(tTrackSeg *segment, tdble X, tdble Y, tTrkLocPos *p, int type)$/;"	f
RtTrackHeightG	src/libs/robottools/rttrack.cpp	/^RtTrackHeightG(tTrackSeg *seg, tdble X, tdble Y)$/;"	f
RtTrackHeightL	src/libs/robottools/rttrack.cpp	/^RtTrackHeightL(tTrkLocPos *p)$/;"	f
RtTrackLocal2Global	src/libs/robottools/rttrack.cpp	/^RtTrackLocal2Global(tTrkLocPos *p, tdble *X, tdble *Y, int flag)$/;"	f
RtTrackSideNormalG	src/libs/robottools/rttrack.cpp	/^RtTrackSideNormalG(tTrackSeg *seg, tdble X, tdble Y, int side, t3Dd *norm)$/;"	f
RtTrackSideTgAngleL	src/libs/robottools/rttrack.cpp	/^RtTrackSideTgAngleL(tTrkLocPos *p)$/;"	f
RtTrackSurfaceNormalL	src/libs/robottools/rttrack.cpp	/^RtTrackSurfaceNormalL(tTrkLocPos *p, t3Dd *norm)$/;"	f
SBSIZE	src/drivers/olethros/driver.cpp	/^    static const int SBSIZE = 1024;$/;"	m	namespace:olethros	file:
SCALE	src/libs/tgfclient/guiobject.cpp	81;"	d	file:
SCALING	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    SCALING = 0x04,$/;"	e	enum:Transform::__anon7
SCx2	src/modules/simu/simuv2/aero.h	/^    tdble	SCx2;$/;"	m	struct:__anon13
SEC1	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC1" HREF="solid2_toc.html#TOC1">GNU LIBRARY GENERAL PUBLIC LICENSE<\/A><\/H1>$/;"	a
SEC10	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC10" HREF="solid2_toc.html#TOC10">The SOLID API<\/A><\/H1>$/;"	a
SEC11	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC11" HREF="solid2_toc.html#TOC11">Building Shapes<\/A><\/H2>$/;"	a
SEC12	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC12" HREF="solid2_toc.html#TOC12">Creating and Moving Objects<\/A><\/H2>$/;"	a
SEC13	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H3><A NAME="SEC13" HREF="solid2_toc.html#TOC13">Who's Afraid of Quaternions?<\/A><\/H3>$/;"	a
SEC14	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC14" HREF="solid2_toc.html#TOC14">Response Handling<\/A><\/H2>$/;"	a
SEC15	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H3><A NAME="SEC15" HREF="solid2_toc.html#TOC15">Smart Response<\/A><\/H3>$/;"	a
SEC16	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC16" HREF="solid2_toc.html#TOC16">Deformable Models<\/A><\/H2>$/;"	a
SEC17	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC17" HREF="solid2_toc.html#TOC17">Caching<\/A><\/H2>$/;"	a
SEC18	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC18" HREF="solid2_toc.html#TOC18">Projects and other things left to do<\/A><\/H1>$/;"	a
SEC19	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC19" HREF="solid2_toc.html#TOC19">Coming Attractions<\/A><\/H2>$/;"	a
SEC2	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC2" HREF="solid2_toc.html#TOC2">Preamble<\/A><\/H2>$/;"	a
SEC20	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC20" HREF="solid2_toc.html#TOC20">Bug Reports<\/A><\/H1>$/;"	a
SEC3	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC3" HREF="solid2_toc.html#TOC3">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<\/A><\/H2>$/;"	a
SEC4	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC4" HREF="solid2_toc.html#TOC4">How to Apply These Terms to Your New Libraries<\/A><\/H2>$/;"	a
SEC5	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC5" HREF="solid2_toc.html#TOC5">Introduction<\/A><\/H1>$/;"	a
SEC6	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC6" HREF="solid2_toc.html#TOC6">Installing SOLID<\/A><\/H1>$/;"	a
SEC7	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC7" HREF="solid2_toc.html#TOC7">Requirements<\/A><\/H2>$/;"	a
SEC8	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H2><A NAME="SEC8" HREF="solid2_toc.html#TOC8">Installation<\/A><\/H2>$/;"	a
SEC9	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^<H1><A NAME="SEC9" HREF="solid2_toc.html#TOC9">Trouble in Installation<\/A><\/H1>$/;"	a
SECT_AERODYNAMICS	export/include/car.h	427;"	d
SECT_AERODYNAMICS	src/interfaces/car.h	427;"	d
SECT_BONNET	export/include/car.h	433;"	d
SECT_BONNET	src/interfaces/car.h	433;"	d
SECT_BRKSYST	export/include/car.h	426;"	d
SECT_BRKSYST	src/interfaces/car.h	426;"	d
SECT_CAR	export/include/car.h	401;"	d
SECT_CAR	src/interfaces/car.h	401;"	d
SECT_CENTRALDIFFERENTIAL	export/include/car.h	424;"	d
SECT_CENTRALDIFFERENTIAL	src/interfaces/car.h	424;"	d
SECT_CLUTCH	export/include/car.h	429;"	d
SECT_CLUTCH	src/interfaces/car.h	429;"	d
SECT_DRIVER	export/include/car.h	432;"	d
SECT_DRIVER	src/interfaces/car.h	432;"	d
SECT_DRIVETRAIN	export/include/car.h	430;"	d
SECT_DRIVETRAIN	src/interfaces/car.h	430;"	d
SECT_ENGINE	export/include/car.h	428;"	d
SECT_ENGINE	src/interfaces/car.h	428;"	d
SECT_EXHAUST	export/include/car.h	435;"	d
SECT_EXHAUST	src/interfaces/car.h	435;"	d
SECT_FRNT	export/include/car.h	402;"	d
SECT_FRNT	src/interfaces/car.h	402;"	d
SECT_FRNTARB	export/include/car.h	405;"	d
SECT_FRNTARB	src/interfaces/car.h	405;"	d
SECT_FRNTAXLE	export/include/car.h	404;"	d
SECT_FRNTAXLE	src/interfaces/car.h	404;"	d
SECT_FRNTDIFFERENTIAL	export/include/car.h	412;"	d
SECT_FRNTDIFFERENTIAL	src/interfaces/car.h	412;"	d
SECT_FRNTLFTBRAKE	export/include/car.h	411;"	d
SECT_FRNTLFTBRAKE	src/interfaces/car.h	411;"	d
SECT_FRNTLFTSUSP	export/include/car.h	409;"	d
SECT_FRNTLFTSUSP	src/interfaces/car.h	409;"	d
SECT_FRNTLFTWHEEL	export/include/car.h	407;"	d
SECT_FRNTLFTWHEEL	src/interfaces/car.h	407;"	d
SECT_FRNTRGTBRAKE	export/include/car.h	410;"	d
SECT_FRNTRGTBRAKE	src/interfaces/car.h	410;"	d
SECT_FRNTRGTSUSP	export/include/car.h	408;"	d
SECT_FRNTRGTSUSP	src/interfaces/car.h	408;"	d
SECT_FRNTRGTWHEEL	export/include/car.h	406;"	d
SECT_FRNTRGTWHEEL	src/interfaces/car.h	406;"	d
SECT_FRNTWING	export/include/car.h	403;"	d
SECT_FRNTWING	src/interfaces/car.h	403;"	d
SECT_GEARBOX	export/include/car.h	431;"	d
SECT_GEARBOX	src/interfaces/car.h	431;"	d
SECT_GROBJECTS	export/include/car.h	434;"	d
SECT_GROBJECTS	src/interfaces/car.h	434;"	d
SECT_LIGHT	export/include/car.h	436;"	d
SECT_LIGHT	src/interfaces/car.h	436;"	d
SECT_REAR	export/include/car.h	413;"	d
SECT_REAR	src/interfaces/car.h	413;"	d
SECT_REARARB	export/include/car.h	416;"	d
SECT_REARARB	src/interfaces/car.h	416;"	d
SECT_REARAXLE	export/include/car.h	415;"	d
SECT_REARAXLE	src/interfaces/car.h	415;"	d
SECT_REARDIFFERENTIAL	export/include/car.h	423;"	d
SECT_REARDIFFERENTIAL	src/interfaces/car.h	423;"	d
SECT_REARLFTBRAKE	export/include/car.h	422;"	d
SECT_REARLFTBRAKE	src/interfaces/car.h	422;"	d
SECT_REARLFTSUSP	export/include/car.h	420;"	d
SECT_REARLFTSUSP	src/interfaces/car.h	420;"	d
SECT_REARLFTWHEEL	export/include/car.h	418;"	d
SECT_REARLFTWHEEL	src/interfaces/car.h	418;"	d
SECT_REARRGTBRAKE	export/include/car.h	421;"	d
SECT_REARRGTBRAKE	src/interfaces/car.h	421;"	d
SECT_REARRGTSUSP	export/include/car.h	419;"	d
SECT_REARRGTSUSP	src/interfaces/car.h	419;"	d
SECT_REARRGTWHEEL	export/include/car.h	417;"	d
SECT_REARRGTWHEEL	src/interfaces/car.h	417;"	d
SECT_REARWING	export/include/car.h	414;"	d
SECT_REARWING	src/interfaces/car.h	414;"	d
SECT_SIMU_SETTINGS	export/include/car.h	400;"	d
SECT_SIMU_SETTINGS	src/interfaces/car.h	400;"	d
SECT_STEER	export/include/car.h	425;"	d
SECT_STEER	src/interfaces/car.h	425;"	d
SEEK_CUR	src/windows/include/zconf.h	245;"	d
SEEK_END	src/windows/include/zconf.h	246;"	d
SEEK_SET	src/windows/include/zconf.h	244;"	d
SEGRANGE	src/drivers/berniw/pathfinder.h	51;"	d
SEGRANGE	src/drivers/berniw2/pathfinder.h	51;"	d
SEGRANGE	src/drivers/berniw3/pathfinder.h	51;"	d
SEGRANGE	src/drivers/inferno/pathfinder.h	50;"	d
SEGRANGE	src/drivers/lliaw/pathfinder.h	50;"	d
SEGRANGE	src/drivers/tita/pathfinder.h	50;"	d
SEM_COLLISION	export/include/car.h	604;"	d
SEM_COLLISION	src/interfaces/car.h	604;"	d
SEM_COLLISION_CAR	export/include/car.h	606;"	d
SEM_COLLISION_CAR	src/interfaces/car.h	606;"	d
SEM_COLLISION_XYSCENE	export/include/car.h	605;"	d
SEM_COLLISION_XYSCENE	src/interfaces/car.h	605;"	d
SEM_COLLISION_Z	export/include/car.h	607;"	d
SEM_COLLISION_Z	src/interfaces/car.h	607;"	d
SEM_COLLISION_Z_CRASH	export/include/car.h	608;"	d
SEM_COLLISION_Z_CRASH	src/interfaces/car.h	608;"	d
SET2	src/libs/txml/xmltok.c	447;"	d	file:
SET2	src/libs/txml/xmltok.c	455;"	d	file:
SET2	src/libs/txml/xmltok.c	514;"	d	file:
SET2	src/libs/txml/xmltok.c	522;"	d	file:
SETPOINT	src/tools/trackgen/track.cpp	387;"	d	file:
SETPOINT2	src/tools/trackgen/track.cpp	399;"	d	file:
SETTEXTURE	src/tools/trackgen/track.cpp	243;"	d	file:
SETUP_LINUX	Make-default.mk	/^SETUP_LINUX	 = ${TORCS_BASE}\/setup_linux.sh$/;"	m
SFG_Display	src/libs/tgfclient/fg_gm.cpp	/^typedef struct tagSFG_Display SFG_Display;$/;"	t	typeref:struct:tagSFG_Display	file:
SFG_State	src/libs/tgfclient/fg_gm.cpp	/^typedef struct tagSFG_State SFG_State;$/;"	t	typeref:struct:tagSFG_State	file:
SFG_XYUse	src/libs/tgfclient/fg_gm.cpp	/^typedef struct tagSFG_XYUse SFG_XYUse;$/;"	t	typeref:struct:tagSFG_XYUse	file:
SGD_180	src/windows/include/plib/sg.h	1413;"	d
SGD_45	src/windows/include/plib/sg.h	1410;"	d
SGD_60	src/windows/include/plib/sg.h	1411;"	d
SGD_90	src/windows/include/plib/sg.h	1412;"	d
SGD_DEGREES_TO_RADIANS	src/windows/include/plib/sg.h	1428;"	d
SGD_FOUR	src/windows/include/plib/sg.h	1409;"	d
SGD_HALF	src/windows/include/plib/sg.h	1405;"	d
SGD_INSIDE	src/windows/include/plib/sg.h	1491;"	d
SGD_MAX	src/windows/include/plib/sg.h	1414;"	d
SGD_ONE	src/windows/include/plib/sg.h	1406;"	d
SGD_OUTSIDE	src/windows/include/plib/sg.h	1490;"	d
SGD_PI	src/windows/include/plib/sg.h	1423;"	d
SGD_PI	src/windows/include/plib/sg.h	1425;"	d
SGD_RADIANS_TO_DEGREES	src/windows/include/plib/sg.h	1429;"	d
SGD_STRADDLE	src/windows/include/plib/sg.h	1492;"	d
SGD_THREE	src/windows/include/plib/sg.h	1408;"	d
SGD_TWO	src/windows/include/plib/sg.h	1407;"	d
SGD_W	src/windows/include/plib/sg.h	1420;"	d
SGD_X	src/windows/include/plib/sg.h	1417;"	d
SGD_Y	src/windows/include/plib/sg.h	1418;"	d
SGD_Z	src/windows/include/plib/sg.h	1419;"	d
SGD_ZERO	src/windows/include/plib/sg.h	1404;"	d
SGDfloat	src/windows/include/plib/sg.h	1402;"	d
SG_180	src/windows/include/plib/sg.h	43;"	d
SG_45	src/windows/include/plib/sg.h	40;"	d
SG_60	src/windows/include/plib/sg.h	41;"	d
SG_90	src/windows/include/plib/sg.h	42;"	d
SG_BOT_PLANE	src/windows/include/plib/sg.h	1038;"	d
SG_DEGREES_TO_RADIANS	src/windows/include/plib/sg.h	57;"	d
SG_FAR_PLANE	src/windows/include/plib/sg.h	1041;"	d
SG_FOUR	src/windows/include/plib/sg.h	39;"	d
SG_GENERAL_SCALE	src/windows/include/plib/sg.h	217;"	d
SG_H	src/windows/include/plib/sg.h	26;"	d
SG_HALF	src/windows/include/plib/sg.h	35;"	d
SG_IDENTITY	src/windows/include/plib/sg.h	206;"	d
SG_INSIDE	src/windows/include/plib/sg.h	127;"	d
SG_LEFT_PLANE	src/windows/include/plib/sg.h	1036;"	d
SG_MAX	src/windows/include/plib/sg.h	44;"	d
SG_MIRROR	src/windows/include/plib/sg.h	208;"	d
SG_NEAR_PLANE	src/windows/include/plib/sg.h	1040;"	d
SG_NONORTHO	src/windows/include/plib/sg.h	210;"	d
SG_ONE	src/windows/include/plib/sg.h	36;"	d
SG_OUTSIDE	src/windows/include/plib/sg.h	126;"	d
SG_PERLIN_NOISE_LARGE_PWR2	src/windows/include/plib/sg.h	3025;"	d
SG_PERLIN_NOISE_MOD_MASK	src/windows/include/plib/sg.h	3024;"	d
SG_PERLIN_NOISE_WRAP_INDEX	src/windows/include/plib/sg.h	3023;"	d
SG_PI	src/windows/include/plib/sg.h	52;"	d
SG_PI	src/windows/include/plib/sg.h	54;"	d
SG_PROJECTION	src/windows/include/plib/sg.h	212;"	d
SG_RADIANS_TO_DEGREES	src/windows/include/plib/sg.h	58;"	d
SG_RIGHT_PLANE	src/windows/include/plib/sg.h	1037;"	d
SG_ROTATION	src/windows/include/plib/sg.h	207;"	d
SG_SCALE	src/windows/include/plib/sg.h	209;"	d
SG_STRADDLE	src/windows/include/plib/sg.h	128;"	d
SG_THREE	src/windows/include/plib/sg.h	38;"	d
SG_TOP_PLANE	src/windows/include/plib/sg.h	1039;"	d
SG_TRANSLATION	src/windows/include/plib/sg.h	211;"	d
SG_TWO	src/windows/include/plib/sg.h	37;"	d
SG_UNIFORM_SCALE	src/windows/include/plib/sg.h	216;"	d
SG_W	src/windows/include/plib/sg.h	49;"	d
SG_X	src/windows/include/plib/sg.h	46;"	d
SG_Y	src/windows/include/plib/sg.h	47;"	d
SG_Z	src/windows/include/plib/sg.h	48;"	d
SG_ZERO	src/windows/include/plib/sg.h	34;"	d
SGfloat	src/windows/include/plib/sg.h	32;"	d
SHIFT	src/drivers/berniw/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	src/drivers/berniw/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	src/drivers/berniw2/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	src/drivers/berniw2/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	src/drivers/berniw3/mycar.cpp	/^const double MyCar::SHIFT = 0.9;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar	file:
SHIFT	src/drivers/berniw3/mycar.h	/^		static const double SHIFT;				\/* [-] (% of rpmredline) *\/$/;"	m	class:MyCar
SHIFT	src/drivers/bt/driver.cpp	/^const float Driver::SHIFT = 0.9f;							\/\/ [-] (% of rpmredline) When do we like to shift gears.$/;"	m	class:Driver	file:
SHIFT	src/drivers/bt/driver.h	/^		static const float SHIFT;$/;"	m	class:Driver
SHIFT	src/drivers/damned/driver.cpp	/^const float Driver::SHIFT = 0.9f;							\/\/ [-] (% of rpmredline) When do we like to shift gears.$/;"	m	class:Driver	file:
SHIFT	src/drivers/damned/driver.h	/^		static const float SHIFT;$/;"	m	class:Driver
SHIFT	src/drivers/inferno/mycar.cpp	/^const double MyCar::SHIFT = 0.9;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar	file:
SHIFT	src/drivers/inferno/mycar.h	/^		static const double SHIFT;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar
SHIFT	src/drivers/lliaw/mycar.cpp	/^const double MyCar::SHIFT = 0.9;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar	file:
SHIFT	src/drivers/lliaw/mycar.h	/^		static const double SHIFT;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar
SHIFT	src/drivers/olethros/driver.cpp	/^    const float Driver::SHIFT = 0.98f;							\/\/\/< [-] (% of rpmredline) When do we like to shift gears.$/;"	m	class:olethros::Driver	file:
SHIFT	src/drivers/olethros/driver.h	/^	static const float SHIFT;$/;"	m	class:olethros::Driver
SHIFT	src/drivers/sparkle/driver.cpp	/^const float Driver::SHIFT = 0.9;							\/* [-] (% of rpmredline) *\/$/;"	m	class:Driver	file:
SHIFT	src/drivers/sparkle/driver.h	/^		static const float SHIFT;$/;"	m	class:Driver
SHIFT	src/drivers/tita/mycar.cpp	/^const double MyCar::SHIFT = 0.9;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar	file:
SHIFT	src/drivers/tita/mycar.h	/^		static const double SHIFT;					\/\/ [-] (% of rpmredline).$/;"	m	class:MyCar
SHIFT_MARGIN	src/drivers/berniw/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	src/drivers/berniw/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	src/drivers/berniw2/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	src/drivers/berniw2/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	src/drivers/berniw3/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;			\/* [m\/s] *\/$/;"	m	class:MyCar	file:
SHIFT_MARGIN	src/drivers/berniw3/mycar.h	/^		static const double SHIFT_MARGIN;		\/* [m\/s] *\/$/;"	m	class:MyCar
SHIFT_MARGIN	src/drivers/bt/driver.cpp	/^const float Driver::SHIFT_MARGIN = 4.0f;					\/\/ [m\/s] Avoid oscillating gear changes.$/;"	m	class:Driver	file:
SHIFT_MARGIN	src/drivers/bt/driver.h	/^		static const float SHIFT_MARGIN;$/;"	m	class:Driver
SHIFT_MARGIN	src/drivers/damned/driver.cpp	/^const float Driver::SHIFT_MARGIN = 4.0f;					\/\/ [m\/s] Avoid oscillating gear changes.$/;"	m	class:Driver	file:
SHIFT_MARGIN	src/drivers/damned/driver.h	/^		static const float SHIFT_MARGIN;$/;"	m	class:Driver
SHIFT_MARGIN	src/drivers/inferno/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
SHIFT_MARGIN	src/drivers/inferno/mycar.h	/^		static const double SHIFT_MARGIN;			\/\/ [m\/s].$/;"	m	class:MyCar
SHIFT_MARGIN	src/drivers/lliaw/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
SHIFT_MARGIN	src/drivers/lliaw/mycar.h	/^		static const double SHIFT_MARGIN;			\/\/ [m\/s].$/;"	m	class:MyCar
SHIFT_MARGIN	src/drivers/olethros/driver.cpp	/^    const float Driver::SHIFT_MARGIN = 4.0f;						\/\/\/< [m\/s] Avoid oscillating gear changes.$/;"	m	class:olethros::Driver	file:
SHIFT_MARGIN	src/drivers/olethros/driver.h	/^	static const float SHIFT_MARGIN;$/;"	m	class:olethros::Driver
SHIFT_MARGIN	src/drivers/sparkle/driver.cpp	/^const float Driver::SHIFT_MARGIN = 4.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
SHIFT_MARGIN	src/drivers/sparkle/driver.h	/^		static const float SHIFT_MARGIN;$/;"	m	class:Driver
SHIFT_MARGIN	src/drivers/tita/mycar.cpp	/^const double MyCar::SHIFT_MARGIN = 4.0;				\/\/ [m\/s].$/;"	m	class:MyCar	file:
SHIFT_MARGIN	src/drivers/tita/mycar.h	/^		static const double SHIFT_MARGIN;			\/\/ [m\/s].$/;"	m	class:MyCar
SHIP	src/drivers/berniw/1/Makefile	/^SHIP      = cg-nascar-rwd.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/10/Makefile	/^SHIP      = car1-trb3.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/2/Makefile	/^SHIP      = cg-nascar-rwd.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/berniw2/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/10/Makefile	/^SHIP      = car1-trb3.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/3/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/4/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/5/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/6/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/8/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw2/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/berniw3/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/10/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/3/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/4/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/5/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/6/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/7/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/8/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/9/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/berniw3/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/bt/0/Makefile	/^SHIP        = default.xml cg-nascar-rwd.rgb$/;"	m
SHIP	src/drivers/bt/0/practice/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/bt/0/qualifying/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/bt/0/race/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/bt/1/Makefile	/^SHIP        = default.xml cg-nascar-rwd.rgb$/;"	m
SHIP	src/drivers/bt/1/practice/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/bt/1/qualifying/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/bt/1/race/Makefile	/^SHIP        = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/bt/2/Makefile	/^SHIP        = car1-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/3/Makefile	/^SHIP        = car2-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/4/Makefile	/^SHIP        = car3-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/5/Makefile	/^SHIP        = car4-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/6/Makefile	/^SHIP        = car5-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/7/Makefile	/^SHIP        = car6-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/8/Makefile	/^SHIP        = car7-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/bt/9/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/bt/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/damned/0/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/damned/1/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/damned/2/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/damned/3/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/damned/4/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/damned/5/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/damned/6/Makefile	/^SHIP        = car5-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/damned/7/Makefile	/^SHIP        = car6-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/damned/8/Makefile	/^SHIP        = car7-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/damned/9/Makefile	/^SHIP        = car1-trb3.rgb default.xml$/;"	m
SHIP	src/drivers/damned/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/human/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print) $(shell find *.rgb -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/human/tracks/dirt-2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/10/Makefile	/^SHIP      = car1-trb3.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/2/Makefile	/^SHIP      = p406.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/inferno2/1/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/10/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/2/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/3/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/4/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/5/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/6/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/7/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/8/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/9/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/inferno2/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/lliaw/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/10/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/lliaw/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/olethros/0/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/olethros/1/Makefile	/^SHIP        = default.xml$/;"	m
SHIP	src/drivers/olethros/2/Makefile	/^SHIP        = car1-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/3/Makefile	/^SHIP        = car2-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/4/Makefile	/^SHIP        = car3-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/5/Makefile	/^SHIP        = car4-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/6/Makefile	/^SHIP        = car5-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/7/Makefile	/^SHIP        = car6-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/8/Makefile	/^SHIP        = car7-trb1.rgb default.xml$/;"	m
SHIP	src/drivers/olethros/9/Makefile	/^SHIP        = default.xml car1-trb3.rgb$/;"	m
SHIP	src/drivers/olethros/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/sparkle/0/Makefile	/^SHIP        = baja-bug.rgb default.xml$/;"	m
SHIP	src/drivers/sparkle/Makefile	/^SHIP        = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/drivers/tita/1/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/10/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/2/Makefile	/^SHIP      = $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/3/Makefile	/^SHIP      = car1-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/4/Makefile	/^SHIP      = car2-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/5/Makefile	/^SHIP      = car3-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/6/Makefile	/^SHIP      = car4-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/7/Makefile	/^SHIP      = car5-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/8/Makefile	/^SHIP      = car6-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/9/Makefile	/^SHIP      = car7-trb1.rgb $(shell find *.xml -maxdepth 0 -type f -print)$/;"	m
SHIP	src/drivers/tita/Makefile	/^SHIP      = ${ROBOT}.xml logo.rgb$/;"	m
SHIP	src/libs/raceengineclient/Makefile	/^SHIP         = raceengine.xml style.xsl$/;"	m
SHIP	src/libs/tgf/Makefile	/^SHIP    = params.dtd$/;"	m
SHIP	src/libs/tgfclient/Makefile	/^SHIP    = screen.xml$/;"	m
SHIP	src/modules/graphic/ssggraph/Makefile	/^SHIP      = graph.xml sound.xml$/;"	m
SHIP	src/modules/telemetry/Makefile	/^SHIP      = telemetry.sh$/;"	m
SHIP	src/raceman/Makefile	/^SHIP      = $(shell find * -maxdepth 0 -name '*.xml' -print)$/;"	m
SHIPCREATEDIRS	src/raceman/Makefile	/^SHIPCREATEDIRS = $(shell find * -maxdepth 0 -name '*.xml' -print | sed -e 's!\\.xml!!' -e 's!^!results\/!')$/;"	m
SHIPDIR	src/drivers/berniw/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/berniw/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	src/drivers/berniw/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/berniw/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/berniw/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/berniw/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/berniw/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/berniw/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/berniw/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/berniw/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/berniw/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/berniw2/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/berniw2/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	src/drivers/berniw2/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/berniw2/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/berniw2/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/berniw2/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/berniw2/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/berniw2/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/berniw2/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/berniw2/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/berniw2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/berniw3/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/berniw3/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	src/drivers/berniw3/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/berniw3/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/berniw3/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/berniw3/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/berniw3/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/berniw3/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/berniw3/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/berniw3/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/berniw3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/bt/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	src/drivers/bt/0/practice/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0\/practice$/;"	m
SHIPDIR	src/drivers/bt/0/qualifying/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0\/qualifying$/;"	m
SHIPDIR	src/drivers/bt/0/race/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0\/race$/;"	m
SHIPDIR	src/drivers/bt/1/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/bt/1/practice/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1\/practice$/;"	m
SHIPDIR	src/drivers/bt/1/qualifying/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1\/qualifying$/;"	m
SHIPDIR	src/drivers/bt/1/race/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1\/race$/;"	m
SHIPDIR	src/drivers/bt/2/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/bt/3/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/bt/4/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/bt/5/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/bt/6/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/bt/7/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/bt/8/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/bt/9/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/bt/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/damned/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	src/drivers/damned/1/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/damned/2/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/damned/3/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/damned/4/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/damned/5/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/damned/6/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/damned/7/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/damned/8/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/damned/9/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/damned/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/human/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/human/tracks/dirt-2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/tracks\/dirt-2$/;"	m
SHIPDIR	src/drivers/inferno/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/inferno/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	src/drivers/inferno/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/inferno/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/inferno/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/inferno/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/inferno/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/inferno/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/inferno/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/inferno/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/inferno/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/inferno2/1/Makefile	/^SHIPDIR   = drivers\/inferno2\/1$/;"	m
SHIPDIR	src/drivers/inferno2/10/Makefile	/^SHIPDIR   = drivers\/inferno2\/10$/;"	m
SHIPDIR	src/drivers/inferno2/2/Makefile	/^SHIPDIR   = drivers\/inferno2\/2$/;"	m
SHIPDIR	src/drivers/inferno2/3/Makefile	/^SHIPDIR   = drivers\/inferno2\/3$/;"	m
SHIPDIR	src/drivers/inferno2/4/Makefile	/^SHIPDIR   = drivers\/inferno2\/4$/;"	m
SHIPDIR	src/drivers/inferno2/5/Makefile	/^SHIPDIR   = drivers\/inferno2\/5$/;"	m
SHIPDIR	src/drivers/inferno2/6/Makefile	/^SHIPDIR   = drivers\/inferno2\/6$/;"	m
SHIPDIR	src/drivers/inferno2/7/Makefile	/^SHIPDIR   = drivers\/inferno2\/7$/;"	m
SHIPDIR	src/drivers/inferno2/8/Makefile	/^SHIPDIR   = drivers\/inferno2\/8$/;"	m
SHIPDIR	src/drivers/inferno2/9/Makefile	/^SHIPDIR   = drivers\/inferno2\/9$/;"	m
SHIPDIR	src/drivers/inferno2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/lliaw/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/lliaw/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	src/drivers/lliaw/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/lliaw/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/lliaw/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/lliaw/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/lliaw/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/lliaw/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/lliaw/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/lliaw/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/lliaw/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/olethros/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	src/drivers/olethros/1/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/olethros/2/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/olethros/3/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/olethros/4/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/olethros/5/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/olethros/6/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/olethros/7/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/olethros/8/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/olethros/9/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/olethros/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/sparkle/0/Makefile	/^SHIPDIR     = drivers\/${ROBOT}\/0$/;"	m
SHIPDIR	src/drivers/sparkle/Makefile	/^SHIPDIR     = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/drivers/tita/1/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/1$/;"	m
SHIPDIR	src/drivers/tita/10/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/10$/;"	m
SHIPDIR	src/drivers/tita/2/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/2$/;"	m
SHIPDIR	src/drivers/tita/3/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/3$/;"	m
SHIPDIR	src/drivers/tita/4/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/4$/;"	m
SHIPDIR	src/drivers/tita/5/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/5$/;"	m
SHIPDIR	src/drivers/tita/6/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/6$/;"	m
SHIPDIR	src/drivers/tita/7/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/7$/;"	m
SHIPDIR	src/drivers/tita/8/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/8$/;"	m
SHIPDIR	src/drivers/tita/9/Makefile	/^SHIPDIR   = drivers\/${ROBOT}\/9$/;"	m
SHIPDIR	src/drivers/tita/Makefile	/^SHIPDIR   = drivers\/${ROBOT}$/;"	m
SHIPDIR	src/libs/raceengineclient/Makefile	/^SHIPDIR      = config$/;"	m
SHIPDIR	src/libs/tgf/Makefile	/^SHIPDIR = config$/;"	m
SHIPDIR	src/libs/tgfclient/Makefile	/^SHIPDIR = config$/;"	m
SHIPDIR	src/modules/graphic/ssggraph/Makefile	/^SHIPDIR   = config$/;"	m
SHIPDIR	src/modules/telemetry/Makefile	/^SHIPDIR   = telemetry$/;"	m
SHIPDIR	src/raceman/Makefile	/^SHIPDIR   = config\/raceman$/;"	m
SHIPEXEC	Makefile	/^SHIPEXEC	= setup_linux.sh$/;"	m
SHIPEXECDIR	Makefile	/^SHIPEXECDIR	= .$/;"	m
SHIPEXECSUBDIRS	Makefile	/^SHIPEXECSUBDIRS	= src$/;"	m
SHIPSUBDIRS	Makefile	/^SHIPSUBDIRS	= src$/;"	m
SHIPSUBDIRS	src/Makefile	/^SHIPSUBDIRS	= drivers modules libs raceman$/;"	m
SHIPSUBDIRS	src/drivers/Makefile	/^SHIPSUBDIRS = $(SUBDIRS)$/;"	m
SHIPSUBDIRS	src/drivers/berniw/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	src/drivers/berniw2/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	src/drivers/berniw3/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	src/drivers/bt/0/Makefile	/^SHIPSUBDIRS = practice qualifying race$/;"	m
SHIPSUBDIRS	src/drivers/bt/1/Makefile	/^SHIPSUBDIRS = practice qualifying race$/;"	m
SHIPSUBDIRS	src/drivers/bt/2/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/3/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/4/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/5/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/6/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/7/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/8/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/9/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/bt/Makefile	/^SHIPSUBDIRS = 0 1 2 3 4 5 6 7 8 9$/;"	m
SHIPSUBDIRS	src/drivers/damned/0/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	src/drivers/damned/1/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/2/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/3/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/4/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/5/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/6/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/7/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/8/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/9/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/damned/Makefile	/^SHIPSUBDIRS = 0 1 2 3 4 5 6 7 8 9$/;"	m
SHIPSUBDIRS	src/drivers/human/Makefile	/^SHIPSUBDIRS = tracks$/;"	m
SHIPSUBDIRS	src/drivers/human/tracks/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/1/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/10/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/2/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/3/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/4/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/5/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/6/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/7/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/8/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/9/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/inferno2/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS | grep -v tracksdata)$/;"	m
SHIPSUBDIRS	src/drivers/lliaw/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	src/drivers/olethros/0/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/olethros/1/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	src/drivers/olethros/2/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	src/drivers/olethros/3/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/olethros/4/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	src/drivers/olethros/5/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/olethros/6/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/olethros/7/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/olethros/8/Makefile	/^SHIPSUBDIRS = $/;"	m
SHIPSUBDIRS	src/drivers/olethros/9/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	src/drivers/olethros/Makefile	/^SHIPSUBDIRS = 0 1 2 3 4 5 6 7 8 9$/;"	m
SHIPSUBDIRS	src/drivers/sparkle/0/Makefile	/^SHIPSUBDIRS =$/;"	m
SHIPSUBDIRS	src/drivers/sparkle/Makefile	/^SHIPSUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SHIPSUBDIRS	src/drivers/tita/Makefile	/^SHIPSUBDIRS = 1 2 3 4 5 6 7 8 9 10$/;"	m
SHIPSUBDIRS	src/libs/Makefile	/^SHIPSUBDIRS	= tgf tgfclient raceengineclient learning$/;"	m
SHIPSUBDIRS	src/modules/Makefile	/^SHIPSUBDIRS	= telemetry graphic$/;"	m
SHIPSUBDIRS	src/modules/graphic/Makefile	/^SHIPSUBDIRS     = $(SUBDIRS)$/;"	m
SHM	src/linux/main.cpp	34;"	d	file:
SIDECOLLDIST	src/drivers/sparkle/opponent.h	/^		static float SIDECOLLDIST;$/;"	m	class:Opponent
SIDECOLL_MARGIN	src/drivers/bt/driver.cpp	/^const float Driver::SIDECOLL_MARGIN = 3.0f;					\/\/ [m] Distance between car centers to avoid side collisions.$/;"	m	class:Driver	file:
SIDECOLL_MARGIN	src/drivers/bt/driver.h	/^		static const float SIDECOLL_MARGIN;$/;"	m	class:Driver
SIDECOLL_MARGIN	src/drivers/damned/driver.cpp	/^const float Driver::SIDECOLL_MARGIN = 3.0f;					\/\/ [m] Distance between car centers to avoid side collisions.$/;"	m	class:Driver	file:
SIDECOLL_MARGIN	src/drivers/damned/driver.h	/^		static const float SIDECOLL_MARGIN;$/;"	m	class:Driver
SIDECOLL_MARGIN	src/drivers/olethros/driver.cpp	/^    const float Driver::SIDECOLL_MARGIN = 3.0f;					\/\/\/< [m] Distance between car centers to avoid side collisions.$/;"	m	class:olethros::Driver	file:
SIDECOLL_MARGIN	src/drivers/olethros/driver.h	/^	static const float SIDECOLL_MARGIN;$/;"	m	class:olethros::Driver
SIDECOLL_MARGIN	src/drivers/sparkle/driver.cpp	/^const float Driver::SIDECOLL_MARGIN = 2.0;					\/* [m] *\/$/;"	m	class:Driver	file:
SIDECOLL_MARGIN	src/drivers/sparkle/driver.h	/^		static const float SIDECOLL_MARGIN;$/;"	m	class:Driver
SIDE_MARGIN	src/drivers/bt/opponent.cpp	/^const float Opponent::SIDE_MARGIN = 1.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
SIDE_MARGIN	src/drivers/bt/opponent.h	/^		static const float SIDE_MARGIN;$/;"	m	class:Opponent
SIDE_MARGIN	src/drivers/damned/opponent.cpp	/^const float Opponent::SIDE_MARGIN = 1.0f;				\/\/ [m] savety margin.$/;"	m	class:Opponent	file:
SIDE_MARGIN	src/drivers/damned/opponent.h	/^		static const float SIDE_MARGIN;$/;"	m	class:Opponent
SIDE_MARGIN	src/drivers/olethros/opponent.cpp	/^const float Opponent::SIDE_MARGIN = 1.0;				\/\/ [m] safety margin.$/;"	m	class:olethros::Opponent	file:
SIDE_MARGIN	src/drivers/olethros/opponent.h	/^		static const float SIDE_MARGIN;$/;"	m	class:olethros::Opponent
SIDE_MARGIN	src/drivers/sparkle/opponent.cpp	/^float Opponent::SIDE_MARGIN = 1.0;		\/* [m] savety margin *\/$/;"	m	class:Opponent	file:
SIDE_MARGIN	src/drivers/sparkle/opponent.h	/^		static float SIDE_MARGIN;$/;"	m	class:Opponent
SIGN	export/include/tgf.h	79;"	d
SIGN	src/libs/tgf/tgf.h	79;"	d
SIMU_PRMS	src/drivers/inferno2/inferno2.cpp	223;"	d	file:
SIM_IDENT	export/include/simu.h	27;"	d
SIM_IDENT	src/interfaces/simu.h	27;"	d
SIM_SUSP_COMP	src/modules/simu/simuv2/susp.h	57;"	d
SIM_SUSP_EXT	src/modules/simu/simuv2/susp.h	58;"	d
SIM_VECT_ACCEL	src/modules/simu/simuv2/sim.h	114;"	d
SIM_VECT_COLL	src/modules/simu/simuv2/sim.h	112;"	d
SIM_VECT_SPD	src/modules/simu/simuv2/sim.h	113;"	d
SIM_WHEEL_ACCEL	src/modules/simu/simuv2/sim.h	116;"	d
SIM_WHEEL_SPD	src/modules/simu/simuv2/sim.h	115;"	d
SIM_WH_LOCKED	src/modules/simu/simuv2/wheel.h	48;"	d
SIM_WH_SPINNING	src/modules/simu/simuv2/wheel.h	47;"	d
SIM_Z_OFFSET	src/modules/simu/simuv2/sim.h	118;"	d
SINGULAR	export/include/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
SINGULAR	src/libs/learning/policy.h	/^enum ConfidenceDistribution {SINGULAR, BOUNDED, GAUSSIAN, LAPLACIAN};$/;"	e	enum:ConfidenceDistribution
SKID_BEGIN	src/modules/graphic/ssggraph/grskidmarks.h	9;"	d
SKID_RUNNING	src/modules/graphic/ssggraph/grskidmarks.h	10;"	d
SKID_STOPPED	src/modules/graphic/ssggraph/grskidmarks.h	11;"	d
SKID_UNUSED	src/modules/graphic/ssggraph/grskidmarks.h	8;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	32;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	34;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	36;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	38;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	40;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	42;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	44;"	d
SLDSP_DEFAULT_DEVICE	src/windows/include/plib/sl.h	46;"	d
SLOW	src/drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon123
SLOW	src/drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon98
SLOW	src/drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon114
SLOW	src/drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon139
SLOW	src/drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon132
SLOW	src/drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon105
SL_DEFAULT_SAMPLING_RATE	src/windows/include/plib/sl.h	57;"	d
SL_ECHO_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_ECHO_ENVELOPE  , SL_INVERSE_ECHO_ENVELOPE  ,$/;"	e	enum:slEnvelopeType
SL_EVENT_COMPLETE	src/windows/include/plib/sl.h	/^  SL_EVENT_COMPLETE,  \/* Sound finished playing *\/$/;"	e	enum:slEvent
SL_EVENT_LOOPED	src/windows/include/plib/sl.h	/^  SL_EVENT_LOOPED,    \/* Sound looped back to the start *\/$/;"	e	enum:slEvent
SL_EVENT_PREEMPTED	src/windows/include/plib/sl.h	/^  SL_EVENT_PREEMPTED  \/* Sound was preempted *\/$/;"	e	enum:slEvent
SL_FALSE	src/windows/include/plib/sl.h	52;"	d
SL_FILTER_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_FILTER_ENVELOPE, SL_INVERSE_FILTER_ENVELOPE,$/;"	e	enum:slEnvelopeType
SL_INVERSE_ECHO_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_ECHO_ENVELOPE  , SL_INVERSE_ECHO_ENVELOPE  ,$/;"	e	enum:slEnvelopeType
SL_INVERSE_FILTER_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_FILTER_ENVELOPE, SL_INVERSE_FILTER_ENVELOPE,$/;"	e	enum:slEnvelopeType
SL_INVERSE_PAN_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_PAN_ENVELOPE   , SL_INVERSE_PAN_ENVELOPE   ,$/;"	e	enum:slEnvelopeType
SL_INVERSE_PITCH_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_PITCH_ENVELOPE , SL_INVERSE_PITCH_ENVELOPE ,$/;"	e	enum:slEnvelopeType
SL_INVERSE_VOLUME_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_VOLUME_ENVELOPE, SL_INVERSE_VOLUME_ENVELOPE,$/;"	e	enum:slEnvelopeType
SL_MAX_CALLBACKS	src/windows/include/plib/sl.h	450;"	d
SL_MAX_ENVELOPES	src/windows/include/plib/sl.h	451;"	d
SL_MAX_MIXERINPUTS	src/windows/include/plib/sl.h	452;"	d
SL_MAX_PRIORITY	src/windows/include/plib/sl.h	448;"	d
SL_MAX_SAMPLES	src/windows/include/plib/sl.h	449;"	d
SL_NULL_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_NULL_ENVELOPE$/;"	e	enum:slEnvelopeType
SL_PAN_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_PAN_ENVELOPE   , SL_INVERSE_PAN_ENVELOPE   ,$/;"	e	enum:slEnvelopeType
SL_PITCH_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_PITCH_ENVELOPE , SL_INVERSE_PITCH_ENVELOPE ,$/;"	e	enum:slEnvelopeType
SL_SAMPLE_ABORT	src/windows/include/plib/sl.h	/^  SL_SAMPLE_ABORT   ,  \/* Abort playing the sound when preempted *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_CONTINUE	src/windows/include/plib/sl.h	/^  SL_SAMPLE_CONTINUE,  \/* Don't allow yourself to be preempted   *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_DELAY	src/windows/include/plib/sl.h	/^  SL_SAMPLE_DELAY      \/* Pause until load permits               *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_DONE	src/windows/include/plib/sl.h	/^  SL_SAMPLE_DONE   ,  \/* Sound is complete *\/$/;"	e	enum:slSampleStatus
SL_SAMPLE_LOOP	src/windows/include/plib/sl.h	/^  SL_SAMPLE_LOOP,      \/* Loop sound so that it plays forever *\/$/;"	e	enum:slReplayMode
SL_SAMPLE_MUTE	src/windows/include/plib/sl.h	/^  SL_SAMPLE_MUTE    ,  \/* Continue silently until load permits   *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_ONE_SHOT	src/windows/include/plib/sl.h	/^  SL_SAMPLE_ONE_SHOT   \/* Play sound just once *\/$/;"	e	enum:slReplayMode
SL_SAMPLE_PAUSED	src/windows/include/plib/sl.h	/^  SL_SAMPLE_PAUSED    \/* Sound hasn't started playing yet *\/$/;"	e	enum:slSampleStatus
SL_SAMPLE_RESTART	src/windows/include/plib/sl.h	/^  SL_SAMPLE_RESTART ,  \/* Restart the sound when load permits    *\/$/;"	e	enum:slPreemptMode
SL_SAMPLE_RUNNING	src/windows/include/plib/sl.h	/^  SL_SAMPLE_RUNNING,  \/* Sound has started playing *\/$/;"	e	enum:slSampleStatus
SL_SAMPLE_WAITING	src/windows/include/plib/sl.h	/^  SL_SAMPLE_WAITING,  \/* Sound hasn't started playing yet *\/$/;"	e	enum:slSampleStatus
SL_TRUE	src/windows/include/plib/sl.h	51;"	d
SL_USING_OSS_AUDIO	src/windows/include/plib/slPortability.h	55;"	d
SL_VOLUME_ENVELOPE	src/windows/include/plib/sl.h	/^  SL_VOLUME_ENVELOPE, SL_INVERSE_VOLUME_ENVELOPE,$/;"	e	enum:slEnvelopeType
SMALL	src/tools/trackgen/easymesh.cpp	49;"	d	file:
SMALL_MEDIUM	src/windows/include/zconf.h	149;"	d
SMALL_MEDIUM	src/windows/include/zconf.h	158;"	d
SMMIXER_DEFAULT_DEVICE	src/windows/include/plib/sm.h	31;"	d
SMMIXER_DEFAULT_DEVICE	src/windows/include/plib/sm.h	33;"	d
SMOKE_INIT_SIZE	src/modules/graphic/ssggraph/grsmoke.h	4;"	d
SMOKE_TYPE_ENGINE	src/modules/graphic/ssggraph/grsmoke.h	13;"	d
SMOKE_TYPE_TIRE	src/modules/graphic/ssggraph/grsmoke.h	12;"	d
SM_FALSE	src/windows/include/plib/sm.h	39;"	d
SM_TRUE	src/windows/include/plib/sm.h	38;"	d
SOLIBDIR	src/libs/client/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	src/libs/confscreens/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	src/libs/learning/Makefile	/^SOLIBDIR     = .$/;"	m
SOLIBDIR	src/libs/raceengineclient/Makefile	/^SOLIBDIR     = .$/;"	m
SOLIBDIR	src/libs/racescreens/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	src/libs/robottools/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	src/libs/tgf/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	src/libs/tgfclient/Makefile	/^SOLIBDIR  = .$/;"	m
SOLIBDIR	src/libs/txml/Makefile	/^SOLIBDIR    = .$/;"	m
SOLIBRARY	src/libs/client/Makefile	/^SOLIBRARY = libclient.so$/;"	m
SOLIBRARY	src/libs/confscreens/Makefile	/^SOLIBRARY = libconfscreens.so$/;"	m
SOLIBRARY	src/libs/learning/Makefile	/^SOLIBRARY    = liblearning.so$/;"	m
SOLIBRARY	src/libs/raceengineclient/Makefile	/^SOLIBRARY    = libraceengine.so$/;"	m
SOLIBRARY	src/libs/racescreens/Makefile	/^SOLIBRARY = libracescreens.so$/;"	m
SOLIBRARY	src/libs/robottools/Makefile	/^SOLIBRARY = librobottools.so$/;"	m
SOLIBRARY	src/libs/tgf/Makefile	/^SOLIBRARY = libtgf.so$/;"	m
SOLIBRARY	src/libs/tgfclient/Makefile	/^SOLIBRARY = libtgfclient.so$/;"	m
SOLIBRARY	src/libs/txml/Makefile	/^SOLIBRARY   = libtxml.so$/;"	m
SOLIBS	src/linux/Makefile	/^SOLIBS  =  -lracescreens  \\$/;"	m
SOLIBS	src/tools/accc/Makefile	/^SOLIBS		= -ltgf -lplibssg -lplibsg -lplibul -ltxml$/;"	m
SOLIBS	src/tools/nfsperf/Makefile	/^SOLIBS		= -ltgf -ltxml$/;"	m
SOLIBS	src/tools/texmapper/Makefile	/^SOLIBS    	= -lplibssg -lplibsg -lplibul -ltgf -ltgfclient -ltxml -lpng$/;"	m
SOLIBS	src/tools/trackgen/Makefile	/^SOLIBS       	= -ltgf -ltgfclient -lplibssg -lplibsg -lplibul -lrobottools -ltxml$/;"	m
SOUND_DEFINES_H	src/modules/graphic/ssggraph/sound_defines.h	2;"	d
SOUND_INTERFACE_H	src/modules/graphic/ssggraph/SoundInterface.h	21;"	d
SOUND_LOG	src/modules/graphic/ssggraph/SoundInterface.h	25;"	d
SOURCEBASE	Make-default.mk	/^SOURCEBASE  = ${TORCS_BASE}\/src$/;"	m
SOURCES	src/drivers/berniw/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	src/drivers/berniw2/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	src/drivers/berniw3/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	src/drivers/bt/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp learn.cpp strategy.cpp cardata.cpp$/;"	m
SOURCES	src/drivers/damned/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp learn.cpp strategy.cpp cardata.cpp$/;"	m
SOURCES	src/drivers/human/Makefile	/^SOURCES   = ${ROBOT}.cpp pref.cpp$/;"	m
SOURCES	src/drivers/inferno/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	src/drivers/inferno2/Makefile	/^SOURCES   = ${ROBOT}.cpp common.cpp$/;"	m
SOURCES	src/drivers/lliaw/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	src/drivers/olethros/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp learn.cpp strategy.cpp cardata.cpp geometry.cpp Trajectory.cpp TrackData.cpp$/;"	m
SOURCES	src/drivers/sparkle/Makefile	/^SOURCES     = ${ROBOT}.cpp driver.cpp opponent.cpp spline.cpp pit.cpp$/;"	m
SOURCES	src/drivers/tita/Makefile	/^SOURCES   = ${ROBOT}.cpp spline.cpp trackdesc.cpp pathfinder.cpp mycar.cpp$/;"	m
SOURCES	src/libs/client/Makefile	/^SOURCES   = entry.cpp mainmenu.cpp splash.cpp exitmenu.cpp \\$/;"	m
SOURCES	src/libs/confscreens/Makefile	/^SOURCES   = controlconfig.cpp  graphconfig.cpp mouseconfig.cpp driverconfig.cpp joystickconfig.cpp\\$/;"	m
SOURCES	src/libs/learning/Makefile	/^SOURCES      = policy.cpp ann_policy.cpp List.cpp string_utils.cpp Distribution.cpp MathFunctions.cpp ANN.cpp$/;"	m
SOURCES	src/libs/raceengineclient/Makefile	/^SOURCES      = singleplayer.cpp raceinit.cpp racemain.cpp racemanmenu.cpp racestate.cpp racegl.cpp \\$/;"	m
SOURCES	src/libs/racescreens/Makefile	/^SOURCES   = trackselect.cpp driverselect.cpp results.cpp pitmenu.cpp loadingscreen.cpp racemenu.cpp miscscreens.cpp fileselect.cpp$/;"	m
SOURCES	src/libs/robottools/Makefile	/^SOURCES   = rttrack.cpp rttelem.cpp$/;"	m
SOURCES	src/libs/tgf/Makefile	/^SOURCES   = 	module.cpp \\$/;"	m
SOURCES	src/libs/tgfclient/Makefile	/^SOURCES   = 	guimenu.cpp \\$/;"	m
SOURCES	src/libs/txml/Makefile	/^SOURCES     = xmltok.c xmlrole.c xmlparse.c hashtable.c xml.cpp$/;"	m
SOURCES	src/libs/txml/gennmtab/Makefile	/^SOURCES = gennmtab.c$/;"	m
SOURCES	src/linux/Makefile	/^SOURCES = main.cpp linuxspec.cpp$/;"	m
SOURCES	src/modules/graphic/ssggraph/Makefile	/^SOURCES   = grmain.cpp grboard.cpp ssggraph.cpp grcam.cpp grcar.cpp grscreen.cpp\\$/;"	m
SOURCES	src/modules/simu/simuv2/Makefile	/^SOURCES		= simu.cpp \\$/;"	m
SOURCES	src/modules/simu/simuv2/SOLID-2.0/src/Makefile	/^SOURCES      = 	Transform.cpp Convex.cpp Box.cpp Cone.cpp Cylinder.cpp Sphere.cpp \\$/;"	m
SOURCES	src/modules/telemetry/Makefile	/^SOURCES   = telemetryitf.cpp telemetry.cpp$/;"	m
SOURCES	src/modules/track/Makefile	/^SOURCES   = track.cpp trackitf.cpp trackutil.cpp track3.cpp track4.cpp$/;"	m
SOURCES	src/tools/accc/Makefile	/^SOURCES		= mainaccc.cpp ..\/..\/linux\/linuxspec.cpp ac3dload.cpp ac3dgroup.cpp$/;"	m
SOURCES	src/tools/nfs2ac/Makefile	/^SOURCES		= mainnfs2ac.cpp$/;"	m
SOURCES	src/tools/nfsperf/Makefile	/^SOURCES		= mainnfsperf.cpp$/;"	m
SOURCES	src/tools/texmapper/Makefile	/^SOURCES   	= maintexmapper.cpp ssgSaveAC.cpp$/;"	m
SOURCES	src/tools/trackgen/Makefile	/^SOURCES      	= maintrackgen.cpp track.cpp easymesh.cpp ..\/..\/linux\/linuxspec.cpp relief.cpp elevation.cpp objects.cpp ac3d.cpp util.cpp$/;"	m
SPDTGT	src/drivers/inferno2/inferno2.cpp	232;"	d	file:
SPDTGT2	src/drivers/inferno2/inferno2.cpp	233;"	d	file:
SPECFILES	src/tools/package/specfiles/Makefile	/^SPECFILES = $(shell find *.spec -maxdepth 0 -type f -print) build_rpms.sh build_data_rpms.sh$/;"	m
SPECFILESBASE	Make-default.mk	/^SPECFILESBASE = ${TORCS_BASE}\/RPM\/SPECS$/;"	m
SPEEDSQRFACTOR	src/drivers/berniw/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	src/drivers/berniw2/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	src/drivers/berniw3/mycar.h	/^		double SPEEDSQRFACTOR;							\/* multiplier for speedsqr *\/$/;"	m	class:MyCar
SPEEDSQRFACTOR	src/drivers/inferno/mycar.h	/^		double SPEEDSQRFACTOR;							\/\/ Multiplier for speedsqr.$/;"	m	class:MyCar
SPEEDSQRFACTOR	src/drivers/lliaw/mycar.h	/^		double SPEEDSQRFACTOR;							\/\/ Multiplier for speedsqr.$/;"	m	class:MyCar
SPEEDSQRFACTOR	src/drivers/tita/mycar.h	/^		double SPEEDSQRFACTOR;							\/\/ Multiplier for speedsqr.$/;"	m	class:MyCar
SPEED_LIMIT_MARGIN	src/drivers/bt/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;		\/\/ [m\/s] savety margin to avoid pit speeding.$/;"	m	class:Pit	file:
SPEED_LIMIT_MARGIN	src/drivers/bt/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:Pit
SPEED_LIMIT_MARGIN	src/drivers/damned/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;		\/\/ [m\/s] savety margin to avoid pit speeding.$/;"	m	class:Pit	file:
SPEED_LIMIT_MARGIN	src/drivers/damned/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:Pit
SPEED_LIMIT_MARGIN	src/drivers/olethros/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;		\/\/ [m\/s] savety margin to avoid pit speeding.$/;"	m	class:olethros::Pit	file:
SPEED_LIMIT_MARGIN	src/drivers/olethros/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:olethros::Pit
SPEED_LIMIT_MARGIN	src/drivers/sparkle/pit.cpp	/^const float Pit::SPEED_LIMIT_MARGIN = 0.5;      \/* [m\/s] savety margin *\/$/;"	m	class:Pit	file:
SPEED_LIMIT_MARGIN	src/drivers/sparkle/pit.h	/^		static const float SPEED_LIMIT_MARGIN;$/;"	m	class:Pit
SPEED_OF_SOUND	src/modules/graphic/ssggraph/sound_defines.h	10;"	d
SPEED_PASS_MARGIN	src/drivers/bt/opponent.cpp	/^const float Opponent::SPEED_PASS_MARGIN = 5.0f;			\/\/ [m\/s] avoid overlapping opponents to stuck behind me.$/;"	m	class:Opponent	file:
SPEED_PASS_MARGIN	src/drivers/bt/opponent.h	/^		static const float SPEED_PASS_MARGIN;$/;"	m	class:Opponent
SPEED_PASS_MARGIN	src/drivers/damned/opponent.cpp	/^const float Opponent::SPEED_PASS_MARGIN = 5.0f;			\/\/ [m\/s] avoid overlapping opponents to stuck behind me.$/;"	m	class:Opponent	file:
SPEED_PASS_MARGIN	src/drivers/damned/opponent.h	/^		static const float SPEED_PASS_MARGIN;$/;"	m	class:Opponent
SPEED_PASS_MARGIN	src/drivers/olethros/opponent.cpp	/^const float Opponent::SPEED_PASS_MARGIN = 5.0;			\/\/ [m\/s] avoid overlapping opponents to stuck behind me.$/;"	m	class:olethros::Opponent	file:
SPEED_PASS_MARGIN	src/drivers/olethros/opponent.h	/^		static const float SPEED_PASS_MARGIN;$/;"	m	class:olethros::Opponent
SPLITX	src/tools/accc/accc.h	168;"	d
SPLITY	src/tools/accc/accc.h	169;"	d
SRCDOC	src/Makefile	/^SRCDOC		= yes$/;"	m
SSGA_HAVE_PATCH	src/windows/include/plib/ssgaShapes.h	119;"	d
SSGA_HAVE_TEAPOT	src/windows/include/plib/ssgaShapes.h	155;"	d
SSGA_MAX_WAVETRAIN	src/windows/include/plib/ssgaWaveSystem.h	27;"	d
SSGTRAV_CULL	src/windows/include/plib/ssg.h	54;"	d
SSGTRAV_HOT	src/windows/include/plib/ssg.h	56;"	d
SSGTRAV_ISECT	src/windows/include/plib/ssg.h	55;"	d
SSGTRAV_LOS	src/windows/include/plib/ssg.h	57;"	d
SSGTWEEN_REPEAT	src/windows/include/plib/ssg.h	1653;"	d
SSGTWEEN_STOP_AT_END	src/windows/include/plib/ssg.h	1652;"	d
SSG_ANIM_CLOCK	src/windows/include/plib/ssg.h	/^    SSG_ANIM_CLOCK$/;"	e	enum:ssgAnimTimeMode
SSG_ANIM_FRAME	src/windows/include/plib/ssg.h	/^    SSG_ANIM_FRAME,$/;"	e	enum:ssgAnimTimeMode
SSG_ANIM_ONESHOT	src/windows/include/plib/ssg.h	/^  SSG_ANIM_ONESHOT,$/;"	e	enum:ssgAnimDirection
SSG_ANIM_PAUSE	src/windows/include/plib/ssg.h	/^  SSG_ANIM_PAUSE,$/;"	e	enum:ssgAnimEnum
SSG_ANIM_RESUME	src/windows/include/plib/ssg.h	/^  SSG_ANIM_RESUME$/;"	e	enum:ssgAnimEnum
SSG_ANIM_SHUTTLE	src/windows/include/plib/ssg.h	/^  SSG_ANIM_SHUTTLE$/;"	e	enum:ssgAnimDirection
SSG_ANIM_START	src/windows/include/plib/ssg.h	/^  SSG_ANIM_START,$/;"	e	enum:ssgAnimEnum
SSG_ANIM_STOP	src/windows/include/plib/ssg.h	/^  SSG_ANIM_STOP,$/;"	e	enum:ssgAnimEnum
SSG_ANIM_SWING	src/windows/include/plib/ssg.h	/^  SSG_ANIM_SWING,$/;"	e	enum:ssgAnimDirection
SSG_CALLBACK_POSTDRAW	src/windows/include/plib/ssg.h	762;"	d
SSG_CALLBACK_POSTTRAV	src/windows/include/plib/ssg.h	766;"	d
SSG_CALLBACK_PREAPPLY	src/windows/include/plib/ssg.h	772;"	d
SSG_CALLBACK_PREDRAW	src/windows/include/plib/ssg.h	761;"	d
SSG_CALLBACK_PRETRAV	src/windows/include/plib/ssg.h	765;"	d
SSG_CLONE_GEOMETRY	src/windows/include/plib/ssg.h	193;"	d
SSG_CLONE_RECURSIVE	src/windows/include/plib/ssg.h	192;"	d
SSG_CLONE_STATE	src/windows/include/plib/ssg.h	195;"	d
SSG_CLONE_STATE_RECURSIVE	src/windows/include/plib/ssg.h	196;"	d
SSG_CLONE_TEXTURE	src/windows/include/plib/ssg.h	197;"	d
SSG_CLONE_USERDATA	src/windows/include/plib/ssg.h	194;"	d
SSG_FILE_MAGIC_NUMBER	src/windows/include/plib/ssg.h	130;"	d
SSG_FILE_VERSION	src/windows/include/plib/ssg.h	129;"	d
SSG_GL_ALPHA_TEST	src/windows/include/plib/ssg.h	189;"	d
SSG_GL_ALPHA_TEST_EN	src/windows/include/plib/ssg.h	179;"	d
SSG_GL_AMBIENT	src/windows/include/plib/ssg.h	185;"	d
SSG_GL_BLEND_EN	src/windows/include/plib/ssg.h	178;"	d
SSG_GL_COLOR_MATERIAL	src/windows/include/plib/ssg.h	183;"	d
SSG_GL_COLOR_MATERIAL_EN	src/windows/include/plib/ssg.h	177;"	d
SSG_GL_CULL_FACE_EN	src/windows/include/plib/ssg.h	176;"	d
SSG_GL_DIFFUSE	src/windows/include/plib/ssg.h	184;"	d
SSG_GL_EMISSION	src/windows/include/plib/ssg.h	187;"	d
SSG_GL_LIGHTING_EN	src/windows/include/plib/ssg.h	180;"	d
SSG_GL_SHADE_MODEL	src/windows/include/plib/ssg.h	190;"	d
SSG_GL_SHININESS	src/windows/include/plib/ssg.h	188;"	d
SSG_GL_SPECULAR	src/windows/include/plib/ssg.h	186;"	d
SSG_GL_TEXTURE	src/windows/include/plib/ssg.h	182;"	d
SSG_GL_TEXTURE_EN	src/windows/include/plib/ssg.h	175;"	d
SSG_INSIDE	src/windows/include/plib/ssg.h	/^  SSG_INSIDE   = SG_INSIDE,$/;"	e	enum:ssgCullResult
SSG_LOAD_BMP_SUPPORTED	src/windows/include/plib/ssgconf.h	50;"	d
SSG_LOAD_MDL_BGL_TEXTURE_SUPPORTED	src/windows/include/plib/ssgconf.h	52;"	d
SSG_LOAD_MDL_SUPPORTED	src/windows/include/plib/ssgconf.h	51;"	d
SSG_LOAD_PCX_SUPPORTED	src/windows/include/plib/ssgconf.h	54;"	d
SSG_LOAD_PNG_SUPPORTED	src/windows/include/plib/ssgconf.h	46;"	d
SSG_LOAD_SGI_SUPPORTED	src/windows/include/plib/ssgconf.h	48;"	d
SSG_LOAD_TGA_SUPPORTED	src/windows/include/plib/ssgconf.h	49;"	d
SSG_LOAD_XPL_SUPPORTED	src/windows/include/plib/ssgconf.h	53;"	d
SSG_MAXPATH	src/windows/include/plib/ssg.h	52;"	d
SSG_MD2_ALL	src/windows/include/plib/ssg.h	/^	SSG_MD2_ALL,$/;"	e	enum:__anon29
SSG_MD2_ATTACK	src/windows/include/plib/ssg.h	/^	SSG_MD2_ATTACK,$/;"	e	enum:__anon29
SSG_MD2_CROUCH_DEATH	src/windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_DEATH,$/;"	e	enum:__anon29
SSG_MD2_CROUCH_PAIN	src/windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_PAIN,$/;"	e	enum:__anon29
SSG_MD2_CROUCH_STAND	src/windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_STAND,$/;"	e	enum:__anon29
SSG_MD2_CROUCH_WALK	src/windows/include/plib/ssg.h	/^	SSG_MD2_CROUCH_WALK,$/;"	e	enum:__anon29
SSG_MD2_DEATH_1	src/windows/include/plib/ssg.h	/^	SSG_MD2_DEATH_1,$/;"	e	enum:__anon29
SSG_MD2_DEATH_2	src/windows/include/plib/ssg.h	/^	SSG_MD2_DEATH_2,$/;"	e	enum:__anon29
SSG_MD2_DEATH_3	src/windows/include/plib/ssg.h	/^	SSG_MD2_DEATH_3,$/;"	e	enum:__anon29
SSG_MD2_FLIPOFF	src/windows/include/plib/ssg.h	/^	SSG_MD2_FLIPOFF,$/;"	e	enum:__anon29
SSG_MD2_JUMP	src/windows/include/plib/ssg.h	/^	SSG_MD2_JUMP,$/;"	e	enum:__anon29
SSG_MD2_PAIN_1	src/windows/include/plib/ssg.h	/^	SSG_MD2_PAIN_1,$/;"	e	enum:__anon29
SSG_MD2_PAIN_2	src/windows/include/plib/ssg.h	/^	SSG_MD2_PAIN_2,$/;"	e	enum:__anon29
SSG_MD2_PAIN_3	src/windows/include/plib/ssg.h	/^	SSG_MD2_PAIN_3,$/;"	e	enum:__anon29
SSG_MD2_POINT	src/windows/include/plib/ssg.h	/^	SSG_MD2_POINT,$/;"	e	enum:__anon29
SSG_MD2_POSE	src/windows/include/plib/ssg.h	/^	SSG_MD2_POSE$/;"	e	enum:__anon29
SSG_MD2_RUN	src/windows/include/plib/ssg.h	/^	SSG_MD2_RUN,$/;"	e	enum:__anon29
SSG_MD2_SALUTE	src/windows/include/plib/ssg.h	/^	SSG_MD2_SALUTE,$/;"	e	enum:__anon29
SSG_MD2_STAND	src/windows/include/plib/ssg.h	/^	SSG_MD2_STAND,$/;"	e	enum:__anon29
SSG_MD2_TAUNT	src/windows/include/plib/ssg.h	/^	SSG_MD2_TAUNT,$/;"	e	enum:__anon29
SSG_MD2_WAVE	src/windows/include/plib/ssg.h	/^	SSG_MD2_WAVE,$/;"	e	enum:__anon29
SSG_OUTSIDE	src/windows/include/plib/ssg.h	/^  SSG_OUTSIDE  = SG_OUTSIDE,$/;"	e	enum:ssgCullResult
SSG_STRADDLE	src/windows/include/plib/ssg.h	/^  SSG_STRADDLE = SG_STRADDLE$/;"	e	enum:ssgCullResult
STABLESPEED	src/drivers/berniw/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	src/drivers/berniw/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	src/drivers/berniw2/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	src/drivers/berniw2/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	src/drivers/berniw3/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;			\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar	file:
STABLESPEED	src/drivers/berniw3/mycar.h	/^		static const double STABLESPEED;		\/* we brake currentspeed\/stablespeed if car seems unstable [m\/s] *\/$/;"	m	class:MyCar
STABLESPEED	src/drivers/inferno/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;				\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar	file:
STABLESPEED	src/drivers/inferno/mycar.h	/^		static const double STABLESPEED;			\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar
STABLESPEED	src/drivers/lliaw/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;				\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar	file:
STABLESPEED	src/drivers/lliaw/mycar.h	/^		static const double STABLESPEED;			\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar
STABLESPEED	src/drivers/tita/mycar.cpp	/^const double MyCar::STABLESPEED = 80.0;				\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar	file:
STABLESPEED	src/drivers/tita/mycar.h	/^		static const double STABLESPEED;			\/\/ We brake currentspeed\/stablespeed if car seems unstable [m\/s].$/;"	m	class:MyCar
START	src/drivers/berniw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon123
START	src/drivers/berniw2/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon98
START	src/drivers/berniw3/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon114
START	src/drivers/inferno/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon139
START	src/drivers/lliaw/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon132
START	src/drivers/tita/mycar.h	/^			INSANE = 0, PUSH = 1, NORMAL = 2, CAREFUL = 3, SLOW = 4, START = 5$/;"	e	enum:MyCar::__anon105
START_NAME	src/libs/txml/xmltok_impl.c	1314;"	d	file:
START_NAME	src/libs/txml/xmltok_impl.c	1331;"	d	file:
START_PROFILE	export/include/tgf.h	558;"	d
START_PROFILE	export/include/tgf.h	598;"	d
START_PROFILE	src/libs/tgf/tgf.h	558;"	d
START_PROFILE	src/libs/tgf/tgf.h	598;"	d
STDC	src/windows/include/zconf.h	75;"	d
STDC	src/windows/include/zconf.h	79;"	d
STDC_HEADERS	config.h	125;"	d
STEERMULT	src/drivers/inferno2/inferno2.cpp	234;"	d	file:
STEER_AVOIDANCE_GAIN	src/drivers/olethros/driver.cpp	/^    const float Driver::STEER_AVOIDANCE_GAIN = 0.2f; \/\/\/< [lograd\/m] Gain for border avoidance steering$/;"	m	class:olethros::Driver	file:
STEER_AVOIDANCE_GAIN	src/drivers/olethros/driver.h	/^	static const float STEER_AVOIDANCE_GAIN;$/;"	m	class:olethros::Driver
STEER_DIRECTION_GAIN	src/drivers/olethros/driver.cpp	/^    const float Driver::STEER_DIRECTION_GAIN = 1.0f; \/\/\/< [-] Gain to apply for basic steerin$/;"	m	class:olethros::Driver	file:
STEER_DIRECTION_GAIN	src/drivers/olethros/driver.h	/^	static const float STEER_DIRECTION_GAIN;$/;"	m	class:olethros::Driver
STEER_DRIFT_GAIN	src/drivers/olethros/driver.cpp	/^    const float Driver::STEER_DRIFT_GAIN = 0.01f; \/\/\/< [-] Gain for drift compensation$/;"	m	class:olethros::Driver	file:
STEER_DRIFT_GAIN	src/drivers/olethros/driver.h	/^	static const float STEER_DRIFT_GAIN;$/;"	m	class:olethros::Driver
STEER_D_CONTROLLER_GAIN	src/drivers/inferno/mycar.cpp	/^const double MyCar::STEER_D_CONTROLLER_GAIN = 0.1;	\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar	file:
STEER_D_CONTROLLER_GAIN	src/drivers/inferno/mycar.h	/^		static const double STEER_D_CONTROLLER_GAIN;\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar
STEER_D_CONTROLLER_GAIN	src/drivers/lliaw/mycar.cpp	/^const double MyCar::STEER_D_CONTROLLER_GAIN = 0.1;	\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar	file:
STEER_D_CONTROLLER_GAIN	src/drivers/lliaw/mycar.h	/^		static const double STEER_D_CONTROLLER_GAIN;\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar
STEER_D_CONTROLLER_GAIN	src/drivers/tita/mycar.cpp	/^const double MyCar::STEER_D_CONTROLLER_GAIN = 0.1;	\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar	file:
STEER_D_CONTROLLER_GAIN	src/drivers/tita/mycar.h	/^		static const double STEER_D_CONTROLLER_GAIN;\/\/ [-] Output gain of steering d-controller.$/;"	m	class:MyCar
STEER_EMERGENCY_GAIN	src/drivers/olethros/driver.cpp	/^    const float Driver::STEER_EMERGENCY_GAIN = 0.01f; \/\/\/< [-] Gain for emergency steering$/;"	m	class:olethros::Driver	file:
STEER_EMERGENCY_GAIN	src/drivers/olethros/driver.h	/^	static const float STEER_EMERGENCY_GAIN;$/;"	m	class:olethros::Driver
STEER_PREDICT_GAIN	src/drivers/olethros/driver.cpp	/^    const float Driver::STEER_PREDICT_GAIN = 0.1f; \/\/\/< [-] Predictive gain, multiplied with yaw rate.$/;"	m	class:olethros::Driver	file:
STEER_PREDICT_GAIN	src/drivers/olethros/driver.h	/^	static const float STEER_PREDICT_GAIN;$/;"	m	class:olethros::Driver
STEER_P_CONTROLLER_GAIN	src/drivers/inferno/mycar.h	/^		double STEER_P_CONTROLLER_GAIN;					\/\/ [-] Output gain of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_GAIN	src/drivers/lliaw/mycar.h	/^		double STEER_P_CONTROLLER_GAIN;					\/\/ [-] Output gain of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_GAIN	src/drivers/tita/mycar.h	/^		double STEER_P_CONTROLLER_GAIN;					\/\/ [-] Output gain of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_MAX	src/drivers/inferno/mycar.h	/^		double STEER_P_CONTROLLER_MAX;					\/\/ [-] Maximum output of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_MAX	src/drivers/lliaw/mycar.h	/^		double STEER_P_CONTROLLER_MAX;					\/\/ [-] Maximum output of p-controller.$/;"	m	class:MyCar
STEER_P_CONTROLLER_MAX	src/drivers/tita/mycar.h	/^		double STEER_P_CONTROLLER_MAX;					\/\/ [-] Maximum output of p-controller.$/;"	m	class:MyCar
STOP_ACTIVE_PROFILES	export/include/tgf.h	560;"	d
STOP_ACTIVE_PROFILES	export/include/tgf.h	600;"	d
STOP_ACTIVE_PROFILES	src/libs/tgf/tgf.h	560;"	d
STOP_ACTIVE_PROFILES	src/libs/tgf/tgf.h	600;"	d
STOP_PROFILE	export/include/tgf.h	559;"	d
STOP_PROFILE	export/include/tgf.h	599;"	d
STOP_PROFILE	src/libs/tgf/tgf.h	559;"	d
STOP_PROFILE	src/libs/tgf/tgf.h	599;"	d
STRINGID	src/drivers/bt/learn.cpp	27;"	d	file:
STRINGID	src/drivers/damned/learn.cpp	27;"	d	file:
STRING_POOL	src/libs/txml/xmlparse.c	/^} STRING_POOL;$/;"	t	typeref:struct:__anon77	file:
STRING_UTILS_INC	export/include/learning/string_utils.h	17;"	d
STRING_UTILS_INC	src/libs/learning/string_utils.h	17;"	d
SUBDIRS	Makefile	/^SUBDIRS		= src$/;"	m
SUBDIRS	src/Makefile	/^SUBDIRS		= libs linux modules drivers tools$/;"	m
SUBDIRS	src/drivers/Makefile	/^SUBDIRS = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SUBDIRS	src/libs/Makefile	/^SUBDIRS		= confscreens racescreens robottools txml tgf tgfclient client raceengineclient learning \\$/;"	m
SUBDIRS	src/libs/txml/Makefile	/^SUBDIRS = gennmtab$/;"	m
SUBDIRS	src/modules/Makefile	/^SUBDIRS		= simu track graphic telemetry$/;"	m
SUBDIRS	src/modules/graphic/Makefile	/^SUBDIRS		= ssggraph$/;"	m
SUBDIRS	src/modules/simu/Makefile	/^SUBDIRS		= simuv2$/;"	m
SUBDIRS	src/modules/simu/simuv2/Makefile	/^SUBDIRS		= SOLID-2.0$/;"	m
SUBDIRS	src/modules/simu/simuv2/SOLID-2.0/Makefile	/^SUBDIRS		= src$/;"	m
SUBDIRS	src/tools/Makefile	/^SUBDIRS		= $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SUBDIRS	src/tools/package/Makefile	/^SUBDIRS	      = $(shell find * -maxdepth 0 -type d -print | grep -v CVS)$/;"	m
SURF	src/tools/accc/ac3dload.cpp	47;"	d	file:
SURF_INCR	src/tools/trackgen/easymesh.cpp	148;"	d	file:
Sarsa	export/include/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
Sarsa	src/libs/learning/policy.h	/^enum LearningMethod {QLearning, Sarsa, ForcedLearning, ELearning};$/;"	e	enum:LearningMethod
SaveANN	src/libs/learning/ANN.cpp	/^int SaveANN(ANN* ann, FILE* f)$/;"	f
SaveANN	src/libs/learning/ANN.cpp	/^int SaveANN(ANN* ann, char* filename)$/;"	f
SaveDrvList	src/libs/confscreens/driverconfig.cpp	/^SaveDrvList(void * \/* dummy *\/)$/;"	f	file:
SaveElevation	src/tools/trackgen/elevation.cpp	/^void SaveElevation(tTrack *track, void *TrackHandle, char *imgFile, char *meshFile, int dispf)$/;"	f
SaveGraphicOptions	src/libs/confscreens/graphconfig.cpp	/^SaveGraphicOptions(void *prevMenu)$/;"	f	file:
SaveMainTrack	src/tools/trackgen/track.cpp	/^SaveMainTrack(FILE *curFd, int bump)$/;"	f	file:
SaveSimuVersion	src/libs/confscreens/simuconfig.cpp	/^static void SaveSimuVersion(void * \/* dummy *\/)$/;"	f	file:
Scalar	export/include/3D/Basic.h	34;"	d
Scalar	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	34;"	d
ScrH	src/libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
ScrW	src/libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
Screen	src/libs/tgfclient/fg_gm.cpp	/^	int					Screen;             \/\/ The screen we are about to use.$/;"	m	struct:tagSFG_Display	file:
ScreenHeight	src/libs/tgfclient/fg_gm.cpp	/^	int					ScreenHeight;		\/\/ The screen's height in pixels.$/;"	m	struct:tagSFG_Display	file:
ScreenWidth	src/libs/tgfclient/fg_gm.cpp	/^	int					ScreenWidth;		\/\/ The screen's width in pixels.$/;"	m	struct:tagSFG_Display	file:
ScrollBarInfo	export/include/tgfclient.h	/^typedef struct ScrollBarInfo$/;"	s
ScrollBarInfo	src/libs/tgfclient/tgfclient.h	/^typedef struct ScrollBarInfo$/;"	s
SectBarrier	src/modules/track/track4.cpp	/^static char *SectBarrier[2] = {TRK_SECT_RBARRIER, TRK_SECT_LBARRIER};$/;"	v	file:
SectBorder	src/modules/track/track4.cpp	/^static char *SectBorder[2]  = {TRK_SECT_RBORDER, TRK_SECT_LBORDER};$/;"	v	file:
SectSide	src/modules/track/track4.cpp	/^static char *SectSide[2]    = {TRK_SECT_RSIDE, TRK_SECT_LSIDE};$/;"	v	file:
SegExt	export/include/track.h	/^typedef struct SegExt$/;"	s
SegExt	src/interfaces/track.h	/^typedef struct SegExt$/;"	s
SegLearn	src/drivers/bt/learn.cpp	/^SegLearn::SegLearn(tTrack* t, tSituation *s, int driverindex)$/;"	f	class:SegLearn
SegLearn	src/drivers/bt/learn.h	/^class SegLearn {$/;"	c
SegLearn	src/drivers/damned/learn.cpp	/^SegLearn::SegLearn(tTrack* t, tSituation *s, int driverindex)$/;"	f	class:SegLearn
SegLearn	src/drivers/damned/learn.h	/^class SegLearn {$/;"	c
SegLearn	src/drivers/olethros/learn.cpp	/^SegLearn::SegLearn(tTrack* t)$/;"	f	class:SegLearn
SegLearn	src/drivers/olethros/learn.h	/^class SegLearn {$/;"	c	namespace:olethros
Segment	src/drivers/olethros/TrackData.h	/^    Segment (Point left, Point right)$/;"	f	class:Segment
Segment	src/drivers/olethros/TrackData.h	/^class Segment$/;"	c
SegmentList	src/drivers/olethros/TrackData.h	/^class SegmentList$/;"	c
SelectAction	src/libs/learning/ann_policy.cpp	/^int ANN_Policy::SelectAction (real* s, real r, int forced_a)$/;"	f	class:ANN_Policy
SelectAction	src/libs/learning/policy.cpp	/^int DiscretePolicy::SelectAction (int s, real r, int forced_a)$/;"	f	class:DiscretePolicy
SeqShftAllowNeutral	src/drivers/human/human.h	/^	int		SeqShftAllowNeutral;$/;"	m	struct:HumanContext
Serror	export/include/learning/learn_debug.h	10;"	d
Serror	export/include/learning/learn_debug.h	7;"	d
Serror	src/libs/learning/learn_debug.h	10;"	d
Serror	src/libs/learning/learn_debug.h	7;"	d
SetDataDir	src/libs/tgf/tgf.cpp	/^void SetDataDir(char *buf)$/;"	f
SetLibDir	src/libs/tgf/tgf.cpp	/^void SetLibDir(char *buf)$/;"	f
SetLocalDir	src/libs/tgf/tgf.cpp	/^void SetLocalDir(char *buf)$/;"	f
SetMaxSoundCar	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::SetMaxSoundCar(CarSoundData** car_sound_data, QueueSoundMap* smap)$/;"	f	class:OpenalSoundInterface
SetMaxSoundCar	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^void PlibSoundInterface::SetMaxSoundCar(CarSoundData** car_sound_data, QueueSoundMap* smap)$/;"	f	class:PlibSoundInterface
SetMaxSoundCar	src/modules/graphic/ssggraph/SoundInterface.cpp	/^void SoundInterface::SetMaxSoundCar(CarSoundData** car_sound_data, QueueSoundMap* smap)$/;"	f	class:SoundInterface
SetPoint	src/tools/accc/ac3dload.cpp	52;"	d	file:
SetSafetyThreshold	src/drivers/olethros/learn.h	/^	void SetSafetyThreshold (float st) {safety_threshold = st;}$/;"	f	class:olethros::SegLearn
SetSingleTextureMode	src/libs/tgf/tgf.cpp	/^void SetSingleTextureMode (void)$/;"	f
SetStringBufferLength	src/libs/learning/string_utils.cpp	/^StringBuffer* SetStringBufferLength (StringBuffer* s, unsigned int l)$/;"	f
ShadowAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *ShadowAnchor = 0;$/;"	v
Shape	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^class Shape {$/;"	c
ShapePtr	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^typedef const Shape *ShapePtr;$/;"	t
ShapeType	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^enum ShapeType {$/;"	g
SharedSourcePool	src/modules/graphic/ssggraph/SoundInterface.h	/^		SharedSourcePool(int nbsources):nbsources(nbsources) {$/;"	f	class:SharedSourcePool
SharedSourcePool	src/modules/graphic/ssggraph/SoundInterface.h	/^class SharedSourcePool {$/;"	c
ShowPaths	src/drivers/olethros/driver.cpp	/^    void Driver::ShowPaths()$/;"	f	class:olethros::Driver
Side	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^typedef int Side;$/;"	t
SimAeroConfig	src/modules/simu/simuv2/aero.cpp	/^SimAeroConfig(tCar *car)$/;"	f
SimAeroUpdate	src/modules/simu/simuv2/aero.cpp	/^SimAeroUpdate(tCar *car, tSituation *s)$/;"	f
SimAxleConfig	src/modules/simu/simuv2/axle.cpp	/^void SimAxleConfig(tCar *car, int index)$/;"	f
SimAxleUpdate	src/modules/simu/simuv2/axle.cpp	/^void SimAxleUpdate(tCar *car, int index)$/;"	f
SimBrakeConfig	src/modules/simu/simuv2/brake.cpp	/^SimBrakeConfig(void *hdle, char *section, tBrake *brake)$/;"	f
SimBrakeSystemConfig	src/modules/simu/simuv2/brake.cpp	/^SimBrakeSystemConfig(tCar *car)$/;"	f
SimBrakeSystemUpdate	src/modules/simu/simuv2/brake.cpp	/^SimBrakeSystemUpdate(tCar *car)$/;"	f
SimBrakeUpdate	src/modules/simu/simuv2/brake.cpp	/^SimBrakeUpdate(tCar *car, tWheel *wheel, tBrake *brake)$/;"	f
SimCarCollideCars	src/modules/simu/simuv2/collide.cpp	/^SimCarCollideCars(tSituation *s)$/;"	f
SimCarCollideConfig	src/modules/simu/simuv2/collide.cpp	/^SimCarCollideConfig(tCar *car, tTrack *track)$/;"	f
SimCarCollideInit	src/modules/simu/simuv2/collide.cpp	/^SimCarCollideInit(void)$/;"	f
SimCarCollideResponse	src/modules/simu/simuv2/collide.cpp	/^static void SimCarCollideResponse(void * \/*dummy*\/, DtObjectRef obj1, DtObjectRef obj2, const DtCollData *collData)$/;"	f	file:
SimCarCollideShutdown	src/modules/simu/simuv2/collide.cpp	/^void SimCarCollideShutdown(int nbcars)$/;"	f
SimCarCollideXYScene	src/modules/simu/simuv2/collide.cpp	/^void SimCarCollideXYScene(tCar *car)$/;"	f
SimCarCollideZ	src/modules/simu/simuv2/collide.cpp	/^void SimCarCollideZ(tCar *car)$/;"	f
SimCarConfig	src/modules/simu/simuv2/car.cpp	/^SimCarConfig(tCar *car)$/;"	f
SimCarTable	src/modules/simu/simuv2/simu.cpp	/^tCar *SimCarTable = 0;$/;"	v
SimCarUpdate	src/modules/simu/simuv2/car.cpp	/^SimCarUpdate(tCar *car, tSituation * \/* s *\/)$/;"	f
SimCarUpdate2	src/modules/simu/simuv2/car.cpp	/^SimCarUpdate2(tCar *car, tSituation * \/* s *\/)$/;"	f
SimCarUpdateCornerPos	src/modules/simu/simuv2/car.cpp	/^SimCarUpdateCornerPos(tCar *car)$/;"	f	file:
SimCarUpdateForces	src/modules/simu/simuv2/car.cpp	/^SimCarUpdateForces(tCar *car)$/;"	f	file:
SimCarUpdatePos	src/modules/simu/simuv2/car.cpp	/^SimCarUpdatePos(tCar *car)$/;"	f	file:
SimCarUpdateSpeed	src/modules/simu/simuv2/car.cpp	/^SimCarUpdateSpeed(tCar *car)$/;"	f	file:
SimCarUpdateWheelPos	src/modules/simu/simuv2/car.cpp	/^SimCarUpdateWheelPos(tCar *car)$/;"	f
SimCarWallCollideResponse	src/modules/simu/simuv2/collide.cpp	/^static void SimCarWallCollideResponse(void *clientdata, DtObjectRef obj1, DtObjectRef obj2, const DtCollData *collData)$/;"	f	file:
SimCollideRemoveCar	src/modules/simu/simuv2/collide.cpp	/^void SimCollideRemoveCar(tCar *car, int nbcars)$/;"	f
SimConfig	src/modules/simu/simuv2/simu.cpp	/^SimConfig(tCarElt *carElt, RmInfo *info)$/;"	f
SimDeltaTime	src/modules/simu/simuv2/simu.cpp	/^tdble SimDeltaTime;$/;"	v
SimDifferentialConfig	src/modules/simu/simuv2/differential.cpp	/^void SimDifferentialConfig(void *hdle, char *section, tDifferential *differential)$/;"	f
SimDifferentialUpdate	src/modules/simu/simuv2/differential.cpp	/^SimDifferentialUpdate(tCar *car, tDifferential *differential, int first)$/;"	f
SimEngineConfig	src/modules/simu/simuv2/engine.cpp	/^SimEngineConfig(tCar *car)$/;"	f
SimEngineShutdown	src/modules/simu/simuv2/engine.cpp	/^SimEngineShutdown(tCar *car)$/;"	f
SimEngineUpdateRpm	src/modules/simu/simuv2/engine.cpp	/^SimEngineUpdateRpm(tCar *car, tdble axleRpm)$/;"	f
SimEngineUpdateTq	src/modules/simu/simuv2/engine.cpp	/^SimEngineUpdateTq(tCar *car)$/;"	f
SimGearboxUpdate	src/modules/simu/simuv2/transmission.cpp	/^SimGearboxUpdate(tCar *car)$/;"	f
SimInit	src/modules/simu/simuv2/simu.cpp	/^SimInit(int nbcars, tTrack* track)$/;"	f
SimNbCars	src/modules/simu/simuv2/simu.cpp	/^static int SimNbCars = 0;$/;"	v	file:
SimReConfig	src/modules/simu/simuv2/simu.cpp	/^SimReConfig(tCarElt *carElt)$/;"	f
SimShutdown	src/modules/simu/simuv2/simu.cpp	/^SimShutdown(void)$/;"	f
SimSteerConfig	src/modules/simu/simuv2/steer.cpp	/^SimSteerConfig(tCar *car)$/;"	f
SimSteerUpdate	src/modules/simu/simuv2/steer.cpp	/^SimSteerUpdate(tCar *car)$/;"	f
SimSuspCheckIn	src/modules/simu/simuv2/susp.cpp	/^void SimSuspCheckIn(tSuspension *susp)$/;"	f
SimSuspConfig	src/modules/simu/simuv2/susp.cpp	/^void SimSuspConfig(void *hdle, char *section, tSuspension *susp, tdble F0, tdble X0)$/;"	f
SimSuspUpdate	src/modules/simu/simuv2/susp.cpp	/^void SimSuspUpdate(tSuspension *susp)$/;"	f
SimTelemetry	src/modules/simu/simuv2/simu.cpp	/^int SimTelemetry;$/;"	v
SimTelemetryOut	src/modules/simu/simuv2/car.cpp	/^SimTelemetryOut(tCar *car)$/;"	f
SimTransmissionConfig	src/modules/simu/simuv2/transmission.cpp	/^SimTransmissionConfig(tCar *car)$/;"	f
SimTransmissionUpdate	src/modules/simu/simuv2/transmission.cpp	/^SimTransmissionUpdate(tCar *car)$/;"	f
SimUpdate	src/modules/simu/simuv2/simu.cpp	/^SimUpdate(tSituation *s, double deltaTime, int telemetry)$/;"	f
SimUpdateFreeWheels	src/modules/simu/simuv2/wheel.cpp	/^SimUpdateFreeWheels(tCar *car, int axlenb)$/;"	f
SimWheelConfig	src/modules/simu/simuv2/wheel.cpp	/^SimWheelConfig(tCar *car, int index)$/;"	f
SimWheelUpdateForce	src/modules/simu/simuv2/wheel.cpp	/^void SimWheelUpdateForce(tCar *car, int index)$/;"	f
SimWheelUpdateRide	src/modules/simu/simuv2/wheel.cpp	/^void SimWheelUpdateRide(tCar *car, int index)$/;"	f
SimWheelUpdateRotation	src/modules/simu/simuv2/wheel.cpp	/^SimWheelUpdateRotation(tCar *car)$/;"	f
SimWingConfig	src/modules/simu/simuv2/aero.cpp	/^SimWingConfig(tCar *car, int index)$/;"	f
SimWingUpdate	src/modules/simu/simuv2/aero.cpp	/^SimWingUpdate(tCar *car, int index, tSituation* s)$/;"	f
SimpleStrategy	src/drivers/bt/strategy.cpp	/^SimpleStrategy::SimpleStrategy() :$/;"	f	class:SimpleStrategy
SimpleStrategy	src/drivers/bt/strategy.h	/^class SimpleStrategy : public AbstractStrategy {$/;"	c
SimpleStrategy	src/drivers/damned/strategy.cpp	/^SimpleStrategy::SimpleStrategy() :$/;"	f	class:SimpleStrategy
SimpleStrategy	src/drivers/damned/strategy.h	/^class SimpleStrategy : public AbstractStrategy {$/;"	c
SimpleStrategy	src/drivers/olethros/strategy.cpp	/^SimpleStrategy::SimpleStrategy() :$/;"	f	class:olethros::SimpleStrategy
SimpleStrategy	src/drivers/olethros/strategy.h	/^class SimpleStrategy : public AbstractStrategy {$/;"	c	namespace:olethros
SimpleStrategy2	src/drivers/bt/strategy.h	/^class SimpleStrategy2 : public SimpleStrategy {$/;"	c
SimpleStrategy2	src/drivers/damned/strategy.h	/^class SimpleStrategy2 : public SimpleStrategy {$/;"	c
Simplex	src/modules/simu/simuv2/SOLID-2.0/src/Simplex.h	/^  Simplex(const VertexBase& b, int c, const unsigned int v[]) : $/;"	f	class:Simplex
Simplex	src/modules/simu/simuv2/SOLID-2.0/src/Simplex.h	/^class Simplex : public Polytope {$/;"	c
SimuMenuInit	src/libs/confscreens/simuconfig.cpp	/^SimuMenuInit(void *prevMenu)$/;"	f
SimuVersionId	src/libs/confscreens/simuconfig.cpp	/^static int SimuVersionId;$/;"	v	file:
SingleCardata	src/drivers/bt/cardata.h	/^class SingleCardata {$/;"	c
SingleCardata	src/drivers/damned/cardata.h	/^class SingleCardata {$/;"	c
SingleCardata	src/drivers/olethros/cardata.h	/^	SingleCardata() {$/;"	f	class:olethros::SingleCardata
SingleCardata	src/drivers/olethros/cardata.h	/^class SingleCardata {$/;"	c	namespace:olethros
SingleList	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^typedef map<DtObjectRef, Response, less<DtObjectRef> > SingleList;$/;"	t
Sinz	src/modules/simu/simuv2/carstruct.h	/^    tdble	Sinz;$/;"	m	struct:__anon18
Situation	export/include/raceman.h	/^typedef struct Situation {$/;"	s
Situation	src/interfaces/raceman.h	/^typedef struct Situation {$/;"	s
Size	src/drivers/olethros/geometry.h	/^	int Size() { return n;}$/;"	f	class:Vector
SkidAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *SkidAnchor = 0;$/;"	v
SkidEditId	src/libs/confscreens/graphconfig.cpp	/^static int	SkidEditId;$/;"	v	file:
SkidValue	src/libs/confscreens/graphconfig.cpp	/^static int	SkidValue = 20;$/;"	v	file:
SkillId	src/libs/confscreens/driverconfig.cpp	/^static int SkillId;$/;"	v	file:
SkinFileName	src/tools/texmapper/maintexmapper.cpp	/^char	*SkinFileName = NULL;$/;"	v
Smessage	export/include/learning/learn_debug.h	20;"	d
Smessage	src/libs/learning/learn_debug.h	20;"	d
SmokeAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *SmokeAnchor = 0;$/;"	v
SmokeEditId	src/libs/confscreens/graphconfig.cpp	/^static int	SmokeEditId;$/;"	v	file:
SmokeValue	src/libs/confscreens/graphconfig.cpp	/^static int	SmokeValue = 300;$/;"	v	file:
SmoothMaxGamma	src/libs/learning/MathFunctions.cpp	/^real SmoothMaxGamma (real f1, real f2, real lambda, real c)$/;"	f
SmoothMaxPNorm	src/libs/learning/MathFunctions.cpp	/^real SmoothMaxPNorm (real f1, real f2, real p)$/;"	f
Smoothing	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int    Smoothing;$/;"	m	struct:__anon33	file:
SoftMax	src/libs/learning/MathFunctions.cpp	/^void SoftMax (int n, real* Q, real* p, real beta)$/;"	f
SoftMin	src/libs/learning/MathFunctions.cpp	/^void SoftMin (int n, real* Q, real* p, real beta)$/;"	f
SortSingleQueue	src/modules/graphic/ssggraph/SoundInterface.cpp	/^void SoundInterface::SortSingleQueue (CarSoundData** car_sound_data, QueueSoundMap* smap, int n_cars)$/;"	f	class:SoundInterface
SoundChar	src/modules/graphic/ssggraph/SoundInterface.h	/^	} SoundChar;$/;"	t	class:OpenalSoundInterface	typeref:struct:OpenalSoundInterface::SoundChar_
SoundChar	src/modules/graphic/ssggraph/SoundInterface.h	/^	} SoundChar;$/;"	t	class:PlibSoundInterface	typeref:struct:PlibSoundInterface::SoundChar_
SoundChar_	src/modules/graphic/ssggraph/SoundInterface.h	/^	typedef struct SoundChar_ {$/;"	s	class:OpenalSoundInterface
SoundChar_	src/modules/graphic/ssggraph/SoundInterface.h	/^	typedef struct SoundChar_ {$/;"	s	class:PlibSoundInterface
SoundInterface	src/modules/graphic/ssggraph/SoundInterface.cpp	/^SoundInterface::SoundInterface(float sampling_rate, int n_channels)$/;"	f	class:SoundInterface
SoundInterface	src/modules/graphic/ssggraph/SoundInterface.h	/^class SoundInterface {$/;"	c
SoundMenuInit	src/libs/confscreens/soundconfig.cpp	/^void * SoundMenuInit(void *prevMenu)$/;"	f
SoundMode	src/modules/graphic/ssggraph/grsound.cpp	/^enum SoundMode {DISABLED, OPENAL_MODE, PLIB_MODE};$/;"	g	file:
SoundOptionId	src/libs/confscreens/soundconfig.cpp	/^static int SoundOptionId;$/;"	v	file:
SoundPri	src/modules/graphic/ssggraph/SoundInterface.h	/^} SoundPri;$/;"	t	typeref:struct:SoundPri_
SoundPriState	src/modules/graphic/ssggraph/SoundInterface.h	/^enum SoundPriState {$/;"	g
SoundPri_	src/modules/graphic/ssggraph/SoundInterface.h	/^typedef struct SoundPri_ {$/;"	s
SoundSource	src/modules/graphic/ssggraph/TorcsSound.cpp	/^SoundSource::SoundSource()$/;"	f	class:SoundSource
SoundSource	src/modules/graphic/ssggraph/TorcsSound.h	/^class SoundSource {$/;"	c
SpeedStrategy	src/drivers/inferno2/common.cpp	/^SpeedStrategy(tCarElt* car, int idx, tdble Vtarget, tSituation *s, tdble aspect)$/;"	f
Sphere	src/modules/simu/simuv2/SOLID-2.0/src/Sphere.h	/^  Sphere(Scalar r) : radius(r) {}$/;"	f	class:Sphere
Sphere	src/modules/simu/simuv2/SOLID-2.0/src/Sphere.h	/^class Sphere : public Convex {$/;"	c
SplashDisplaying	src/libs/client/splash.cpp	/^static int SplashDisplaying;$/;"	v	file:
SplashScreen	src/libs/client/splash.cpp	/^int SplashScreen(void)$/;"	f
Spline	src/drivers/bt/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	src/drivers/bt/spline.h	/^class Spline {$/;"	c
Spline	src/drivers/damned/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	src/drivers/damned/spline.h	/^class Spline {$/;"	c
Spline	src/drivers/inferno2/common.cpp	/^Spline(tdble p0, tdble p1, tdble pos, tdble start, tdble end)$/;"	f	file:
Spline	src/drivers/olethros/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	src/drivers/olethros/spline.h	/^class Spline {$/;"	c
Spline	src/drivers/sparkle/spline.cpp	/^Spline::Spline(int dim, SplinePoint *s)$/;"	f	class:Spline
Spline	src/drivers/sparkle/spline.h	/^class Spline {$/;"	c
SplineEquationData	src/drivers/berniw/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon125
SplineEquationData	src/drivers/berniw2/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon100
SplineEquationData	src/drivers/berniw3/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon116
SplineEquationData	src/drivers/inferno/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon141
SplineEquationData	src/drivers/lliaw/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon134
SplineEquationData	src/drivers/tita/spline.h	/^} SplineEquationData;$/;"	t	typeref:struct:__anon107
SplineEquationData2	src/drivers/berniw/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon126
SplineEquationData2	src/drivers/berniw2/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon101
SplineEquationData2	src/drivers/berniw3/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon117
SplineEquationData2	src/drivers/inferno/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon142
SplineEquationData2	src/drivers/lliaw/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon135
SplineEquationData2	src/drivers/tita/spline.h	/^} SplineEquationData2;$/;"	t	typeref:struct:__anon108
SplinePoint	src/drivers/bt/spline.h	/^class SplinePoint {$/;"	c
SplinePoint	src/drivers/damned/spline.h	/^class SplinePoint {$/;"	c
SplinePoint	src/drivers/olethros/spline.h	/^class SplinePoint {$/;"	c
SplinePoint	src/drivers/sparkle/spline.h	/^class SplinePoint {$/;"	c
SquareNorm	src/libs/learning/MathFunctions.cpp	/^real SquareNorm (real* a, real* b, int n)$/;"	f
StartRaceHookActivate	src/libs/raceengineclient/racemain.cpp	/^StartRaceHookActivate(void * \/* dummy *\/)$/;"	f	file:
StartRaceHookHandle	src/libs/raceengineclient/racemain.cpp	/^static void	*StartRaceHookHandle = 0;$/;"	v	file:
StartRaceHookInit	src/libs/raceengineclient/racemain.cpp	/^StartRaceHookInit(void)$/;"	f	file:
SteerSensEditId	src/libs/confscreens/controlconfig.cpp	/^static int SteerSensEditId;$/;"	v	file:
SteerSensVal	src/libs/confscreens/controlconfig.cpp	/^static float SteerSensVal;$/;"	v	file:
StopScrHandle	src/libs/raceengineclient/racemain.cpp	/^static void	*StopScrHandle = 0;$/;"	v	file:
Stopped	src/modules/graphic/ssggraph/SoundInterface.h	/^	None=0x0, Loaded, Playing, Paused, Stopped, Cleared$/;"	e	enum:SoundPriState
Straight	src/drivers/olethros/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	src/drivers/olethros/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	src/drivers/olethros/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	src/drivers/olethros/linalg.h	/^class Straight {$/;"	c
Straight	src/drivers/sparkle/linalg.h	/^        Straight() {}$/;"	f	class:Straight
Straight	src/drivers/sparkle/linalg.h	/^        Straight(const v2d &anchor, const v2d &dir)$/;"	f	class:Straight
Straight	src/drivers/sparkle/linalg.h	/^        Straight(float x, float y, float dx, float dy)$/;"	f	class:Straight
Straight	src/drivers/sparkle/linalg.h	/^class Straight {$/;"	c
StringBuffer	export/include/learning/string_utils.h	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer_
StringBuffer	src/libs/learning/string_utils.h	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer_
StringBuffer_	export/include/learning/string_utils.h	/^typedef struct StringBuffer_ {$/;"	s
StringBuffer_	src/libs/learning/string_utils.h	/^typedef struct StringBuffer_ {$/;"	s
Sub	src/drivers/olethros/geometry.cpp	/^void Sub (Vector* A, Vector* B, Vector* R)$/;"	f
Sum	src/libs/learning/MathFunctions.cpp	/^real Sum (real* a, int n)$/;"	f
SunAnchor	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *SunAnchor = 0;$/;"	v
SuspSect	src/modules/simu/simuv2/wheel.cpp	/^static char *SuspSect[4] = {SECT_FRNTRGTSUSP, SECT_FRNTLFTSUSP, SECT_REARRGTSUSP, SECT_REARLFTSUSP};$/;"	v	file:
Suspension	src/modules/simu/simuv2/susp.h	/^typedef struct Suspension$/;"	s
Swarning	export/include/learning/learn_debug.h	11;"	d
Swarning	export/include/learning/learn_debug.h	8;"	d
Swarning	src/libs/learning/learn_debug.h	11;"	d
Swarning	src/libs/learning/learn_debug.h	8;"	d
TABLE	src/modules/graphic/ssggraph/grvtxtable.h	69;"	d
TAG	src/libs/txml/xmlparse.c	/^} TAG;$/;"	t	typeref:struct:tag	file:
TCL_MINSPEED	src/drivers/sparkle/driver.cpp	/^const float Driver::TCL_MINSPEED = 3.0;						\/* [m\/s] *\/$/;"	m	class:Driver	file:
TCL_MINSPEED	src/drivers/sparkle/driver.h	/^		static const float TCL_MINSPEED;$/;"	m	class:Driver
TCL_RANGE	src/drivers/berniw/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	src/drivers/berniw/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	src/drivers/berniw2/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	src/drivers/berniw2/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	src/drivers/berniw3/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_RANGE	src/drivers/berniw3/mycar.h	/^		static const double TCL_RANGE;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_RANGE	src/drivers/bt/driver.cpp	/^const float Driver::TCL_RANGE = 10.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_RANGE	src/drivers/bt/driver.h	/^		static const float TCL_RANGE;$/;"	m	class:Driver
TCL_RANGE	src/drivers/damned/driver.cpp	/^const float Driver::TCL_RANGE = 10.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_RANGE	src/drivers/damned/driver.h	/^		static const float TCL_RANGE;$/;"	m	class:Driver
TCL_RANGE	src/drivers/inferno/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_RANGE	src/drivers/inferno/mycar.h	/^		static const double TCL_RANGE;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_RANGE	src/drivers/lliaw/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_RANGE	src/drivers/lliaw/mycar.h	/^		static const double TCL_RANGE;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_RANGE	src/drivers/olethros/driver.cpp	/^    const float Driver::TCL_RANGE = 10.0f;						\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
TCL_RANGE	src/drivers/olethros/driver.h	/^	static const float TCL_RANGE;$/;"	m	class:olethros::Driver
TCL_RANGE	src/drivers/sparkle/driver.cpp	/^const float Driver::TCL_RANGE = 0.2;						\/* [-] *\/$/;"	m	class:Driver	file:
TCL_RANGE	src/drivers/sparkle/driver.h	/^		static const float TCL_RANGE;$/;"	m	class:Driver
TCL_RANGE	src/drivers/tita/mycar.cpp	/^const double MyCar::TCL_RANGE = 5.0;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_RANGE	src/drivers/tita/mycar.h	/^		static const double TCL_RANGE;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_SLIP	src/drivers/berniw/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	src/drivers/berniw/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	src/drivers/berniw2/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	src/drivers/berniw2/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	src/drivers/berniw3/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;				\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar	file:
TCL_SLIP	src/drivers/berniw3/mycar.h	/^		static const double TCL_SLIP;			\/* [m\/s] range [0..10] *\/$/;"	m	class:MyCar
TCL_SLIP	src/drivers/bt/driver.cpp	/^const float Driver::TCL_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_SLIP	src/drivers/bt/driver.h	/^		static const float TCL_SLIP;$/;"	m	class:Driver
TCL_SLIP	src/drivers/damned/driver.cpp	/^const float Driver::TCL_SLIP = 2.0f;						\/\/ [m\/s] range [0..10]$/;"	m	class:Driver	file:
TCL_SLIP	src/drivers/damned/driver.h	/^		static const float TCL_SLIP;$/;"	m	class:Driver
TCL_SLIP	src/drivers/inferno/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;					\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_SLIP	src/drivers/inferno/mycar.h	/^		static const double TCL_SLIP;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_SLIP	src/drivers/lliaw/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;					\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_SLIP	src/drivers/lliaw/mycar.h	/^		static const double TCL_SLIP;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_SLIP	src/drivers/olethros/driver.cpp	/^    const float Driver::TCL_SLIP = 2.0f;							\/\/\/< [m\/s] range [0..10]$/;"	m	class:olethros::Driver	file:
TCL_SLIP	src/drivers/olethros/driver.h	/^	static const float TCL_SLIP;$/;"	m	class:olethros::Driver
TCL_SLIP	src/drivers/sparkle/driver.cpp	/^const float Driver::TCL_SLIP = 0.8;							\/* [-] range [0.95..0.3] *\/$/;"	m	class:Driver	file:
TCL_SLIP	src/drivers/sparkle/driver.h	/^		static const float TCL_SLIP;$/;"	m	class:Driver
TCL_SLIP	src/drivers/tita/mycar.cpp	/^const double MyCar::TCL_SLIP = 2.0;					\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar	file:
TCL_SLIP	src/drivers/tita/mycar.h	/^		static const double TCL_SLIP;				\/\/ [m\/s] range [0..10].$/;"	m	class:MyCar
TCL_status	src/drivers/olethros/driver.h	/^	float TCL_status; \/\/\/< traction control$/;"	m	class:olethros::Driver
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/bt/driver.cpp	/^const int Driver::TEAM_DAMAGE_CHANGE_LEAD = 700;			\/\/ When to change position in the team?$/;"	m	class:Driver	file:
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/bt/driver.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;$/;"	m	class:Driver
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/damned/driver.cpp	/^const int Driver::TEAM_DAMAGE_CHANGE_LEAD = 700;			\/\/ When to change position in the team?$/;"	m	class:Driver	file:
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/damned/driver.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;$/;"	m	class:Driver
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/inferno/mycar.cpp	/^const int MyCar::TEAM_DAMAGE_CHANGE_LEAD = 1500;	\/\/ When to change position in the team?$/;"	m	class:MyCar	file:
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/inferno/mycar.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;	\/\/ When to change position in the team? $/;"	m	class:MyCar
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/lliaw/mycar.cpp	/^const int MyCar::TEAM_DAMAGE_CHANGE_LEAD = 1500;	\/\/ When to change position in the team?$/;"	m	class:MyCar	file:
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/lliaw/mycar.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;	\/\/ When to change position in the team? $/;"	m	class:MyCar
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/tita/mycar.cpp	/^const int MyCar::TEAM_DAMAGE_CHANGE_LEAD = 1500;	\/\/ When to change position in the team?$/;"	m	class:MyCar	file:
TEAM_DAMAGE_CHANGE_LEAD	src/drivers/tita/mycar.h	/^		static const int TEAM_DAMAGE_CHANGE_LEAD;	\/\/ When to change position in the team? $/;"	m	class:MyCar
TEAM_REAR_DIST	src/drivers/bt/driver.cpp	/^const float Driver::TEAM_REAR_DIST = 50.0f;					\/\/$/;"	m	class:Driver	file:
TEAM_REAR_DIST	src/drivers/bt/driver.h	/^		static const float TEAM_REAR_DIST;$/;"	m	class:Driver
TEAM_REAR_DIST	src/drivers/damned/driver.cpp	/^const float Driver::TEAM_REAR_DIST = 50.0f;					\/\/$/;"	m	class:Driver	file:
TEAM_REAR_DIST	src/drivers/damned/driver.h	/^		static const float TEAM_REAR_DIST;$/;"	m	class:Driver
TEST_PITSTOPS	src/drivers/olethros/driver.cpp	46;"	d	file:
TEXREP	src/tools/accc/ac3dload.cpp	44;"	d	file:
TEXTLINES	src/libs/racescreens/loadingscreen.cpp	35;"	d	file:
TEXTURE	src/tools/accc/ac3dload.cpp	43;"	d	file:
THNSSBG	src/modules/graphic/ssggraph/grboard.cpp	226;"	d	file:
THNSSFG	src/modules/graphic/ssggraph/grboard.cpp	227;"	d	file:
TIMETOCATCH	src/drivers/berniw/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	src/drivers/berniw/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	src/drivers/berniw2/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	src/drivers/berniw2/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	src/drivers/berniw3/mycar.cpp	/^const double MyCar::TIMETOCATCH = 3.0;			\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar	file:
TIMETOCATCH	src/drivers/berniw3/mycar.h	/^		static const double TIMETOCATCH;		\/* when do we start thinking about overtaking [s]*\/$/;"	m	class:MyCar
TIMETOCATCH	src/drivers/inferno/mycar.cpp	/^const double MyCar::TIMETOCATCH = 2.0;				\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar	file:
TIMETOCATCH	src/drivers/inferno/mycar.h	/^		static const double TIMETOCATCH;			\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar
TIMETOCATCH	src/drivers/lliaw/mycar.cpp	/^const double MyCar::TIMETOCATCH = 2.0;				\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar	file:
TIMETOCATCH	src/drivers/lliaw/mycar.h	/^		static const double TIMETOCATCH;			\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar
TIMETOCATCH	src/drivers/tita/mycar.cpp	/^const double MyCar::TIMETOCATCH = 2.0;				\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar	file:
TIMETOCATCH	src/drivers/tita/mycar.h	/^		static const double TIMETOCATCH;			\/\/ When do we start thinking about overtaking [s].$/;"	m	class:MyCar
TIME_MARGIN	src/drivers/olethros/opponent.cpp	/^const float Opponent::TIME_MARGIN = 2.0;				\/\/ [s] safety margin.$/;"	m	class:olethros::Opponent	file:
TIME_MARGIN	src/drivers/olethros/opponent.h	/^		static const float TIME_MARGIN;$/;"	m	class:olethros::Opponent
TIME_WITH_SYS_TIME	config.h	128;"	d
TIREMU	src/drivers/bt/driver.h	/^		float TIREMU;		\/\/ Friction coefficient of tires.$/;"	m	class:Driver
TIREMU	src/drivers/damned/driver.h	/^		float TIREMU;		\/\/ Friction coefficient of tires.$/;"	m	class:Driver
TIREMU	src/drivers/olethros/driver.h	/^	float TIREMU;		\/\/\/< Friction coefficient of tires.$/;"	m	class:olethros::Driver
TIREMU	src/drivers/sparkle/driver.h	/^		float TIREMU;		\/* friction coefficient of tires *\/$/;"	m	class:Driver
TLM_IDENT	export/include/telemetry.h	24;"	d
TLM_IDENT	src/interfaces/telemetry.h	24;"	d
TOC1	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC1" HREF="solid2.html#SEC1">GNU LIBRARY GENERAL PUBLIC LICENSE<\/A>$/;"	a
TOC10	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC10" HREF="solid2.html#SEC10">The SOLID API<\/A>$/;"	a
TOC11	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC11" HREF="solid2.html#SEC11">Building Shapes<\/A>$/;"	a
TOC12	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC12" HREF="solid2.html#SEC12">Creating and Moving Objects<\/A>$/;"	a
TOC13	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC13" HREF="solid2.html#SEC13">Who's Afraid of Quaternions?<\/A>$/;"	a
TOC14	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC14" HREF="solid2.html#SEC14">Response Handling<\/A>$/;"	a
TOC15	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC15" HREF="solid2.html#SEC15">Smart Response<\/A>$/;"	a
TOC16	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC16" HREF="solid2.html#SEC16">Deformable Models<\/A>$/;"	a
TOC17	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC17" HREF="solid2.html#SEC17">Caching<\/A>$/;"	a
TOC18	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC18" HREF="solid2.html#SEC18">Projects and other things left to do<\/A>$/;"	a
TOC19	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC19" HREF="solid2.html#SEC19">Coming Attractions<\/A>$/;"	a
TOC2	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC2" HREF="solid2.html#SEC2">Preamble<\/A>$/;"	a
TOC20	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC20" HREF="solid2.html#SEC20">Bug Reports<\/A>$/;"	a
TOC3	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC3" HREF="solid2.html#SEC3">TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION<\/A>$/;"	a
TOC4	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC4" HREF="solid2.html#SEC4">How to Apply These Terms to Your New Libraries<\/A>$/;"	a
TOC5	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC5" HREF="solid2.html#SEC5">Introduction<\/A>$/;"	a
TOC6	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC6" HREF="solid2.html#SEC6">Installing SOLID<\/A>$/;"	a
TOC7	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC7" HREF="solid2.html#SEC7">Requirements<\/A>$/;"	a
TOC8	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC8" HREF="solid2.html#SEC8">Installation<\/A>$/;"	a
TOC9	src/modules/simu/simuv2/SOLID-2.0/doc/solid2_toc.html	/^<LI><A NAME="TOC9" HREF="solid2.html#SEC9">Trouble in Installation<\/A>$/;"	a
TOOLSCRIPT	src/linux/Makefile	/^TOOLSCRIPT  = torcs$/;"	m
TOOLSCRIPT	src/tools/accc/Makefile	/^TOOLSCRIPT	= accc$/;"	m
TOOLSCRIPT	src/tools/nfs2ac/Makefile	/^TOOLSCRIPT	= nfs2ac$/;"	m
TOOLSCRIPT	src/tools/nfsperf/Makefile	/^TOOLSCRIPT	= nfsperf$/;"	m
TOOLSCRIPT	src/tools/texmapper/Makefile	/^TOOLSCRIPT	= texmapper$/;"	m
TOOLSCRIPT	src/tools/trackgen/Makefile	/^TOOLSCRIPT	= trackgen$/;"	m
TOOLSDIR	src/linux/Makefile	/^TOOLSDIR    = $/;"	m
TOOLSDIR	src/tools/accc/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	src/tools/nfs2ac/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	src/tools/nfsperf/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	src/tools/texmapper/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSDIR	src/tools/trackgen/Makefile	/^TOOLSDIR	= $/;"	m
TOOLSUBDIRS	Makefile	/^TOOLSUBDIRS	= src$/;"	m
TOOLSUBDIRS	src/Makefile	/^TOOLSUBDIRS	= libs tools linux$/;"	m
TOOLSUBDIRS	src/libs/Makefile	/^TOOLSUBDIRS	= txml$/;"	m
TOOLSUBDIRS	src/libs/txml/Makefile	/^TOOLSUBDIRS = gennmtab$/;"	m
TOOLSUBDIRS	src/tools/Makefile	/^TOOLSUBDIRS	= $(SUBDIRS)$/;"	m
TORCS_BASE	Makefile	/^TORCS_BASE = $(shell pwd)$/;"	m
TORCS_RC	Makefile	/^TORCS_RC = ${TORCS_BASE}\/.torcs.rc$/;"	m
TORCS_SOUND_H	src/modules/graphic/ssggraph/TorcsSound.h	21;"	d
TPRES	src/drivers/berniw/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	src/drivers/berniw/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TPRES	src/drivers/berniw2/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	src/drivers/berniw2/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TPRES	src/drivers/berniw3/pathfinder.cpp	/^const double Pathfinder::TPRES = PI\/(NTPARAMS - 1);	\/* resolution of the steps *\/$/;"	m	class:Pathfinder	file:
TPRES	src/drivers/berniw3/pathfinder.h	/^		static const double TPRES;		\/* resolution of the steps *\/$/;"	m	class:Pathfinder
TRACE_GL	src/modules/graphic/ssggraph/grutil.h	28;"	d
TRACE_GL	src/modules/graphic/ssggraph/grutil.h	30;"	d
TRACK	data/tracks/dirt/dirt-3/Makefile	/^TRACK     = dirt-3$/;"	m
TRACK	data/tracks/oval/b-speedway/Makefile	/^TRACK	  = b-speedway$/;"	m
TRACK	data/tracks/oval/c-speedway/Makefile	/^TRACK	  = c-speedway$/;"	m
TRACK	data/tracks/oval/d-speedway/Makefile	/^TRACK	  = d-speedway$/;"	m
TRACK	data/tracks/oval/e-speedway/Makefile	/^TRACK	  = e-speedway$/;"	m
TRACK	data/tracks/oval/f-speedway/Makefile	/^TRACK	  = f-speedway$/;"	m
TRACK	data/tracks/oval/g-speedway/Makefile	/^TRACK	  = g-speedway$/;"	m
TRACK	data/tracks/road/alpine-1/Makefile	/^TRACK     = alpine-1$/;"	m
TRACK	data/tracks/road/alpine-2/Makefile	/^TRACK     = alpine-2$/;"	m
TRACK	data/tracks/road/forza/Makefile	/^TRACK     = forza$/;"	m
TRACK	data/tracks/road/g-track-3/Makefile	/^TRACK     = g-track-3$/;"	m
TRACK	data/tracks/road/ole-road-1/Makefile	/^TRACK	  = ole-road-1$/;"	m
TRACK	data/tracks/road/ruudskogen/Makefile	/^TRACK     = ruudskogen$/;"	m
TRACK	data/tracks/road/street-1/Makefile	/^TRACK     = street-1$/;"	m
TRACK	data/tracks/road/wheel-2/Makefile	/^TRACK     = wheel-2$/;"	m
TRACKDATA_H	src/drivers/olethros/TrackData.h	13;"	d
TRACKDESCFILENAME	src/drivers/berniw/berniw.h	40;"	d
TRACKDESCFILENAME	src/drivers/berniw2/berniw.h	40;"	d
TRACKDESCFILENAME	src/drivers/berniw3/berniw.h	40;"	d
TRACKDESCFILENAME	src/drivers/inferno/berniw.h	44;"	d
TRACKDESCFILENAME	src/drivers/lliaw/berniw.h	44;"	d
TRACKDESCFILENAME	src/drivers/tita/berniw.h	44;"	d
TRACKFILENAME	src/drivers/berniw/berniw.h	39;"	d
TRACKFILENAME	src/drivers/berniw2/berniw.h	39;"	d
TRACKFILENAME	src/drivers/berniw3/berniw.h	39;"	d
TRACKFILENAME	src/drivers/inferno/berniw.h	43;"	d
TRACKFILENAME	src/drivers/lliaw/berniw.h	43;"	d
TRACKFILENAME	src/drivers/tita/berniw.h	43;"	d
TRACKRES	src/drivers/berniw/trackdesc.h	44;"	d
TRACKRES	src/drivers/berniw2/trackdesc.h	44;"	d
TRACKRES	src/drivers/berniw3/trackdesc.h	44;"	d
TRACKRES	src/drivers/inferno/trackdesc.h	45;"	d
TRACKRES	src/drivers/lliaw/trackdesc.h	45;"	d
TRACKRES	src/drivers/tita/trackdesc.h	45;"	d
TRACK_MAP_MASK	src/modules/graphic/ssggraph/grtrackmap.h	51;"	d
TRACK_MAP_NONE	src/modules/graphic/ssggraph/grtrackmap.h	42;"	d
TRACK_MAP_NORMAL	src/modules/graphic/ssggraph/grtrackmap.h	43;"	d
TRACK_MAP_NORMAL_WITH_OPPONENTS	src/modules/graphic/ssggraph/grtrackmap.h	44;"	d
TRACK_MAP_PAN	src/modules/graphic/ssggraph/grtrackmap.h	45;"	d
TRACK_MAP_PAN_ALIGNED	src/modules/graphic/ssggraph/grtrackmap.h	47;"	d
TRACK_MAP_PAN_ALIGNED_WITH_OPPONENTS	src/modules/graphic/ssggraph/grtrackmap.h	48;"	d
TRACK_MAP_PAN_WITH_OPPONENTS	src/modules/graphic/ssggraph/grtrackmap.h	46;"	d
TRAJECTORY_H	src/drivers/olethros/Trajectory.h	13;"	d
TRANSLATION	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^    TRANSLATION = 0x01,$/;"	e	enum:Transform::__anon7
TRANS_4WD	src/modules/simu/simuv2/transmission.h	57;"	d
TRANS_CENTRAL_DIFF	src/modules/simu/simuv2/transmission.h	67;"	d
TRANS_FRONT_DIFF	src/modules/simu/simuv2/transmission.h	65;"	d
TRANS_FWD	src/modules/simu/simuv2/transmission.h	56;"	d
TRANS_REAR_DIFF	src/modules/simu/simuv2/transmission.h	66;"	d
TRANS_RWD	src/modules/simu/simuv2/transmission.h	55;"	d
TRKEXT	export/include/osspec.h	26;"	d
TRKEXT	src/linux/osspec.h	26;"	d
TRKEXT	src/windows/osspec.h	25;"	d
TRK_ATT_3DDESC	export/include/track.h	50;"	d
TRK_ATT_3DDESC	src/interfaces/track.h	50;"	d
TRK_ATT_ALT_MAX	export/include/track.h	89;"	d
TRK_ATT_ALT_MAX	src/interfaces/track.h	89;"	d
TRK_ATT_ALT_MIN	export/include/track.h	90;"	d
TRK_ATT_ALT_MIN	src/interfaces/track.h	90;"	d
TRK_ATT_AMBIENT_B	export/include/track.h	64;"	d
TRK_ATT_AMBIENT_B	src/interfaces/track.h	64;"	d
TRK_ATT_AMBIENT_G	export/include/track.h	63;"	d
TRK_ATT_AMBIENT_G	src/interfaces/track.h	63;"	d
TRK_ATT_AMBIENT_R	export/include/track.h	62;"	d
TRK_ATT_AMBIENT_R	src/interfaces/track.h	62;"	d
TRK_ATT_ARC	export/include/track.h	141;"	d
TRK_ATT_ARC	src/interfaces/track.h	141;"	d
TRK_ATT_AUTHOR	export/include/track.h	44;"	d
TRK_ATT_AUTHOR	src/interfaces/track.h	44;"	d
TRK_ATT_B1	export/include/track.h	120;"	d
TRK_ATT_B1	src/interfaces/track.h	120;"	d
TRK_ATT_B2	export/include/track.h	123;"	d
TRK_ATT_B2	src/interfaces/track.h	123;"	d
TRK_ATT_BANKTYPE	export/include/track.h	186;"	d
TRK_ATT_BANKTYPE	src/interfaces/track.h	186;"	d
TRK_ATT_BGCLR_B	export/include/track.h	56;"	d
TRK_ATT_BGCLR_B	src/interfaces/track.h	56;"	d
TRK_ATT_BGCLR_G	export/include/track.h	55;"	d
TRK_ATT_BGCLR_G	src/interfaces/track.h	55;"	d
TRK_ATT_BGCLR_R	export/include/track.h	54;"	d
TRK_ATT_BGCLR_R	src/interfaces/track.h	54;"	d
TRK_ATT_BGTYPE	export/include/track.h	53;"	d
TRK_ATT_BGTYPE	src/interfaces/track.h	53;"	d
TRK_ATT_BHEIGHT	export/include/track.h	574;"	d
TRK_ATT_BHEIGHT	src/interfaces/track.h	574;"	d
TRK_ATT_BKE	export/include/track.h	150;"	d
TRK_ATT_BKE	src/interfaces/track.h	150;"	d
TRK_ATT_BKGRND	export/include/track.h	51;"	d
TRK_ATT_BKGRND	src/interfaces/track.h	51;"	d
TRK_ATT_BKGRND2	export/include/track.h	52;"	d
TRK_ATT_BKGRND2	src/interfaces/track.h	52;"	d
TRK_ATT_BKS	export/include/track.h	149;"	d
TRK_ATT_BKS	src/interfaces/track.h	149;"	d
TRK_ATT_BMARGIN	export/include/track.h	81;"	d
TRK_ATT_BMARGIN	src/interfaces/track.h	81;"	d
TRK_ATT_BSTEP	export/include/track.h	82;"	d
TRK_ATT_BSTEP	src/interfaces/track.h	82;"	d
TRK_ATT_BUMPNAME	export/include/track.h	111;"	d
TRK_ATT_BUMPNAME	src/interfaces/track.h	111;"	d
TRK_ATT_BUMPSIZE	export/include/track.h	115;"	d
TRK_ATT_BUMPSIZE	src/interfaces/track.h	115;"	d
TRK_ATT_CAM_FOV	export/include/track.h	200;"	d
TRK_ATT_CAM_FOV	src/interfaces/track.h	200;"	d
TRK_ATT_CAM_FOVE	export/include/track.h	201;"	d
TRK_ATT_CAM_FOVE	src/interfaces/track.h	201;"	d
TRK_ATT_CAT	export/include/track.h	46;"	d
TRK_ATT_CAT	src/interfaces/track.h	46;"	d
TRK_ATT_COLOR	export/include/track.h	93;"	d
TRK_ATT_COLOR	src/interfaces/track.h	93;"	d
TRK_ATT_DAMMAGE	export/include/track.h	108;"	d
TRK_ATT_DAMMAGE	src/interfaces/track.h	108;"	d
TRK_ATT_DESCR	export/include/track.h	45;"	d
TRK_ATT_DESCR	src/interfaces/track.h	45;"	d
TRK_ATT_DH	export/include/track.h	98;"	d
TRK_ATT_DH	src/interfaces/track.h	98;"	d
TRK_ATT_DIFFUSE_B	export/include/track.h	67;"	d
TRK_ATT_DIFFUSE_B	src/interfaces/track.h	67;"	d
TRK_ATT_DIFFUSE_G	export/include/track.h	66;"	d
TRK_ATT_DIFFUSE_G	src/interfaces/track.h	66;"	d
TRK_ATT_DIFFUSE_R	export/include/track.h	65;"	d
TRK_ATT_DIFFUSE_R	src/interfaces/track.h	65;"	d
TRK_ATT_DOVFACTOR	export/include/track.h	163;"	d
TRK_ATT_DOVFACTOR	src/interfaces/track.h	163;"	d
TRK_ATT_DV	export/include/track.h	99;"	d
TRK_ATT_DV	src/interfaces/track.h	99;"	d
TRK_ATT_ELEVATION	export/include/track.h	88;"	d
TRK_ATT_ELEVATION	src/interfaces/track.h	88;"	d
TRK_ATT_END	export/include/track.h	170;"	d
TRK_ATT_END	src/interfaces/track.h	170;"	d
TRK_ATT_ENTRY	export/include/track.h	167;"	d
TRK_ATT_ENTRY	src/interfaces/track.h	167;"	d
TRK_ATT_ENVIND	export/include/track.h	552;"	d
TRK_ATT_ENVIND	src/interfaces/track.h	552;"	d
TRK_ATT_ENVMAP	export/include/track.h	162;"	d
TRK_ATT_ENVMAP	src/interfaces/track.h	162;"	d
TRK_ATT_ENVNAME	export/include/track.h	58;"	d
TRK_ATT_ENVNAME	src/interfaces/track.h	58;"	d
TRK_ATT_EWIDTH	export/include/track.h	183;"	d
TRK_ATT_EWIDTH	src/interfaces/track.h	183;"	d
TRK_ATT_EXIT	export/include/track.h	168;"	d
TRK_ATT_EXIT	src/interfaces/track.h	168;"	d
TRK_ATT_FINISH	export/include/track.h	591;"	d
TRK_ATT_FINISH	src/interfaces/track.h	591;"	d
TRK_ATT_FOVFACT	export/include/track.h	72;"	d
TRK_ATT_FOVFACT	src/interfaces/track.h	72;"	d
TRK_ATT_FRICTION	export/include/track.h	104;"	d
TRK_ATT_FRICTION	src/interfaces/track.h	104;"	d
TRK_ATT_G1	export/include/track.h	119;"	d
TRK_ATT_G1	src/interfaces/track.h	119;"	d
TRK_ATT_G2	export/include/track.h	122;"	d
TRK_ATT_G2	src/interfaces/track.h	122;"	d
TRK_ATT_GRADE	export/include/track.h	148;"	d
TRK_ATT_GRADE	src/interfaces/track.h	148;"	d
TRK_ATT_GRPSZ	export/include/track.h	91;"	d
TRK_ATT_GRPSZ	src/interfaces/track.h	91;"	d
TRK_ATT_HEIGHT	export/include/track.h	185;"	d
TRK_ATT_HEIGHT	export/include/track.h	199;"	d
TRK_ATT_HEIGHT	src/interfaces/track.h	185;"	d
TRK_ATT_HEIGHT	src/interfaces/track.h	199;"	d
TRK_ATT_HSPACE	export/include/track.h	75;"	d
TRK_ATT_HSPACE	src/interfaces/track.h	75;"	d
TRK_ATT_ID	export/include/track.h	151;"	d
TRK_ATT_ID	src/interfaces/track.h	151;"	d
TRK_ATT_LBAFRCT	export/include/track.h	579;"	d
TRK_ATT_LBAFRCT	export/include/track.h	584;"	d
TRK_ATT_LBAFRCT	src/interfaces/track.h	579;"	d
TRK_ATT_LBAFRCT	src/interfaces/track.h	584;"	d
TRK_ATT_LBAH	export/include/track.h	578;"	d
TRK_ATT_LBAH	src/interfaces/track.h	578;"	d
TRK_ATT_LBAS	export/include/track.h	576;"	d
TRK_ATT_LBAS	src/interfaces/track.h	576;"	d
TRK_ATT_LBASURF	export/include/track.h	580;"	d
TRK_ATT_LBASURF	src/interfaces/track.h	580;"	d
TRK_ATT_LBAW	export/include/track.h	577;"	d
TRK_ATT_LBAW	src/interfaces/track.h	577;"	d
TRK_ATT_LBH	export/include/track.h	567;"	d
TRK_ATT_LBH	src/interfaces/track.h	567;"	d
TRK_ATT_LBS	export/include/track.h	565;"	d
TRK_ATT_LBS	src/interfaces/track.h	565;"	d
TRK_ATT_LBSURF	export/include/track.h	568;"	d
TRK_ATT_LBSURF	src/interfaces/track.h	568;"	d
TRK_ATT_LBW	export/include/track.h	566;"	d
TRK_ATT_LBW	src/interfaces/track.h	566;"	d
TRK_ATT_LEN	export/include/track.h	172;"	d
TRK_ATT_LEN	src/interfaces/track.h	172;"	d
TRK_ATT_LG	export/include/track.h	138;"	d
TRK_ATT_LG	src/interfaces/track.h	138;"	d
TRK_ATT_LIPOS_X	export/include/track.h	69;"	d
TRK_ATT_LIPOS_X	src/interfaces/track.h	69;"	d
TRK_ATT_LIPOS_Y	export/include/track.h	70;"	d
TRK_ATT_LIPOS_Y	src/interfaces/track.h	70;"	d
TRK_ATT_LIPOS_Z	export/include/track.h	71;"	d
TRK_ATT_LIPOS_Z	src/interfaces/track.h	71;"	d
TRK_ATT_LSSURF	export/include/track.h	559;"	d
TRK_ATT_LSSURF	src/interfaces/track.h	559;"	d
TRK_ATT_LST	export/include/track.h	555;"	d
TRK_ATT_LST	src/interfaces/track.h	555;"	d
TRK_ATT_LSW	export/include/track.h	556;"	d
TRK_ATT_LSW	src/interfaces/track.h	556;"	d
TRK_ATT_LSWE	export/include/track.h	558;"	d
TRK_ATT_LSWE	src/interfaces/track.h	558;"	d
TRK_ATT_LSWS	export/include/track.h	557;"	d
TRK_ATT_LSWS	src/interfaces/track.h	557;"	d
TRK_ATT_MARKS	export/include/track.h	161;"	d
TRK_ATT_MARKS	src/interfaces/track.h	161;"	d
TRK_ATT_NAME	export/include/track.h	42;"	d
TRK_ATT_NAME	src/interfaces/track.h	42;"	d
TRK_ATT_OBJECT	export/include/track.h	94;"	d
TRK_ATT_OBJECT	src/interfaces/track.h	94;"	d
TRK_ATT_OBJMAP	export/include/track.h	92;"	d
TRK_ATT_OBJMAP	src/interfaces/track.h	92;"	d
TRK_ATT_ORIENT	export/include/track.h	83;"	d
TRK_ATT_ORIENT	src/interfaces/track.h	83;"	d
TRK_ATT_ORIENTATION	export/include/track.h	97;"	d
TRK_ATT_ORIENTATION	src/interfaces/track.h	97;"	d
TRK_ATT_ORIENTATION_TYPE	export/include/track.h	96;"	d
TRK_ATT_ORIENTATION_TYPE	src/interfaces/track.h	96;"	d
TRK_ATT_PIT_END	export/include/track.h	545;"	d
TRK_ATT_PIT_END	src/interfaces/track.h	545;"	d
TRK_ATT_PIT_ENTRY	export/include/track.h	542;"	d
TRK_ATT_PIT_ENTRY	src/interfaces/track.h	542;"	d
TRK_ATT_PIT_EXIT	export/include/track.h	543;"	d
TRK_ATT_PIT_EXIT	src/interfaces/track.h	543;"	d
TRK_ATT_PIT_LEN	export/include/track.h	548;"	d
TRK_ATT_PIT_LEN	src/interfaces/track.h	548;"	d
TRK_ATT_PIT_SIDE	export/include/track.h	547;"	d
TRK_ATT_PIT_SIDE	src/interfaces/track.h	547;"	d
TRK_ATT_PIT_START	export/include/track.h	544;"	d
TRK_ATT_PIT_START	src/interfaces/track.h	544;"	d
TRK_ATT_PIT_TYPE	export/include/track.h	546;"	d
TRK_ATT_PIT_TYPE	src/interfaces/track.h	546;"	d
TRK_ATT_PIT_WIDTH	export/include/track.h	549;"	d
TRK_ATT_PIT_WIDTH	src/interfaces/track.h	549;"	d
TRK_ATT_PROFIL	export/include/track.h	152;"	d
TRK_ATT_PROFIL	src/interfaces/track.h	152;"	d
TRK_ATT_PROFSTEPS	export/include/track.h	153;"	d
TRK_ATT_PROFSTEPS	src/interfaces/track.h	153;"	d
TRK_ATT_PROFSTEPSLEN	export/include/track.h	154;"	d
TRK_ATT_PROFSTEPSLEN	src/interfaces/track.h	154;"	d
TRK_ATT_PROFTGTE	export/include/track.h	156;"	d
TRK_ATT_PROFTGTE	src/interfaces/track.h	156;"	d
TRK_ATT_PROFTGTEL	export/include/track.h	158;"	d
TRK_ATT_PROFTGTEL	src/interfaces/track.h	158;"	d
TRK_ATT_PROFTGTER	export/include/track.h	160;"	d
TRK_ATT_PROFTGTER	src/interfaces/track.h	160;"	d
TRK_ATT_PROFTGTS	export/include/track.h	155;"	d
TRK_ATT_PROFTGTS	src/interfaces/track.h	155;"	d
TRK_ATT_PROFTGTSL	export/include/track.h	157;"	d
TRK_ATT_PROFTGTSL	src/interfaces/track.h	157;"	d
TRK_ATT_PROFTGTSR	export/include/track.h	159;"	d
TRK_ATT_PROFTGTSR	src/interfaces/track.h	159;"	d
TRK_ATT_R1	export/include/track.h	118;"	d
TRK_ATT_R1	src/interfaces/track.h	118;"	d
TRK_ATT_R2	export/include/track.h	121;"	d
TRK_ATT_R2	src/interfaces/track.h	121;"	d
TRK_ATT_RADIUS	export/include/track.h	139;"	d
TRK_ATT_RADIUS	src/interfaces/track.h	139;"	d
TRK_ATT_RADIUSEND	export/include/track.h	140;"	d
TRK_ATT_RADIUSEND	src/interfaces/track.h	140;"	d
TRK_ATT_RBAH	export/include/track.h	583;"	d
TRK_ATT_RBAH	src/interfaces/track.h	583;"	d
TRK_ATT_RBAS	export/include/track.h	581;"	d
TRK_ATT_RBAS	src/interfaces/track.h	581;"	d
TRK_ATT_RBASURF	export/include/track.h	585;"	d
TRK_ATT_RBASURF	src/interfaces/track.h	585;"	d
TRK_ATT_RBAW	export/include/track.h	582;"	d
TRK_ATT_RBAW	src/interfaces/track.h	582;"	d
TRK_ATT_RBH	export/include/track.h	571;"	d
TRK_ATT_RBH	src/interfaces/track.h	571;"	d
TRK_ATT_RBS	export/include/track.h	569;"	d
TRK_ATT_RBS	src/interfaces/track.h	569;"	d
TRK_ATT_RBSURF	export/include/track.h	572;"	d
TRK_ATT_RBSURF	src/interfaces/track.h	572;"	d
TRK_ATT_RBW	export/include/track.h	570;"	d
TRK_ATT_RBW	src/interfaces/track.h	570;"	d
TRK_ATT_REBOUND	export/include/track.h	109;"	d
TRK_ATT_REBOUND	src/interfaces/track.h	109;"	d
TRK_ATT_RELIEF	export/include/track.h	87;"	d
TRK_ATT_RELIEF	src/interfaces/track.h	87;"	d
TRK_ATT_ROLLRES	export/include/track.h	105;"	d
TRK_ATT_ROLLRES	src/interfaces/track.h	105;"	d
TRK_ATT_ROUGHT	export/include/track.h	106;"	d
TRK_ATT_ROUGHT	src/interfaces/track.h	106;"	d
TRK_ATT_ROUGHTWL	export/include/track.h	107;"	d
TRK_ATT_ROUGHTWL	src/interfaces/track.h	107;"	d
TRK_ATT_RSSURF	export/include/track.h	564;"	d
TRK_ATT_RSSURF	src/interfaces/track.h	564;"	d
TRK_ATT_RST	export/include/track.h	560;"	d
TRK_ATT_RST	src/interfaces/track.h	560;"	d
TRK_ATT_RSW	export/include/track.h	561;"	d
TRK_ATT_RSW	src/interfaces/track.h	561;"	d
TRK_ATT_RSWE	export/include/track.h	563;"	d
TRK_ATT_RSWE	src/interfaces/track.h	563;"	d
TRK_ATT_RSWS	export/include/track.h	562;"	d
TRK_ATT_RSWS	src/interfaces/track.h	562;"	d
TRK_ATT_SEED	export/include/track.h	95;"	d
TRK_ATT_SEED	src/interfaces/track.h	95;"	d
TRK_ATT_SEGMENT	export/include/track.h	196;"	d
TRK_ATT_SEGMENT	src/interfaces/track.h	196;"	d
TRK_ATT_SHIN	export/include/track.h	68;"	d
TRK_ATT_SHIN	src/interfaces/track.h	68;"	d
TRK_ATT_SIDE	export/include/track.h	171;"	d
TRK_ATT_SIDE	src/interfaces/track.h	171;"	d
TRK_ATT_SPD_LIM	export/include/track.h	173;"	d
TRK_ATT_SPD_LIM	src/interfaces/track.h	173;"	d
TRK_ATT_SPEC_B	export/include/track.h	61;"	d
TRK_ATT_SPEC_B	src/interfaces/track.h	61;"	d
TRK_ATT_SPEC_G	export/include/track.h	60;"	d
TRK_ATT_SPEC_G	src/interfaces/track.h	60;"	d
TRK_ATT_SPEC_R	export/include/track.h	59;"	d
TRK_ATT_SPEC_R	src/interfaces/track.h	59;"	d
TRK_ATT_START	export/include/track.h	169;"	d
TRK_ATT_START	src/interfaces/track.h	169;"	d
TRK_ATT_STEPLEN	export/include/track.h	125;"	d
TRK_ATT_STEPLEN	src/interfaces/track.h	125;"	d
TRK_ATT_STYLE	export/include/track.h	184;"	d
TRK_ATT_STYLE	src/interfaces/track.h	184;"	d
TRK_ATT_SURF	export/include/track.h	41;"	d
TRK_ATT_SURF	src/interfaces/track.h	41;"	d
TRK_ATT_SURFRAND	export/include/track.h	86;"	d
TRK_ATT_SURFRAND	src/interfaces/track.h	86;"	d
TRK_ATT_SWIDTH	export/include/track.h	182;"	d
TRK_ATT_SWIDTH	src/interfaces/track.h	182;"	d
TRK_ATT_TEXLINK	export/include/track.h	113;"	d
TRK_ATT_TEXLINK	src/interfaces/track.h	113;"	d
TRK_ATT_TEXMIPMAP	export/include/track.h	117;"	d
TRK_ATT_TEXMIPMAP	src/interfaces/track.h	117;"	d
TRK_ATT_TEXSIZE	export/include/track.h	114;"	d
TRK_ATT_TEXSIZE	src/interfaces/track.h	114;"	d
TRK_ATT_TEXSTARTBOUNDARY	export/include/track.h	116;"	d
TRK_ATT_TEXSTARTBOUNDARY	src/interfaces/track.h	116;"	d
TRK_ATT_TEXTURE	export/include/track.h	110;"	d
TRK_ATT_TEXTURE	src/interfaces/track.h	110;"	d
TRK_ATT_TEXTYPE	export/include/track.h	112;"	d
TRK_ATT_TEXTYPE	src/interfaces/track.h	112;"	d
TRK_ATT_TORIGHT	export/include/track.h	197;"	d
TRK_ATT_TORIGHT	src/interfaces/track.h	197;"	d
TRK_ATT_TOSTART	export/include/track.h	198;"	d
TRK_ATT_TOSTART	src/interfaces/track.h	198;"	d
TRK_ATT_TSTEP	export/include/track.h	80;"	d
TRK_ATT_TSTEP	src/interfaces/track.h	80;"	d
TRK_ATT_TYPE	export/include/track.h	132;"	d
TRK_ATT_TYPE	src/interfaces/track.h	132;"	d
TRK_ATT_VERSION	export/include/track.h	43;"	d
TRK_ATT_VERSION	src/interfaces/track.h	43;"	d
TRK_ATT_VSPACE	export/include/track.h	76;"	d
TRK_ATT_VSPACE	src/interfaces/track.h	76;"	d
TRK_ATT_WIDTH	export/include/track.h	40;"	d
TRK_ATT_WIDTH	src/interfaces/track.h	40;"	d
TRK_ATT_ZE	export/include/track.h	143;"	d
TRK_ATT_ZE	src/interfaces/track.h	143;"	d
TRK_ATT_ZEL	export/include/track.h	146;"	d
TRK_ATT_ZEL	src/interfaces/track.h	146;"	d
TRK_ATT_ZER	export/include/track.h	147;"	d
TRK_ATT_ZER	src/interfaces/track.h	147;"	d
TRK_ATT_ZS	export/include/track.h	142;"	d
TRK_ATT_ZS	src/interfaces/track.h	142;"	d
TRK_ATT_ZSL	export/include/track.h	144;"	d
TRK_ATT_ZSL	src/interfaces/track.h	144;"	d
TRK_ATT_ZSR	export/include/track.h	145;"	d
TRK_ATT_ZSR	src/interfaces/track.h	145;"	d
TRK_IDENT	export/include/track.h	34;"	d
TRK_IDENT	src/interfaces/track.h	34;"	d
TRK_LST_CAM	export/include/track.h	541;"	d
TRK_LST_CAM	src/interfaces/track.h	541;"	d
TRK_LST_ENV	export/include/track.h	57;"	d
TRK_LST_ENV	src/interfaces/track.h	57;"	d
TRK_LST_SEG	export/include/track.h	551;"	d
TRK_LST_SEG	src/interfaces/track.h	551;"	d
TRK_LST_SEGMENTS	export/include/track.h	131;"	d
TRK_LST_SEGMENTS	src/interfaces/track.h	131;"	d
TRK_LST_SURF	export/include/track.h	540;"	d
TRK_LST_SURF	src/interfaces/track.h	540;"	d
TRK_SECT_CAM	export/include/track.h	194;"	d
TRK_SECT_CAM	src/interfaces/track.h	194;"	d
TRK_SECT_GRAPH	export/include/track.h	48;"	d
TRK_SECT_GRAPH	src/interfaces/track.h	48;"	d
TRK_SECT_HDR	export/include/track.h	38;"	d
TRK_SECT_HDR	src/interfaces/track.h	38;"	d
TRK_SECT_LBARRIER	export/include/track.h	179;"	d
TRK_SECT_LBARRIER	src/interfaces/track.h	179;"	d
TRK_SECT_LBORDER	export/include/track.h	177;"	d
TRK_SECT_LBORDER	src/interfaces/track.h	177;"	d
TRK_SECT_LSIDE	export/include/track.h	175;"	d
TRK_SECT_LSIDE	src/interfaces/track.h	175;"	d
TRK_SECT_MAIN	export/include/track.h	130;"	d
TRK_SECT_MAIN	src/interfaces/track.h	130;"	d
TRK_SECT_OBJECTS	export/include/track.h	102;"	d
TRK_SECT_OBJECTS	src/interfaces/track.h	102;"	d
TRK_SECT_OBJMAP	export/include/track.h	100;"	d
TRK_SECT_OBJMAP	src/interfaces/track.h	100;"	d
TRK_SECT_PITS	export/include/track.h	165;"	d
TRK_SECT_PITS	src/interfaces/track.h	165;"	d
TRK_SECT_RBARRIER	export/include/track.h	180;"	d
TRK_SECT_RBARRIER	src/interfaces/track.h	180;"	d
TRK_SECT_RBORDER	export/include/track.h	178;"	d
TRK_SECT_RBORDER	src/interfaces/track.h	178;"	d
TRK_SECT_RSIDE	export/include/track.h	176;"	d
TRK_SECT_RSIDE	src/interfaces/track.h	176;"	d
TRK_SECT_SURFACES	export/include/track.h	101;"	d
TRK_SECT_SURFACES	src/interfaces/track.h	101;"	d
TRK_SECT_TERRAIN	export/include/track.h	78;"	d
TRK_SECT_TERRAIN	src/interfaces/track.h	78;"	d
TRK_SECT_TURNMARKS	export/include/track.h	74;"	d
TRK_SECT_TURNMARKS	src/interfaces/track.h	74;"	d
TRK_VAL_ASPHALT	export/include/track.h	203;"	d
TRK_VAL_ASPHALT	src/interfaces/track.h	203;"	d
TRK_VAL_BARRIER	export/include/track.h	208;"	d
TRK_VAL_BARRIER	src/interfaces/track.h	208;"	d
TRK_VAL_CCLOCK	export/include/track.h	85;"	d
TRK_VAL_CCLOCK	src/interfaces/track.h	85;"	d
TRK_VAL_CLOCK	export/include/track.h	84;"	d
TRK_VAL_CLOCK	src/interfaces/track.h	84;"	d
TRK_VAL_CONCRETE	export/include/track.h	204;"	d
TRK_VAL_CONCRETE	src/interfaces/track.h	204;"	d
TRK_VAL_CURB	export/include/track.h	190;"	d
TRK_VAL_CURB	src/interfaces/track.h	190;"	d
TRK_VAL_DIRT	export/include/track.h	207;"	d
TRK_VAL_DIRT	src/interfaces/track.h	207;"	d
TRK_VAL_FENCE	export/include/track.h	191;"	d
TRK_VAL_FENCE	src/interfaces/track.h	191;"	d
TRK_VAL_GRASS	export/include/track.h	205;"	d
TRK_VAL_GRASS	src/interfaces/track.h	205;"	d
TRK_VAL_LEVEL	export/include/track.h	214;"	d
TRK_VAL_LEVEL	src/interfaces/track.h	214;"	d
TRK_VAL_LFT	export/include/track.h	135;"	d
TRK_VAL_LFT	src/interfaces/track.h	135;"	d
TRK_VAL_LINEAR	export/include/track.h	210;"	d
TRK_VAL_LINEAR	src/interfaces/track.h	210;"	d
TRK_VAL_NO	export/include/track.h	128;"	d
TRK_VAL_NO	src/interfaces/track.h	128;"	d
TRK_VAL_PIT_TYPE_NONE	export/include/track.h	587;"	d
TRK_VAL_PIT_TYPE_NONE	src/interfaces/track.h	587;"	d
TRK_VAL_PIT_TYPE_SEP_PATH	export/include/track.h	589;"	d
TRK_VAL_PIT_TYPE_SEP_PATH	src/interfaces/track.h	589;"	d
TRK_VAL_PIT_TYPE_SIDE	export/include/track.h	588;"	d
TRK_VAL_PIT_TYPE_SIDE	src/interfaces/track.h	588;"	d
TRK_VAL_PLAN	export/include/track.h	188;"	d
TRK_VAL_PLAN	src/interfaces/track.h	188;"	d
TRK_VAL_RGT	export/include/track.h	136;"	d
TRK_VAL_RGT	src/interfaces/track.h	136;"	d
TRK_VAL_SAND	export/include/track.h	206;"	d
TRK_VAL_SAND	src/interfaces/track.h	206;"	d
TRK_VAL_SPLINE	export/include/track.h	211;"	d
TRK_VAL_SPLINE	src/interfaces/track.h	211;"	d
TRK_VAL_STR	export/include/track.h	134;"	d
TRK_VAL_STR	src/interfaces/track.h	134;"	d
TRK_VAL_TANGENT	export/include/track.h	213;"	d
TRK_VAL_TANGENT	src/interfaces/track.h	213;"	d
TRK_VAL_WALL	export/include/track.h	189;"	d
TRK_VAL_WALL	src/interfaces/track.h	189;"	d
TRK_VAL_YES	export/include/track.h	127;"	d
TRK_VAL_YES	src/interfaces/track.h	127;"	d
TRUE	src/tools/accc/accc.h	29;"	d
TRUE	src/windows/include/plib/ul.h	172;"	d
TRUE	src/windows/include/ul.h	172;"	d
TRUNC	src/libs/tgf/profiler.cpp	122;"	d	file:
TR_CS	export/include/track.h	344;"	d
TR_CS	src/interfaces/track.h	344;"	d
TR_CURB	export/include/track.h	301;"	d
TR_CURB	src/interfaces/track.h	301;"	d
TR_EL	export/include/track.h	325;"	d
TR_EL	src/interfaces/track.h	325;"	d
TR_ER	export/include/track.h	326;"	d
TR_ER	src/interfaces/track.h	326;"	d
TR_FENCE	export/include/track.h	303;"	d
TR_FENCE	src/interfaces/track.h	303;"	d
TR_LAST	export/include/track.h	368;"	d
TR_LAST	src/interfaces/track.h	368;"	d
TR_LBORDER	export/include/track.h	290;"	d
TR_LBORDER	src/interfaces/track.h	290;"	d
TR_LFT	export/include/track.h	277;"	d
TR_LFT	src/interfaces/track.h	277;"	d
TR_LPOS_MAIN	export/include/track.h	418;"	d
TR_LPOS_MAIN	src/interfaces/track.h	418;"	d
TR_LPOS_SEGMENT	export/include/track.h	419;"	d
TR_LPOS_SEGMENT	src/interfaces/track.h	419;"	d
TR_LPOS_TRACK	export/include/track.h	420;"	d
TR_LPOS_TRACK	src/interfaces/track.h	420;"	d
TR_LSIDE	export/include/track.h	288;"	d
TR_LSIDE	src/interfaces/track.h	288;"	d
TR_MAIN	export/include/track.h	287;"	d
TR_MAIN	src/interfaces/track.h	287;"	d
TR_NORMAL	export/include/track.h	367;"	d
TR_NORMAL	src/interfaces/track.h	367;"	d
TR_PIT	export/include/track.h	374;"	d
TR_PIT	src/interfaces/track.h	374;"	d
TR_PITBUILDING	export/include/track.h	304;"	d
TR_PITBUILDING	src/interfaces/track.h	304;"	d
TR_PITEND	export/include/track.h	376;"	d
TR_PITEND	src/interfaces/track.h	376;"	d
TR_PITENTRY	export/include/track.h	372;"	d
TR_PITENTRY	src/interfaces/track.h	372;"	d
TR_PITEXIT	export/include/track.h	373;"	d
TR_PITEXIT	src/interfaces/track.h	373;"	d
TR_PITLANE	export/include/track.h	370;"	d
TR_PITLANE	src/interfaces/track.h	370;"	d
TR_PITSTART	export/include/track.h	375;"	d
TR_PITSTART	src/interfaces/track.h	375;"	d
TR_PIT_MAXCARPERPIT	export/include/track.h	436;"	d
TR_PIT_MAXCARPERPIT	src/interfaces/track.h	436;"	d
TR_PIT_NONE	export/include/track.h	450;"	d
TR_PIT_NONE	src/interfaces/track.h	450;"	d
TR_PIT_ON_SEPARATE_PATH	export/include/track.h	452;"	d
TR_PIT_ON_SEPARATE_PATH	src/interfaces/track.h	452;"	d
TR_PIT_ON_TRACK_SIDE	export/include/track.h	451;"	d
TR_PIT_ON_TRACK_SIDE	src/interfaces/track.h	451;"	d
TR_PIT_STATE_FREE	export/include/track.h	435;"	d
TR_PIT_STATE_FREE	src/interfaces/track.h	435;"	d
TR_PLAN	export/include/track.h	300;"	d
TR_PLAN	src/interfaces/track.h	300;"	d
TR_RBORDER	export/include/track.h	291;"	d
TR_RBORDER	src/interfaces/track.h	291;"	d
TR_RGT	export/include/track.h	276;"	d
TR_RGT	src/interfaces/track.h	276;"	d
TR_RSIDE	export/include/track.h	289;"	d
TR_RSIDE	src/interfaces/track.h	289;"	d
TR_SIDE_LFT	export/include/track.h	394;"	d
TR_SIDE_LFT	src/interfaces/track.h	394;"	d
TR_SIDE_RGT	export/include/track.h	395;"	d
TR_SIDE_RGT	src/interfaces/track.h	395;"	d
TR_SL	export/include/track.h	323;"	d
TR_SL	src/interfaces/track.h	323;"	d
TR_SPEEDLIMIT	export/include/track.h	371;"	d
TR_SPEEDLIMIT	src/interfaces/track.h	371;"	d
TR_SR	export/include/track.h	324;"	d
TR_SR	src/interfaces/track.h	324;"	d
TR_START	export/include/track.h	369;"	d
TR_START	src/interfaces/track.h	369;"	d
TR_STR	export/include/track.h	278;"	d
TR_STR	src/interfaces/track.h	278;"	d
TR_TOLEFT	export/include/track.h	406;"	d
TR_TOLEFT	src/interfaces/track.h	406;"	d
TR_TOMIDDLE	export/include/track.h	405;"	d
TR_TOMIDDLE	src/interfaces/track.h	405;"	d
TR_TORIGHT	export/include/track.h	404;"	d
TR_TORIGHT	src/interfaces/track.h	404;"	d
TR_WALL	export/include/track.h	302;"	d
TR_WALL	src/interfaces/track.h	302;"	d
TR_XE	export/include/track.h	343;"	d
TR_XE	src/interfaces/track.h	343;"	d
TR_XS	export/include/track.h	342;"	d
TR_XS	src/interfaces/track.h	342;"	d
TR_YL	export/include/track.h	340;"	d
TR_YL	src/interfaces/track.h	340;"	d
TR_YR	export/include/track.h	341;"	d
TR_YR	src/interfaces/track.h	341;"	d
TR_ZE	export/include/track.h	339;"	d
TR_ZE	src/interfaces/track.h	339;"	d
TR_ZS	export/include/track.h	338;"	d
TR_ZS	src/interfaces/track.h	338;"	d
TSTX	src/modules/track/track0.cpp	61;"	d	file:
TSTX	src/modules/track/track1.cpp	30;"	d	file:
TSTX	src/modules/track/track2.cpp	30;"	d	file:
TSTX	src/modules/track/track3.cpp	31;"	d	file:
TSTX	src/modules/track/track4.cpp	31;"	d	file:
TSTY	src/modules/track/track0.cpp	65;"	d	file:
TSTY	src/modules/track/track1.cpp	34;"	d	file:
TSTY	src/modules/track/track2.cpp	34;"	d	file:
TSTY	src/modules/track/track3.cpp	35;"	d	file:
TSTY	src/modules/track/track4.cpp	36;"	d	file:
TSTZ	src/modules/track/track0.cpp	69;"	d	file:
TSTZ	src/modules/track/track1.cpp	38;"	d	file:
TSTZ	src/modules/track/track2.cpp	38;"	d	file:
TSTZ	src/modules/track/track3.cpp	39;"	d	file:
TSTZ	src/modules/track/track4.cpp	41;"	d	file:
TURNSPEED	src/drivers/berniw/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	src/drivers/berniw/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	src/drivers/berniw2/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	src/drivers/berniw2/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	src/drivers/berniw3/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar	file:
TURNSPEED	src/drivers/berniw3/mycar.h	/^		static const double TURNSPEED;			\/* if speed lower than this you can back up [m\/s] *\/$/;"	m	class:MyCar
TURNSPEED	src/drivers/inferno/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;				\/\/ if speed lower than this you can back up [m\/s].$/;"	m	class:MyCar	file:
TURNSPEED	src/drivers/inferno/mycar.h	/^		static const double TURNSPEED;				\/\/ If speed lower than this you can back up [m\/s].$/;"	m	class:MyCar
TURNSPEED	src/drivers/lliaw/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;				\/\/ if speed lower than this you can back up [m\/s].$/;"	m	class:MyCar	file:
TURNSPEED	src/drivers/lliaw/mycar.h	/^		static const double TURNSPEED;				\/\/ If speed lower than this you can back up [m\/s].$/;"	m	class:MyCar
TURNSPEED	src/drivers/tita/mycar.cpp	/^const double MyCar::TURNSPEED = 3.0;				\/\/ if speed lower than this you can back up [m\/s].$/;"	m	class:MyCar	file:
TURNSPEED	src/drivers/tita/mycar.h	/^		static const double TURNSPEED;				\/\/ If speed lower than this you can back up [m\/s].$/;"	m	class:MyCar
TURNTOL	src/drivers/berniw/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	src/drivers/berniw/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	src/drivers/berniw2/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	src/drivers/berniw2/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	src/drivers/berniw3/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;				\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar	file:
TURNTOL	src/drivers/berniw3/mycar.h	/^		static const double TURNTOL;			\/* tolerance for end backing up [m] *\/$/;"	m	class:MyCar
TURNTOL	src/drivers/inferno/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;					\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar	file:
TURNTOL	src/drivers/inferno/mycar.h	/^		static const double TURNTOL;				\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar
TURNTOL	src/drivers/lliaw/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;					\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar	file:
TURNTOL	src/drivers/lliaw/mycar.h	/^		static const double TURNTOL;				\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar
TURNTOL	src/drivers/tita/mycar.cpp	/^const double MyCar::TURNTOL = 1.0;					\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar	file:
TURNTOL	src/drivers/tita/mycar.h	/^		static const double TURNTOL;				\/\/ Tolerance for end backing up [m].$/;"	m	class:MyCar
TWO_PI	export/include/3D/Basic.h	/^const Scalar TWO_PI =        6.28318530717958623200;$/;"	v
TWO_PI	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^const Scalar TWO_PI =        6.28318530717958623200;$/;"	v
Tag	src/modules/graphic/ssggraph/grloadac.cpp	/^struct Tag$/;"	s	file:
TagType	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  enum TagType { LEAF, INTERNAL };$/;"	g	class:BBoxNode
TargetSpeed	src/drivers/inferno2/inferno2.cpp	/^static tdble	TargetSpeed;$/;"	v	file:
Tex	src/libs/tgfclient/guifont.h	/^    uint Tex;$/;"	m	struct:__anon55
TexHeight	src/libs/tgfclient/guifont.h	/^    int TexWidth, TexHeight;$/;"	m	struct:__anon55
TexName	src/tools/trackgen/easymesh.cpp	/^static char	*TexName;$/;"	v	file:
TexPage	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int    TexPage;$/;"	m	struct:__anon33	file:
TexRand	src/tools/trackgen/easymesh.cpp	/^static tdble	TexRand;$/;"	v	file:
TexSize	src/tools/trackgen/easymesh.cpp	/^static tdble	TexSize;$/;"	v	file:
TexWidth	src/libs/tgfclient/guifont.h	/^    int TexWidth, TexHeight;$/;"	m	struct:__anon55
TextureCompressOptionId	src/libs/confscreens/openglconfig.cpp	/^static int TextureCompressOptionId;$/;"	v	file:
TextureSizeOptionId	src/libs/confscreens/openglconfig.cpp	/^static int TextureSizeOptionId;$/;"	v	file:
TheBackground	src/modules/graphic/ssggraph/grscene.cpp	/^static ssgRoot *TheBackground;$/;"	v	file:
ThePits	src/modules/graphic/ssggraph/grscene.cpp	/^ssgBranch *ThePits = 0;$/;"	v
TheScene	src/modules/graphic/ssggraph/grscene.cpp	/^ssgRoot *TheScene = 0;$/;"	v
ThedispCam	src/modules/graphic/ssggraph/grscreen.cpp	/^static class cGrPerspCamera *ThedispCam;	\/* the display camera *\/$/;"	v	typeref:class:cGrPerspCamera	file:
Tlm	src/modules/telemetry/telemetry.cpp	/^typedef struct Tlm$/;"	s	file:
TlmData	src/modules/telemetry/telemetry.cpp	/^static tTlm	TlmData;$/;"	v	file:
TlmInit	src/modules/telemetry/telemetry.cpp	/^TlmInit(tdble ymin, tdble ymax)$/;"	f
TlmNewChannel	src/modules/telemetry/telemetry.cpp	/^TlmNewChannel(const char *name, tdble *var, tdble min, tdble max)$/;"	f
TlmShutdown	src/modules/telemetry/telemetry.cpp	/^TlmShutdown(void)$/;"	f
TlmStartMonitoring	src/modules/telemetry/telemetry.cpp	/^TlmStartMonitoring(const char *filename)$/;"	f
TlmStopMonitoring	src/modules/telemetry/telemetry.cpp	/^TlmStopMonitoring(void)$/;"	f
TlmUpdate	src/modules/telemetry/telemetry.cpp	/^TlmUpdate(double time)$/;"	f
TorcsControlMenuInit	src/libs/confscreens/controlconfig.cpp	/^TorcsControlMenuInit(void *prevMenu, int idx)$/;"	f
TorcsDriverMenuInit	src/libs/confscreens/driverconfig.cpp	/^TorcsDriverMenuInit(void *prevMenu)$/;"	f
TorcsEntry	src/libs/client/entry.cpp	/^TorcsEntry(void)$/;"	f
TorcsExitMenuInit	src/libs/client/exitmenu.cpp	/^void * TorcsExitMenuInit(void *menu)$/;"	f
TorcsMainExitMenuInit	src/libs/client/exitmenu.cpp	/^void * TorcsMainExitMenuInit(void *mainMenu)$/;"	f
TorcsMainMenuActivate	src/libs/client/mainmenu.cpp	/^TorcsMainMenuActivate(void * \/* dummy *\/)$/;"	f	file:
TorcsMainMenuInit	src/libs/client/mainmenu.cpp	/^TorcsMainMenuInit(void)$/;"	f
TorcsMainMenuRun	src/libs/client/mainmenu.cpp	/^TorcsMainMenuRun(void)$/;"	f
TorcsOptionOptionInit	src/libs/client/optionmenu.cpp	/^TorcsOptionOptionInit(void *precMenu)$/;"	f
TorcsSound	src/modules/graphic/ssggraph/TorcsSound.h	/^	TorcsSound(int flags = (ACTIVE_VOLUME|ACTIVE_PITCH))$/;"	f	class:TorcsSound
TorcsSound	src/modules/graphic/ssggraph/TorcsSound.h	/^class TorcsSound {$/;"	c
Tq	src/modules/simu/simuv2/brake.h	/^    tdble	Tq;$/;"	m	struct:__anon23
Tq	src/modules/simu/simuv2/differential.h	/^    tdble	Tq;$/;"	m	struct:__anon19
Tq	src/modules/simu/simuv2/engine.h	/^    tdble		Tq;	\/* output torque *\/$/;"	m	struct:__anon12
TqAtMaxPw	src/modules/simu/simuv2/engine.h	/^	tdble       TqAtMaxPw;$/;"	m	struct:__anon11
Track	src/tools/trackgen/maintrackgen.cpp	/^tTrack		*Track;$/;"	v
TrackBuildEx	src/modules/track/track.cpp	/^TrackBuildEx(char *trackfile)$/;"	f
TrackBuildv1	src/modules/track/track.cpp	/^TrackBuildv1(char *trackfile)$/;"	f
TrackCategory	src/tools/trackgen/maintrackgen.cpp	/^char		*TrackCategory;$/;"	v
TrackData	src/drivers/olethros/TrackData.cpp	/^TrackData::TrackData()$/;"	f	class:TrackData
TrackData	src/drivers/olethros/TrackData.h	/^class TrackData$/;"	c
TrackDesc	src/drivers/berniw/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	src/drivers/berniw/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	src/drivers/berniw2/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	src/drivers/berniw2/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	src/drivers/berniw3/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	src/drivers/berniw3/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	src/drivers/inferno/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	src/drivers/inferno/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	src/drivers/lliaw/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	src/drivers/lliaw/trackdesc.h	/^class TrackDesc$/;"	c
TrackDesc	src/drivers/tita/trackdesc.cpp	/^TrackDesc::TrackDesc(const tTrack* track)$/;"	f	class:TrackDesc
TrackDesc	src/drivers/tita/trackdesc.h	/^class TrackDesc$/;"	c
TrackGlobal2Local	src/modules/track/trackutil.cpp	/^TrackGlobal2Local(tTrackSeg *segment, tdble X, tdble Y, tTrkLocPos *p, int type)$/;"	f
TrackHandle	src/modules/track/track.cpp	/^static void	*TrackHandle;$/;"	v	file:
TrackHandle	src/tools/trackgen/maintrackgen.cpp	/^void		*TrackHandle;$/;"	v
TrackHeightG	src/modules/track/trackutil.cpp	/^TrackHeightG(tTrackSeg *seg, tdble x, tdble y)$/;"	f
TrackHeightL	src/modules/track/trackutil.cpp	/^TrackHeightL(tTrkLocPos *p)$/;"	f
TrackItf	src/tools/trackgen/maintrackgen.cpp	/^tTrackItf	TrackItf;$/;"	v
TrackLabelId	src/libs/racescreens/trackselect.cpp	/^static int TrackLabelId;$/;"	v	file:
TrackLocal2Global	src/modules/track/trackutil.cpp	/^TrackLocal2Global(tTrkLocPos *p, tdble *X, tdble *Y)$/;"	f
TrackName	src/tools/trackgen/maintrackgen.cpp	/^char		*TrackName;$/;"	v
TrackOnly	src/tools/trackgen/maintrackgen.cpp	/^int		TrackOnly;$/;"	v
TrackOwnPit	export/include/track.h	/^typedef struct TrackOwnPit$/;"	s
TrackOwnPit	src/interfaces/track.h	/^typedef struct TrackOwnPit$/;"	s
TrackRoot	src/tools/trackgen/objects.cpp	/^static ssgRoot	*TrackRoot = NULL;$/;"	v	file:
TrackSegment	src/drivers/berniw/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	src/drivers/berniw/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	src/drivers/berniw2/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	src/drivers/berniw2/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	src/drivers/berniw3/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	src/drivers/berniw3/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	src/drivers/inferno/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	src/drivers/inferno/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	src/drivers/lliaw/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	src/drivers/lliaw/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment	src/drivers/tita/trackdesc.cpp	/^TrackSegment::TrackSegment()$/;"	f	class:TrackSegment
TrackSegment	src/drivers/tita/trackdesc.h	/^class TrackSegment$/;"	c
TrackSegment2D	src/drivers/inferno/trackdesc.cpp	/^TrackSegment2D::TrackSegment2D()$/;"	f	class:TrackSegment2D
TrackSegment2D	src/drivers/inferno/trackdesc.h	/^class TrackSegment2D$/;"	c
TrackSegment2D	src/drivers/lliaw/trackdesc.cpp	/^TrackSegment2D::TrackSegment2D()$/;"	f	class:TrackSegment2D
TrackSegment2D	src/drivers/lliaw/trackdesc.h	/^class TrackSegment2D$/;"	c
TrackSegment2D	src/drivers/tita/trackdesc.cpp	/^TrackSegment2D::TrackSegment2D()$/;"	f	class:TrackSegment2D
TrackSegment2D	src/drivers/tita/trackdesc.h	/^class TrackSegment2D$/;"	c
TrackShutdown	src/modules/track/track.cpp	/^TrackShutdown(void)$/;"	f
TrackSideNormal	src/modules/track/trackutil.cpp	/^TrackSideNormal(tTrackSeg *seg, tdble x, tdble y, int side, t3Dd *norm)$/;"	f
TrackSpline	src/modules/track/trackutil.cpp	/^TrackSpline(tdble p0, tdble p1, tdble t0, tdble t1, tdble t)$/;"	f
TrackStep	src/tools/trackgen/easymesh.cpp	/^static tdble	TrackStep;$/;"	v	file:
TrackStep	src/tools/trackgen/maintrackgen.cpp	/^float	TrackStep = 5.0;$/;"	v
TrackStep	src/tools/trackgen/track.cpp	/^static tdble		TrackStep;$/;"	v	file:
TrackSurfaceNormal	src/modules/track/trackutil.cpp	/^TrackSurfaceNormal(tTrkLocPos *p, t3Dd *norm)$/;"	f
Trajectory	src/drivers/olethros/Trajectory.h	/^class Trajectory$/;"	c
TransEditId	src/libs/confscreens/driverconfig.cpp	/^static int TransEditId;$/;"	v	file:
Transform	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Transform() {}$/;"	f	class:Transform
Transform	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Transform(const double m[16]) { setValue(m); }$/;"	f	class:Transform
Transform	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Transform(const float m[16]) { setValue(m); }$/;"	f	class:Transform
Transform	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^class Transform {$/;"	c
Transmission	src/drivers/human/human.h	/^	int		Transmission;$/;"	m	struct:HumanContext
Tright	src/drivers/inferno2/inferno2.cpp	/^tdble	Tright[10];$/;"	v
Trightprev	src/drivers/inferno2/inferno2.cpp	/^static tdble Trightprev[10];$/;"	v	file:
Tuple3	export/include/3D/Tuple3.h	/^  Tuple3() {}$/;"	f	class:Tuple3
Tuple3	export/include/3D/Tuple3.h	/^  Tuple3(Scalar x, Scalar y, Scalar z) { setValue(x, y, z); }$/;"	f	class:Tuple3
Tuple3	export/include/3D/Tuple3.h	/^  Tuple3(const double v[3]) { setValue(v); }$/;"	f	class:Tuple3
Tuple3	export/include/3D/Tuple3.h	/^  Tuple3(const float v[3]) { setValue(v); }$/;"	f	class:Tuple3
Tuple3	export/include/3D/Tuple3.h	/^class Tuple3 {$/;"	c
Tuple3	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3() {}$/;"	f	class:Tuple3
Tuple3	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3(Scalar x, Scalar y, Scalar z) { setValue(x, y, z); }$/;"	f	class:Tuple3
Tuple3	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3(const double v[3]) { setValue(v); }$/;"	f	class:Tuple3
Tuple3	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Tuple3(const float v[3]) { setValue(v); }$/;"	f	class:Tuple3
Tuple3	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^class Tuple3 {$/;"	c
Tuple4	export/include/3D/Tuple4.h	/^  Tuple4() {}$/;"	f	class:Tuple4
Tuple4	export/include/3D/Tuple4.h	/^  Tuple4(Scalar x, Scalar y, Scalar z, Scalar w) { setValue(x, y, z, w); }$/;"	f	class:Tuple4
Tuple4	export/include/3D/Tuple4.h	/^  Tuple4(const double v[4]) { setValue(v); }$/;"	f	class:Tuple4
Tuple4	export/include/3D/Tuple4.h	/^  Tuple4(const float v[4]) { setValue(v); }$/;"	f	class:Tuple4
Tuple4	export/include/3D/Tuple4.h	/^class Tuple4 {$/;"	c
Tuple4	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4() {}$/;"	f	class:Tuple4
Tuple4	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4(Scalar x, Scalar y, Scalar z, Scalar w) { setValue(x, y, z, w); }$/;"	f	class:Tuple4
Tuple4	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4(const double v[4]) { setValue(v); }$/;"	f	class:Tuple4
Tuple4	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Tuple4(const float v[4]) { setValue(v); }$/;"	f	class:Tuple4
Tuple4	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^class Tuple4 {$/;"	c
U1	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float   U1;$/;"	m	struct:__anon33	file:
U2	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float   U2 ;$/;"	m	struct:__anon33	file:
U3	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float   U3;$/;"	m	struct:__anon33	file:
UCS2_GET_NAMING	src/libs/txml/xmltok.c	41;"	d	file:
UL_AGL	src/windows/include/plib/ul.h	125;"	d
UL_AGL	src/windows/include/ul.h	125;"	d
UL_AIX	src/windows/include/plib/ul.h	85;"	d
UL_AIX	src/windows/include/ul.h	85;"	d
UL_BEOS	src/windows/include/plib/ul.h	65;"	d
UL_BEOS	src/windows/include/ul.h	65;"	d
UL_BSD	src/windows/include/plib/ul.h	97;"	d
UL_BSD	src/windows/include/ul.h	97;"	d
UL_CGL	src/windows/include/plib/ul.h	130;"	d
UL_CGL	src/windows/include/ul.h	130;"	d
UL_CYGWIN	src/windows/include/plib/ul.h	56;"	d
UL_CYGWIN	src/windows/include/ul.h	56;"	d
UL_DEBUG	src/windows/include/plib/ul.h	/^  UL_DEBUG,    \/\/ Messages that can safely be ignored.$/;"	e	enum:ulSeverity
UL_DEBUG	src/windows/include/ul.h	/^  UL_DEBUG,    \/\/ Messages that can safely be ignored.$/;"	e	enum:ulSeverity
UL_FATAL	src/windows/include/plib/ul.h	/^  UL_FATAL,    \/\/ Errors that we cannot recover from.$/;"	e	enum:ulSeverity
UL_FATAL	src/windows/include/ul.h	/^  UL_FATAL,    \/\/ Errors that we cannot recover from.$/;"	e	enum:ulSeverity
UL_GLX	src/windows/include/plib/ul.h	119;"	d
UL_GLX	src/windows/include/plib/ul.h	137;"	d
UL_GLX	src/windows/include/plib/ul.h	142;"	d
UL_GLX	src/windows/include/ul.h	119;"	d
UL_GLX	src/windows/include/ul.h	137;"	d
UL_GLX	src/windows/include/ul.h	142;"	d
UL_HPUX	src/windows/include/plib/ul.h	93;"	d
UL_HPUX	src/windows/include/ul.h	93;"	d
UL_IRIX	src/windows/include/plib/ul.h	81;"	d
UL_IRIX	src/windows/include/ul.h	81;"	d
UL_LINUX	src/windows/include/plib/ul.h	77;"	d
UL_LINUX	src/windows/include/ul.h	77;"	d
UL_MACINTOSH	src/windows/include/plib/ul.h	69;"	d
UL_MACINTOSH	src/windows/include/ul.h	69;"	d
UL_MAC_OSX	src/windows/include/plib/ul.h	73;"	d
UL_MAC_OSX	src/windows/include/ul.h	73;"	d
UL_MAX_SEVERITY	src/windows/include/plib/ul.h	/^  UL_MAX_SEVERITY$/;"	e	enum:ulSeverity
UL_MAX_SEVERITY	src/windows/include/ul.h	/^  UL_MAX_SEVERITY$/;"	e	enum:ulSeverity
UL_MSVC	src/windows/include/plib/ul.h	61;"	d
UL_MSVC	src/windows/include/ul.h	61;"	d
UL_NAME_MAX	src/windows/include/plib/ul.h	293;"	d
UL_NAME_MAX	src/windows/include/ul.h	293;"	d
UL_SOLARIS	src/windows/include/plib/ul.h	89;"	d
UL_SOLARIS	src/windows/include/ul.h	89;"	d
UL_WARNING	src/windows/include/plib/ul.h	/^  UL_WARNING,  \/\/ Messages that are important.$/;"	e	enum:ulSeverity
UL_WARNING	src/windows/include/ul.h	/^  UL_WARNING,  \/\/ Messages that are important.$/;"	e	enum:ulSeverity
UL_WGL	src/windows/include/plib/ul.h	109;"	d
UL_WGL	src/windows/include/plib/ul.h	114;"	d
UL_WGL	src/windows/include/ul.h	109;"	d
UL_WGL	src/windows/include/ul.h	114;"	d
UL_WIN32	src/windows/include/plib/ul.h	55;"	d
UL_WIN32	src/windows/include/plib/ul.h	60;"	d
UL_WIN32	src/windows/include/ul.h	55;"	d
UL_WIN32	src/windows/include/ul.h	60;"	d
UNALIGNED_OK	src/windows/include/zconf.h	71;"	d
UNSTUCK_TIME_LIMIT	src/drivers/bt/driver.cpp	/^const float Driver::UNSTUCK_TIME_LIMIT = 2.0f;				\/\/ [s] We try to get unstuck after this time.$/;"	m	class:Driver	file:
UNSTUCK_TIME_LIMIT	src/drivers/bt/driver.h	/^		static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:Driver
UNSTUCK_TIME_LIMIT	src/drivers/damned/driver.cpp	/^const float Driver::UNSTUCK_TIME_LIMIT = 2.0f;				\/\/ [s] We try to get unstuck after this time.$/;"	m	class:Driver	file:
UNSTUCK_TIME_LIMIT	src/drivers/damned/driver.h	/^		static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:Driver
UNSTUCK_TIME_LIMIT	src/drivers/olethros/driver.cpp	/^    const float Driver::UNSTUCK_TIME_LIMIT = 2.0f;				\/\/\/< [s] We try to get unstuck after this time.$/;"	m	class:olethros::Driver	file:
UNSTUCK_TIME_LIMIT	src/drivers/olethros/driver.h	/^	static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:olethros::Driver
UNSTUCK_TIME_LIMIT	src/drivers/sparkle/driver.cpp	/^const float Driver::UNSTUCK_TIME_LIMIT = 2.0;				\/* [s] *\/$/;"	m	class:Driver	file:
UNSTUCK_TIME_LIMIT	src/drivers/sparkle/driver.h	/^		static const float UNSTUCK_TIME_LIMIT;$/;"	m	class:Driver
USE_FAR_KEYWORD	src/windows/include/pngconf.h	1005;"	d
USE_FAR_KEYWORD	src/windows/include/pngconf.h	1024;"	d
USE_LEARNED_OFFSET_RANGE	src/drivers/bt/driver.cpp	/^const float Driver::USE_LEARNED_OFFSET_RANGE = 0.2f;		\/\/ [m] if offset < this use the learned stuff$/;"	m	class:Driver	file:
USE_LEARNED_OFFSET_RANGE	src/drivers/bt/driver.h	/^		static const float USE_LEARNED_OFFSET_RANGE;$/;"	m	class:Driver
USE_LEARNED_OFFSET_RANGE	src/drivers/damned/driver.cpp	/^const float Driver::USE_LEARNED_OFFSET_RANGE = 0.2f;		\/\/ [m] if offset < this use the learned stuff$/;"	m	class:Driver	file:
USE_LEARNED_OFFSET_RANGE	src/drivers/damned/driver.h	/^		static const float USE_LEARNED_OFFSET_RANGE;$/;"	m	class:Driver
USE_LEARNED_OFFSET_RANGE	src/drivers/olethros/driver.cpp	/^    const float Driver::USE_LEARNED_OFFSET_RANGE = 0.2f;			\/\/\/< [m] if offset < this use the learned stuff$/;"	m	class:olethros::Driver	file:
USE_LEARNED_OFFSET_RANGE	src/drivers/olethros/driver.h	/^	static const float USE_LEARNED_OFFSET_RANGE;$/;"	m	class:olethros::Driver
USE_NEW_ALPHA	src/drivers/olethros/driver.cpp	/^    const bool Driver::USE_NEW_ALPHA=false;  \/\/\/< Use actual trajectory..$/;"	m	class:olethros::Driver	file:
USE_NEW_ALPHA	src/drivers/olethros/driver.h	/^	static const bool USE_NEW_ALPHA;$/;"	m	class:olethros::Driver
USE_OPENAL	src/modules/graphic/ssggraph/SoundInterface.h	23;"	d
USE_OPENAL_DOPPLER	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	26;"	d	file:
UTF8_GET_NAMING	src/libs/txml/xmltok.c	66;"	d	file:
UTF8_GET_NAMING2	src/libs/txml/xmltok.c	48;"	d	file:
UTF8_GET_NAMING3	src/libs/txml/xmltok.c	58;"	d	file:
UTF8_INVALID3	src/libs/txml/xmltok.c	73;"	d	file:
UTF8_INVALID4	src/libs/txml/xmltok.c	80;"	d	file:
UTF8_cval1	src/libs/txml/xmltok.c	/^  UTF8_cval1 = 0x00,$/;"	e	enum:__anon71	file:
UTF8_cval2	src/libs/txml/xmltok.c	/^  UTF8_cval2 = 0xc0,$/;"	e	enum:__anon71	file:
UTF8_cval3	src/libs/txml/xmltok.c	/^  UTF8_cval3 = 0xe0,$/;"	e	enum:__anon71	file:
UTF8_cval4	src/libs/txml/xmltok.c	/^  UTF8_cval4 = 0xf0$/;"	e	enum:__anon71	file:
Uchar	src/windows/include/plib/sl.h	/^typedef unsigned char  Uchar  ;$/;"	t
Uchar	src/windows/include/plib/sm.h	/^typedef unsigned char  Uchar  ;$/;"	t
UniformDistribution	export/include/learning/Distribution.h	/^	UniformDistribution() {m=0.0; s=1.0;}$/;"	f	class:UniformDistribution
UniformDistribution	export/include/learning/Distribution.h	/^	UniformDistribution(real mean, real std)$/;"	f	class:UniformDistribution
UniformDistribution	export/include/learning/Distribution.h	/^class UniformDistribution : public ParametricDistribution {$/;"	c
UniformDistribution	src/libs/learning/Distribution.h	/^	UniformDistribution() {m=0.0; s=1.0;}$/;"	f	class:UniformDistribution
UniformDistribution	src/libs/learning/Distribution.h	/^	UniformDistribution(real mean, real std)$/;"	f	class:UniformDistribution
UniformDistribution	src/libs/learning/Distribution.h	/^class UniformDistribution : public ParametricDistribution {$/;"	c
UpdtScrollList	src/libs/confscreens/driverconfig.cpp	/^UpdtScrollList(void)$/;"	f	file:
UseBorder	src/tools/trackgen/maintrackgen.cpp	/^int	UseBorder = 1;$/;"	v
Ushort	src/windows/include/plib/sl.h	/^typedef unsigned short Ushort ;$/;"	t
Ushort	src/windows/include/plib/sm.h	/^typedef unsigned short Ushort ;$/;"	t
V1	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float   V1;$/;"	m	struct:__anon33	file:
V2	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float   V2;$/;"	m	struct:__anon33	file:
V3	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float   V3;$/;"	m	struct:__anon33	file:
VAL_DIFF_FREE	export/include/car.h	545;"	d
VAL_DIFF_FREE	src/interfaces/car.h	545;"	d
VAL_DIFF_LIMITED_SLIP	export/include/car.h	546;"	d
VAL_DIFF_LIMITED_SLIP	src/interfaces/car.h	546;"	d
VAL_DIFF_NONE	export/include/car.h	543;"	d
VAL_DIFF_NONE	src/interfaces/car.h	543;"	d
VAL_DIFF_SPOOL	export/include/car.h	544;"	d
VAL_DIFF_SPOOL	src/interfaces/car.h	544;"	d
VAL_DIFF_VISCOUS_COUPLER	export/include/car.h	547;"	d
VAL_DIFF_VISCOUS_COUPLER	src/interfaces/car.h	547;"	d
VAL_LIGHT_BRAKE	export/include/car.h	590;"	d
VAL_LIGHT_BRAKE	src/interfaces/car.h	590;"	d
VAL_LIGHT_BRAKE2	export/include/car.h	591;"	d
VAL_LIGHT_BRAKE2	src/interfaces/car.h	591;"	d
VAL_LIGHT_HEAD1	export/include/car.h	588;"	d
VAL_LIGHT_HEAD1	src/interfaces/car.h	588;"	d
VAL_LIGHT_HEAD2	export/include/car.h	589;"	d
VAL_LIGHT_HEAD2	src/interfaces/car.h	589;"	d
VAL_LIGHT_REAR	export/include/car.h	593;"	d
VAL_LIGHT_REAR	src/interfaces/car.h	593;"	d
VAL_LIGHT_REVERSE	export/include/car.h	592;"	d
VAL_LIGHT_REVERSE	src/interfaces/car.h	592;"	d
VAL_TRANS_4WD	export/include/car.h	551;"	d
VAL_TRANS_4WD	src/interfaces/car.h	551;"	d
VAL_TRANS_FWD	export/include/car.h	550;"	d
VAL_TRANS_FWD	src/interfaces/car.h	550;"	d
VAL_TRANS_RWD	export/include/car.h	549;"	d
VAL_TRANS_RWD	src/interfaces/car.h	549;"	d
VERSION	config.h	131;"	d
VGAIN	src/drivers/inferno2/inferno2.cpp	230;"	d	file:
VGain	src/drivers/inferno2/inferno2.cpp	/^static tdble VGain[10]     = {0.0005f};$/;"	v	file:
VI	src/drivers/inferno2/common.cpp	/^static tdble VI[10];$/;"	v	file:
VIRTUAL_BUFFER_SIZE	src/windows/include/plib/sl.h	99;"	d
VInit	src/libs/tgfclient/screen.cpp	/^static char *VInit[] = {GFSCR_VAL_VINIT_COMPATIBLE, GFSCR_VAL_VINIT_BEST};$/;"	v	file:
VInitLabelId	src/libs/tgfclient/screen.cpp	/^static int VInitLabelId;$/;"	v	file:
VInitPrevNext	src/libs/tgfclient/screen.cpp	/^VInitPrevNext(void *vdelta)$/;"	f	file:
VM	src/drivers/inferno2/inferno2.cpp	/^tdble VM;$/;"	v
VM1	src/drivers/inferno2/inferno2.cpp	/^tdble VM1[10] = {15.0};$/;"	v
VM2	src/drivers/inferno2/inferno2.cpp	/^tdble VM2[10] = {0.0};$/;"	v
VM3	src/drivers/inferno2/inferno2.cpp	/^tdble VM3[10] = {25.0};$/;"	v
VMAX1	src/drivers/inferno2/inferno2.cpp	246;"	d	file:
VMAX2	src/drivers/inferno2/inferno2.cpp	247;"	d	file:
VMAX3	src/drivers/inferno2/inferno2.cpp	248;"	d	file:
VOLUME_CUTOFF	src/modules/graphic/ssggraph/SoundInterface.h	49;"	d
VOLUME_SLOT	src/modules/graphic/ssggraph/TorcsSound.h	23;"	d
VTABLE	src/libs/txml/xmltok.c	39;"	d	file:
VTABLE1	src/libs/txml/xmltok.c	26;"	d	file:
VTXARRAY_GUIONS	src/modules/graphic/ssggraph/grloadac.cpp	916;"	d	file:
VTX_INCR	src/tools/trackgen/easymesh.cpp	149;"	d	file:
VX_INIT	src/modules/graphic/ssggraph/grsmoke.h	10;"	d
VY_INIT	src/modules/graphic/ssggraph/grsmoke.h	9;"	d
VZ_INIT	src/modules/graphic/ssggraph/grsmoke.h	8;"	d
V_EXPANSION	src/modules/graphic/ssggraph/grsmoke.h	11;"	d
ValStyle	src/modules/track/track3.cpp	/^static char *ValStyle[4] = {TRK_VAL_PLAN, TRK_VAL_WALL, TRK_VAL_CURB, TRK_VAL_FENCE};$/;"	v	file:
ValStyle	src/modules/track/track4.cpp	/^static char *ValStyle[] = {TRK_VAL_PLAN, TRK_VAL_CURB, TRK_VAL_WALL, TRK_VAL_FENCE, TRK_VAL_FENCE};$/;"	v	file:
Vector	export/include/3D/Vector.h	/^  Vector() {}$/;"	f	class:Vector
Vector	export/include/3D/Vector.h	/^  Vector(Scalar x, Scalar y, Scalar z) : Tuple3(x, y, z) {}$/;"	f	class:Vector
Vector	export/include/3D/Vector.h	/^  Vector(const double v[3]) : Tuple3(v) {}$/;"	f	class:Vector
Vector	export/include/3D/Vector.h	/^  Vector(const float v[3]) : Tuple3(v) {}$/;"	f	class:Vector
Vector	export/include/3D/Vector.h	/^class Vector : public Tuple3 {$/;"	c
Vector	src/drivers/olethros/geometry.cpp	/^Vector::Vector (const Vector& rhs)$/;"	f	class:Vector
Vector	src/drivers/olethros/geometry.cpp	/^Vector::Vector(int N_, enum BoundsCheckingStatus check)$/;"	f	class:Vector
Vector	src/drivers/olethros/geometry.h	/^class Vector$/;"	c
Vector	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector() {}$/;"	f	class:Vector
Vector	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector(Scalar x, Scalar y, Scalar z) : Tuple3(x, y, z) {}$/;"	f	class:Vector
Vector	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector(const double v[3]) : Tuple3(v) {}$/;"	f	class:Vector
Vector	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^  Vector(const float v[3]) : Tuple3(v) {}$/;"	f	class:Vector
Vector	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^class Vector : public Tuple3 {$/;"	c
VelColl	src/modules/simu/simuv2/carstruct.h	/^    tPosd	VelColl;	\/* resulting velocity after collision *\/$/;"	m	struct:__anon18
VertexBase	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  VertexBase() : base(0) {}$/;"	f	class:VertexBase
VertexBase	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  VertexBase(const void *ptr) : base(ptr) {}$/;"	f	class:VertexBase
VertexBase	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^class VertexBase {$/;"	c
ViewGroup	src/modules/graphic/ssggraph/grscene.h	/^  GHashTable * ViewGroup;      \/* all object to display group1+group2+group3 for this segment *\/$/;"	m	struct:DistanceOfViewHashing
ViewGroupMap1_num	src/modules/graphic/ssggraph/grscene.h	/^  int ViewGroupMap1_num;$/;"	m	struct:DistanceOfViewHashing
ViewGroupMap2_num	src/modules/graphic/ssggraph/grscene.h	/^  int ViewGroupMap2_num;$/;"	m	struct:DistanceOfViewHashing
ViewGroupMap3_num	src/modules/graphic/ssggraph/grscene.h	/^  int ViewGroupMap3_num;$/;"	m	struct:DistanceOfViewHashing
ViewGroup_num	src/modules/graphic/ssggraph/grscene.h	/^  int ViewGroup_num;           \/* number of object *\/$/;"	m	struct:DistanceOfViewHashing
ViewH	src/libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
ViewW	src/libs/tgfclient/gui.cpp	/^static int	ScrW, ScrH, ViewW, ViewH;$/;"	v	file:
VolumeValue	src/libs/confscreens/soundconfig.cpp	/^static float VolumeValue = 100.0f;$/;"	v	file:
Vtarget	src/drivers/human/human.cpp	/^static tdble Vtarget;$/;"	v	file:
W	export/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon210
W	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon9
W	src/tools/trackgen/easymesh.cpp	57;"	d	file:
WAIT	src/tools/trackgen/easymesh.cpp	54;"	d	file:
WGL_3DFX_multisample	src/windows/include/GL/wglext.h	497;"	d
WGL_ACCELERATION_ARB	src/windows/include/GL/wglext.h	78;"	d
WGL_ACCELERATION_EXT	src/windows/include/GL/wglext.h	190;"	d
WGL_ACCUM_ALPHA_BITS_ARB	src/windows/include/GL/wglext.h	112;"	d
WGL_ACCUM_ALPHA_BITS_EXT	src/windows/include/GL/wglext.h	220;"	d
WGL_ACCUM_BITS_ARB	src/windows/include/GL/wglext.h	108;"	d
WGL_ACCUM_BITS_EXT	src/windows/include/GL/wglext.h	216;"	d
WGL_ACCUM_BLUE_BITS_ARB	src/windows/include/GL/wglext.h	111;"	d
WGL_ACCUM_BLUE_BITS_EXT	src/windows/include/GL/wglext.h	219;"	d
WGL_ACCUM_GREEN_BITS_ARB	src/windows/include/GL/wglext.h	110;"	d
WGL_ACCUM_GREEN_BITS_EXT	src/windows/include/GL/wglext.h	218;"	d
WGL_ACCUM_RED_BITS_ARB	src/windows/include/GL/wglext.h	109;"	d
WGL_ACCUM_RED_BITS_EXT	src/windows/include/GL/wglext.h	217;"	d
WGL_ALPHA_BITS_ARB	src/windows/include/GL/wglext.h	106;"	d
WGL_ALPHA_BITS_EXT	src/windows/include/GL/wglext.h	214;"	d
WGL_ALPHA_SHIFT_ARB	src/windows/include/GL/wglext.h	107;"	d
WGL_ALPHA_SHIFT_EXT	src/windows/include/GL/wglext.h	215;"	d
WGL_ARB_buffer_region	src/windows/include/GL/wglext.h	333;"	d
WGL_ARB_extensions_string	src/windows/include/GL/wglext.h	351;"	d
WGL_ARB_make_current_read	src/windows/include/GL/wglext.h	371;"	d
WGL_ARB_multisample	src/windows/include/GL/wglext.h	347;"	d
WGL_ARB_pbuffer	src/windows/include/GL/wglext.h	381;"	d
WGL_ARB_pixel_format	src/windows/include/GL/wglext.h	359;"	d
WGL_ARB_pixel_format_float	src/windows/include/GL/wglext.h	409;"	d
WGL_ARB_render_texture	src/windows/include/GL/wglext.h	397;"	d
WGL_ATI_pixel_format_float	src/windows/include/GL/wglext.h	619;"	d
WGL_AUX0_ARB	src/windows/include/GL/wglext.h	166;"	d
WGL_AUX1_ARB	src/windows/include/GL/wglext.h	167;"	d
WGL_AUX2_ARB	src/windows/include/GL/wglext.h	168;"	d
WGL_AUX3_ARB	src/windows/include/GL/wglext.h	169;"	d
WGL_AUX4_ARB	src/windows/include/GL/wglext.h	170;"	d
WGL_AUX5_ARB	src/windows/include/GL/wglext.h	171;"	d
WGL_AUX6_ARB	src/windows/include/GL/wglext.h	172;"	d
WGL_AUX7_ARB	src/windows/include/GL/wglext.h	173;"	d
WGL_AUX8_ARB	src/windows/include/GL/wglext.h	174;"	d
WGL_AUX9_ARB	src/windows/include/GL/wglext.h	175;"	d
WGL_AUX_BUFFERS_ARB	src/windows/include/GL/wglext.h	115;"	d
WGL_AUX_BUFFERS_EXT	src/windows/include/GL/wglext.h	223;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	src/windows/include/GL/wglext.h	61;"	d
WGL_BACK_LEFT_ARB	src/windows/include/GL/wglext.h	164;"	d
WGL_BACK_RIGHT_ARB	src/windows/include/GL/wglext.h	165;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	src/windows/include/GL/wglext.h	293;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	src/windows/include/GL/wglext.h	294;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	src/windows/include/GL/wglext.h	315;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	src/windows/include/GL/wglext.h	314;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	src/windows/include/GL/wglext.h	313;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	src/windows/include/GL/wglext.h	312;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	src/windows/include/GL/wglext.h	302;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	src/windows/include/GL/wglext.h	301;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	src/windows/include/GL/wglext.h	144;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	src/windows/include/GL/wglext.h	143;"	d
WGL_BLUE_BITS_ARB	src/windows/include/GL/wglext.h	104;"	d
WGL_BLUE_BITS_EXT	src/windows/include/GL/wglext.h	212;"	d
WGL_BLUE_SHIFT_ARB	src/windows/include/GL/wglext.h	105;"	d
WGL_BLUE_SHIFT_EXT	src/windows/include/GL/wglext.h	213;"	d
WGL_COLOR_BITS_ARB	src/windows/include/GL/wglext.h	99;"	d
WGL_COLOR_BITS_EXT	src/windows/include/GL/wglext.h	207;"	d
WGL_CUBE_MAP_FACE_ARB	src/windows/include/GL/wglext.h	155;"	d
WGL_DEPTH_BITS_ARB	src/windows/include/GL/wglext.h	113;"	d
WGL_DEPTH_BITS_EXT	src/windows/include/GL/wglext.h	221;"	d
WGL_DEPTH_BUFFER_BIT_ARB	src/windows/include/GL/wglext.h	62;"	d
WGL_DEPTH_COMPONENT_NV	src/windows/include/GL/wglext.h	297;"	d
WGL_DEPTH_FLOAT_EXT	src/windows/include/GL/wglext.h	247;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	src/windows/include/GL/wglext.h	295;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	src/windows/include/GL/wglext.h	261;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	src/windows/include/GL/wglext.h	262;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	src/windows/include/GL/wglext.h	263;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	src/windows/include/GL/wglext.h	264;"	d
WGL_DOUBLE_BUFFER_ARB	src/windows/include/GL/wglext.h	96;"	d
WGL_DOUBLE_BUFFER_EXT	src/windows/include/GL/wglext.h	204;"	d
WGL_DRAW_TO_BITMAP_ARB	src/windows/include/GL/wglext.h	77;"	d
WGL_DRAW_TO_BITMAP_EXT	src/windows/include/GL/wglext.h	189;"	d
WGL_DRAW_TO_PBUFFER_ARB	src/windows/include/GL/wglext.h	132;"	d
WGL_DRAW_TO_PBUFFER_EXT	src/windows/include/GL/wglext.h	235;"	d
WGL_DRAW_TO_WINDOW_ARB	src/windows/include/GL/wglext.h	76;"	d
WGL_DRAW_TO_WINDOW_EXT	src/windows/include/GL/wglext.h	188;"	d
WGL_EXT_depth_float	src/windows/include/GL/wglext.h	483;"	d
WGL_EXT_display_color_table	src/windows/include/GL/wglext.h	413;"	d
WGL_EXT_extensions_string	src/windows/include/GL/wglext.h	427;"	d
WGL_EXT_make_current_read	src/windows/include/GL/wglext.h	435;"	d
WGL_EXT_multisample	src/windows/include/GL/wglext.h	501;"	d
WGL_EXT_pbuffer	src/windows/include/GL/wglext.h	445;"	d
WGL_EXT_pixel_format	src/windows/include/GL/wglext.h	461;"	d
WGL_EXT_swap_control	src/windows/include/GL/wglext.h	473;"	d
WGL_FLOAT_COMPONENTS_NV	src/windows/include/GL/wglext.h	311;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	src/windows/include/GL/wglext.h	60;"	d
WGL_FRONT_LEFT_ARB	src/windows/include/GL/wglext.h	162;"	d
WGL_FRONT_RIGHT_ARB	src/windows/include/GL/wglext.h	163;"	d
WGL_FULL_ACCELERATION_ARB	src/windows/include/GL/wglext.h	118;"	d
WGL_FULL_ACCELERATION_EXT	src/windows/include/GL/wglext.h	226;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	src/windows/include/GL/wglext.h	269;"	d
WGL_GAMMA_TABLE_SIZE_I3D	src/windows/include/GL/wglext.h	268;"	d
WGL_GENERIC_ACCELERATION_ARB	src/windows/include/GL/wglext.h	117;"	d
WGL_GENERIC_ACCELERATION_EXT	src/windows/include/GL/wglext.h	225;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	src/windows/include/GL/wglext.h	278;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	src/windows/include/GL/wglext.h	277;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	src/windows/include/GL/wglext.h	281;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	src/windows/include/GL/wglext.h	279;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	src/windows/include/GL/wglext.h	280;"	d
WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D	src/windows/include/GL/wglext.h	275;"	d
WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D	src/windows/include/GL/wglext.h	274;"	d
WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D	src/windows/include/GL/wglext.h	276;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	src/windows/include/GL/wglext.h	273;"	d
WGL_GREEN_BITS_ARB	src/windows/include/GL/wglext.h	102;"	d
WGL_GREEN_BITS_EXT	src/windows/include/GL/wglext.h	210;"	d
WGL_GREEN_SHIFT_ARB	src/windows/include/GL/wglext.h	103;"	d
WGL_GREEN_SHIFT_EXT	src/windows/include/GL/wglext.h	211;"	d
WGL_I3D_digital_video_control	src/windows/include/GL/wglext.h	523;"	d
WGL_I3D_gamma	src/windows/include/GL/wglext.h	533;"	d
WGL_I3D_genlock	src/windows/include/GL/wglext.h	547;"	d
WGL_I3D_image_buffer	src/windows/include/GL/wglext.h	577;"	d
WGL_I3D_swap_frame_lock	src/windows/include/GL/wglext.h	591;"	d
WGL_I3D_swap_frame_usage	src/windows/include/GL/wglext.h	605;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	src/windows/include/GL/wglext.h	286;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	src/windows/include/GL/wglext.h	285;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	src/windows/include/GL/wglext.h	135;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	src/windows/include/GL/wglext.h	238;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	src/windows/include/GL/wglext.h	133;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	src/windows/include/GL/wglext.h	236;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	src/windows/include/GL/wglext.h	134;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	src/windows/include/GL/wglext.h	237;"	d
WGL_MIPMAP_LEVEL_ARB	src/windows/include/GL/wglext.h	154;"	d
WGL_MIPMAP_TEXTURE_ARB	src/windows/include/GL/wglext.h	147;"	d
WGL_NEED_PALETTE_ARB	src/windows/include/GL/wglext.h	79;"	d
WGL_NEED_PALETTE_EXT	src/windows/include/GL/wglext.h	191;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	src/windows/include/GL/wglext.h	80;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	src/windows/include/GL/wglext.h	192;"	d
WGL_NO_ACCELERATION_ARB	src/windows/include/GL/wglext.h	116;"	d
WGL_NO_ACCELERATION_EXT	src/windows/include/GL/wglext.h	224;"	d
WGL_NO_TEXTURE_ARB	src/windows/include/GL/wglext.h	150;"	d
WGL_NUMBER_OVERLAYS_ARB	src/windows/include/GL/wglext.h	83;"	d
WGL_NUMBER_OVERLAYS_EXT	src/windows/include/GL/wglext.h	195;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	src/windows/include/GL/wglext.h	75;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	src/windows/include/GL/wglext.h	187;"	d
WGL_NUMBER_UNDERLAYS_ARB	src/windows/include/GL/wglext.h	84;"	d
WGL_NUMBER_UNDERLAYS_EXT	src/windows/include/GL/wglext.h	196;"	d
WGL_NV_float_buffer	src/windows/include/GL/wglext.h	623;"	d
WGL_NV_vertex_array_range	src/windows/include/GL/wglext.h	487;"	d
WGL_OML_sync_control	src/windows/include/GL/wglext.h	505;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	src/windows/include/GL/wglext.h	240;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	src/windows/include/GL/wglext.h	239;"	d
WGL_PBUFFER_HEIGHT_ARB	src/windows/include/GL/wglext.h	138;"	d
WGL_PBUFFER_HEIGHT_EXT	src/windows/include/GL/wglext.h	243;"	d
WGL_PBUFFER_LARGEST_ARB	src/windows/include/GL/wglext.h	136;"	d
WGL_PBUFFER_LARGEST_EXT	src/windows/include/GL/wglext.h	241;"	d
WGL_PBUFFER_LOST_ARB	src/windows/include/GL/wglext.h	139;"	d
WGL_PBUFFER_WIDTH_ARB	src/windows/include/GL/wglext.h	137;"	d
WGL_PBUFFER_WIDTH_EXT	src/windows/include/GL/wglext.h	242;"	d
WGL_PIXEL_TYPE_ARB	src/windows/include/GL/wglext.h	98;"	d
WGL_PIXEL_TYPE_EXT	src/windows/include/GL/wglext.h	206;"	d
WGL_RED_BITS_ARB	src/windows/include/GL/wglext.h	100;"	d
WGL_RED_BITS_EXT	src/windows/include/GL/wglext.h	208;"	d
WGL_RED_SHIFT_ARB	src/windows/include/GL/wglext.h	101;"	d
WGL_RED_SHIFT_EXT	src/windows/include/GL/wglext.h	209;"	d
WGL_SAMPLES_3DFX	src/windows/include/GL/wglext.h	252;"	d
WGL_SAMPLES_ARB	src/windows/include/GL/wglext.h	68;"	d
WGL_SAMPLES_EXT	src/windows/include/GL/wglext.h	257;"	d
WGL_SAMPLE_BUFFERS_3DFX	src/windows/include/GL/wglext.h	251;"	d
WGL_SAMPLE_BUFFERS_ARB	src/windows/include/GL/wglext.h	67;"	d
WGL_SAMPLE_BUFFERS_EXT	src/windows/include/GL/wglext.h	256;"	d
WGL_SHARE_ACCUM_ARB	src/windows/include/GL/wglext.h	93;"	d
WGL_SHARE_ACCUM_EXT	src/windows/include/GL/wglext.h	201;"	d
WGL_SHARE_DEPTH_ARB	src/windows/include/GL/wglext.h	91;"	d
WGL_SHARE_DEPTH_EXT	src/windows/include/GL/wglext.h	199;"	d
WGL_SHARE_STENCIL_ARB	src/windows/include/GL/wglext.h	92;"	d
WGL_SHARE_STENCIL_EXT	src/windows/include/GL/wglext.h	200;"	d
WGL_STENCIL_BITS_ARB	src/windows/include/GL/wglext.h	114;"	d
WGL_STENCIL_BITS_EXT	src/windows/include/GL/wglext.h	222;"	d
WGL_STENCIL_BUFFER_BIT_ARB	src/windows/include/GL/wglext.h	63;"	d
WGL_STEREO_ARB	src/windows/include/GL/wglext.h	97;"	d
WGL_STEREO_EXT	src/windows/include/GL/wglext.h	205;"	d
WGL_SUPPORT_GDI_ARB	src/windows/include/GL/wglext.h	94;"	d
WGL_SUPPORT_GDI_EXT	src/windows/include/GL/wglext.h	202;"	d
WGL_SUPPORT_OPENGL_ARB	src/windows/include/GL/wglext.h	95;"	d
WGL_SUPPORT_OPENGL_EXT	src/windows/include/GL/wglext.h	203;"	d
WGL_SWAP_COPY_ARB	src/windows/include/GL/wglext.h	120;"	d
WGL_SWAP_COPY_EXT	src/windows/include/GL/wglext.h	228;"	d
WGL_SWAP_EXCHANGE_ARB	src/windows/include/GL/wglext.h	119;"	d
WGL_SWAP_EXCHANGE_EXT	src/windows/include/GL/wglext.h	227;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	src/windows/include/GL/wglext.h	81;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	src/windows/include/GL/wglext.h	193;"	d
WGL_SWAP_METHOD_ARB	src/windows/include/GL/wglext.h	82;"	d
WGL_SWAP_METHOD_EXT	src/windows/include/GL/wglext.h	194;"	d
WGL_SWAP_UNDEFINED_ARB	src/windows/include/GL/wglext.h	121;"	d
WGL_SWAP_UNDEFINED_EXT	src/windows/include/GL/wglext.h	229;"	d
WGL_TEXTURE_1D_ARB	src/windows/include/GL/wglext.h	152;"	d
WGL_TEXTURE_2D_ARB	src/windows/include/GL/wglext.h	153;"	d
WGL_TEXTURE_CUBE_MAP_ARB	src/windows/include/GL/wglext.h	151;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	src/windows/include/GL/wglext.h	157;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	src/windows/include/GL/wglext.h	159;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	src/windows/include/GL/wglext.h	161;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	src/windows/include/GL/wglext.h	156;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	src/windows/include/GL/wglext.h	158;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	src/windows/include/GL/wglext.h	160;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	src/windows/include/GL/wglext.h	296;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	src/windows/include/GL/wglext.h	319;"	d
WGL_TEXTURE_FLOAT_RGB_NV	src/windows/include/GL/wglext.h	318;"	d
WGL_TEXTURE_FLOAT_RG_NV	src/windows/include/GL/wglext.h	317;"	d
WGL_TEXTURE_FLOAT_R_NV	src/windows/include/GL/wglext.h	316;"	d
WGL_TEXTURE_FORMAT_ARB	src/windows/include/GL/wglext.h	145;"	d
WGL_TEXTURE_RECTANGLE_NV	src/windows/include/GL/wglext.h	303;"	d
WGL_TEXTURE_RGBA_ARB	src/windows/include/GL/wglext.h	149;"	d
WGL_TEXTURE_RGB_ARB	src/windows/include/GL/wglext.h	148;"	d
WGL_TEXTURE_TARGET_ARB	src/windows/include/GL/wglext.h	146;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	src/windows/include/GL/wglext.h	89;"	d
WGL_TRANSPARENT_ARB	src/windows/include/GL/wglext.h	85;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	src/windows/include/GL/wglext.h	88;"	d
WGL_TRANSPARENT_EXT	src/windows/include/GL/wglext.h	197;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	src/windows/include/GL/wglext.h	87;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	src/windows/include/GL/wglext.h	90;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	src/windows/include/GL/wglext.h	86;"	d
WGL_TRANSPARENT_VALUE_EXT	src/windows/include/GL/wglext.h	198;"	d
WGL_TYPE_COLORINDEX_ARB	src/windows/include/GL/wglext.h	123;"	d
WGL_TYPE_COLORINDEX_EXT	src/windows/include/GL/wglext.h	231;"	d
WGL_TYPE_RGBA_ARB	src/windows/include/GL/wglext.h	122;"	d
WGL_TYPE_RGBA_EXT	src/windows/include/GL/wglext.h	230;"	d
WGL_TYPE_RGBA_FLOAT_ARB	src/windows/include/GL/wglext.h	179;"	d
WGL_TYPE_RGBA_FLOAT_ATI	src/windows/include/GL/wglext.h	307;"	d
WGL_WGLEXT_VERSION	src/windows/include/GL/wglext.h	57;"	d
WHL_BRANCH	src/modules/graphic/ssggraph/grcar.cpp	265;"	d	file:
WIDTHDIV	src/drivers/bt/driver.cpp	/^const float Driver::WIDTHDIV = 3.0f;						\/\/ [-] Defines the percentage of the track to use (2\/WIDTHDIV).$/;"	m	class:Driver	file:
WIDTHDIV	src/drivers/bt/driver.h	/^		static const float WIDTHDIV;$/;"	m	class:Driver
WIDTHDIV	src/drivers/damned/driver.cpp	/^const float Driver::WIDTHDIV = 3.0f;						\/\/ [-] Defines the percentage of the track to use (2\/WIDTHDIV).$/;"	m	class:Driver	file:
WIDTHDIV	src/drivers/damned/driver.h	/^		static const float WIDTHDIV;$/;"	m	class:Driver
WIDTHDIV	src/drivers/olethros/driver.cpp	/^    const float Driver::WIDTHDIV = 3.0f;							\/\/\/< [-] Defines the percentage of the track to use (2\/WIDTHDIV).$/;"	m	class:olethros::Driver	file:
WIDTHDIV	src/drivers/olethros/driver.h	/^	static const float WIDTHDIV;$/;"	m	class:olethros::Driver
WIDTHDIV	src/drivers/sparkle/driver.cpp	/^const float Driver::WIDTHDIV = 3.0;							\/* [-] *\/$/;"	m	class:Driver	file:
WIDTHDIV	src/drivers/sparkle/driver.h	/^		static const float WIDTHDIV;$/;"	m	class:Driver
WIN32	src/windows/include/zconf.h	52;"	d
WIN32_LEAN_AND_MEAN	src/windows/include/GL/glext.h	38;"	d
WIN32_LEAN_AND_MEAN	src/windows/include/GL/wglext.h	38;"	d
WINDOWS_AL	src/windows/include/AL/altypes.h	10;"	d
WINDOWS_AL	src/windows/include/AL/alut.h	10;"	d
WINGDIAPI	src/windows/include/GL/glut.h	39;"	d
WINGDIAPI	src/windows/include/GL/glut.h	593;"	d
WINGDIAPI	src/windows/osspec.h	42;"	d
WINGDIAPI	src/windows/osspec.h	43;"	d
W_accel	src/drivers/olethros/learn.h	/^	float W_accel;$/;"	m	class:olethros::SegLearn
W_brake	src/drivers/olethros/learn.h	/^	float W_brake;$/;"	m	class:olethros::SegLearn
WheelSect	src/modules/simu/simuv2/wheel.cpp	/^static char *WheelSect[4] = {SECT_FRNTRGTWHEEL, SECT_FRNTLFTWHEEL, SECT_REARRGTWHEEL, SECT_REARLFTWHEEL};$/;"	v	file:
WheelSoundData	src/modules/graphic/ssggraph/CarSoundData.h	/^} WheelSoundData;$/;"	t	typeref:struct:WheelSoundData_
WheelSoundData_	src/modules/graphic/ssggraph/CarSoundData.h	/^typedef struct WheelSoundData_$/;"	s
WidthId	src/libs/racescreens/trackselect.cpp	/^static int WidthId;$/;"	v	file:
WindowsSpecInit	src/windows/windowsspec.cpp	/^WindowsSpecInit(void)$/;"	f
WingSect	src/modules/simu/simuv2/aero.cpp	/^static char *WingSect[2] = {SECT_FRNTWING, SECT_REARWING};$/;"	v	file:
Winh	src/modules/graphic/ssggraph/grboard.cpp	/^static int	Winh	= 600;$/;"	v	file:
Winw	src/modules/graphic/ssggraph/grboard.cpp	/^static int	Winw	= 800;$/;"	v	file:
Winx	src/modules/graphic/ssggraph/grboard.cpp	/^static int	Winx	= 0;$/;"	v	file:
Winy	src/modules/graphic/ssggraph/grboard.cpp	/^static int	Winy	= 0;$/;"	v	file:
WriteFile	export/include/learning/learn_debug.h	27;"	d
WriteFile	src/libs/learning/learn_debug.h	27;"	d
WriteToken	src/drivers/olethros/learn.cpp	/^inline void WriteToken (const char* tag, FILE* f)$/;"	f
WriteToken	src/libs/learning/ANN.cpp	/^static inline void WriteToken (const char* tag, FILE* f)$/;"	f	file:
X	export/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon210
X	export/include/tgfclient.h	/^    int	X;$/;"	m	struct:MouseInfo
X	src/libs/tgfclient/fg_gm.cpp	/^    int         X, Y;               \/* The two integers...               *\/$/;"	m	struct:tagSFG_XYUse	file:
X	src/libs/tgfclient/tgfclient.h	/^    int	X;$/;"	m	struct:MouseInfo
X	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon9
XGroupNb	src/tools/trackgen/easymesh.cpp	/^static int		XGroupNb;$/;"	v	file:
XGroupNb	src/tools/trackgen/objects.cpp	/^static int		XGroupNb;$/;"	v	file:
XGroupOffset	src/tools/trackgen/easymesh.cpp	/^static float		XGroupOffset;$/;"	v	file:
XGroupOffset	src/tools/trackgen/objects.cpp	/^static float		XGroupOffset;$/;"	v	file:
XM	src/modules/graphic/ssggraph/grboard.cpp	791;"	d	file:
XMLPARSEAPI	export/include/xmlparse.h	30;"	d
XMLPARSEAPI	src/libs/txml/xmlparse.h	30;"	d
XMLPARSEAPI	src/windows/osspec.h	48;"	d
XMLPARSEAPI	src/windows/osspec.h	49;"	d
XMLTOKAPI	src/libs/txml/xmltok.h	30;"	d
XML_ATTRIBUTE_VALUE_LITERAL	src/libs/txml/xmltok.h	104;"	d
XML_CDATA_SECTION_STATE	src/libs/txml/xmltok.h	101;"	d
XML_CONTENT_STATE	src/libs/txml/xmltok.h	100;"	d
XML_Char	export/include/xmlparse.h	/^typedef char XML_Char;$/;"	t
XML_Char	export/include/xmlparse.h	/^typedef unsigned short XML_Char;$/;"	t
XML_Char	export/include/xmlparse.h	/^typedef wchar_t XML_Char;$/;"	t
XML_Char	src/libs/txml/xmlparse.h	/^typedef char XML_Char;$/;"	t
XML_Char	src/libs/txml/xmlparse.h	/^typedef unsigned short XML_Char;$/;"	t
XML_Char	src/libs/txml/xmlparse.h	/^typedef wchar_t XML_Char;$/;"	t
XML_CharacterDataHandler	export/include/xmlparse.h	/^typedef void (*XML_CharacterDataHandler)(void *userData,$/;"	t
XML_CharacterDataHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_CharacterDataHandler)(void *userData,$/;"	t
XML_DefaultCurrent	src/libs/txml/xmlparse.c	/^void XML_DefaultCurrent(XML_Parser parser)$/;"	f
XML_DefaultHandler	export/include/xmlparse.h	/^typedef void (*XML_DefaultHandler)(void *userData,$/;"	t
XML_DefaultHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_DefaultHandler)(void *userData,$/;"	t
XML_ENCODE_MAX	src/libs/txml/xmlparse.c	29;"	d	file:
XML_ENCODE_MAX	src/libs/txml/xmlparse.c	36;"	d	file:
XML_ENTITY_VALUE_LITERAL	src/libs/txml/xmltok.h	105;"	d
XML_ERROR_ASYNC_ENTITY	export/include/xmlparse.h	/^  XML_ERROR_ASYNC_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_ASYNC_ENTITY	src/libs/txml/xmlparse.h	/^  XML_ERROR_ASYNC_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF	export/include/xmlparse.h	/^  XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF	src/libs/txml/xmlparse.h	/^  XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_BAD_CHAR_REF	export/include/xmlparse.h	/^  XML_ERROR_BAD_CHAR_REF,$/;"	e	enum:XML_Error
XML_ERROR_BAD_CHAR_REF	src/libs/txml/xmlparse.h	/^  XML_ERROR_BAD_CHAR_REF,$/;"	e	enum:XML_Error
XML_ERROR_BINARY_ENTITY_REF	export/include/xmlparse.h	/^  XML_ERROR_BINARY_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_BINARY_ENTITY_REF	src/libs/txml/xmlparse.h	/^  XML_ERROR_BINARY_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_DUPLICATE_ATTRIBUTE	export/include/xmlparse.h	/^  XML_ERROR_DUPLICATE_ATTRIBUTE,$/;"	e	enum:XML_Error
XML_ERROR_DUPLICATE_ATTRIBUTE	src/libs/txml/xmlparse.h	/^  XML_ERROR_DUPLICATE_ATTRIBUTE,$/;"	e	enum:XML_Error
XML_ERROR_EXTERNAL_ENTITY_HANDLING	export/include/xmlparse.h	/^  XML_ERROR_EXTERNAL_ENTITY_HANDLING$/;"	e	enum:XML_Error
XML_ERROR_EXTERNAL_ENTITY_HANDLING	src/libs/txml/xmlparse.h	/^  XML_ERROR_EXTERNAL_ENTITY_HANDLING$/;"	e	enum:XML_Error
XML_ERROR_INCORRECT_ENCODING	export/include/xmlparse.h	/^  XML_ERROR_INCORRECT_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_INCORRECT_ENCODING	src/libs/txml/xmlparse.h	/^  XML_ERROR_INCORRECT_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_INVALID_TOKEN	export/include/xmlparse.h	/^  XML_ERROR_INVALID_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_INVALID_TOKEN	src/libs/txml/xmlparse.h	/^  XML_ERROR_INVALID_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_JUNK_AFTER_DOC_ELEMENT	export/include/xmlparse.h	/^  XML_ERROR_JUNK_AFTER_DOC_ELEMENT,$/;"	e	enum:XML_Error
XML_ERROR_JUNK_AFTER_DOC_ELEMENT	src/libs/txml/xmlparse.h	/^  XML_ERROR_JUNK_AFTER_DOC_ELEMENT,$/;"	e	enum:XML_Error
XML_ERROR_MISPLACED_XML_PI	export/include/xmlparse.h	/^  XML_ERROR_MISPLACED_XML_PI,$/;"	e	enum:XML_Error
XML_ERROR_MISPLACED_XML_PI	src/libs/txml/xmlparse.h	/^  XML_ERROR_MISPLACED_XML_PI,$/;"	e	enum:XML_Error
XML_ERROR_NONE	export/include/xmlparse.h	/^  XML_ERROR_NONE,$/;"	e	enum:XML_Error
XML_ERROR_NONE	src/libs/txml/xmlparse.h	/^  XML_ERROR_NONE,$/;"	e	enum:XML_Error
XML_ERROR_NO_ELEMENTS	export/include/xmlparse.h	/^  XML_ERROR_NO_ELEMENTS,$/;"	e	enum:XML_Error
XML_ERROR_NO_ELEMENTS	src/libs/txml/xmlparse.h	/^  XML_ERROR_NO_ELEMENTS,$/;"	e	enum:XML_Error
XML_ERROR_NO_MEMORY	export/include/xmlparse.h	/^  XML_ERROR_NO_MEMORY,$/;"	e	enum:XML_Error
XML_ERROR_NO_MEMORY	src/libs/txml/xmlparse.h	/^  XML_ERROR_NO_MEMORY,$/;"	e	enum:XML_Error
XML_ERROR_PARAM_ENTITY_REF	export/include/xmlparse.h	/^  XML_ERROR_PARAM_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_PARAM_ENTITY_REF	src/libs/txml/xmlparse.h	/^  XML_ERROR_PARAM_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_PARTIAL_CHAR	export/include/xmlparse.h	/^  XML_ERROR_PARTIAL_CHAR,$/;"	e	enum:XML_Error
XML_ERROR_PARTIAL_CHAR	src/libs/txml/xmlparse.h	/^  XML_ERROR_PARTIAL_CHAR,$/;"	e	enum:XML_Error
XML_ERROR_RECURSIVE_ENTITY_REF	export/include/xmlparse.h	/^  XML_ERROR_RECURSIVE_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_RECURSIVE_ENTITY_REF	src/libs/txml/xmlparse.h	/^  XML_ERROR_RECURSIVE_ENTITY_REF,$/;"	e	enum:XML_Error
XML_ERROR_SYNTAX	export/include/xmlparse.h	/^  XML_ERROR_SYNTAX,$/;"	e	enum:XML_Error
XML_ERROR_SYNTAX	src/libs/txml/xmlparse.h	/^  XML_ERROR_SYNTAX,$/;"	e	enum:XML_Error
XML_ERROR_TAG_MISMATCH	export/include/xmlparse.h	/^  XML_ERROR_TAG_MISMATCH,$/;"	e	enum:XML_Error
XML_ERROR_TAG_MISMATCH	src/libs/txml/xmlparse.h	/^  XML_ERROR_TAG_MISMATCH,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_CDATA_SECTION	export/include/xmlparse.h	/^  XML_ERROR_UNCLOSED_CDATA_SECTION,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_CDATA_SECTION	src/libs/txml/xmlparse.h	/^  XML_ERROR_UNCLOSED_CDATA_SECTION,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_TOKEN	export/include/xmlparse.h	/^  XML_ERROR_UNCLOSED_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_UNCLOSED_TOKEN	src/libs/txml/xmlparse.h	/^  XML_ERROR_UNCLOSED_TOKEN,$/;"	e	enum:XML_Error
XML_ERROR_UNDEFINED_ENTITY	export/include/xmlparse.h	/^  XML_ERROR_UNDEFINED_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_UNDEFINED_ENTITY	src/libs/txml/xmlparse.h	/^  XML_ERROR_UNDEFINED_ENTITY,$/;"	e	enum:XML_Error
XML_ERROR_UNKNOWN_ENCODING	export/include/xmlparse.h	/^  XML_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:XML_Error
XML_ERROR_UNKNOWN_ENCODING	src/libs/txml/xmlparse.h	/^  XML_ERROR_UNKNOWN_ENCODING,$/;"	e	enum:XML_Error
XML_Encoding	export/include/xmlparse.h	/^} XML_Encoding;$/;"	t	typeref:struct:__anon222
XML_Encoding	src/libs/txml/xmlparse.h	/^} XML_Encoding;$/;"	t	typeref:struct:__anon83
XML_EndElementHandler	export/include/xmlparse.h	/^typedef void (*XML_EndElementHandler)(void *userData,$/;"	t
XML_EndElementHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_EndElementHandler)(void *userData,$/;"	t
XML_Error	export/include/xmlparse.h	/^enum XML_Error {$/;"	g
XML_Error	src/libs/txml/xmlparse.h	/^enum XML_Error {$/;"	g
XML_ErrorString	src/libs/txml/xmlparse.c	/^const XML_LChar *XML_ErrorString(int code)$/;"	f
XML_ExternalEntityParserCreate	src/libs/txml/xmlparse.c	/^XML_Parser XML_ExternalEntityParserCreate(XML_Parser oldParser,$/;"	f
XML_ExternalEntityRefHandler	export/include/xmlparse.h	/^typedef int (*XML_ExternalEntityRefHandler)(XML_Parser parser,$/;"	t
XML_ExternalEntityRefHandler	src/libs/txml/xmlparse.h	/^typedef int (*XML_ExternalEntityRefHandler)(XML_Parser parser,$/;"	t
XML_GetBase	src/libs/txml/xmlparse.c	/^const XML_Char *XML_GetBase(XML_Parser parser)$/;"	f
XML_GetBuffer	src/libs/txml/xmlparse.c	/^void *XML_GetBuffer(XML_Parser parser, int len)$/;"	f
XML_GetCurrentByteIndex	src/libs/txml/xmlparse.c	/^long XML_GetCurrentByteIndex(XML_Parser parser)$/;"	f
XML_GetCurrentColumnNumber	src/libs/txml/xmlparse.c	/^int XML_GetCurrentColumnNumber(XML_Parser parser)$/;"	f
XML_GetCurrentLineNumber	src/libs/txml/xmlparse.c	/^int XML_GetCurrentLineNumber(XML_Parser parser)$/;"	f
XML_GetErrorByteIndex	export/include/xmlparse.h	370;"	d
XML_GetErrorByteIndex	src/libs/txml/xmlparse.h	370;"	d
XML_GetErrorCode	src/libs/txml/xmlparse.c	/^enum XML_Error XML_GetErrorCode(XML_Parser parser)$/;"	f
XML_GetErrorColumnNumber	export/include/xmlparse.h	369;"	d
XML_GetErrorColumnNumber	src/libs/txml/xmlparse.h	369;"	d
XML_GetErrorLineNumber	export/include/xmlparse.h	368;"	d
XML_GetErrorLineNumber	src/libs/txml/xmlparse.h	368;"	d
XML_GetUserData	export/include/xmlparse.h	276;"	d
XML_GetUserData	src/libs/txml/xmlparse.h	276;"	d
XML_LChar	export/include/xmlparse.h	/^typedef char XML_LChar;$/;"	t
XML_LChar	export/include/xmlparse.h	/^typedef wchar_t XML_LChar;$/;"	t
XML_LChar	src/libs/txml/xmlparse.h	/^typedef char XML_LChar;$/;"	t
XML_LChar	src/libs/txml/xmlparse.h	/^typedef wchar_t XML_LChar;$/;"	t
XML_N_LITERAL_TYPES	src/libs/txml/xmltok.h	103;"	d
XML_N_STATES	src/libs/txml/xmltok.h	98;"	d
XML_NotationDeclHandler	export/include/xmlparse.h	/^typedef void (*XML_NotationDeclHandler)(void *userData,$/;"	t
XML_NotationDeclHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_NotationDeclHandler)(void *userData,$/;"	t
XML_PROLOG_STATE	src/libs/txml/xmltok.h	99;"	d
XML_Parse	src/libs/txml/xmlparse.c	/^int XML_Parse(XML_Parser parser, const char *s, int len, int isFinal)$/;"	f
XML_ParseBuffer	src/libs/txml/xmlparse.c	/^int XML_ParseBuffer(XML_Parser parser, int len, int isFinal)$/;"	f
XML_Parser	export/include/xmlparse.h	/^typedef void *XML_Parser;$/;"	t
XML_Parser	src/libs/txml/xmlparse.h	/^typedef void *XML_Parser;$/;"	t
XML_ParserCreate	src/libs/txml/xmlparse.c	/^XML_Parser XML_ParserCreate(const XML_Char *encodingName)$/;"	f
XML_ParserFree	src/libs/txml/xmlparse.c	/^void XML_ParserFree(XML_Parser parser)$/;"	f
XML_ProcessingInstructionHandler	export/include/xmlparse.h	/^typedef void (*XML_ProcessingInstructionHandler)(void *userData,$/;"	t
XML_ProcessingInstructionHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_ProcessingInstructionHandler)(void *userData,$/;"	t
XML_ROLE_ATTLIST_ELEMENT_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTLIST_ELEMENT_NAME,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_ENUM_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_ENUM_VALUE,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_NAME,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_NOTATION_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_NOTATION_VALUE,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_CDATA	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_CDATA,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_ENTITIES	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_ENTITIES,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_ENTITY	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_ENTITY,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_ID,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_IDREF	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_IDREF,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_IDREFS	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_IDREFS,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN,$/;"	e	enum:__anon75
XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS	src/libs/txml/xmlrole.h	/^  XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_ANY	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ANY,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_ELEMENT	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_ELEMENT_OPT	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT_OPT,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_ELEMENT_PLUS	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT_PLUS,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_ELEMENT_REP	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_ELEMENT_REP,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_EMPTY	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_EMPTY,$/;"	e	enum:__anon75
XML_ROLE_CONTENT_PCDATA	src/libs/txml/xmlrole.h	/^  XML_ROLE_CONTENT_PCDATA,$/;"	e	enum:__anon75
XML_ROLE_DEFAULT_ATTRIBUTE_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_DEFAULT_ATTRIBUTE_VALUE,$/;"	e	enum:__anon75
XML_ROLE_DOCTYPE_CLOSE	src/libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_CLOSE,$/;"	e	enum:__anon75
XML_ROLE_DOCTYPE_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_NAME,$/;"	e	enum:__anon75
XML_ROLE_DOCTYPE_PUBLIC_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_PUBLIC_ID,$/;"	e	enum:__anon75
XML_ROLE_DOCTYPE_SYSTEM_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_DOCTYPE_SYSTEM_ID,$/;"	e	enum:__anon75
XML_ROLE_ELEMENT_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_ELEMENT_NAME,$/;"	e	enum:__anon75
XML_ROLE_ENTITY_NOTATION_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_NOTATION_NAME,$/;"	e	enum:__anon75
XML_ROLE_ENTITY_PUBLIC_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_PUBLIC_ID,$/;"	e	enum:__anon75
XML_ROLE_ENTITY_SYSTEM_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_SYSTEM_ID,$/;"	e	enum:__anon75
XML_ROLE_ENTITY_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_ENTITY_VALUE,$/;"	e	enum:__anon75
XML_ROLE_ERROR	src/libs/txml/xmlrole.h	/^  XML_ROLE_ERROR = -1,$/;"	e	enum:__anon75
XML_ROLE_FIXED_ATTRIBUTE_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_FIXED_ATTRIBUTE_VALUE,$/;"	e	enum:__anon75
XML_ROLE_GENERAL_ENTITY_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_GENERAL_ENTITY_NAME,$/;"	e	enum:__anon75
XML_ROLE_GROUP_CHOICE	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CHOICE,$/;"	e	enum:__anon75
XML_ROLE_GROUP_CLOSE	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE,$/;"	e	enum:__anon75
XML_ROLE_GROUP_CLOSE_OPT	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE_OPT,$/;"	e	enum:__anon75
XML_ROLE_GROUP_CLOSE_PLUS	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE_PLUS,$/;"	e	enum:__anon75
XML_ROLE_GROUP_CLOSE_REP	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_CLOSE_REP,$/;"	e	enum:__anon75
XML_ROLE_GROUP_OPEN	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_OPEN,$/;"	e	enum:__anon75
XML_ROLE_GROUP_SEQUENCE	src/libs/txml/xmlrole.h	/^  XML_ROLE_GROUP_SEQUENCE,$/;"	e	enum:__anon75
XML_ROLE_IMPLIED_ATTRIBUTE_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_IMPLIED_ATTRIBUTE_VALUE,$/;"	e	enum:__anon75
XML_ROLE_INSTANCE_START	src/libs/txml/xmlrole.h	/^  XML_ROLE_INSTANCE_START,$/;"	e	enum:__anon75
XML_ROLE_NONE	src/libs/txml/xmlrole.h	/^  XML_ROLE_NONE = 0,$/;"	e	enum:__anon75
XML_ROLE_NOTATION_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_NAME,$/;"	e	enum:__anon75
XML_ROLE_NOTATION_NO_SYSTEM_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_NO_SYSTEM_ID,$/;"	e	enum:__anon75
XML_ROLE_NOTATION_PUBLIC_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_PUBLIC_ID,$/;"	e	enum:__anon75
XML_ROLE_NOTATION_SYSTEM_ID	src/libs/txml/xmlrole.h	/^  XML_ROLE_NOTATION_SYSTEM_ID,$/;"	e	enum:__anon75
XML_ROLE_PARAM_ENTITY_NAME	src/libs/txml/xmlrole.h	/^  XML_ROLE_PARAM_ENTITY_NAME,$/;"	e	enum:__anon75
XML_ROLE_PARAM_ENTITY_REF	src/libs/txml/xmlrole.h	/^  XML_ROLE_PARAM_ENTITY_REF$/;"	e	enum:__anon75
XML_ROLE_REQUIRED_ATTRIBUTE_VALUE	src/libs/txml/xmlrole.h	/^  XML_ROLE_REQUIRED_ATTRIBUTE_VALUE,$/;"	e	enum:__anon75
XML_ROLE_XML_DECL	src/libs/txml/xmlrole.h	/^  XML_ROLE_XML_DECL,$/;"	e	enum:__anon75
XML_SetBase	src/libs/txml/xmlparse.c	/^int XML_SetBase(XML_Parser parser, const XML_Char *p)$/;"	f
XML_SetCharacterDataHandler	src/libs/txml/xmlparse.c	/^void XML_SetCharacterDataHandler(XML_Parser parser,$/;"	f
XML_SetDefaultHandler	src/libs/txml/xmlparse.c	/^void XML_SetDefaultHandler(XML_Parser parser,$/;"	f
XML_SetElementHandler	src/libs/txml/xmlparse.c	/^void XML_SetElementHandler(XML_Parser parser,$/;"	f
XML_SetExternalEntityRefHandler	src/libs/txml/xmlparse.c	/^void XML_SetExternalEntityRefHandler(XML_Parser parser,$/;"	f
XML_SetNotationDeclHandler	src/libs/txml/xmlparse.c	/^void XML_SetNotationDeclHandler(XML_Parser parser,$/;"	f
XML_SetProcessingInstructionHandler	src/libs/txml/xmlparse.c	/^void XML_SetProcessingInstructionHandler(XML_Parser parser,$/;"	f
XML_SetUnknownEncodingHandler	src/libs/txml/xmlparse.c	/^void XML_SetUnknownEncodingHandler(XML_Parser parser,$/;"	f
XML_SetUnparsedEntityDeclHandler	src/libs/txml/xmlparse.c	/^void XML_SetUnparsedEntityDeclHandler(XML_Parser parser,$/;"	f
XML_SetUserData	src/libs/txml/xmlparse.c	/^void XML_SetUserData(XML_Parser parser, void *p)$/;"	f
XML_StartElementHandler	export/include/xmlparse.h	/^typedef void (*XML_StartElementHandler)(void *userData,$/;"	t
XML_StartElementHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_StartElementHandler)(void *userData,$/;"	t
XML_T	src/libs/txml/xmlparse.c	45;"	d	file:
XML_T	src/libs/txml/xmlparse.c	47;"	d	file:
XML_TOK_ATTRIBUTE_VALUE_S	src/libs/txml/xmltok.h	93;"	d
XML_TOK_BOM	src/libs/txml/xmltok.h	62;"	d
XML_TOK_CDATA_SECT_CLOSE	src/libs/txml/xmltok.h	96;"	d
XML_TOK_CDATA_SECT_OPEN	src/libs/txml/xmltok.h	54;"	d
XML_TOK_CHAR_REF	src/libs/txml/xmltok.h	56;"	d
XML_TOK_CLOSE_BRACKET	src/libs/txml/xmltok.h	76;"	d
XML_TOK_CLOSE_PAREN	src/libs/txml/xmltok.h	74;"	d
XML_TOK_CLOSE_PAREN_ASTERISK	src/libs/txml/xmltok.h	88;"	d
XML_TOK_CLOSE_PAREN_PLUS	src/libs/txml/xmltok.h	89;"	d
XML_TOK_CLOSE_PAREN_QUESTION	src/libs/txml/xmltok.h	87;"	d
XML_TOK_COMMA	src/libs/txml/xmltok.h	90;"	d
XML_TOK_COMMENT	src/libs/txml/xmltok.h	61;"	d
XML_TOK_COND_SECT_CLOSE	src/libs/txml/xmltok.h	86;"	d
XML_TOK_COND_SECT_OPEN	src/libs/txml/xmltok.h	85;"	d
XML_TOK_DATA_CHARS	src/libs/txml/xmltok.h	52;"	d
XML_TOK_DATA_NEWLINE	src/libs/txml/xmltok.h	53;"	d
XML_TOK_DECL_CLOSE	src/libs/txml/xmltok.h	67;"	d
XML_TOK_DECL_OPEN	src/libs/txml/xmltok.h	66;"	d
XML_TOK_EMPTY_ELEMENT_NO_ATTS	src/libs/txml/xmltok.h	50;"	d
XML_TOK_EMPTY_ELEMENT_WITH_ATTS	src/libs/txml/xmltok.h	49;"	d
XML_TOK_END_TAG	src/libs/txml/xmltok.h	51;"	d
XML_TOK_ENTITY_REF	src/libs/txml/xmltok.h	55;"	d
XML_TOK_INSTANCE_START	src/libs/txml/xmltok.h	79;"	d
XML_TOK_INVALID	src/libs/txml/xmltok.h	42;"	d
XML_TOK_LITERAL	src/libs/txml/xmltok.h	77;"	d
XML_TOK_NAME	src/libs/txml/xmltok.h	68;"	d
XML_TOK_NAME_ASTERISK	src/libs/txml/xmltok.h	83;"	d
XML_TOK_NAME_PLUS	src/libs/txml/xmltok.h	84;"	d
XML_TOK_NAME_QUESTION	src/libs/txml/xmltok.h	82;"	d
XML_TOK_NMTOKEN	src/libs/txml/xmltok.h	69;"	d
XML_TOK_NONE	src/libs/txml/xmltok.h	37;"	d
XML_TOK_OPEN_BRACKET	src/libs/txml/xmltok.h	75;"	d
XML_TOK_OPEN_PAREN	src/libs/txml/xmltok.h	73;"	d
XML_TOK_OR	src/libs/txml/xmltok.h	71;"	d
XML_TOK_PARAM_ENTITY_REF	src/libs/txml/xmltok.h	78;"	d
XML_TOK_PARTIAL	src/libs/txml/xmltok.h	41;"	d
XML_TOK_PARTIAL_CHAR	src/libs/txml/xmltok.h	40;"	d
XML_TOK_PERCENT	src/libs/txml/xmltok.h	72;"	d
XML_TOK_PI	src/libs/txml/xmltok.h	59;"	d
XML_TOK_POUND_NAME	src/libs/txml/xmltok.h	70;"	d
XML_TOK_PROLOG_S	src/libs/txml/xmltok.h	65;"	d
XML_TOK_START_TAG_NO_ATTS	src/libs/txml/xmltok.h	48;"	d
XML_TOK_START_TAG_WITH_ATTS	src/libs/txml/xmltok.h	47;"	d
XML_TOK_TRAILING_CR	src/libs/txml/xmltok.h	38;"	d
XML_TOK_TRAILING_RSQB	src/libs/txml/xmltok.h	34;"	d
XML_TOK_XML_DECL	src/libs/txml/xmltok.h	60;"	d
XML_UNICODE	export/include/xmlparse.h	42;"	d
XML_UNICODE	src/libs/txml/xmlparse.h	42;"	d
XML_UTF16_ENCODE_MAX	src/libs/txml/xmltok.h	110;"	d
XML_UTF8_ENCODE_MAX	src/libs/txml/xmltok.h	108;"	d
XML_UnknownEncodingHandler	export/include/xmlparse.h	/^typedef int (*XML_UnknownEncodingHandler)(void *encodingHandlerData,$/;"	t
XML_UnknownEncodingHandler	src/libs/txml/xmlparse.h	/^typedef int (*XML_UnknownEncodingHandler)(void *encodingHandlerData,$/;"	t
XML_UnparsedEntityDeclHandler	export/include/xmlparse.h	/^typedef void (*XML_UnparsedEntityDeclHandler)(void *userData,$/;"	t
XML_UnparsedEntityDeclHandler	src/libs/txml/xmlparse.h	/^typedef void (*XML_UnparsedEntityDeclHandler)(void *userData,$/;"	t
XML_UseParserAsHandlerArg	src/libs/txml/xmlparse.c	/^void XML_UseParserAsHandlerArg(XML_Parser parser)$/;"	f
XmlAttributeValueTok	src/libs/txml/xmltok.h	207;"	d
XmlCdataSectionTok	src/libs/txml/xmltok.h	198;"	d
XmlCharRefNumber	src/libs/txml/xmltok.h	227;"	d
XmlContentTok	src/libs/txml/xmltok.h	195;"	d
XmlConvert	src/libs/txml/xmlparse.c	30;"	d	file:
XmlConvert	src/libs/txml/xmlparse.c	37;"	d	file:
XmlEncode	src/libs/txml/xmlparse.c	32;"	d	file:
XmlEncode	src/libs/txml/xmlparse.c	39;"	d	file:
XmlEntityValueTok	src/libs/txml/xmltok.h	210;"	d
XmlGetAttributes	src/libs/txml/xmltok.h	224;"	d
XmlGetInternalEncoding	src/libs/txml/xmlparse.c	31;"	d	file:
XmlGetInternalEncoding	src/libs/txml/xmlparse.c	38;"	d	file:
XmlGetUtf16InternalEncoding	src/libs/txml/xmltok.c	/^const ENCODING *XmlGetUtf16InternalEncoding(void)$/;"	f
XmlGetUtf8InternalEncoding	src/libs/txml/xmltok.c	/^const ENCODING *XmlGetUtf8InternalEncoding(void)$/;"	f
XmlInitEncoding	src/libs/txml/xmltok.c	/^int XmlInitEncoding(INIT_ENCODING *p, const ENCODING **encPtr, const char *name)$/;"	f
XmlInitUnknownEncoding	src/libs/txml/xmltok.c	/^XmlInitUnknownEncoding(void *mem,$/;"	f
XmlIsPublicId	src/libs/txml/xmltok.h	236;"	d
XmlLiteralTok	src/libs/txml/xmltok.h	204;"	d
XmlNameLength	src/libs/txml/xmltok.h	218;"	d
XmlNameMatchesAscii	src/libs/txml/xmltok.h	215;"	d
XmlParseXmlDecl	src/libs/txml/xmltok.c	/^int XmlParseXmlDecl(int isGeneralTextEntity,$/;"	f
XmlParse_INCLUDED	export/include/xmlparse.h	23;"	d
XmlParse_INCLUDED	src/libs/txml/xmlparse.h	23;"	d
XmlPredefinedEntityName	src/libs/txml/xmltok.h	230;"	d
XmlPrologStateInit	src/libs/txml/xmlrole.c	/^void XmlPrologStateInit(PROLOG_STATE *state)$/;"	f
XmlPrologTok	src/libs/txml/xmltok.h	192;"	d
XmlRole_INCLUDED	src/libs/txml/xmlrole.h	23;"	d
XmlSameName	src/libs/txml/xmltok.h	213;"	d
XmlSizeOfUnknownEncoding	src/libs/txml/xmltok.c	/^int XmlSizeOfUnknownEncoding(void)$/;"	f
XmlSkipS	src/libs/txml/xmltok.h	221;"	d
XmlTok	src/libs/txml/xmltok.h	189;"	d
XmlTok_INCLUDED	src/libs/txml/xmltok.h	23;"	d
XmlTokenRole	src/libs/txml/xmlrole.h	95;"	d
XmlUpdatePosition	src/libs/txml/xmltok.h	233;"	d
XmlUtf16Convert	src/libs/txml/xmltok.h	242;"	d
XmlUtf16Encode	src/libs/txml/xmltok.c	/^int XmlUtf16Encode(int charNum, unsigned short *buf)$/;"	f
XmlUtf8Convert	src/libs/txml/xmltok.h	239;"	d
XmlUtf8Encode	src/libs/txml/xmltok.c	/^int XmlUtf8Encode(int c, char *buf)$/;"	f
XrmInitialize	configure	/^XrmInitialize ()$/;"	f
Y	export/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon210
Y	export/include/tgfclient.h	/^    int	Y;$/;"	m	struct:MouseInfo
Y	src/libs/tgfclient/fg_gm.cpp	/^    int         X, Y;               \/* The two integers...               *\/$/;"	m	struct:tagSFG_XYUse	file:
Y	src/libs/tgfclient/tgfclient.h	/^    int	Y;$/;"	m	struct:MouseInfo
Y	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon9
YGroupOffset	src/tools/trackgen/easymesh.cpp	/^static float		YGroupOffset;$/;"	v	file:
YGroupOffset	src/tools/trackgen/objects.cpp	/^static float		YGroupOffset;$/;"	v	file:
YM	src/modules/graphic/ssggraph/grboard.cpp	792;"	d	file:
Yn	src/drivers/human/pref.cpp	/^char *Yn[] = {HM_VAL_YES, HM_VAL_NO};$/;"	v
Yn	src/libs/confscreens/driverconfig.cpp	/^static char *Yn[] = {HM_VAL_YES, HM_VAL_NO};$/;"	v	file:
Z	export/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon210
Z	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^enum { X = 0, Y = 1, Z = 2, W = 3 };$/;"	e	enum:__anon9
ZEXPORT	src/windows/include/zconf.h	170;"	d
ZEXPORT	src/windows/include/zconf.h	180;"	d
ZEXPORT	src/windows/include/zconf.h	184;"	d
ZEXPORT	src/windows/include/zconf.h	200;"	d
ZEXPORTRVA	src/windows/include/zconf.h	181;"	d
ZEXPORTVA	src/windows/include/zconf.h	172;"	d
ZEXPORTVA	src/windows/include/zconf.h	174;"	d
ZEXPORTVA	src/windows/include/zconf.h	185;"	d
ZEXPORTVA	src/windows/include/zconf.h	203;"	d
ZEXTERN	src/windows/include/zconf.h	193;"	d
ZEXTERN	src/windows/include/zconf.h	195;"	d
ZEXTERN	src/windows/include/zconf.h	206;"	d
ZLIB_VERSION	src/windows/include/zlib.h	40;"	d
Z_ASCII	src/windows/include/zlib.h	157;"	d
Z_BEST_COMPRESSION	src/windows/include/zlib.h	147;"	d
Z_BEST_SPEED	src/windows/include/zlib.h	146;"	d
Z_BINARY	src/windows/include/zlib.h	156;"	d
Z_BUF_ERROR	src/windows/include/zlib.h	139;"	d
Z_DATA_ERROR	src/windows/include/zlib.h	137;"	d
Z_DEFAULT_COMPRESSION	src/windows/include/zlib.h	148;"	d
Z_DEFAULT_STRATEGY	src/windows/include/zlib.h	153;"	d
Z_DEFLATED	src/windows/include/zlib.h	161;"	d
Z_ERRNO	src/windows/include/zlib.h	135;"	d
Z_FILTERED	src/windows/include/zlib.h	151;"	d
Z_FINISH	src/windows/include/zlib.h	129;"	d
Z_FULL_FLUSH	src/windows/include/zlib.h	128;"	d
Z_HUFFMAN_ONLY	src/windows/include/zlib.h	152;"	d
Z_MEM_ERROR	src/windows/include/zlib.h	138;"	d
Z_NEED_DICT	src/windows/include/zlib.h	134;"	d
Z_NO_COMPRESSION	src/windows/include/zlib.h	145;"	d
Z_NO_FLUSH	src/windows/include/zlib.h	125;"	d
Z_NULL	src/windows/include/zlib.h	164;"	d
Z_OK	src/windows/include/zlib.h	132;"	d
Z_PARTIAL_FLUSH	src/windows/include/zlib.h	126;"	d
Z_STREAM_END	src/windows/include/zlib.h	133;"	d
Z_STREAM_ERROR	src/windows/include/zlib.h	136;"	d
Z_SYNC_FLUSH	src/windows/include/zlib.h	127;"	d
Z_UNKNOWN	src/windows/include/zlib.h	158;"	d
Z_VERSION_ERROR	src/windows/include/zlib.h	140;"	d
_3DSTOAC3D	src/tools/accc/accc.h	53;"	d
_AC3DTO3DS	src/tools/accc/accc.h	52;"	d
_AC3DTOAC3D	src/tools/accc/accc.h	55;"	d
_AC3DTOAC3DGROUP	src/tools/accc/accc.h	59;"	d
_AC3DTOAC3DM	src/tools/accc/accc.h	57;"	d
_AC3DTOAC3DS	src/tools/accc/accc.h	58;"	d
_AC3DTOOBJ	src/tools/accc/accc.h	56;"	d
_AC3D_H_	src/tools/trackgen/ac3d.h	27;"	d
_ACCC_H_	src/tools/accc/accc.h	26;"	d
_AERO_H_	src/modules/simu/simuv2/aero.h	21;"	d
_ALCTYPES_H_	src/windows/include/AL/alctypes.h	2;"	d
_ALGOTABLE_H_	src/modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	28;"	d
_ALUT_H_	src/windows/include/AL/alut.h	2;"	d
_AL_TYPES_H_	src/windows/include/AL/altypes.h	2;"	d
_APS_NEXT_COMMAND_VALUE	resource.h	12;"	d
_APS_NEXT_CONTROL_VALUE	resource.h	13;"	d
_APS_NEXT_RESOURCE_VALUE	resource.h	11;"	d
_APS_NEXT_SYMED_VALUE	resource.h	14;"	d
_AXLE_H__	src/modules/simu/simuv2/axle.h	23;"	d
_BASIC_H_	export/include/3D/Basic.h	28;"	d
_BASIC_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	28;"	d
_BBOXTREE_H_	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	28;"	d
_BBOX_H_	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	28;"	d
_BERNIW_H_	src/drivers/berniw/berniw.h	21;"	d
_BERNIW_H_	src/drivers/berniw2/berniw.h	21;"	d
_BERNIW_H_	src/drivers/berniw3/berniw.h	21;"	d
_BERNIW_H_	src/drivers/inferno/berniw.h	21;"	d
_BERNIW_H_	src/drivers/lliaw/berniw.h	21;"	d
_BERNIW_H_	src/drivers/tita/berniw.h	21;"	d
_BOX_H_	src/modules/simu/simuv2/SOLID-2.0/src/Box.h	28;"	d
_BRAKE_H_	src/modules/simu/simuv2/brake.h	21;"	d
_BSD_SOURCE	src/windows/include/pngconf.h	244;"	d
_BSD_SOURCE	src/windows/include/pngconf.h	257;"	d
_BT_CARDATA_H_	src/drivers/bt/cardata.h	26;"	d
_BT_CARDATA_H_	src/drivers/damned/cardata.h	26;"	d
_CAR__H_	src/modules/simu/simuv2/carstruct.h	21;"	d
_COMMON_H_	src/drivers/inferno2/common.h	22;"	d
_COMPLEX_H_	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	28;"	d
_CONE_H_	src/modules/simu/simuv2/SOLID-2.0/src/Cone.h	28;"	d
_CONTROLCONFIG_H_	export/include/controlconfig.h	27;"	d
_CONTROLCONFIG_H_	src/libs/confscreens/controlconfig.h	27;"	d
_CONVEX_H_	src/modules/simu/simuv2/SOLID-2.0/src/Convex.h	28;"	d
_CYLINDER_H_	src/modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	28;"	d
_DIFFERENTIAL_H_	src/modules/simu/simuv2/differential.h	21;"	d
_DRIVERCONFIG_H_	export/include/driverconfig.h	23;"	d
_DRIVERCONFIG_H_	src/libs/confscreens/driverconfig.h	23;"	d
_DRIVER_H_	src/drivers/bt/driver.h	21;"	d
_DRIVER_H_	src/drivers/damned/driver.h	21;"	d
_DRIVER_H_	src/drivers/olethros/driver.h	22;"	d
_DRIVER_H_	src/drivers/sparkle/driver.h	21;"	d
_DispName	src/libs/confscreens/driverconfig.cpp	100;"	d	file:
_DynGC	export/include/car.h	220;"	d
_DynGC	src/interfaces/car.h	220;"	d
_EASYMESH_H_	src/tools/trackgen/easymesh.h	27;"	d
_ELEVATION_H_	src/tools/trackgen/elevation.h	27;"	d
_ENCOUNTER_H_	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	28;"	d
_ENGINE_H_	src/modules/simu/simuv2/engine.h	21;"	d
_EXITMENU_H_	export/include/exitmenu.h	22;"	d
_EXITMENU_H_	src/libs/client/exitmenu.h	22;"	d
_FG_GM_H_	src/libs/tgfclient/fg_gm.h	27;"	d
_GNU_SOURCE	src/tools/accc/ac3dgroup.cpp	30;"	d	file:
_GNU_SOURCE	src/tools/accc/ac3dload.cpp	30;"	d	file:
_GNU_SOURCE	src/tools/accc/mainaccc.cpp	31;"	d	file:
_GNU_SOURCE	src/tools/texmapper/maintexmapper.cpp	26;"	d	file:
_GNU_SOURCE	src/tools/trackgen/maintrackgen.cpp	32;"	d	file:
_GRAPHCONFIG_H_	export/include/graphconfig.h	27;"	d
_GRAPHCONFIG_H_	src/libs/confscreens/graphconfig.h	27;"	d
_GRAPHV1_H_	export/include/graphic.h	22;"	d
_GRAPHV1_H_	src/interfaces/graphic.h	22;"	d
_GRBOARD_H_	src/modules/graphic/ssggraph/grboard.h	21;"	d
_GRCAM_H_	src/modules/graphic/ssggraph/grcam.h	21;"	d
_GRCARLIGHT_H_	src/modules/graphic/ssggraph/grcarlight.h	25;"	d
_GRCAR_H_	src/modules/graphic/ssggraph/grcar.h	23;"	d
_GRFEATURES_H_	export/include/glfeatures.h	29;"	d
_GRFEATURES_H_	src/libs/tgfclient/glfeatures.h	29;"	d
_GRLOADSGI_H_	src/modules/graphic/ssggraph/grloadsgi.h	26;"	d
_GRMAIN_H_	src/modules/graphic/ssggraph/grmain.h	22;"	d
_GRSCENE_H_	src/modules/graphic/ssggraph/grscene.h	22;"	d
_GRSCREEN_H_	src/modules/graphic/ssggraph/grscreen.h	21;"	d
_GRSKIDMARKS_H_	src/modules/graphic/ssggraph/grskidmarks.h	2;"	d
_GRSMOKE_H_	src/modules/graphic/ssggraph/grsmoke.h	2;"	d
_GRSOUND_H_	src/modules/graphic/ssggraph/grsound.h	22;"	d
_GRSSGEXT_H_	src/modules/graphic/ssggraph/grssgext.h	28;"	d
_GRTEXTURE_H_	src/modules/graphic/ssggraph/grtexture.h	26;"	d
_GRTRACKMAP_H_	src/modules/graphic/ssggraph/grtrackmap.h	28;"	d
_GRUTIL_H_	src/modules/graphic/ssggraph/grutil.h	22;"	d
_GRVTXTABLE_H_	src/modules/graphic/ssggraph/grvtxtable.h	46;"	d
_GUIFONT_H_	src/libs/tgfclient/guifont.h	20;"	d
_GUI_H__	src/libs/tgfclient/gui.h	20;"	d
_HUMAN_H_	src/drivers/human/human.h	27;"	d
_INCLUDED_SSGCONF_H_	src/windows/include/plib/ssgconf.h	25;"	d
_INCLUDED_SSG_H_	src/windows/include/plib/ssg.h	26;"	d
_INCLUDED_UL_H_	src/windows/include/plib/ul.h	38;"	d
_INCLUDED_UL_H_	src/windows/include/ul.h	38;"	d
_INDEXARRAY_H_	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	28;"	d
_JOYSTICKCONFIG_H_	export/include/joystickconfig.h	27;"	d
_JOYSTICKCONFIG_H_	src/libs/confscreens/joystickconfig.h	27;"	d
_JS_MAX_AXES	export/include/js.h	117;"	d
_JS_MAX_AXES	export/include/js.h	119;"	d
_JS_MAX_AXES	export/include/js.h	122;"	d
_JS_MAX_AXES	export/include/js.h	124;"	d
_JS_MAX_AXES	src/interfaces/js.h	117;"	d
_JS_MAX_AXES	src/interfaces/js.h	119;"	d
_JS_MAX_AXES	src/interfaces/js.h	122;"	d
_JS_MAX_AXES	src/interfaces/js.h	124;"	d
_LINALG_H_	src/drivers/berniw/linalg.h	21;"	d
_LINALG_H_	src/drivers/berniw2/linalg.h	21;"	d
_LINALG_H_	src/drivers/berniw3/linalg.h	21;"	d
_LINALG_H_	src/drivers/olethros/linalg.h	21;"	d
_LINALG_H_	src/drivers/sparkle/linalg.h	21;"	d
_LINALG_T_H_	export/include/tmath/linalg_t.h	21;"	d
_LINALG_T_H_	src/libs/math/linalg_t.h	21;"	d
_LINALG_V2_T_H_	export/include/tmath/v2_t.h	30;"	d
_LINALG_V2_T_H_	src/libs/math/v2_t.h	30;"	d
_LINALG_V3_T_H_	export/include/tmath/v3_t.h	29;"	d
_LINALG_V3_T_H_	src/libs/math/v3_t.h	29;"	d
_LINALG_V4_T_H_	export/include/tmath/v4_t.h	29;"	d
_LINALG_V4_T_H_	src/libs/math/v4_t.h	29;"	d
_LINUXSPEC_H_	src/linux/linuxspec.h	22;"	d
_MAINMENU_H_	src/libs/client/mainmenu.h	22;"	d
_MATRIX_H_	export/include/3D/Matrix.h	28;"	d
_MATRIX_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	28;"	d
_MOUSECONFIG_H_	export/include/mouseconfig.h	27;"	d
_MOUSECONFIG_H_	src/libs/confscreens/mouseconfig.h	27;"	d
_MYCAR_H_	src/drivers/berniw/mycar.h	25;"	d
_MYCAR_H_	src/drivers/berniw2/mycar.h	25;"	d
_MYCAR_H_	src/drivers/berniw3/mycar.h	25;"	d
_MYCAR_H_	src/drivers/inferno/mycar.h	25;"	d
_MYCAR_H_	src/drivers/lliaw/mycar.h	25;"	d
_MYCAR_H_	src/drivers/tita/mycar.h	25;"	d
_Name	src/libs/confscreens/driverconfig.cpp	99;"	d	file:
_OBJECTS_H_	src/tools/trackgen/objects.h	27;"	d
_OBJECT_H_	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	28;"	d
_OLETHROS_CARDATA_H_	src/drivers/olethros/cardata.h	27;"	d
_OPENGLCONFIG_H_	export/include/openglconfig.h	26;"	d
_OPENGLCONFIG_H_	src/libs/confscreens/openglconfig.h	26;"	d
_OPPONENT_H_	src/drivers/bt/opponent.h	21;"	d
_OPPONENT_H_	src/drivers/damned/opponent.h	21;"	d
_OPPONENT_H_	src/drivers/olethros/opponent.h	22;"	d
_OPPONENT_H_	src/drivers/sparkle/opponent.h	21;"	d
_OPTIONMENU_H_	src/libs/client/optionmenu.h	22;"	d
_OS__H_	export/include/os.h	20;"	d
_OS__H_	src/libs/tgf/os.h	20;"	d
_PATHFINDER_H_	src/drivers/berniw/pathfinder.h	25;"	d
_PATHFINDER_H_	src/drivers/berniw2/pathfinder.h	25;"	d
_PATHFINDER_H_	src/drivers/berniw3/pathfinder.h	25;"	d
_PATHFINDER_H_	src/drivers/inferno/pathfinder.h	25;"	d
_PATHFINDER_H_	src/drivers/lliaw/pathfinder.h	25;"	d
_PATHFINDER_H_	src/drivers/tita/pathfinder.h	25;"	d
_PIT_H_	src/drivers/bt/pit.h	21;"	d
_PIT_H_	src/drivers/damned/pit.h	21;"	d
_PIT_H_	src/drivers/olethros/pit.h	21;"	d
_PIT_H_	src/drivers/sparkle/pit.h	21;"	d
_PLAYERPREF_H_	export/include/playerpref.h	27;"	d
_PLAYERPREF_H_	src/interfaces/playerpref.h	27;"	d
_POINT_H_	export/include/3D/Point.h	28;"	d
_POINT_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	28;"	d
_POLYGON_H_	src/modules/simu/simuv2/SOLID-2.0/src/Polygon.h	28;"	d
_POLYHEDRON_H_	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	28;"	d
_POLYTOPE_H_	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	28;"	d
_PREF_H_	src/drivers/human/pref.h	23;"	d
_QUATERNION_H_	export/include/3D/Quaternion.h	28;"	d
_QUATERNION_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	28;"	d
_RACEENGINE_H_	src/libs/raceengineclient/raceengine.h	27;"	d
_RACEGL_H_	src/libs/raceengineclient/racegl.h	27;"	d
_RACEINIT_H_	export/include/raceinit.h	27;"	d
_RACEINIT_H_	src/libs/raceengineclient/raceinit.h	27;"	d
_RACEMAIN_H_	src/libs/raceengineclient/racemain.h	27;"	d
_RACEMANMENU_H_	src/libs/raceengineclient/racemanmenu.h	27;"	d
_RACEMANV1_H_	export/include/raceman.h	28;"	d
_RACEMANV1_H_	src/interfaces/raceman.h	28;"	d
_RACERESULTS_H_	src/libs/raceengineclient/raceresults.h	27;"	d
_RACESTATE_H_	src/libs/raceengineclient/racestate.h	27;"	d
_RELIEF_H_	src/tools/trackgen/relief.h	27;"	d
_RESPONSE_H_	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	28;"	d
_RESPTABLE_H_	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	28;"	d
_ROBOTTOOLS_H_	export/include/robottools.h	27;"	d
_ROBOTTOOLS_H_	src/libs/robottools/robottools.h	27;"	d
_ROBOTV1_H_	export/include/robot.h	37;"	d
_ROBOTV1_H_	src/interfaces/robot.h	37;"	d
_SCREEN_PROPERTIES_H_	export/include/screen_properties.h	27;"	d
_SCREEN_PROPERTIES_H_	src/libs/tgfclient/screen_properties.h	27;"	d
_SEGLEARN_H_	src/drivers/bt/learn.h	22;"	d
_SEGLEARN_H_	src/drivers/damned/learn.h	22;"	d
_SEGLEARN_H_	src/drivers/olethros/learn.h	23;"	d
_SHAPE_H_	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	28;"	d
_SIMFCT_H_	src/modules/simu/simuv2/sim.h	21;"	d
_SIMPLEX_H_	src/modules/simu/simuv2/SOLID-2.0/src/Simplex.h	28;"	d
_SIMUCONFIG_H_	export/include/simuconfig.h	26;"	d
_SIMUCONFIG_H_	src/libs/confscreens/simuconfig.h	26;"	d
_SIMUV1_H_	export/include/simu.h	22;"	d
_SIMUV1_H_	src/interfaces/simu.h	22;"	d
_SINGLEPLAYER_H_	export/include/singleplayer.h	27;"	d
_SINGLEPLAYER_H_	src/libs/raceengineclient/singleplayer.h	27;"	d
_SOLID_H_	export/include/SOLID/solid.h	28;"	d
_SOLID_H_	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	28;"	d
_SOUNDCONFIG_H_	export/include/soundconfig.h	26;"	d
_SOUNDCONFIG_H_	src/libs/confscreens/soundconfig.h	26;"	d
_SPHERE_H_	src/modules/simu/simuv2/SOLID-2.0/src/Sphere.h	28;"	d
_SPLASH_H_	src/libs/client/splash.h	22;"	d
_SPLINE_H_	src/drivers/berniw/spline.h	21;"	d
_SPLINE_H_	src/drivers/berniw2/spline.h	21;"	d
_SPLINE_H_	src/drivers/berniw3/spline.h	21;"	d
_SPLINE_H_	src/drivers/bt/spline.h	21;"	d
_SPLINE_H_	src/drivers/damned/spline.h	21;"	d
_SPLINE_H_	src/drivers/inferno/spline.h	21;"	d
_SPLINE_H_	src/drivers/lliaw/spline.h	21;"	d
_SPLINE_H_	src/drivers/olethros/spline.h	21;"	d
_SPLINE_H_	src/drivers/sparkle/spline.h	21;"	d
_SPLINE_H_	src/drivers/tita/spline.h	21;"	d
_SSGASHAPES_H_	src/windows/include/plib/ssgaShapes.h	26;"	d
_SSGAUX_H_	src/windows/include/plib/ssgAux.h	26;"	d
_SSGA_TYPE_CUBE	src/windows/include/plib/ssgAux.h	38;"	d
_SSGA_TYPE_CYLINDER	src/windows/include/plib/ssgAux.h	40;"	d
_SSGA_TYPE_LENSFLARE	src/windows/include/plib/ssgAux.h	45;"	d
_SSGA_TYPE_PARTICLESYSTEM	src/windows/include/plib/ssgAux.h	43;"	d
_SSGA_TYPE_PATCH	src/windows/include/plib/ssgAux.h	41;"	d
_SSGA_TYPE_SHAPE	src/windows/include/plib/ssgAux.h	37;"	d
_SSGA_TYPE_SPHERE	src/windows/include/plib/ssgAux.h	39;"	d
_SSGA_TYPE_TEAPOT	src/windows/include/plib/ssgAux.h	42;"	d
_SSGA_TYPE_WAVESYSTEM	src/windows/include/plib/ssgAux.h	44;"	d
_SSG_BACKWARDS_REFERENCE	src/windows/include/plib/ssg.h	87;"	d
_SSG_PUBLIC	src/tools/texmapper/ssgLocal.h	2;"	d
_SSG_PUBLIC	src/windows/include/plib/ssg.h	40;"	d
_SSG_TYPE_AXISTRANSFORM	src/windows/include/plib/ssg.h	101;"	d
_SSG_TYPE_BASE	src/windows/include/plib/ssg.h	89;"	d
_SSG_TYPE_BASETRANSFORM	src/windows/include/plib/ssg.h	98;"	d
_SSG_TYPE_BRANCH	src/windows/include/plib/ssg.h	97;"	d
_SSG_TYPE_COLOURARRAY	src/windows/include/plib/ssg.h	121;"	d
_SSG_TYPE_CUTOUT	src/windows/include/plib/ssg.h	108;"	d
_SSG_TYPE_ENTITY	src/windows/include/plib/ssg.h	92;"	d
_SSG_TYPE_INDEXARRAY	src/windows/include/plib/ssg.h	122;"	d
_SSG_TYPE_INTERLEAVEDARRAY	src/windows/include/plib/ssg.h	124;"	d
_SSG_TYPE_INVISIBLE	src/windows/include/plib/ssg.h	109;"	d
_SSG_TYPE_LEAF	src/windows/include/plib/ssg.h	93;"	d
_SSG_TYPE_NORMALARRAY	src/windows/include/plib/ssg.h	119;"	d
_SSG_TYPE_RANGESELECTOR	src/windows/include/plib/ssg.h	103;"	d
_SSG_TYPE_ROOT	src/windows/include/plib/ssg.h	107;"	d
_SSG_TYPE_SELECTOR	src/windows/include/plib/ssg.h	102;"	d
_SSG_TYPE_SIMPLELIST	src/windows/include/plib/ssg.h	117;"	d
_SSG_TYPE_SIMPLESTATE	src/windows/include/plib/ssg.h	113;"	d
_SSG_TYPE_STATE	src/windows/include/plib/ssg.h	112;"	d
_SSG_TYPE_STATESELECTOR	src/windows/include/plib/ssg.h	114;"	d
_SSG_TYPE_TEXCOORDARRAY	src/windows/include/plib/ssg.h	120;"	d
_SSG_TYPE_TEXTRANS	src/windows/include/plib/ssg.h	100;"	d
_SSG_TYPE_TEXTURE	src/windows/include/plib/ssg.h	127;"	d
_SSG_TYPE_TIMEDSELECTOR	src/windows/include/plib/ssg.h	104;"	d
_SSG_TYPE_TRANSFORM	src/windows/include/plib/ssg.h	99;"	d
_SSG_TYPE_TRANSFORMARRAY	src/windows/include/plib/ssg.h	123;"	d
_SSG_TYPE_TWEEN	src/windows/include/plib/ssg.h	105;"	d
_SSG_TYPE_TWEENCONTROLLER	src/windows/include/plib/ssg.h	106;"	d
_SSG_TYPE_VERTEXARRAY	src/windows/include/plib/ssg.h	118;"	d
_SSG_TYPE_VTABLE	src/windows/include/plib/ssg.h	94;"	d
_SSG_TYPE_VTXARRAY	src/windows/include/plib/ssg.h	96;"	d
_SSG_TYPE_VTXTABLE	src/windows/include/plib/ssg.h	95;"	d
_SSG_USE_DLIST	src/windows/include/plib/ssgconf.h	29;"	d
_STEER_H_	src/modules/simu/simuv2/steer.h	21;"	d
_STRAIGHT_2T_H_	export/include/tmath/straight2_t.h	30;"	d
_STRAIGHT_2T_H_	src/libs/math/straight2_t.h	30;"	d
_STRATEGY_H_	src/drivers/bt/strategy.h	26;"	d
_STRATEGY_H_	src/drivers/damned/strategy.h	26;"	d
_STRATEGY_H_	src/drivers/olethros/strategy.h	27;"	d
_SUSP_H__	src/modules/simu/simuv2/susp.h	21;"	d
_TELEMETRY_H_	export/include/telemetry.h	22;"	d
_TELEMETRY_H_	src/interfaces/telemetry.h	22;"	d
_TLM_H_	src/modules/telemetry/tlm.h	21;"	d
_TORCSDOC_H_	src/doc/torcsdoc.h	27;"	d
_TORCS_H_	export/include/client.h	22;"	d
_TORCS_H_	src/libs/client/client.h	22;"	d
_TORCS_PORTABILITY_H_	export/include/portability.h	21;"	d
_TORCS_PORTABILITY_H_	src/libs/portability/portability.h	21;"	d
_TRACKDESC_H_	src/drivers/berniw/trackdesc.h	29;"	d
_TRACKDESC_H_	src/drivers/berniw2/trackdesc.h	29;"	d
_TRACKDESC_H_	src/drivers/berniw3/trackdesc.h	29;"	d
_TRACKDESC_H_	src/drivers/inferno/trackdesc.h	29;"	d
_TRACKDESC_H_	src/drivers/lliaw/trackdesc.h	29;"	d
_TRACKDESC_H_	src/drivers/tita/trackdesc.h	29;"	d
_TRACKGEN_H_	src/tools/trackgen/trackgen.h	27;"	d
_TRACKINC_H__	src/modules/track/trackinc.h	22;"	d
_TRACKV1_H_	export/include/track.h	29;"	d
_TRACKV1_H_	src/interfaces/track.h	29;"	d
_TRANSFORM_H_	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	28;"	d
_TRANSMISSION_H_	src/modules/simu/simuv2/transmission.h	27;"	d
_TUPLE3_H_	export/include/3D/Tuple3.h	28;"	d
_TUPLE3_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	28;"	d
_TUPLE4_H_	export/include/3D/Tuple4.h	28;"	d
_TUPLE4_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	28;"	d
_UTIL_H_	src/tools/trackgen/util.h	27;"	d
_VECTOR_H_	export/include/3D/Vector.h	28;"	d
_VECTOR_H_	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	28;"	d
_VERTEXBASE_H_	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	28;"	d
_WCHAR_T_DEFINED	src/windows/include/GL/glut.h	44;"	d
_WHEEL_H__	src/modules/simu/simuv2/wheel.h	21;"	d
_WINDOWSSPEC_H_	src/windows/windowsspec.h	21;"	d
_XML_H_	export/include/xml.h	8;"	d
_XML_H_	src/libs/txml/xml.h	8;"	d
_ZCONF_H	src/windows/include/zconf.h	9;"	d
_ZLIB_H	src/windows/include/zlib.h	32;"	d
__32BIT__	src/windows/include/zconf.h	56;"	d
__CARV1_H__	export/include/car.h	30;"	d
__CARV1_H__	src/interfaces/car.h	30;"	d
__GRMULTI	src/modules/graphic/ssggraph/grmultitexstate.h	20;"	d
__INCLUDED_JS_H__	export/include/js.h	25;"	d
__INCLUDED_JS_H__	src/interfaces/js.h	25;"	d
__MENU__H__	src/libs/tgfclient/guimenu.h	21;"	d
__OSSPEC__H__	export/include/osspec.h	22;"	d
__OSSPEC__H__	src/linux/osspec.h	22;"	d
__OSSPEC__H__	src/windows/osspec.h	22;"	d
__RACEMANTOOLS_H__	export/include/confscreens.h	26;"	d
__RACEMANTOOLS_H__	export/include/racescreens.h	26;"	d
__RACEMANTOOLS_H__	src/libs/confscreens/confscreens.h	26;"	d
__RACEMANTOOLS_H__	src/libs/racescreens/racescreens.h	26;"	d
__REPLAYV1_H__	export/include/replay.h	22;"	d
__REPLAYV1_H__	src/interfaces/replay.h	22;"	d
__SLPORTABILITY_H__	src/windows/include/plib/slPortability.h	26;"	d
__SL_H__	src/windows/include/plib/sl.h	26;"	d
__SM_H__	src/windows/include/plib/sm.h	26;"	d
__TGFCLIENT__H__	export/include/tgfclient.h	28;"	d
__TGFCLIENT__H__	src/libs/tgfclient/tgfclient.h	28;"	d
__TGF__H__	export/include/tgf.h	28;"	d
__TGF__H__	src/libs/tgf/tgf.h	28;"	d
__al_h_	src/windows/include/AL/al.h	2;"	d
__glext_h_	src/windows/include/GL/glext.h	2;"	d
__glut_h__	src/windows/include/GL/glut.h	2;"	d
__mb_cur_max	src/libs/client/errno.cpp	/^    int __mb_cur_max;$/;"	v
__wglext_h_	src/windows/include/GL/wglext.h	2;"	d
_accelCmd	export/include/car.h	355;"	d
_accelCmd	src/interfaces/car.h	355;"	d
_accel_x	export/include/car.h	231;"	d
_accel_x	src/interfaces/car.h	231;"	d
_accel_y	export/include/car.h	232;"	d
_accel_y	src/interfaces/car.h	232;"	d
_accel_z	export/include/car.h	233;"	d
_accel_z	src/interfaces/car.h	233;"	d
_ascii	configure	/^ _ascii (); _ebcdic ();$/;"	f
_bestLapTime	export/include/car.h	164;"	d
_bestLapTime	src/interfaces/car.h	164;"	d
_bonnetPos_x	export/include/car.h	109;"	d
_bonnetPos_x	src/interfaces/car.h	109;"	d
_bonnetPos_y	export/include/car.h	110;"	d
_bonnetPos_y	src/interfaces/car.h	110;"	d
_bonnetPos_z	export/include/car.h	111;"	d
_bonnetPos_z	src/interfaces/car.h	111;"	d
_brakeCmd	export/include/car.h	356;"	d
_brakeCmd	src/interfaces/car.h	356;"	d
_brakeDiskRadius	export/include/car.h	63;"	d
_brakeDiskRadius	src/interfaces/car.h	63;"	d
_brakeTemp	export/include/car.h	259;"	d
_brakeTemp	src/interfaces/car.h	259;"	d
_carHandle	export/include/car.h	318;"	d
_carHandle	src/interfaces/car.h	318;"	d
_carName	export/include/car.h	96;"	d
_carName	src/interfaces/car.h	96;"	d
_category	export/include/car.h	97;"	d
_category	src/interfaces/car.h	97;"	d
_clutchCmd	export/include/car.h	357;"	d
_clutchCmd	src/interfaces/car.h	357;"	d
_corner_x	export/include/car.h	238;"	d
_corner_x	src/interfaces/car.h	238;"	d
_corner_y	export/include/car.h	239;"	d
_corner_y	src/interfaces/car.h	239;"	d
_curLapTime	export/include/car.h	166;"	d
_curLapTime	src/interfaces/car.h	166;"	d
_curTime	export/include/car.h	167;"	d
_curTime	src/interfaces/car.h	167;"	d
_dammage	export/include/car.h	335;"	d
_dammage	src/interfaces/car.h	335;"	d
_debug	export/include/car.h	332;"	d
_debug	src/interfaces/car.h	332;"	d
_deltaBestLapTime	export/include/car.h	165;"	d
_deltaBestLapTime	src/interfaces/car.h	165;"	d
_dimension	export/include/car.h	102;"	d
_dimension	src/interfaces/car.h	102;"	d
_dimension_x	export/include/car.h	103;"	d
_dimension_x	src/interfaces/car.h	103;"	d
_dimension_y	export/include/car.h	104;"	d
_dimension_y	src/interfaces/car.h	104;"	d
_dimension_z	export/include/car.h	105;"	d
_dimension_z	src/interfaces/car.h	105;"	d
_displayMode	export/include/raceman.h	169;"	d
_displayMode	src/interfaces/raceman.h	169;"	d
_distFromStartLine	export/include/car.h	179;"	d
_distFromStartLine	src/interfaces/car.h	179;"	d
_distRaced	export/include/car.h	178;"	d
_distRaced	src/interfaces/car.h	178;"	d
_driverIndex	export/include/car.h	316;"	d
_driverIndex	src/interfaces/car.h	316;"	d
_driverType	export/include/car.h	98;"	d
_driverType	src/interfaces/car.h	98;"	d
_drvPos_x	export/include/car.h	106;"	d
_drvPos_x	src/interfaces/car.h	106;"	d
_drvPos_y	export/include/car.h	107;"	d
_drvPos_y	src/interfaces/car.h	107;"	d
_drvPos_z	export/include/car.h	108;"	d
_drvPos_z	src/interfaces/car.h	108;"	d
_engineMaxPw	export/include/car.h	326;"	d
_engineMaxPw	src/interfaces/car.h	326;"	d
_engineMaxTq	export/include/car.h	325;"	d
_engineMaxTq	src/interfaces/car.h	325;"	d
_enginerpm	export/include/car.h	320;"	d
_enginerpm	src/interfaces/car.h	320;"	d
_enginerpmMax	export/include/car.h	322;"	d
_enginerpmMax	src/interfaces/car.h	322;"	d
_enginerpmMaxPw	export/include/car.h	324;"	d
_enginerpmMaxPw	src/interfaces/car.h	324;"	d
_enginerpmMaxTq	export/include/car.h	323;"	d
_enginerpmMaxTq	src/interfaces/car.h	323;"	d
_enginerpmRedLine	export/include/car.h	321;"	d
_enginerpmRedLine	src/interfaces/car.h	321;"	d
_event	export/include/car.h	182;"	d
_event	src/interfaces/car.h	182;"	d
_exhaustNb	export/include/car.h	119;"	d
_exhaustNb	src/interfaces/car.h	119;"	d
_exhaustPos	export/include/car.h	120;"	d
_exhaustPos	src/interfaces/car.h	120;"	d
_exhaustPower	export/include/car.h	121;"	d
_exhaustPower	src/interfaces/car.h	121;"	d
_fuel	export/include/car.h	330;"	d
_fuel	src/interfaces/car.h	330;"	d
_fuelInstant	export/include/car.h	315;"	d
_fuelInstant	src/interfaces/car.h	315;"	d
_fuelTotal	export/include/car.h	314;"	d
_fuelTotal	src/interfaces/car.h	314;"	d
_gear	export/include/car.h	331;"	d
_gear	src/interfaces/car.h	331;"	d
_gearCmd	export/include/car.h	358;"	d
_gearCmd	src/interfaces/car.h	358;"	d
_gearNb	export/include/car.h	328;"	d
_gearNb	src/interfaces/car.h	328;"	d
_gearOffset	export/include/car.h	329;"	d
_gearOffset	src/interfaces/car.h	329;"	d
_gearRatio	export/include/car.h	327;"	d
_gearRatio	src/interfaces/car.h	327;"	d
_iconColor	export/include/car.h	116;"	d
_iconColor	src/interfaces/car.h	116;"	d
_laps	export/include/car.h	170;"	d
_laps	src/interfaces/car.h	170;"	d
_lapsBehindLeader	export/include/car.h	175;"	d
_lapsBehindLeader	src/interfaces/car.h	175;"	d
_lastLapTime	export/include/car.h	168;"	d
_lastLapTime	src/interfaces/car.h	168;"	d
_length	src/drivers/olethros/TrackData.h	/^    float _length;$/;"	m	class:Point
_lightCmd	export/include/car.h	362;"	d
_lightCmd	src/interfaces/car.h	362;"	d
_maxDammage	export/include/raceman.h	82;"	d
_maxDammage	src/interfaces/raceman.h	82;"	d
_modName	export/include/car.h	319;"	d
_modName	src/interfaces/car.h	319;"	d
_msgCmd	export/include/car.h	360;"	d
_msgCmd	src/interfaces/car.h	360;"	d
_msgColorCmd	export/include/car.h	361;"	d
_msgColorCmd	src/interfaces/car.h	361;"	d
_name	export/include/car.h	94;"	d
_name	src/interfaces/car.h	94;"	d
_nbPitStops	export/include/car.h	171;"	d
_nbPitStops	src/interfaces/car.h	171;"	d
_ncars	export/include/raceman.h	78;"	d
_ncars	src/interfaces/raceman.h	78;"	d
_paramsHandle	export/include/car.h	317;"	d
_paramsHandle	src/interfaces/car.h	317;"	d
_penaltyList	export/include/car.h	183;"	d
_penaltyList	src/interfaces/car.h	183;"	d
_pit	export/include/car.h	180;"	d
_pit	src/interfaces/car.h	180;"	d
_pitFuel	export/include/car.h	375;"	d
_pitFuel	src/interfaces/car.h	375;"	d
_pitRepair	export/include/car.h	376;"	d
_pitRepair	src/interfaces/car.h	376;"	d
_pitStopType	export/include/car.h	377;"	d
_pitStopType	src/interfaces/car.h	377;"	d
_pitch	export/include/car.h	225;"	d
_pitch	src/interfaces/car.h	225;"	d
_pos	export/include/car.h	173;"	d
_pos	src/interfaces/car.h	173;"	d
_posMat	export/include/car.h	240;"	d
_posMat	src/interfaces/car.h	240;"	d
_pos_X	export/include/car.h	221;"	d
_pos_X	src/interfaces/car.h	221;"	d
_pos_Y	export/include/car.h	222;"	d
_pos_Y	src/interfaces/car.h	222;"	d
_pos_Z	export/include/car.h	223;"	d
_pos_Z	src/interfaces/car.h	223;"	d
_raceCmd	export/include/car.h	359;"	d
_raceCmd	src/interfaces/car.h	359;"	d
_raceNumber	export/include/car.h	100;"	d
_raceNumber	src/interfaces/car.h	100;"	d
_raceState	export/include/raceman.h	80;"	d
_raceState	src/interfaces/raceman.h	80;"	d
_raceType	export/include/raceman.h	81;"	d
_raceType	src/interfaces/raceman.h	81;"	d
_reCarInfo	export/include/raceman.h	164;"	d
_reCarInfo	src/interfaces/raceman.h	164;"	d
_reCurTime	export/include/raceman.h	165;"	d
_reCurTime	src/interfaces/raceman.h	165;"	d
_reFilename	export/include/raceman.h	161;"	d
_reFilename	src/interfaces/raceman.h	161;"	d
_reGameScreen	export/include/raceman.h	159;"	d
_reGameScreen	src/interfaces/raceman.h	159;"	d
_reGraphicItf	export/include/raceman.h	157;"	d
_reGraphicItf	src/interfaces/raceman.h	157;"	d
_reLastTime	export/include/raceman.h	168;"	d
_reLastTime	src/interfaces/raceman.h	168;"	d
_reMenuScreen	export/include/raceman.h	160;"	d
_reMenuScreen	src/interfaces/raceman.h	160;"	d
_reName	export/include/raceman.h	162;"	d
_reName	src/interfaces/raceman.h	162;"	d
_reParam	export/include/raceman.h	154;"	d
_reParam	src/interfaces/raceman.h	154;"	d
_reRaceName	export/include/raceman.h	163;"	d
_reRaceName	src/interfaces/raceman.h	163;"	d
_reRacemanItf	export/include/raceman.h	155;"	d
_reRacemanItf	src/interfaces/raceman.h	155;"	d
_reRunning	export/include/raceman.h	167;"	d
_reRunning	src/interfaces/raceman.h	167;"	d
_reSimItf	export/include/raceman.h	158;"	d
_reSimItf	src/interfaces/raceman.h	158;"	d
_reState	export/include/raceman.h	153;"	d
_reState	src/interfaces/raceman.h	153;"	d
_reTimeMult	export/include/raceman.h	166;"	d
_reTimeMult	src/interfaces/raceman.h	166;"	d
_reTrackItf	export/include/raceman.h	156;"	d
_reTrackItf	src/interfaces/raceman.h	156;"	d
_reaction	export/include/car.h	334;"	d
_reaction	src/interfaces/car.h	334;"	d
_refreshDisplay	export/include/raceman.h	170;"	d
_refreshDisplay	src/interfaces/raceman.h	170;"	d
_remainingLaps	export/include/car.h	172;"	d
_remainingLaps	src/interfaces/car.h	172;"	d
_ride	export/include/car.h	258;"	d
_ride	src/interfaces/car.h	258;"	d
_rimRadius	export/include/car.h	60;"	d
_rimRadius	src/interfaces/car.h	60;"	d
_roll	export/include/car.h	224;"	d
_roll	src/interfaces/car.h	224;"	d
_scheduledEventTime	export/include/car.h	181;"	d
_scheduledEventTime	src/interfaces/car.h	181;"	d
_skid	export/include/car.h	333;"	d
_skid	src/interfaces/car.h	333;"	d
_skillLevel	export/include/car.h	99;"	d
_skillLevel	src/interfaces/car.h	99;"	d
_speed_X	export/include/car.h	236;"	d
_speed_X	src/interfaces/car.h	236;"	d
_speed_Y	export/include/car.h	237;"	d
_speed_Y	src/interfaces/car.h	237;"	d
_speed_x	export/include/car.h	228;"	d
_speed_x	src/interfaces/car.h	228;"	d
_speed_y	export/include/car.h	229;"	d
_speed_y	src/interfaces/car.h	229;"	d
_speed_z	export/include/car.h	230;"	d
_speed_z	src/interfaces/car.h	230;"	d
_ssgMaterial	src/modules/graphic/ssggraph/grloadac.cpp	/^struct _ssgMaterial$/;"	s	file:
_startRank	export/include/car.h	101;"	d
_startRank	src/interfaces/car.h	101;"	d
_statGC	export/include/car.h	112;"	d
_statGC	src/interfaces/car.h	112;"	d
_statGC_x	export/include/car.h	113;"	d
_statGC_x	src/interfaces/car.h	113;"	d
_statGC_y	export/include/car.h	114;"	d
_statGC_y	src/interfaces/car.h	114;"	d
_statGC_z	export/include/car.h	115;"	d
_statGC_z	src/interfaces/car.h	115;"	d
_state	export/include/car.h	234;"	d
_state	src/interfaces/car.h	234;"	d
_steerCmd	export/include/car.h	354;"	d
_steerCmd	src/interfaces/car.h	354;"	d
_steerLock	export/include/car.h	118;"	d
_steerLock	src/interfaces/car.h	118;"	d
_strdup	export/include/tgf.h	165;"	d
_strdup	src/libs/tgf/tgf.h	165;"	d
_tank	export/include/car.h	117;"	d
_tank	src/interfaces/car.h	117;"	d
_teamname	export/include/car.h	95;"	d
_teamname	src/interfaces/car.h	95;"	d
_tgf_win_calloc	src/libs/tgf/tgf.cpp	/^void * _tgf_win_calloc(size_t num, size_t size)$/;"	f
_tgf_win_free	src/libs/tgf/tgf.cpp	/^void _tgf_win_free(void * memblock)$/;"	f
_tgf_win_malloc	src/libs/tgf/tgf.cpp	/^void * _tgf_win_malloc(size_t size)$/;"	f
_tgf_win_realloc	src/libs/tgf/tgf.cpp	/^void * _tgf_win_realloc(void * memblock, size_t size)$/;"	f
_tgf_win_strdup	src/libs/tgf/tgf.cpp	/^char * _tgf_win_strdup(const char * str)$/;"	f
_timeBeforeNext	export/include/car.h	177;"	d
_timeBeforeNext	src/interfaces/car.h	177;"	d
_timeBehindLeader	export/include/car.h	174;"	d
_timeBehindLeader	src/interfaces/car.h	174;"	d
_timeBehindPrev	export/include/car.h	176;"	d
_timeBehindPrev	src/interfaces/car.h	176;"	d
_tireHeight	export/include/car.h	61;"	d
_tireHeight	src/interfaces/car.h	61;"	d
_tireWidth	export/include/car.h	62;"	d
_tireWidth	src/interfaces/car.h	62;"	d
_topSpeed	export/include/car.h	169;"	d
_topSpeed	src/interfaces/car.h	169;"	d
_totLaps	export/include/raceman.h	79;"	d
_totLaps	src/interfaces/raceman.h	79;"	d
_trkPos	export/include/car.h	235;"	d
_trkPos	src/interfaces/car.h	235;"	d
_tyreCondition	export/include/car.h	270;"	d
_tyreCondition	src/interfaces/car.h	270;"	d
_tyreT_in	export/include/car.h	267;"	d
_tyreT_in	src/interfaces/car.h	267;"	d
_tyreT_mid	export/include/car.h	268;"	d
_tyreT_mid	src/interfaces/car.h	268;"	d
_tyreT_out	export/include/car.h	269;"	d
_tyreT_out	src/interfaces/car.h	269;"	d
_ulEndianTest	src/windows/include/plib/ul.h	/^static const int _ulEndianTest = 1;$/;"	v
_ulEndianTest	src/windows/include/ul.h	/^static const int _ulEndianTest = 1;$/;"	v
_wheelFx	export/include/car.h	264;"	d
_wheelFx	src/interfaces/car.h	264;"	d
_wheelFy	export/include/car.h	265;"	d
_wheelFy	src/interfaces/car.h	265;"	d
_wheelFz	export/include/car.h	266;"	d
_wheelFz	src/interfaces/car.h	266;"	d
_wheelRadius	export/include/car.h	64;"	d
_wheelRadius	src/interfaces/car.h	64;"	d
_wheelSeg	export/include/car.h	261;"	d
_wheelSeg	src/interfaces/car.h	261;"	d
_wheelSlipAccel	export/include/car.h	263;"	d
_wheelSlipAccel	src/interfaces/car.h	263;"	d
_wheelSlipSide	export/include/car.h	262;"	d
_wheelSlipSide	src/interfaces/car.h	262;"	d
_wheelSpinVel	export/include/car.h	260;"	d
_wheelSpinVel	src/interfaces/car.h	260;"	d
_yaw	export/include/car.h	226;"	d
_yaw	src/interfaces/car.h	226;"	d
_yaw_rate	export/include/car.h	227;"	d
_yaw_rate	src/interfaces/car.h	227;"	d
a	export/include/learning/ANN.h	/^	real a; \/\/\/< learning rate$/;"	m	struct:ANN_
a	export/include/learning/ANN.h	/^	real a; \/\/\/< learning rate$/;"	m	struct:Layer_
a	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
a	src/drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon125
a	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
a	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon100
a	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
a	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon116
a	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
a	src/drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon141
a	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
a	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon134
a	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
a	src/drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon107
a	src/libs/learning/ANN.h	/^	real a; \/\/\/< learning rate$/;"	m	struct:ANN_
a	src/libs/learning/ANN.h	/^	real a; \/\/\/< learning rate$/;"	m	struct:Layer_
a	src/modules/graphic/ssggraph/QSoundChar.h	/^	float a;$/;"	m	struct:QSoundChar_
a	src/modules/graphic/ssggraph/SoundInterface.h	/^		float a; \/\/amplitude modulation$/;"	m	struct:OpenalSoundInterface::SoundChar_
a	src/modules/graphic/ssggraph/SoundInterface.h	/^		float a; \/\/amplitude modulation$/;"	m	struct:PlibSoundInterface::SoundChar_
a	src/modules/graphic/ssggraph/SoundInterface.h	/^	float a; \/\/\/< amplitude$/;"	m	struct:SoundPri_
a	src/modules/graphic/ssggraph/TorcsSound.h	/^	float a; \/\/\/< Environmental attenuation$/;"	m	class:SoundSource
a	src/modules/simu/simuv2/engine.h	/^    tdble a;$/;"	m	struct:__anon10
a	src/tools/trackgen/easymesh.cpp	/^    int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
a	src/windows/include/plib/sg.h	/^  sgVec3 a ;$/;"	m	struct:sgLineSegment3
a	src/windows/include/plib/sg.h	/^  sgdVec3 a ;$/;"	m	struct:sgdLineSegment3
aColor	src/libs/racescreens/driverselect.cpp	/^static float		aColor[] = {1.0, 0.0, 0.0, 1.0};$/;"	v	file:
aMax	src/modules/simu/simuv2/car.cpp	/^const tdble aMax = 0.35f; \/*  *\/$/;"	v
abortScr	src/libs/racescreens/miscscreens.cpp	/^    void	*abortScr;$/;"	m	struct:__anon39	file:
abs_error	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^Scalar abs_error = 1e-10; \/\/ absolute error if the distance is almost zero$/;"	v
absolute	export/include/3D/Matrix.h	/^inline Matrix Matrix::absolute() const {$/;"	f	class:Matrix
absolute	export/include/3D/Matrix.h	/^inline Matrix absolute(const Matrix& m) { return m.absolute(); }$/;"	f
absolute	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::absolute() const {$/;"	f	class:Matrix
absolute	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix absolute(const Matrix& m) { return m.absolute(); }$/;"	f
acc	export/include/tgf.h	/^    tPosd acc; \/**< acceleration *\/$/;"	m	struct:__anon192
acc	src/libs/tgf/tgf.h	/^    tPosd acc; \/**< acceleration *\/$/;"	m	struct:__anon50
acc	src/windows/include/plib/ssgaParticleSystem.h	/^  sgVec3 acc ;$/;"	m	class:ssgaParticle
accel	src/drivers/berniw/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	src/drivers/berniw2/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	src/drivers/berniw3/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	src/drivers/inferno/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	src/drivers/lliaw/mycar.h	/^		double accel;$/;"	m	class:MyCar
accel	src/drivers/olethros/Trajectory.h	/^    std::vector<float> accel; \/\/\/<  maximum acceleration$/;"	m	class:Trajectory
accel	src/drivers/olethros/learn.h	/^	float* accel; \/\/\/< Accelerations for each quantum$/;"	m	class:olethros::SegLearn
accel	src/drivers/tita/mycar.h	/^		double accel;$/;"	m	class:MyCar
accelCmd	export/include/car.h	/^    tdble	accelCmd;   \/**< Accelerator command [0.0, 1.0] *\/$/;"	m	struct:__anon202
accelCmd	src/interfaces/car.h	/^    tdble	accelCmd;   \/**< Accelerator command [0.0, 1.0] *\/$/;"	m	struct:__anon162
action	src/modules/graphic/ssggraph/grcam.h	/^    void action(void) {$/;"	f	class:cGrCamera
activate	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::activate(int x, int y, int w, int h)$/;"	f	class:cGrScreen
activateViewport	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::activateViewport (void)$/;"	f	class:cGrCarCamMirror
active	src/modules/graphic/ssggraph/grscreen.h	/^		int active;								\/\/ Is the screen activated.$/;"	m	class:cGrScreen
add	src/modules/graphic/ssggraph/grcam.h	/^    void add(tGrCamHead *head) {$/;"	f	class:cGrCamera
add	src/windows/include/plib/ssg.h	/^  void   add ( float r, float g, float b, float a )$/;"	f	class:ssgColourArray
add	src/windows/include/plib/ssg.h	/^  void   add ( float u, float v )$/;"	f	class:ssgTexCoordArray
add	src/windows/include/plib/ssg.h	/^  void   add ( float x, float y, float z )$/;"	f	class:ssgNormalArray
add	src/windows/include/plib/ssg.h	/^  void   add ( float x, float y, float z )$/;"	f	class:ssgVertexArray
add	src/windows/include/plib/ssg.h	/^  void   add ( sgMat4  thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgTransformArray
add	src/windows/include/plib/ssg.h	/^  void   add ( sgVec2   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgTexCoordArray
add	src/windows/include/plib/ssg.h	/^  void   add ( sgVec3   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgNormalArray
add	src/windows/include/plib/ssg.h	/^  void   add ( sgVec3   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgVertexArray
add	src/windows/include/plib/ssg.h	/^  void   add ( sgVec4   thing ) { raw_add ( (char *) thing ) ; } ;$/;"	f	class:ssgColourArray
add	src/windows/include/plib/ssg.h	/^  void   add ( short    thing ) { raw_add ( (char *) &thing ) ; } ;$/;"	f	class:ssgIndexArray
add	src/windows/include/plib/ssg.h	/^  void add ( ssgInterleavedArrayElement  thing ) { raw_add ( (char *) &thing ) ; } ;$/;"	f	class:ssgInterleavedArray
add	src/windows/include/plib/ssg.h	/^  void add ( ssgInterleavedArrayElement *thing ) { raw_add ( (char *)  thing ) ; } ;$/;"	f	class:ssgInterleavedArray
addEntry	src/modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^  void addEntry(ShapeType type1, ShapeType type2, Function function) { $/;"	f	class:AlgoTable
addForce	src/windows/include/plib/sg.h	/^  void addForce    ( sgVec3 f ) { sgAddVec3    ( force, f ) ; }$/;"	f	class:sgParticle
addIndex	src/windows/include/plib/ssg.h	/^	void addIndex ( short i) { indices->add(i); }$/;"	f	class:ssgVtxArray
addPair	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void addPair(ObjectPtr object1, ObjectPtr object2) {$/;"	f
addParam	src/libs/tgf/params.cpp	/^addParam (struct parmHeader *conf, struct section *section, const char *paramName, const char *value)$/;"	f	file:
addParent	src/windows/include/plib/ssg.h	/^  void addParent    ( ssgEntity *entity ) { parents.addEntity    ( entity ) ; }$/;"	f	class:ssgEntity
addPath	src/windows/include/plib/ssg.h	/^  void addPath ( ssgEntity *e )$/;"	f	class:ssgHit
addSample	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^TorcsSound* OpenalSoundInterface::addSample (const char* filename, int flags, bool loop, bool static_pool)$/;"	f	class:OpenalSoundInterface
addSample	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^TorcsSound* PlibSoundInterface::addSample (const char* filename, int flags, bool loop, bool static_pool)$/;"	f	class:PlibSoundInterface
addSection	src/libs/tgf/params.cpp	/^addSection (struct parmHeader *conf, const char *sectionName)$/;"	f	file:
addTime	export/include/tgf.h	/^  double addTime;$/;"	m	class:ProfileInstance
addTime	src/libs/tgf/tgf.h	/^  double addTime;$/;"	m	class:ProfileInstance
addWithin	src/libs/tgf/params.cpp	/^addWithin (struct param *curParam, char *s1)$/;"	f	file:
additive	src/windows/include/plib/ssg.h	/^  int additive ;$/;"	m	class:ssgRangeSelector
adjoint	export/include/3D/Matrix.h	/^inline Matrix Matrix::adjoint() const {$/;"	f	class:Matrix
adjoint	export/include/3D/Matrix.h	/^inline Matrix adjoint(const Matrix& m) { return m.adjoint(); }$/;"	f
adjoint	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::adjoint() const {$/;"	f	class:Matrix
adjoint	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix adjoint(const Matrix& m) { return m.adjoint(); }$/;"	f
adjustRadius	src/drivers/berniw/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	src/drivers/berniw2/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	src/drivers/berniw3/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	src/drivers/inferno/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	src/drivers/lliaw/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adjustRadius	src/drivers/tita/pathfinder.cpp	/^inline void Pathfinder::adjustRadius(int s, int p, int e, double c, double security) {$/;"	f	class:Pathfinder
adler	src/windows/include/zlib.h	/^    uLong   adler;      \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	src/windows/include/zconf.h	35;"	d
advanceStep	src/libs/confscreens/joystickconfig.cpp	/^static void advanceStep (void)$/;"	f	file:
aero	src/modules/simu/simuv2/carstruct.h	/^    tAero		aero;$/;"	m	struct:__anon18
affine	export/include/3D/Point.h	/^inline Point affine(const Point& p1, const Point& p2, Scalar t) {$/;"	f
affine	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point affine(const Point& p1, const Point& p2, Scalar t) {$/;"	f
aheadCarColor	src/modules/graphic/ssggraph/grtrackmap.cpp	/^GLfloat cGrTrackMap::aheadCarColor[4];$/;"	m	class:cGrTrackMap	file:
aheadCarColor	src/modules/graphic/ssggraph/grtrackmap.h	/^		static GLfloat aheadCarColor[4];$/;"	m	class:cGrTrackMap
ainfo	src/windows/include/plib/sl.h	/^  audio_info_t	  ainfo;$/;"	m	class:slDSP
ainfo	src/windows/include/plib/sl.h	/^  audio_info_t    ainfo;        \/\/ ioctl structure$/;"	m	class:slDSP
airSpeed2	src/modules/simu/simuv2/carstruct.h	/^    tdble	airSpeed2;	\/* current air speed (squared) for aerodynamic forces *\/$/;"	m	struct:__anon18
alBuffer3f	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBuffer3f)( ALuint bid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	v
alBuffer3i	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBuffer3i)( ALuint bid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	v
alBufferData	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferData)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	v
alBufferf	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferf)( ALuint bid, ALenum param, ALfloat value);$/;"	v
alBufferfv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferfv)( ALuint bid, ALenum param, const ALfloat* values );$/;"	v
alBufferi	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferi)( ALuint bid, ALenum param, ALint value);$/;"	v
alBufferiv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alBufferiv)( ALuint bid, ALenum param, const ALint* values );$/;"	v
alDeleteBuffers	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alDeleteBuffers)( ALsizei n, const ALuint* buffers );$/;"	v
alDeleteSources	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alDeleteSources)( ALsizei n, const ALuint* sources );$/;"	v
alDisable	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alDisable)( ALenum capability ); $/;"	v
alDistanceModel	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alDistanceModel)( ALenum distanceModel );$/;"	v
alDopplerFactor	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alDopplerFactor)( ALfloat value );$/;"	v
alDopplerVelocity	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alDopplerVelocity)( ALfloat value );$/;"	v
alEnable	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alEnable)( ALenum capability );$/;"	v
alGenBuffers	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGenBuffers)( ALsizei n, ALuint* buffers );$/;"	v
alGenSources	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGenSources)( ALsizei n, ALuint* sources );$/;"	v
alGetBoolean	src/windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alGetBoolean)( ALenum param );$/;"	v
alGetBooleanv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBooleanv)( ALenum param, ALboolean* data );$/;"	v
alGetBuffer3f	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBuffer3f)( ALuint bid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	v
alGetBuffer3i	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBuffer3i)( ALuint bid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	v
alGetBufferf	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferf)( ALuint bid, ALenum param, ALfloat* value );$/;"	v
alGetBufferfv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferfv)( ALuint bid, ALenum param, ALfloat* values );$/;"	v
alGetBufferi	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferi)( ALuint bid, ALenum param, ALint* value );$/;"	v
alGetBufferiv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetBufferiv)( ALuint bid, ALenum param, ALint* values );$/;"	v
alGetDouble	src/windows/include/AL/al.h	/^ALdouble      (ALAPIENTRY *alGetDouble)( ALenum param );$/;"	v
alGetDoublev	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetDoublev)( ALenum param, ALdouble* data );$/;"	v
alGetEnumValue	src/windows/include/AL/al.h	/^ALenum        (ALAPIENTRY *alGetEnumValue)( const ALchar* ename );$/;"	v
alGetError	src/windows/include/AL/al.h	/^ALenum        (ALAPIENTRY *alGetError)( ALvoid );$/;"	v
alGetFloat	src/windows/include/AL/al.h	/^ALfloat       (ALAPIENTRY *alGetFloat)( ALenum param );$/;"	v
alGetFloatv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetFloatv)( ALenum param, ALfloat* data );$/;"	v
alGetInteger	src/windows/include/AL/al.h	/^ALint         (ALAPIENTRY *alGetInteger)( ALenum param );$/;"	v
alGetIntegerv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetIntegerv)( ALenum param, ALint* data );$/;"	v
alGetListener3f	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListener3f)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	v
alGetListener3i	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListener3i)( ALenum param, ALint *value1, ALint *value2, ALint *value3 );$/;"	v
alGetListenerf	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListenerf)( ALenum param, ALfloat* value );$/;"	v
alGetListenerfv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListenerfv)( ALenum param, ALfloat* values );$/;"	v
alGetListeneri	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListeneri)( ALenum param, ALint* value );$/;"	v
alGetListeneriv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetListeneriv)( ALenum param, ALint* values );$/;"	v
alGetProcAddress	src/windows/include/AL/al.h	/^void*         (ALAPIENTRY *alGetProcAddress)( const ALchar* fname );$/;"	v
alGetSource3f	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSource3f)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	v
alGetSource3i	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSource3i)( ALuint sid, ALenum param, ALint* value1, ALint* value2, ALint* value3);$/;"	v
alGetSourcef	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourcef)( ALuint sid, ALenum param, ALfloat* value );$/;"	v
alGetSourcefv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourcefv)( ALuint sid, ALenum param, ALfloat* values );$/;"	v
alGetSourcei	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourcei)( ALuint sid, ALenum param, ALint* value );$/;"	v
alGetSourceiv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alGetSourceiv)( ALuint sid, ALenum param, ALint* values );$/;"	v
alGetString	src/windows/include/AL/al.h	/^const ALchar* (ALAPIENTRY *alGetString)( ALenum param );$/;"	v
alIsBuffer	src/windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsBuffer)( ALuint bid );$/;"	v
alIsEnabled	src/windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsEnabled)( ALenum capability ); $/;"	v
alIsExtensionPresent	src/windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsExtensionPresent)(const ALchar* extname );$/;"	v
alIsSource	src/windows/include/AL/al.h	/^ALboolean     (ALAPIENTRY *alIsSource)( ALuint sid ); $/;"	v
alListener3f	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alListener3f)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	v
alListener3i	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alListener3i)( ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	v
alListenerf	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alListenerf)( ALenum param, ALfloat value );$/;"	v
alListenerfv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alListenerfv)( ALenum param, const ALfloat* values );$/;"	v
alListeneri	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alListeneri)( ALenum param, ALint value );$/;"	v
alListeneriv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alListeneriv)( ALenum param, const ALint* values );$/;"	v
alSource3f	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSource3f)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	v
alSource3i	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSource3i)( ALuint sid, ALenum param, ALint value1, ALint value2, ALint value3 );$/;"	v
alSourcePause	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePause)( ALuint sid );$/;"	v
alSourcePausev	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePausev)( ALsizei ns, const ALuint *sids );$/;"	v
alSourcePlay	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePlay)( ALuint sid );$/;"	v
alSourcePlayv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcePlayv)( ALsizei ns, const ALuint *sids );$/;"	v
alSourceQueueBuffers	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceQueueBuffers)( ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	v
alSourceRewind	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceRewind)( ALuint sid );$/;"	v
alSourceRewindv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceRewindv)( ALsizei ns, const ALuint *sids );$/;"	v
alSourceStop	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceStop)( ALuint sid );$/;"	v
alSourceStopv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceStopv)( ALsizei ns, const ALuint *sids );$/;"	v
alSourceUnqueueBuffers	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceUnqueueBuffers)( ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	v
alSourcef	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcef)( ALuint sid, ALenum param, ALfloat value);$/;"	v
alSourcefv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcefv)( ALuint sid, ALenum param, const ALfloat* values );$/;"	v
alSourcei	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourcei)( ALuint sid, ALenum param, ALint value);$/;"	v
alSourceiv	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSourceiv)( ALuint sid, ALenum param, const ALint* values );$/;"	v
alSpeedOfSound	src/windows/include/AL/al.h	/^void          (ALAPIENTRY *alSpeedOfSound)( ALfloat value );$/;"	v
alcCaptureCloseDevice	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureCloseDevice)( ALCdevice *device );$/;"	v
alcCaptureOpenDevice	src/windows/include/AL/alc.h	/^ALCAPI ALCdevice *     (ALCAPIENTRY *alcCaptureOpenDevice)( const ALCchar *devicename, ALCuint frequency, ALCenum format, ALCsizei buffersize );$/;"	v
alcCaptureSamples	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureSamples)( ALCdevice *device, ALCvoid *buffer, ALCsizei samples );$/;"	v
alcCaptureStart	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureStart)( ALCdevice *device );$/;"	v
alcCaptureStop	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcCaptureStop)( ALCdevice *device );$/;"	v
alcCloseDevice	src/windows/include/AL/alc.h	/^ALCAPI ALCboolean      (ALCAPIENTRY *alcCloseDevice)( ALCdevice *device );$/;"	v
alcCreateContext	src/windows/include/AL/alc.h	/^ALCAPI ALCcontext *    (ALCAPIENTRY *alcCreateContext)( ALCdevice *device, const ALCint* attrlist );$/;"	v
alcDestroyContext	src/windows/include/AL/alc.h	/^ALCAPI void	           (ALCAPIENTRY *alcDestroyContext)( ALCcontext *context );$/;"	v
alcGetContextsDevice	src/windows/include/AL/alc.h	/^ALCAPI ALCdevice *     (ALCAPIENTRY *alcGetContextsDevice)( ALCcontext *context );$/;"	v
alcGetCurrentContext	src/windows/include/AL/alc.h	/^ALCAPI ALCcontext *    (ALCAPIENTRY *alcGetCurrentContext)( ALCvoid );$/;"	v
alcGetEnumValue	src/windows/include/AL/alc.h	/^ALCAPI ALCenum         (ALCAPIENTRY *alcGetEnumValue)( ALCdevice *device, const ALCchar *enumname );$/;"	v
alcGetError	src/windows/include/AL/alc.h	/^ALCAPI ALCenum	       (ALCAPIENTRY *alcGetError)( ALCdevice *device );$/;"	v
alcGetIntegerv	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcGetIntegerv)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	v
alcGetProcAddress	src/windows/include/AL/alc.h	/^ALCAPI void *          (ALCAPIENTRY *alcGetProcAddress)( ALCdevice *device, const ALCchar *funcname );$/;"	v
alcGetString	src/windows/include/AL/alc.h	/^ALCAPI const ALCchar*  (ALCAPIENTRY *alcGetString)( ALCdevice *device, ALCenum param );$/;"	v
alcIsExtensionPresent	src/windows/include/AL/alc.h	/^ALCAPI ALCboolean      (ALCAPIENTRY *alcIsExtensionPresent)( ALCdevice *device, const ALCchar *extname );$/;"	v
alcMakeContextCurrent	src/windows/include/AL/alc.h	/^ALCAPI ALCboolean      (ALCAPIENTRY *alcMakeContextCurrent)( ALCcontext *context );$/;"	v
alcOpenDevice	src/windows/include/AL/alc.h	/^ALCAPI ALCdevice *     (ALCAPIENTRY *alcOpenDevice)( const ALCchar *devicename );$/;"	v
alcProcessContext	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcProcessContext)( ALCcontext *context );$/;"	v
alcSuspendContext	src/windows/include/AL/alc.h	/^ALCAPI void            (ALCAPIENTRY *alcSuspendContext)( ALCcontext *context );$/;"	v
align	src/libs/tgfclient/gui.h	/^    int		align;$/;"	m	struct:__anon60
align	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	align;$/;"	m	struct:Face	file:
all_bits	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int all_bits;  \/\/ all_bits = bits|last_bit $/;"	v	file:
allocDefaultAtts	src/libs/txml/xmlparse.c	/^  int allocDefaultAtts;$/;"	m	struct:__anon80	file:
alloc_func	src/windows/include/zlib.h	/^typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));$/;"	t
alone	src/drivers/bt/driver.h	/^		int alone;$/;"	m	class:Driver
alone	src/drivers/damned/driver.h	/^		int alone;$/;"	m	class:Driver
alone	src/drivers/olethros/driver.h	/^	int alone; \/\/\/< whether we are alone$/;"	m	class:olethros::Driver
alone_count	src/drivers/olethros/driver.h	/^	float alone_count; $/;"	m	class:olethros::Driver
alpha	export/include/learning/policy.h	/^	real alpha; \/\/\/< learning rate$/;"	m	class:DiscretePolicy
alpha	src/libs/learning/policy.h	/^	real alpha; \/\/\/< learning rate$/;"	m	class:DiscretePolicy
alpha	src/windows/include/plib/ssg.h	/^	unsigned int alpha ;$/;"	m	struct:ssgTextureInfo
alpha	src/windows/include/png.h	/^   png_byte alpha; \/* for alpha channel files *\/$/;"	m	struct:png_color_8_struct
alpha	src/windows/include/png.h	/^   png_uint_16 alpha;$/;"	m	struct:png_sPLT_entry_struct
alpha_clamp	src/windows/include/plib/ssg.h	/^  float  alpha_clamp ;$/;"	m	class:ssgSimpleState
alt_fname	export/include/js.h	/^  char         alt_fname [ 128 ] ;$/;"	m	class:jsJoystick
alt_fname	src/interfaces/js.h	/^  char         alt_fname [ 128 ] ;$/;"	m	class:jsJoystick
alutExit	src/windows/include/AL/alut.h	/^    void 	  (ALUTAPIENTRY *alutExit)( ALvoid );$/;"	v
alutInit	src/windows/include/AL/alut.h	/^    ALboolean (ALUTAPIENTRY *alutInit)( ALCchar *szDeviceName, ALCdevice **ppDevice, ALCcontext **ppContext );$/;"	v
alutLoadWAVFile	src/windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutLoadWAVFile)( ALbyte *file,ALenum *format,ALvoid **data,ALsizei *size,ALsizei *freq,ALboolean *loop );$/;"	v
alutLoadWAVMemory	src/windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutLoadWAVMemory)( ALbyte *memory,ALenum *format,ALvoid **data,ALsizei *size,ALsizei *freq );$/;"	v
alutLoadWAVMemory	src/windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutLoadWAVMemory)( ALbyte *memory,ALenum *format,ALvoid **data,ALsizei *size,ALsizei *freq,ALboolean *loop );$/;"	v
alutUnloadWAV	src/windows/include/AL/alut.h	/^    void      (ALUTAPIENTRY *alutUnloadWAV)( ALenum format,ALvoid *data,ALsizei size,ALsizei freq );$/;"	v
amb	src/modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 amb ;$/;"	m	struct:_ssgMaterial	file:
amb	src/tools/accc/accc.h	/^  color_t amb;$/;"	m	struct:mat
ambient	src/windows/include/plib/ssg.h	/^  sgVec4 ambient ;$/;"	m	class:ssgLight
ambient_colour	src/windows/include/plib/ssg.h	/^  sgVec4  ambient_colour ;$/;"	m	class:ssgSimpleState
amount_left	src/windows/include/plib/sl.h	/^  int amount_left ;$/;"	m	class:slScheduler
angle	export/include/3D/Vector.h	/^inline Scalar angle(const Vector& v1, const Vector& v2) {$/;"	f
angle	export/include/track.h	/^    tdble angle[7];		\/** Rotation angles of the track in rad anti-clockwise:$/;"	m	struct:trackSeg
angle	src/drivers/bt/cardata.h	/^		float angle;		\/\/ The angle of the car relative to the track tangent.$/;"	m	class:SingleCardata
angle	src/drivers/damned/cardata.h	/^		float angle;		\/\/ The angle of the car relative to the track tangent.$/;"	m	class:SingleCardata
angle	src/drivers/olethros/TrackData.h	/^    float angle;$/;"	m	class:TrackData
angle	src/drivers/olethros/cardata.h	/^	float angle;		\/\/ The angle of the car relative to the track tangent.$/;"	m	class:olethros::SingleCardata
angle	src/drivers/sparkle/driver.h	/^		float angle;			\/* the angle of the car relative to the current segment *\/$/;"	m	class:Driver
angle	src/interfaces/track.h	/^    tdble angle[7];		\/** Rotation angles of the track in rad anti-clockwise:$/;"	m	struct:trackSeg
angle	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar angle(const Vector& v1, const Vector& v2) {$/;"	f
angle	src/modules/simu/simuv2/aero.h	/^	tdble	angle;$/;"	m	struct:__anon14
appendAttributeValue	src/libs/txml/xmlparse.c	/^appendAttributeValue(XML_Parser parser, const ENCODING *enc, int isCdata,$/;"	f	file:
apply	src/modules/graphic/ssggraph/grmultitexstate.cpp	/^void grMultiTexState::apply (int unit)$/;"	f	class:grMultiTexState
approxEqual	export/include/3D/Quaternion.h	/^inline bool approxEqual(const Quaternion& q1, const Quaternion& q2) { $/;"	f
approxEqual	export/include/3D/Vector.h	/^inline bool approxEqual(const Vector& v1, const Vector& v2) { $/;"	f
approxEqual	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline bool approxEqual(const Quaternion& q1, const Quaternion& q2) { $/;"	f
approxEqual	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline bool approxEqual(const Vector& v1, const Vector& v2) { $/;"	f
approxEquals	export/include/tmath/v2_t.h	/^template<class T> inline int v2t<T>::approxEquals(const v2t<T> &cmp, T eps)$/;"	f	class:v2t
approxEquals	export/include/tmath/v3_t.h	/^template<class T> inline int v3t<T>::approxEquals(const v3t<T> &cmp, T eps)$/;"	f	class:v3t
approxEquals	export/include/tmath/v4_t.h	/^template<class T> inline int v4t<T>::approxEquals(const v4t<T> &cmp, T eps)$/;"	f	class:v4t
approxEquals	src/libs/math/v2_t.h	/^template<class T> inline int v2t<T>::approxEquals(const v2t<T> &cmp, T eps)$/;"	f	class:v2t
approxEquals	src/libs/math/v3_t.h	/^template<class T> inline int v3t<T>::approxEquals(const v3t<T> &cmp, T eps)$/;"	f	class:v3t
approxEquals	src/libs/math/v4_t.h	/^template<class T> inline int v4t<T>::approxEquals(const v4t<T> &cmp, T eps)$/;"	f	class:v4t
approxZero	export/include/3D/Quaternion.h	/^inline bool Quaternion::approxZero() const { return length2() < EPSILON2; }$/;"	f	class:Quaternion
approxZero	export/include/3D/Quaternion.h	/^inline bool approxZero(const Quaternion& q) { return q.approxZero(); }$/;"	f
approxZero	export/include/3D/Vector.h	/^inline bool Vector::approxZero() const { return length2() < EPSILON2; }$/;"	f	class:Vector
approxZero	export/include/3D/Vector.h	/^inline bool approxZero(const Vector& v) { return v.approxZero(); }$/;"	f
approxZero	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline bool Quaternion::approxZero() const { return length2() < EPSILON2; }$/;"	f	class:Quaternion
approxZero	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline bool approxZero(const Quaternion& q) { return q.approxZero(); }$/;"	f
approxZero	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline bool Vector::approxZero() const { return length2() < EPSILON2; }$/;"	f	class:Vector
approxZero	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline bool approxZero(const Vector& v) { return v.approxZero(); }$/;"	f
arbSusp	src/modules/simu/simuv2/axle.h	/^    tSuspension arbSusp;	\/* anti-roll bar *\/$/;"	m	struct:__anon22
arc	export/include/track.h	/^    tdble arc;			\/**< Arc in rad of the curve (>0) *\/$/;"	m	struct:trackSeg
arc	src/interfaces/track.h	/^    tdble arc;			\/**< Arc in rad of the curve (>0) *\/$/;"	m	struct:trackSeg
arcadeFlag	src/modules/graphic/ssggraph/grboard.h	/^    int arcadeFlag;$/;"	m	class:cGrBoard
area	src/tools/trackgen/easymesh.cpp	/^double area(struct nod *na, struct nod *nb, struct nod *nc)$/;"	f
argMax	src/libs/learning/policy.cpp	/^int DiscretePolicy::argMax(real* Qs) {$/;"	f	class:DiscretePolicy
as_func_failure	configure	/^as_func_failure () {$/;"	f
as_func_ret_failure	configure	/^as_func_ret_failure () {$/;"	f
as_func_ret_success	configure	/^as_func_ret_success () {$/;"	f
as_func_success	configure	/^as_func_success () {$/;"	f
ascii_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding ascii_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
ascii_toUtf8	src/libs/txml/xmltok.c	/^void ascii_toUtf8(const ENCODING *enc,$/;"	f	file:
asm_flags	src/windows/include/png.h	/^   png_uint_32  asm_flags;$/;"	m	struct:png_struct_def
atten	src/windows/include/plib/ssg.h	/^  sgVec3 atten ;$/;"	m	class:ssgLight
attenuation	src/modules/graphic/ssggraph/CarSoundData.h	/^	float attenuation; \/\/\/< global distance attenuation$/;"	m	class:CarSoundData
attlist0	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist0	src/libs/txml/xmlrole.c	/^int attlist0(PROLOG_STATE *state,$/;"	f	file:
attlist1	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist1	src/libs/txml/xmlrole.c	/^int attlist1(PROLOG_STATE *state,$/;"	f	file:
attlist2	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist2	src/libs/txml/xmlrole.c	/^int attlist2(PROLOG_STATE *state,$/;"	f	file:
attlist3	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist3	src/libs/txml/xmlrole.c	/^int attlist3(PROLOG_STATE *state,$/;"	f	file:
attlist4	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist4	src/libs/txml/xmlrole.c	/^int attlist4(PROLOG_STATE *state,$/;"	f	file:
attlist5	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist5	src/libs/txml/xmlrole.c	/^int attlist5(PROLOG_STATE *state,$/;"	f	file:
attlist6	src/libs/txml/xmlrole.c	/^  attlist0, attlist1, attlist2, attlist3, attlist4, attlist5, attlist6,$/;"	v	file:
attlist6	src/libs/txml/xmlrole.c	/^int attlist6(PROLOG_STATE *state,$/;"	f	file:
attlist7	src/libs/txml/xmlrole.c	/^  attlist7, attlist8, attlist9,$/;"	v	file:
attlist7	src/libs/txml/xmlrole.c	/^int attlist7(PROLOG_STATE *state,$/;"	f	file:
attlist8	src/libs/txml/xmlrole.c	/^  attlist7, attlist8, attlist9,$/;"	v	file:
attlist8	src/libs/txml/xmlrole.c	/^int attlist8(PROLOG_STATE *state,$/;"	f	file:
attlist9	src/libs/txml/xmlrole.c	/^  attlist7, attlist8, attlist9,$/;"	v	file:
attlist9	src/libs/txml/xmlrole.c	/^int attlist9(PROLOG_STATE *state,$/;"	f	file:
attr	export/include/xml.h	/^    struct xmlAttribute	*attr;		\/* attributes of this element *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlAttribute
attr	src/libs/txml/xml.h	/^    struct xmlAttribute	*attr;		\/* attributes of this element *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlAttribute
attrMat	src/tools/accc/ac3dload.cpp	/^int attrMat=0;$/;"	v
attrSurf	src/tools/accc/ac3dload.cpp	/^int attrSurf=0;$/;"	v
attrSurf	src/tools/accc/accc.h	/^  int attrSurf;$/;"	m	struct:ob
attributeIds	src/libs/txml/xmlparse.c	/^  HASH_TABLE attributeIds;$/;"	m	struct:__anon81	file:
attributeValueTok	src/libs/txml/xmltok_impl.c	/^int PREFIX(attributeValueTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
atts	src/libs/txml/xmlparse.c	/^  ATTRIBUTE *atts;$/;"	m	struct:__anon82	file:
atts	src/libs/txml/xmlparse.c	303;"	d	file:
attsSize	src/libs/txml/xmlparse.c	/^  int attsSize;$/;"	m	struct:__anon82	file:
attsSize	src/libs/txml/xmlparse.c	304;"	d	file:
audio_offset	src/windows/include/plib/sl.h	/^  audio_offset_t  audio_offset; \/\/ offset in audiostream$/;"	m	class:slDSP
author	export/include/track.h	/^    char	  *author;	\/**< Author's name *\/$/;"	m	struct:__anon186
author	src/interfaces/track.h	/^    char	  *author;	\/**< Author's name *\/$/;"	m	struct:__anon153
autoClutch	src/drivers/human/human.h	/^	int		autoClutch;$/;"	m	struct:HumanContext
autoreverse	src/libs/confscreens/driverconfig.cpp	/^    int		autoreverse;$/;"	m	struct:PlayerInfo	file:
avail_in	src/windows/include/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	src/windows/include/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
averages	src/drivers/olethros/learn.h	/^	Averages averages; \/\/\/< holds average measurements$/;"	m	class:olethros::SegLearn
avg_row	src/windows/include/png.h	/^   png_bytep avg_row;         \/* buffer to save "avg" row when filtering *\/$/;"	m	struct:png_struct_def
ax	export/include/tgf.h	/^    tdble	ax;		\/**< angle along x axis *\/$/;"	m	struct:__anon191
ax	export/include/tgfclient.h	/^    float	ax[4];		\/**< mouse axis position (mouse considered as a joystick) *\/$/;"	m	struct:__anon214
ax	export/include/tgfclient.h	/^    float	ax[MAX_AXES * NUM_JOY];			\/**< Axis values *\/$/;"	m	struct:__anon213
ax	src/libs/confscreens/controlconfig.cpp	/^static float		ax[MAX_AXES * NUM_JOY] = {0};$/;"	v	file:
ax	src/libs/confscreens/joystickconfig.cpp	/^static float 	ax[MAX_AXES * NUM_JOY] = {0};$/;"	v	file:
ax	src/libs/tgf/tgf.h	/^    tdble	ax;		\/**< angle along x axis *\/$/;"	m	struct:__anon49
ax	src/libs/tgfclient/tgfclient.h	/^    float	ax[4];		\/**< mouse axis position (mouse considered as a joystick) *\/$/;"	m	struct:__anon58
ax	src/libs/tgfclient/tgfclient.h	/^    float	ax[MAX_AXES * NUM_JOY];			\/**< Axis values *\/$/;"	m	struct:__anon57
axCenter	src/libs/confscreens/controlconfig.cpp	/^static float 		axCenter[MAX_AXES * NUM_JOY];$/;"	v	file:
axCenter	src/libs/confscreens/joystickconfig.cpp	/^static float 	axCenter[MAX_AXES * NUM_JOY];$/;"	v	file:
axis	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^  int axis;$/;"	m	class:BBoxCompAxis	file:
axle	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar axle;$/;"	m	class:CarSoundData
axle	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap axle;$/;"	m	class:SoundInterface
axle	src/modules/simu/simuv2/carstruct.h	/^    tAxle		axle[2];$/;"	m	struct:__anon18
axleFz	src/modules/simu/simuv2/wheel.h	/^    tdble	axleFz;		\/* force from axle (anti-roll bar) *\/$/;"	m	struct:__anon21
axle_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* axle_sound; \/\/\/< axle\/gear spinning sound$/;"	m	class:SoundInterface
ay	export/include/tgf.h	/^    tdble	ay;		\/**< angle along y axis *\/$/;"	m	struct:__anon191
ay	src/libs/tgf/tgf.h	/^    tdble	ay;		\/**< angle along y axis *\/$/;"	m	struct:__anon49
az	export/include/tgf.h	/^    tdble	az;		\/**< angle along z axis *\/$/;"	m	struct:__anon191
az	src/libs/tgf/tgf.h	/^    tdble	az;		\/**< angle along z axis *\/$/;"	m	struct:__anon49
b	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
b	src/drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon125
b	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
b	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon100
b	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
b	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon116
b	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
b	src/drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon141
b	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
b	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon134
b	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
b	src/drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon107
b	src/modules/simu/simuv2/engine.h	/^    tdble b;$/;"	m	struct:__anon10
b	src/tools/accc/accc.h	/^  double b;$/;"	m	struct:col
b	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int b;$/;"	m	struct:__anon32	file:
b	src/tools/trackgen/easymesh.cpp	/^    int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
b	src/windows/include/plib/sg.h	/^  sgVec3 b ;$/;"	m	struct:sgLineSegment3
b	src/windows/include/plib/sg.h	/^  sgdVec3 b ;$/;"	m	struct:sgdLineSegment3
b1	src/modules/simu/simuv2/susp.h	/^    tdble C1, b1, v1; \/* coefs for slow *\/$/;"	m	struct:__anon15
b2	src/modules/simu/simuv2/susp.h	/^    tdble C2, b2;     \/* coefs for fast *\/$/;"	m	struct:__anon15
back	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat back[6]; \/\/\/< direction of back$/;"	m	class:OpenalTorcsSound
backfire_loop	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap backfire_loop;$/;"	m	class:SoundInterface
backfire_loop_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* backfire_loop_sound; \/\/\/< exhaust backfire sound$/;"	m	class:SoundInterface
backfire_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* backfire_sound; \/\/\/< one-off backfire sound$/;"	m	class:SoundInterface
background	export/include/track.h	/^    char		*background;$/;"	m	struct:__anon185
background	src/interfaces/track.h	/^    char		*background;$/;"	m	struct:__anon152
background	src/windows/include/png.h	/^   png_color_16 background;   \/* background color in screen gamma space *\/$/;"	m	struct:png_struct_def
background	src/windows/include/png.h	/^   png_color_16 background;$/;"	m	struct:png_info_struct
background2	export/include/track.h	/^    char		*background2;$/;"	m	struct:__anon185
background2	src/interfaces/track.h	/^    char		*background2;$/;"	m	struct:__anon152
background_1	src/windows/include/png.h	/^   png_color_16 background_1; \/* background normalized to gamma 1.0 *\/$/;"	m	struct:png_struct_def
background_gamma	src/windows/include/png.h	/^   float background_gamma;$/;"	m	struct:png_struct_def
background_gamma_type	src/windows/include/png.h	/^   png_byte background_gamma_type;$/;"	m	struct:png_struct_def
backward	export/include/learning/ANN.h	/^	real (*backward) (LISTITEM* p, real* d, bool use_eligibility, real TD); \/\/\/< partial derivative calculation$/;"	m	struct:Layer_
backward	src/libs/learning/ANN.h	/^	real (*backward) (LISTITEM* p, real* d, bool use_eligibility, real TD); \/\/\/< partial derivative calculation$/;"	m	struct:Layer_
bang	src/modules/graphic/ssggraph/CarSoundData.h	/^	bool bang;$/;"	m	class:CarSoundData
bang_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* bang_sound; \/\/\/< sounds when suspension fully compressed$/;"	m	class:SoundInterface
banked_colours	src/windows/include/plib/ssg.h	/^  ulList *banked_colours   ;$/;"	m	class:ssgTween
banked_normals	src/windows/include/plib/ssg.h	/^  ulList *banked_normals   ;$/;"	m	class:ssgTween
banked_texcoords	src/windows/include/plib/ssg.h	/^  ulList *banked_texcoords ;$/;"	m	class:ssgTween
banked_vertices	src/windows/include/plib/ssg.h	/^  ulList *banked_vertices  ;$/;"	m	class:ssgTween
barrier	export/include/track.h	/^	tTrackBarrier	*barrier[2]; \/**< Segment barriers *\/$/;"	m	struct:trackSeg
barrier	src/interfaces/track.h	/^	tTrackBarrier	*barrier[2]; \/**< Segment barriers *\/$/;"	m	struct:trackSeg
barrierHeight	src/modules/track/track3.cpp	/^static tdble barrierHeight[2];$/;"	v	file:
barrierHeight	src/modules/track/track4.cpp	/^static tdble barrierHeight[2];$/;"	v	file:
barrierMaterial	src/modules/track/track3.cpp	/^static char *barrierMaterial[2];$/;"	v	file:
barrierMaterial	src/modules/track/track4.cpp	/^static char *barrierMaterial[2];$/;"	v	file:
barrierStyle	src/modules/track/track3.cpp	/^static int barrierStyle[2];$/;"	v	file:
barrierStyle	src/modules/track/track4.cpp	/^static int barrierStyle[2];$/;"	v	file:
barrierSurface	src/modules/track/track3.cpp	/^static tTrackSurface *barrierSurface[2];$/;"	v	file:
barrierSurface	src/modules/track/track4.cpp	/^static tTrackSurface *barrierSurface[2];$/;"	v	file:
barrierWidth	src/modules/track/track3.cpp	/^static tdble barrierWidth[2];$/;"	v	file:
barrierWidth	src/modules/track/track4.cpp	/^static tdble barrierWidth[2];$/;"	v	file:
base	src/libs/txml/xmlparse.c	/^  const XML_Char *base;$/;"	m	struct:__anon76	file:
base	src/libs/txml/xmlparse.c	/^  const XML_Char *base;$/;"	m	struct:__anon81	file:
base	src/modules/graphic/ssggraph/grskidmarks.h	/^  ssgVtxTable	*base; \/* to remember the pos of the wheel line before transform *\/$/;"	m	struct:__anon3
base	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  VertexBase base;$/;"	m	class:Complex
base	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  const VertexBase& base;$/;"	m	class:Polytope
base	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  const void *base;$/;"	m	class:VertexBase
base_frequency	src/modules/graphic/ssggraph/CarSoundData.h	/^	float base_frequency; \/\/\/< engine base frequency for ~ 6000 rpm$/;"	m	class:CarSoundData
baseid	src/drivers/inferno/pathfinder.h	/^		int baseid;				\/\/ Index of first element.$/;"	m	class:PathSeg
baseid	src/drivers/lliaw/pathfinder.h	/^		int baseid;				\/\/ Index of first element.$/;"	m	class:PathSeg
baseid	src/drivers/tita/pathfinder.h	/^		int baseid;				\/\/ Index of first element.$/;"	m	class:PathSeg
baseval	src/drivers/inferno/pathfinder.h	/^		int baseval;			\/\/ Tracksegid of current buffer start element.$/;"	m	class:PathSeg
baseval	src/drivers/lliaw/pathfinder.h	/^		int baseval;			\/\/ Tracksegid of current buffer start element.$/;"	m	class:PathSeg
baseval	src/drivers/tita/pathfinder.h	/^		int baseval;			\/\/ Tracksegid of current buffer start element.$/;"	m	class:PathSeg
basicState	src/windows/include/plib/ssg.h	/^  ssgSimpleState *basicState   ;$/;"	m	class:ssgContext
basis	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Matrix basis;$/;"	m	class:Transform
batch_mode	export/include/learning/ANN.h	/^	bool batch_mode; \/\/\/< do not update weights immediately$/;"	m	struct:Layer_
batch_mode	export/include/learning/ANN.h	/^	bool batch_mode; \/\/\/< use batch mode$/;"	m	struct:ANN_
batch_mode	src/libs/learning/ANN.h	/^	bool batch_mode; \/\/\/< do not update weights immediately$/;"	m	struct:Layer_
batch_mode	src/libs/learning/ANN.h	/^	bool batch_mode; \/\/\/< use batch mode$/;"	m	struct:ANN_
bbox	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBox bbox;$/;"	m	class:BBoxNode
bbox	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^BBox Complex::bbox(const Transform& t) const {$/;"	f	class:Complex
bbox	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^BBox Convex::bbox(const Transform& t) const {$/;"	f	class:Convex
bbox	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  BBox bbox;$/;"	m	class:Object
bbox	src/windows/include/plib/ssg.h	/^  sgBox bbox ;$/;"	m	class:ssgVTable
bbox	src/windows/include/plib/ssg.h	/^  sgBox bbox ;$/;"	m	class:ssgVtxTable
bboxCompAxis	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^} bboxCompAxis[3] = { X, Y, Z };$/;"	v	typeref:class:BBoxCompAxis
begingroup catcode     12 catcode    12 catcode    12 catcode  _  12 catcode    12 catcode    12 catcode    12 catcode    12 parsearg includezzz	src/modules/simu/simuv2/SOLID-2.0/doc/texinfo.tex	/^\\def\\include{\\begingroup$/;"	i
behaviour	src/drivers/berniw/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	src/drivers/berniw2/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	src/drivers/berniw3/mycar.h	/^		double behaviour[6][12];$/;"	m	class:MyCar
behaviour	src/drivers/inferno/mycar.h	/^		double behaviour[6][8];$/;"	m	class:MyCar
behaviour	src/drivers/lliaw/mycar.h	/^		double behaviour[6][8];$/;"	m	class:MyCar
behaviour	src/drivers/tita/mycar.h	/^		double behaviour[6][8];$/;"	m	class:MyCar
behindCarColor	src/modules/graphic/ssggraph/grtrackmap.cpp	/^GLfloat cGrTrackMap::behindCarColor[4];$/;"	m	class:cGrTrackMap	file:
behindCarColor	src/modules/graphic/ssggraph/grtrackmap.h	/^		static GLfloat behindCarColor[4];$/;"	m	class:cGrTrackMap
bellcrank	src/modules/simu/simuv2/susp.h	/^    tdble bellcrank;  \/* ratio of movement between wheel and suspension *\/$/;"	m	struct:__anon17
berniw	src/drivers/berniw/berniw.cpp	/^extern "C" int berniw(tModInfo *modInfo)$/;"	f
berniw2	src/drivers/berniw2/berniw2.cpp	/^extern "C" int berniw2(tModInfo *modInfo)$/;"	f
berniw3	src/drivers/berniw3/berniw3.cpp	/^extern "C" int berniw3(tModInfo *modInfo)$/;"	f
bestLapTime	export/include/car.h	/^    double		bestLapTime;$/;"	m	struct:__anon198
bestLapTime	src/interfaces/car.h	/^    double		bestLapTime;$/;"	m	struct:__anon158
bgCam	src/modules/graphic/ssggraph/grscreen.h	/^		class cGrBackgroundCam *bgCam;			\/\/ The background camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrBackgroundCam
bgColor	export/include/track.h	/^    float		bgColor[3];$/;"	m	struct:__anon185
bgColor	src/interfaces/track.h	/^    float		bgColor[3];$/;"	m	struct:__anon152
bgColor	src/libs/tgfclient/gui.h	/^    float		*bgColor;	\/* RGBA *\/$/;"	m	struct:__anon68
bgColor	src/libs/tgfclient/gui.h	/^    float		*bgColor[3];$/;"	m	struct:__anon61
bgColor	src/libs/tgfclient/gui.h	/^    float		*bgColor[3];$/;"	m	struct:__anon63
bgColor	src/libs/tgfclient/gui.h	/^    float		*bgColor[3];$/;"	m	struct:__anon65
bgColor	src/libs/tgfclient/gui.h	/^    float	*bgColor;	\/* RGBA *\/$/;"	m	struct:__anon60
bgFocusColor	src/libs/tgfclient/gui.h	/^    float		*bgFocusColor[3];$/;"	m	struct:__anon61
bgFocusColor	src/libs/tgfclient/gui.h	/^    float		*bgFocusColor[3];$/;"	m	struct:__anon65
bgImage	src/libs/tgfclient/gui.h	/^    GLuint		bgImage;$/;"	m	struct:__anon68
bgSelectColor	src/libs/tgfclient/gui.h	/^    float		*bgSelectColor[3];$/;"	m	struct:__anon63
bgcolor	src/libs/raceengineclient/racegl.cpp	/^static float bgcolor[4] = {0.0, 0.0, 0.0, 0.0};$/;"	v	file:
bgtype	export/include/track.h	/^    int			bgtype;$/;"	m	struct:__anon185
bgtype	src/interfaces/track.h	/^    int			bgtype;$/;"	m	struct:__anon152
bias	src/modules/simu/simuv2/differential.h	/^    tdble	bias;$/;"	m	struct:__anon20
big2_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding big2_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
bigMsgDisp	src/libs/raceengineclient/raceengine.cpp	/^static double	bigMsgDisp;$/;"	v	file:
big_row_buf	src/windows/include/png.h	/^   png_bytep big_row_buf;         \/* buffer to save current (unfiltered) row *\/$/;"	m	struct:png_struct_def
bit_depth	src/windows/include/png.h	/^   png_byte bit_depth;        \/* bit depth of file *\/$/;"	m	struct:png_struct_def
bit_depth	src/windows/include/png.h	/^   png_byte bit_depth;      \/* 1, 2, 4, 8, or 16 bits\/channel (from IHDR) *\/$/;"	m	struct:png_info_struct
bit_depth	src/windows/include/png.h	/^   png_byte bit_depth; \/* bit depth of row *\/$/;"	m	struct:png_row_info_struct
bits	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int bits;      \/\/ identifies current simplex$/;"	v	file:
black	src/libs/racescreens/loadingscreen.cpp	/^float	black[4] = {0.0, 0.0, 0.0, 0.0};$/;"	v
block	src/libs/txml/xmlparse.c	/^typedef struct block {$/;"	s	file:
blocked	src/modules/simu/simuv2/carstruct.h	/^    int		blocked;		\/\/ Flag to show if the car has had already a collision in the same timestep.$/;"	m	struct:__anon18
blocks	src/libs/txml/xmlparse.c	/^  BLOCK *blocks;$/;"	m	struct:__anon77	file:
blue	src/windows/include/png.h	/^   png_byte blue;$/;"	m	struct:png_color_8_struct
blue	src/windows/include/png.h	/^   png_byte blue;$/;"	m	struct:png_color_struct
blue	src/windows/include/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_color_16_struct
blue	src/windows/include/png.h	/^   png_uint_16 blue;$/;"	m	struct:png_sPLT_entry_struct
bmode	src/drivers/berniw/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	src/drivers/berniw2/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	src/drivers/berniw3/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	src/drivers/inferno/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	src/drivers/lliaw/mycar.h	/^		int bmode;$/;"	m	class:MyCar
bmode	src/drivers/tita/mycar.h	/^		int bmode;$/;"	m	class:MyCar
board	src/modules/graphic/ssggraph/grscreen.h	/^		class cGrBoard *board;					\/\/ The board.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrBoard
boardCam	src/modules/graphic/ssggraph/grscreen.h	/^		class cGrOrthoCamera *boardCam;			\/\/ The board camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrOrthoCamera
boardFlag	src/modules/graphic/ssggraph/grboard.h	/^    int	boardFlag;$/;"	m	class:cGrBoard
bodyVel	src/modules/simu/simuv2/wheel.h	/^    t3Dd	bodyVel;	\/* world related *\/$/;"	m	struct:__anon21
bonnetPos	export/include/car.h	/^    t3Dd	bonnetPos;		\/**< Bonnet's position *\/$/;"	m	struct:__anon197
bonnetPos	src/interfaces/car.h	/^    t3Dd	bonnetPos;		\/**< Bonnet's position *\/$/;"	m	struct:__anon157
bool	src/windows/include/plib/ul.h	/^typedef int bool ;$/;"	t
bool	src/windows/include/ul.h	/^typedef int bool ;$/;"	t
borderHeight	src/modules/track/track3.cpp	/^static tdble borderHeight[2];$/;"	v	file:
borderHeight	src/modules/track/track4.cpp	/^static tdble borderHeight[2];$/;"	v	file:
borderMaterial	src/modules/track/track3.cpp	/^static char *borderMaterial[2];$/;"	v	file:
borderMaterial	src/modules/track/track4.cpp	/^static char *borderMaterial[2];$/;"	v	file:
borderStyle	src/modules/track/track3.cpp	/^static int borderStyle[2];$/;"	v	file:
borderStyle	src/modules/track/track4.cpp	/^static int borderStyle[2];$/;"	v	file:
borderSurface	src/modules/track/track3.cpp	/^static tTrackSurface *borderSurface[2];$/;"	v	file:
borderSurface	src/modules/track/track4.cpp	/^static tTrackSurface *borderSurface[2];$/;"	v	file:
borderWidth	src/modules/track/track3.cpp	/^static tdble borderWidth[2];$/;"	v	file:
borderWidth	src/modules/track/track4.cpp	/^static tdble borderWidth[2];$/;"	v	file:
bot	src/windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
bot	src/windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
botSpd	export/include/raceman.h	/^    tdble	botSpd;$/;"	m	struct:__anon208
botSpd	src/interfaces/raceman.h	/^    tdble	botSpd;$/;"	m	struct:__anon167
botdesc	src/drivers/berniw/berniw.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	src/drivers/berniw2/berniw2.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	src/drivers/berniw3/berniw3.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	src/drivers/bt/bt.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	v	file:
botdesc	src/drivers/damned/damned.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	v	file:
botdesc	src/drivers/inferno/inferno.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	src/drivers/inferno2/inferno2.cpp	/^static const char* botdesc[10] = {"For Laurence", "For Laurence", "For Laurence", "For Laurence", "For Laurence",$/;"	v	file:
botdesc	src/drivers/lliaw/lliaw.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botdesc	src/drivers/olethros/olethros.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	m	namespace:olethros	file:
botdesc	src/drivers/sparkle/sparkle.cpp	/^static const char* botdesc[NBBOTS] = {$/;"	v	file:
botdesc	src/drivers/tita/tita.cpp	/^static const char* botdesc[BOTS] = {$/;"	v	file:
botname	src/drivers/berniw/berniw.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	src/drivers/berniw2/berniw2.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	src/drivers/berniw3/berniw3.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	src/drivers/bt/bt.cpp	/^static const char* botname[NBBOTS] = {$/;"	v	file:
botname	src/drivers/damned/damned.cpp	/^static const char* botname[NBBOTS] = {$/;"	v	file:
botname	src/drivers/inferno/inferno.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	src/drivers/inferno2/inferno2.cpp	/^static const char* botname[10] = {"InfHist 1", "InfHist 2", "InfHist 3", "InfHist 4", "InfHist 5",$/;"	v	file:
botname	src/drivers/lliaw/lliaw.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
botname	src/drivers/olethros/olethros.cpp	/^static const char* botname[NBBOTS] = {$/;"	m	namespace:olethros	file:
botname	src/drivers/sparkle/sparkle.cpp	/^static const char* botname[NBBOTS] = {$/;"	v	file:
botname	src/drivers/tita/tita.cpp	/^static const char* botname[BOTS] = {$/;"	v	file:
bottom	src/modules/graphic/ssggraph/grcam.h	/^    float bottom;$/;"	m	class:cGrOrthoCamera
bottomRadius	src/modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Scalar bottomRadius;$/;"	m	class:Cone
bottom_crash	src/modules/graphic/ssggraph/CarSoundData.h	/^	bool bottom_crash;$/;"	m	class:CarSoundData
bottom_crash_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* bottom_crash_sound; \/\/\/< bang when crashing from a great height$/;"	m	class:SoundInterface
bounce	src/windows/include/plib/sg.h	/^  void bounce ( sgVec3 normal, float coefRestitution )$/;"	f	class:sgParticle
bound	src/tools/trackgen/easymesh.h	/^    int bound;$/;"	m	struct:seg
bowyer	src/tools/trackgen/easymesh.cpp	/^void bowyer(int n, int spac)$/;"	f
bpp	src/modules/graphic/ssggraph/grloadsgi.h	/^		char           bpp ;$/;"	m	class:ssgSGIHeader
bps	src/windows/include/plib/sl.h	/^  int    bps    ;$/;"	m	class:slSample
bps	src/windows/include/plib/sl.h	/^  int bps ;$/;"	m	class:slDSP
br	src/tools/trackgen/objects.cpp	/^    ssgBranch	*br;$/;"	m	struct:group	file:
brake	src/drivers/olethros/learn.h	/^	float brake; \/\/\/< brake input$/;"	m	class:olethros::SegLearn
brake	src/modules/simu/simuv2/wheel.h	/^    tBrake       brake;		\/* associated brake disk *\/$/;"	m	struct:__anon21
brakeCmd	export/include/car.h	/^    tdble	brakeCmd;   \/**< Brake command [0.0, 1.0] *\/$/;"	m	struct:__anon202
brakeCmd	src/interfaces/car.h	/^    tdble	brakeCmd;   \/**< Brake command [0.0, 1.0] *\/$/;"	m	struct:__anon162
brakeCoeff	src/modules/simu/simuv2/engine.h	/^    tdble		brakeCoeff;$/;"	m	struct:__anon12
brakeDiskRadius	export/include/car.h	/^    tdble	brakeDiskRadius; \/**< Brake disk radius *\/$/;"	m	struct:__anon195
brakeDiskRadius	src/interfaces/car.h	/^    tdble	brakeDiskRadius; \/**< Brake disk radius *\/$/;"	m	struct:__anon155
brakeForCollision	src/drivers/olethros/opponent.h	/^		void brakeForCollision () { brake_overtake_filter = 1.0; }$/;"	f	class:olethros::Opponent
brakeState	src/modules/graphic/ssggraph/grcar.cpp	/^static ssgSimpleState *brakeState = NULL;$/;"	v	file:
brakeTemp	export/include/car.h	/^    tdble	brakeTemp;	\/**< brake temperature from 0 (cool) to 1.0 (hot) *\/$/;"	m	struct:__anon200
brakeTemp	src/interfaces/car.h	/^    tdble	brakeTemp;	\/**< brake temperature from 0 (cool) to 1.0 (hot) *\/$/;"	m	struct:__anon160
brake_overtake_filter	src/drivers/olethros/opponent.h	/^		float brake_overtake_filter; \/\/\/< Check to see.$/;"	m	class:olethros::Opponent
brakedist	src/drivers/berniw/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon119
brakedist	src/drivers/berniw2/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon94
brakedist	src/drivers/berniw3/pathfinder.h	/^	double brakedist;		\/* distance needed for braking to the speed of this car *\/$/;"	m	struct:__anon110
brakedist	src/drivers/bt/driver.cpp	/^float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:Driver
brakedist	src/drivers/damned/driver.cpp	/^float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:Driver
brakedist	src/drivers/inferno/pathfinder.h	/^	double brakedist;		\/\/ distance needed for braking to the speed of this car.$/;"	m	struct:__anon136
brakedist	src/drivers/lliaw/pathfinder.h	/^	double brakedist;		\/\/ distance needed for braking to the speed of this car.$/;"	m	struct:__anon129
brakedist	src/drivers/olethros/driver.cpp	/^    float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:olethros::Driver
brakedist	src/drivers/sparkle/driver.cpp	/^float Driver::brakedist(float allowedspeed, float mu)$/;"	f	class:Driver
brakedist	src/drivers/tita/pathfinder.h	/^	double brakedist;		\/\/ distance needed for braking to the speed of this car.$/;"	m	struct:__anon102
branch	src/tools/texmapper/maintexmapper.cpp	/^    ssgTransform	*branch;$/;"	m	struct:Face	file:
branch	src/tools/trackgen/relief.cpp	/^    ssgBranch	*branch;$/;"	m	struct:Line	file:
breaklight1	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*breaklight1 = NULL;$/;"	v
breaklight2	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*breaklight2 = NULL;$/;"	v
brkColor	src/modules/graphic/ssggraph/grcar.h	/^    ssgColourArray	*brkColor[4];$/;"	m	struct:__anon5
brkSyst	src/modules/simu/simuv2/carstruct.h	/^    tBrakeSyst		brkSyst;$/;"	m	struct:__anon18
brkTq	src/modules/simu/simuv2/differential.h	/^    tdble	brkTq;$/;"	m	struct:__anon19
bsphere	src/windows/include/plib/ssg.h	/^  sgSphere bsphere ;$/;"	m	class:ssgEntity
bsphere_is_invalid	src/windows/include/plib/ssg.h	/^  int bsphere_is_invalid ;$/;"	m	class:ssgEntity
bt	src/drivers/bt/bt.cpp	/^extern "C" int bt(tModInfo *modInfo)$/;"	f
buf	src/drivers/human/human.cpp	/^static char	buf[1024];$/;"	v	file:
buf	src/libs/client/splash.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/confscreens/controlconfig.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/confscreens/driverconfig.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/confscreens/graphconfig.cpp	/^static char	buf[1024];$/;"	v	file:
buf	src/libs/confscreens/joystickconfig.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/raceengineclient/raceengine.cpp	/^static char	buf[1024];$/;"	v	file:
buf	src/libs/raceengineclient/raceinit.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/raceengineclient/racemain.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/raceengineclient/racemanmenu.cpp	/^static char		buf[1024];$/;"	v	file:
buf	src/libs/raceengineclient/raceresults.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/racescreens/driverselect.cpp	/^static char		buf[256];    $/;"	v	file:
buf	src/libs/racescreens/racemenu.cpp	/^static char		buf[256];$/;"	v	file:
buf	src/libs/racescreens/trackselect.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/tgfclient/gui.cpp	/^static		char buf[1024];$/;"	v	file:
buf	src/libs/tgfclient/guifont.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/tgfclient/img.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/libs/tgfclient/screen.cpp	/^static char 	buf[1024];$/;"	v	file:
buf	src/libs/txml/xmlparse.c	/^  char *buf;$/;"	m	struct:tag	file:
buf	src/misc/png2jpg/png2jpg.c	/^static char buf[1024];$/;"	v	file:
buf	src/modules/graphic/ssggraph/grmain.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/modules/graphic/ssggraph/grscene.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/modules/graphic/ssggraph/grscreen.cpp	/^static char buf[1024];$/;"	v	file:
buf	src/tools/trackgen/easymesh.cpp	/^static char	buf[1024];$/;"	v	file:
buf	src/tools/trackgen/maintrackgen.cpp	/^static char	buf[1024];$/;"	v	file:
buf	src/tools/trackgen/objects.cpp	/^static char		buf[1024];$/;"	v	file:
buf	src/windows/include/plib/sl.h	/^  char           *buf  ;          \/\/ buffer containing sound data$/;"	m	class:slDSP
buf2	src/tools/trackgen/maintrackgen.cpp	/^static char	buf2[1024];$/;"	v	file:
bufEnd	src/libs/txml/xmlparse.c	/^  char *bufEnd;$/;"	m	struct:tag	file:
buff_info	src/windows/include/plib/sl.h	/^  audio_buf_info buff_info ;$/;"	m	class:slDSP
buffer	src/libs/txml/xmlparse.c	/^  char *buffer;$/;"	m	struct:__anon82	file:
buffer	src/libs/txml/xmlparse.c	286;"	d	file:
buffer	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALuint buffer; \/\/\/< buffer id$/;"	m	class:OpenalTorcsSound
buffer	src/windows/include/plib/sl.h	/^  Uchar *buffer ;$/;"	m	class:slSample
bufferEnd	src/libs/txml/xmlparse.c	/^  char *bufferEnd;$/;"	m	struct:__anon82	file:
bufferEnd	src/libs/txml/xmlparse.c	288;"	d	file:
bufferLim	src/libs/txml/xmlparse.c	/^  const char *bufferLim;$/;"	m	struct:__anon82	file:
bufferLim	src/libs/txml/xmlparse.c	291;"	d	file:
bufferPos	src/windows/include/plib/sl.h	/^  Uchar         *bufferPos       ;  \/* Sample frame to replay next *\/$/;"	m	class:slSamplePlayer
bufferPtr	src/libs/txml/xmlparse.c	/^  const char *bufferPtr;$/;"	m	struct:__anon82	file:
bufferPtr	src/libs/txml/xmlparse.c	287;"	d	file:
buffer_size	src/windows/include/png.h	/^   png_size_t buffer_size;           \/* total amount of available input data *\/$/;"	m	struct:png_struct_def
bufstr	src/libs/tgf/tgf.cpp	/^static char bufstr[1024];$/;"	v	file:
build	setup_win32-data-from-CVS_generic.bat	/^:build$/;"	l
build	setup_win32_generic.bat	/^:build$/;"	l
buildWalls	src/modules/simu/simuv2/collide.cpp	/^void buildWalls(tTrackSeg *start, int side) {$/;"	f
bump	src/modules/simu/simuv2/susp.h	/^    tDamperDef bump;$/;"	m	struct:__anon16
bump	src/tools/trackgen/maintrackgen.cpp	/^int	bump = 0;$/;"	v
bumpLeafCount	src/windows/include/plib/ssg.h	/^  void bumpLeafCount   ( int i ) {   leaf_count += i ; }$/;"	f	class:ssgStatistics
bumpVertexCount	src/windows/include/plib/ssg.h	/^  void bumpVertexCount ( int i ) { vertex_count += i ; }$/;"	f	class:ssgStatistics
button	export/include/tgfclient.h	/^    int		button[3];	\/**< Button state (1 = up) *\/$/;"	m	struct:__anon214
button	export/include/tgfclient.h	/^    int	button[3];$/;"	m	struct:MouseInfo
button	src/libs/tgfclient/gui.h	/^	tGfuiButton	button;$/;"	m	union:GfuiObject::__anon67
button	src/libs/tgfclient/tgfclient.h	/^    int		button[3];	\/**< Button state (1 = up) *\/$/;"	m	struct:__anon58
button	src/libs/tgfclient/tgfclient.h	/^    int	button[3];$/;"	m	struct:MouseInfo
buttonType	src/libs/tgfclient/gui.h	/^    int			buttonType;$/;"	m	struct:__anon61
buttonType	src/libs/tgfclient/gui.h	/^    int			buttonType;$/;"	m	struct:__anon62
buttons	export/include/js.h	/^         int buttons ;$/;"	m	struct:JS_DATA_TYPE
buttons	src/interfaces/js.h	/^         int buttons ;$/;"	m	struct:JS_DATA_TYPE
bytesPerSample	src/windows/include/plib/sl.h	/^  float          bytesPerSample ; \/\/ conversions$/;"	m	class:slDSP
bytesPerSecond	src/windows/include/plib/sl.h	/^  float          bytesPerSecond ;$/;"	m	class:slDSP
c	export/include/learning/ANN.h	/^	Connection* c; \/\/\/< connections$/;"	m	struct:Layer_
c	export/include/learning/ANN.h	/^	LIST* c; \/\/\/< connection layers$/;"	m	struct:ANN_
c	export/include/learning/ANN.h	/^	int c; \/\/\/< connected?$/;"	m	struct:Connection_
c	export/include/learning/string_utils.h	/^     char* c; \/\/\/<This is the buffer.$/;"	m	struct:StringBuffer_
c	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
c	src/drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon125
c	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
c	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon100
c	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
c	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon116
c	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
c	src/drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon141
c	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
c	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon134
c	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
c	src/drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon107
c	src/libs/learning/ANN.h	/^	Connection* c; \/\/\/< connections$/;"	m	struct:Layer_
c	src/libs/learning/ANN.h	/^	LIST* c; \/\/\/< connection layers$/;"	m	struct:ANN_
c	src/libs/learning/ANN.h	/^	int c; \/\/\/< connected?$/;"	m	struct:Connection_
c	src/libs/learning/string_utils.h	/^     char* c; \/\/\/<This is the buffer.$/;"	m	struct:StringBuffer_
c	src/tools/trackgen/easymesh.cpp	/^    int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
c0	src/windows/include/plib/ssgaLensFlare.h	/^  ssgColourArray   *c0 ;$/;"	m	class:ssgaLensFlare
c0_1	doc/faq/faq.html	/^		<h3><a name="c0_1">0.1 License and copyright.<\/a><\/h3>$/;"	a
c0_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c0_1">0.1 License and copyright.<\/a><\/h3>$/;"	a
c0_2	doc/faq/faq.html	/^		<h3><a name="c0_2">0.2 Document version.<\/a><\/h3>$/;"	a
c0_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c0_2">0.2 Document version.<\/a><\/h3>$/;"	a
c1_1	doc/faq/faq.html	/^		<h3><a name="c1_1">1.1 What is TORCS?<\/a><\/h3>$/;"	a
c1_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_1">1.1 What is TORCS?<\/a><\/h3>$/;"	a
c1_10	doc/faq/faq.html	/^		<h3><a name="c1_10">1.10 Should I start my own racing sim project?<\/a><\/h3>$/;"	a
c1_10	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_10">1.10 Should I start my own racing sim project?<\/a><\/h3>$/;"	a
c1_2	doc/faq/faq.html	/^		<h3><a name="c1_2">1.2 Who develops TORCS?<\/a><\/h3>$/;"	a
c1_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_2">1.2 Who develops TORCS?<\/a><\/h3>$/;"	a
c1_3	doc/faq/faq.html	/^		<h3><a name="c1_3">1.3 Is documentation available?<\/a><\/h3>$/;"	a
c1_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_3">1.3 Is documentation available?<\/a><\/h3>$/;"	a
c1_4	doc/faq/faq.html	/^		<h3><a name="c1_4">1.4 Which features has TORCS?<\/a><\/h3>$/;"	a
c1_4	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_4">1.4 Which features has TORCS?<\/a><\/h3>$/;"	a
c1_5	doc/faq/faq.html	/^		<h3><a name="c1_5">1.5 What are the future plans?<\/a><\/h3>$/;"	a
c1_5	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_5">1.5 What are the future plans?<\/a><\/h3>$/;"	a
c1_6	doc/faq/faq.html	/^		<h3><a name="c1_6">1.6 Why do you not...?<\/a><\/h3>$/;"	a
c1_6	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_6">1.6 Why do you not...?<\/a><\/h3>$/;"	a
c1_7	doc/faq/faq.html	/^		<h3><a name="c1_7">1.7 What do you mean with robot?<\/a><\/h3>$/;"	a
c1_7	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_7">1.7 What do you mean with robot?<\/a><\/h3>$/;"	a
c1_8	doc/faq/faq.html	/^		<h3><a name="c1_8">1.8 Why do you not replace GLUT with SDL?<\/a><\/h3>$/;"	a
c1_8	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_8">1.8 Why do you not replace GLUT with SDL?<\/a><\/h3>$/;"	a
c1_9	doc/faq/faq.html	/^		<h3><a name="c1_9">1.9 Are there official championships?<\/a><\/h3>$/;"	a
c1_9	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c1_9">1.9 Are there official championships?<\/a><\/h3>$/;"	a
c2_1	doc/faq/faq.html	/^		<h3><a name="c2_1">2.1 On which operating systems runs TORCS?<\/a><\/h3>$/;"	a
c2_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c2_1">2.1 On which operating systems runs TORCS?<\/a><\/h3>$/;"	a
c2_2	doc/faq/faq.html	/^		<h3><a name="c2_2">2.2 What are the hardware requirements?<\/a><\/h3>$/;"	a
c2_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c2_2">2.2 What are the hardware requirements?<\/a><\/h3>$/;"	a
c2_2_1	doc/faq/faq.html	/^		<h4><a name="c2_2_1">2.2.1 Robot development.<\/a><\/h4>$/;"	a
c2_2_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c2_2_1">2.2.1 Robot development.<\/a><\/h4>$/;"	a
c2_2_2	doc/faq/faq.html	/^		<h4><a name="c2_2_2">2.2.2 Driving yourself.<\/a><\/h4>$/;"	a
c2_2_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c2_2_2">2.2.2 Driving yourself.<\/a><\/h4>$/;"	a
c2_3	doc/faq/faq.html	/^		<h3><a name="c2_3">2.3 What are the software requirements?<\/a><\/h3>$/;"	a
c2_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c2_3">2.3 What are the software requirements?<\/a><\/h3>$/;"	a
c3_1	doc/faq/faq.html	/^		<h3><a name="c3_1">3.1 How do I install TORCS?<\/a><\/h3>$/;"	a
c3_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c3_1">3.1 How do I install TORCS?<\/a><\/h3>$/;"	a
c4_1	doc/faq/faq.html	/^		<h3><a name="c4_1">4.1 General problem solving approach.<\/a><\/h3>$/;"	a
c4_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c4_1">4.1 General problem solving approach.<\/a><\/h3>$/;"	a
c4_2	doc/faq/faq.html	/^		<h3><a name="c4_2">4.2 Build Problems.<\/a><\/h3>$/;"	a
c4_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c4_2">4.2 Build Problems.<\/a><\/h3>$/;"	a
c4_2_1	doc/faq/faq.html	/^		<h4><a name="c4_2_1">4.2.1 .\/configure reports "configure: error: Can't find GL\/glut.h".<\/a><\/h4>$/;"	a
c4_2_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_1">4.2.1 .\/configure reports "configure: error: Can't find GL\/glut.h".<\/a><\/h4>$/;"	a
c4_2_2	doc/faq/faq.html	/^		<h4><a name="c4_2_2">4.2.2 .\/configure reports "configure: error: Can't find plib\/ssg.h" or "plib\/ul.h".<\/a><\/h4>$/;"	a
c4_2_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_2">4.2.2 .\/configure reports "configure: error: Can't find plib\/ssg.h" or "plib\/ul.h".<\/a><\/h4>$/;"	a
c4_2_3	doc/faq/faq.html	/^		<h4><a name="c4_2_3">4.2.3 TORCS does not compile on Windows.<\/a><\/h4>$/;"	a
c4_2_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_3">4.2.3 TORCS does not compile on Windows.<\/a><\/h4>$/;"	a
c4_2_4	doc/faq/faq.html	/^		<h4><a name="c4_2_4">4.2.4 FreeGLUT compilation fails with NVidia OpenGL driver.<\/a><\/h4>$/;"	a
c4_2_4	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_4">4.2.4 FreeGLUT compilation fails with NVidia OpenGL driver.<\/a><\/h4>$/;"	a
c4_2_5	doc/faq/faq.html	/^		<h4><a name="c4_2_5">4.2.5 TORCS does not compile with make: 'Make-config' is up to date.<\/a><\/h4>$/;"	a
c4_2_5	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_5">4.2.5 TORCS does not compile with make: 'Make-config' is up to date.<\/a><\/h4>$/;"	a
c4_2_6	doc/faq/faq.html	/^		<h4><a name="c4_2_6">4.2.6 Compiling stops with "error: `GL_TEXTURE0_ARB' undeclared".<\/a><\/h4>$/;"	a
c4_2_6	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_6">4.2.6 Compiling stops with "error: `GL_TEXTURE0_ARB' undeclared".<\/a><\/h4>$/;"	a
c4_2_7	doc/faq/faq.html	/^		<h4><a name="c4_2_7">4.2.7 Compiling fails with "The syntax of$/;"	a
c4_2_7	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_2_7">4.2.7 Compiling fails with "The syntax of$/;"	a
c4_2_8	doc/faq/faq.html	/^		<h4><a name="c4_2_8">4.2.8 .\/configure fails in "checking for sin in -lm" on Gentoo.<\/a><\/h4>$/;"	a
c4_3	doc/faq/faq.html	/^		<h3><a name="c4_3">4.3 Startup and Runtime Problems.<\/a><\/h3>$/;"	a
c4_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c4_3">4.3 Startup and Runtime Problems.<\/a><\/h3>$/;"	a
c4_3_1	doc/faq/faq.html	/^		<h4><a name="c4_3_1">4.3.1 Broken OpenGL\/DRI drivers or '~' file.<\/a><\/h4>$/;"	a
c4_3_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_1">4.3.1 Broken OpenGL\/DRI drivers or '~' file.<\/a><\/h4>$/;"	a
c4_3_10	doc/faq/faq.html	/^		<h4><a name="c4_3_10">4.3.10 The cars are flickering.<\/a><\/h4>$/;"	a
c4_3_10	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_10">4.3.10 The cars are flickering.<\/a><\/h4>$/;"	a
c4_3_11	doc/faq/faq.html	/^		<h4><a name="c4_3_11">4.3.11 I use ALSA and TORCS does not start up.<\/a><\/h4>$/;"	a
c4_3_11	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_11">4.3.11 I use ALSA and TORCS does not start up.<\/a><\/h4>$/;"	a
c4_3_12	doc/faq/faq.html	/^		<h4><a name="c4_3_12">4.3.12 TORCS does not start up and complains about display requirements.<\/a><\/h4>$/;"	a
c4_3_12	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_12">4.3.12 TORCS does not start up and complains about display requirements.<\/a><\/h4>$/;"	a
c4_3_13	doc/faq/faq.html	/^		<h4><a name="c4_3_13">4.3.13 The racetrack mini map is just a blue square.<\/a><\/h4>$/;"	a
c4_3_13	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_13">4.3.13 The racetrack mini map is just a blue square.<\/a><\/h4>$/;"	a
c4_3_14	doc/faq/faq.html	/^		<h4><a name="c4_3_14">4.3.14 TORCS runs but without textures.<\/a><\/h4>$/;"	a
c4_3_14	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_14">4.3.14 TORCS runs but without textures.<\/a><\/h4>$/;"	a
c4_3_15	doc/faq/faq.html	/^		<h4><a name="c4_3_15">4.3.15 TORCS on Windows crashes after "new race".<\/a><\/h4>$/;"	a
c4_3_15	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_15">4.3.15 TORCS on Windows crashes after "new race".<\/a><\/h4>$/;"	a
c4_3_2	doc/faq/faq.html	/^		<h4><a name="c4_3_2">4.3.2 Multiple GLU libraries.<\/a><\/h4>$/;"	a
c4_3_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_2">4.3.2 Multiple GLU libraries.<\/a><\/h4>$/;"	a
c4_3_3	doc/faq/faq.html	/^		<h4><a name="c4_3_3">4.3.3 Not removed old TORCS version.<\/a><\/h4>$/;"	a
c4_3_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_3">4.3.3 Not removed old TORCS version.<\/a><\/h4>$/;"	a
c4_3_4	doc/faq/faq.html	/^		<h4><a name="c4_3_4">4.3.4 TORCS reports missing files and crashes.<\/a><\/h4>$/;"	a
c4_3_4	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_4">4.3.4 TORCS reports missing files and crashes.<\/a><\/h4>$/;"	a
c4_3_5	doc/faq/faq.html	/^		<h4><a name="c4_3_5">4.3.5 My screen resolution is not supported.<\/a><\/h4>$/;"	a
c4_3_5	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_5">4.3.5 My screen resolution is not supported.<\/a><\/h4>$/;"	a
c4_3_6	doc/faq/faq.html	/^		<h4><a name="c4_3_6">4.3.6 I have a problem with the fullscreen mode.<\/a><\/h4>$/;"	a
c4_3_6	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_6">4.3.6 I have a problem with the fullscreen mode.<\/a><\/h4>$/;"	a
c4_3_7	doc/faq/faq.html	/^		<h4><a name="c4_3_7">4.3.7 TORCS graphics is slow and it crashes on "READY!"<\/a><\/h4>$/;"	a
c4_3_7	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_7">4.3.7 TORCS graphics is slow and it crashes on "READY!"<\/a><\/h4>$/;"	a
c4_3_8	doc/faq/faq.html	/^		<h4><a name="c4_3_8">4.3.8 TORCS on Windows hangs after &quot;READY!&quot;<\/a><\/h4>$/;"	a
c4_3_8	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_8">4.3.8 TORCS on Windows hangs after &quot;READY!&quot;<\/a><\/h4>$/;"	a
c4_3_9	doc/faq/faq.html	/^		<h4><a name="c4_3_9">4.3.9 TORCS does not start and reports slDSP:.<\/a><\/h4>$/;"	a
c4_3_9	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_3_9">4.3.9 TORCS does not start and reports slDSP:.<\/a><\/h4>$/;"	a
c4_4	doc/faq/faq.html	/^		<h3><a name="c4_4">4.4 Other Problems.<\/a><\/h3>$/;"	a
c4_4	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c4_4">4.4 Other Problems.<\/a><\/h3>$/;"	a
c4_4_1	doc/faq/faq.html	/^		<h4><a name="c4_4_1">4.4.1 How do I capture a movie?<\/a><\/h4>$/;"	a
c4_4_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_4_1">4.4.1 How do I capture a movie?<\/a><\/h4>$/;"	a
c4_4_2	doc/faq/faq.html	/^		<h4><a name="c4_4_2">4.4.2 Can I develop a robot using Windows?<\/a><\/h4>$/;"	a
c4_4_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_4_2">4.4.2 Can I develop a robot using Windows?<\/a><\/h4>$/;"	a
c4_4_3	doc/faq/faq.html	/^		<h4><a name="c4_4_3">4.4.3 Is my joystick\/steering wheel\/gamepad supported?<\/a><\/h4>$/;"	a
c4_4_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_4_3">4.4.3 Is my joystick\/steering wheel\/gamepad supported?<\/a><\/h4>$/;"	a
c4_4_4	doc/faq/faq.html	/^		<h4><a name="c4_4_4">4.4.4 How do I set up a multiplayer game?<\/a><\/h4>$/;"	a
c4_4_4	doc/tutorials/robot/torcs/faq/faq.html	/^		<h4><a name="c4_4_4">4.4.4 How do I set up a multiplayer game?<\/a><\/h4>$/;"	a
c4_4_5	doc/faq/faq.html	/^		<h4><a name="c4_4_5">4.4.5 I cannot adjust the joystick\/wheel centering.<\/a><\/h4>$/;"	a
c5_1	doc/faq/faq.html	/^		<h3><a name="c5_1">5.1 When do I report a problem?<\/a><\/h3>$/;"	a
c5_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c5_1">5.1 When do I report a problem?<\/a><\/h3>$/;"	a
c5_2	doc/faq/faq.html	/^		<h3><a name="c5_2">5.2 How and where do I report a problem?<\/a><\/h3>$/;"	a
c5_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c5_2">5.2 How and where do I report a problem?<\/a><\/h3>$/;"	a
c6_1	doc/faq/faq.html	/^		<h3><a name="c6_1">6.1 TORCS.<\/a><\/h3>$/;"	a
c6_1	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c6_1">6.1 TORCS.<\/a><\/h3>$/;"	a
c6_2	doc/faq/faq.html	/^		<h3><a name="c6_2">6.2 Libraries and Drivers.<\/a><\/h3>$/;"	a
c6_2	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c6_2">6.2 Libraries and Drivers.<\/a><\/h3>$/;"	a
c6_3	doc/faq/faq.html	/^		<h3><a name="c6_3">6.3 Other.<\/a><\/h3>$/;"	a
c6_3	doc/tutorials/robot/torcs/faq/faq.html	/^		<h3><a name="c6_3">6.3 Other.<\/a><\/h3>$/;"	a
cGrBackgroundCam	src/modules/graphic/ssggraph/grcam.h	/^    cGrBackgroundCam(class cGrScreen *myscreen)$/;"	f	class:cGrBackgroundCam
cGrBackgroundCam	src/modules/graphic/ssggraph/grcam.h	/^class cGrBackgroundCam : public cGrPerspCamera$/;"	c
cGrBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::cGrBoard (int myid) {$/;"	f	class:cGrBoard
cGrBoard	src/modules/graphic/ssggraph/grboard.h	/^class cGrBoard$/;"	c
cGrCamera	src/modules/graphic/ssggraph/grcam.h	/^    cGrCamera(class cGrScreen *myscreen, int myid = 0, int mydrawCurrent = 0, int mydrawdrv = 0, int mydrawBackground = 0, int mymirrorAllowed = 0) {$/;"	f	class:cGrCamera
cGrCamera	src/modules/graphic/ssggraph/grcam.h	/^class cGrCamera $/;"	c
cGrCarCamBehind	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamBehind(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamBehind
cGrCarCamBehind	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamBehind : public cGrPerspCamera$/;"	c	file:
cGrCarCamBehind2	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamBehind2(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamBehind2
cGrCarCamBehind2	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamBehind2 : public cGrPerspCamera$/;"	c	file:
cGrCarCamCenter	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamCenter(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamCenter
cGrCarCamCenter	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamCenter : public cGrPerspCamera$/;"	c	file:
cGrCarCamFront	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamFront(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamFront
cGrCarCamFront	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamFront : public cGrPerspCamera$/;"	c	file:
cGrCarCamInside	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamInside(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamInside
cGrCarCamInside	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamInside : public cGrPerspCamera$/;"	c	file:
cGrCarCamInsideFixedCar	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamInsideFixedCar(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamInsideFixedCar
cGrCarCamInsideFixedCar	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamInsideFixedCar : public cGrPerspCamera$/;"	c	file:
cGrCarCamLookAt	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamLookAt(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamLookAt
cGrCarCamLookAt	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamLookAt : public cGrPerspCamera$/;"	c	file:
cGrCarCamMirror	src/modules/graphic/ssggraph/grcam.h	/^    cGrCarCamMirror(cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamMirror
cGrCarCamMirror	src/modules/graphic/ssggraph/grcam.h	/^class cGrCarCamMirror : public cGrPerspCamera$/;"	c
cGrCarCamRoadFly	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadFly(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadFly
cGrCarCamRoadFly	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadFly : public cGrPerspCamera$/;"	c	file:
cGrCarCamRoadNoZoom	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadNoZoom(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadNoZoom
cGrCarCamRoadNoZoom	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadNoZoom : public cGrPerspCamera$/;"	c	file:
cGrCarCamRoadZoom	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadZoom(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadZoom
cGrCarCamRoadZoom	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadZoom : public cGrPerspCamera$/;"	c	file:
cGrCarCamRoadZoomTVD	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamRoadZoomTVD(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamRoadZoomTVD
cGrCarCamRoadZoomTVD	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamRoadZoomTVD : public cGrCarCamRoadZoom$/;"	c	file:
cGrCarCamSide	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamSide(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamSide
cGrCarCamSide	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamSide : public cGrPerspCamera$/;"	c	file:
cGrCarCamUp	src/modules/graphic/ssggraph/grcam.cpp	/^    cGrCarCamUp(class cGrScreen *myscreen, int id, int drawCurr, int drawBG,$/;"	f	class:cGrCarCamUp
cGrCarCamUp	src/modules/graphic/ssggraph/grcam.cpp	/^class cGrCarCamUp : public cGrPerspCamera$/;"	c	file:
cGrOrthoCamera	src/modules/graphic/ssggraph/grcam.h	/^    cGrOrthoCamera(class cGrScreen *myscreen, float myleft, float myright, float mybottom, float mytop)$/;"	f	class:cGrOrthoCamera
cGrOrthoCamera	src/modules/graphic/ssggraph/grcam.h	/^class cGrOrthoCamera : public cGrCamera$/;"	c
cGrPerspCamera	src/modules/graphic/ssggraph/grcam.cpp	/^cGrPerspCamera::cGrPerspCamera(class cGrScreen *myscreen, int id, int drawCurr, int drawDrv, int drawBG, int mirrorAllowed,$/;"	f	class:cGrPerspCamera
cGrPerspCamera	src/modules/graphic/ssggraph/grcam.h	/^class cGrPerspCamera : public cGrCamera$/;"	c
cGrScreen	src/modules/graphic/ssggraph/grscreen.cpp	/^cGrScreen::cGrScreen(int myid)$/;"	f	class:cGrScreen
cGrScreen	src/modules/graphic/ssggraph/grscreen.h	/^class cGrScreen {$/;"	c
cGrTrackMap	src/modules/graphic/ssggraph/grtrackmap.cpp	/^cGrTrackMap::cGrTrackMap()$/;"	f	class:cGrTrackMap
cGrTrackMap	src/modules/graphic/ssggraph/grtrackmap.h	/^class cGrTrackMap$/;"	c
c_index	src/windows/include/plib/ssg.h	/^  sgVec4 *colours   ; int num_colours   ; unsigned short *c_index ;$/;"	m	class:ssgVTable
ca	src/drivers/berniw/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	src/drivers/berniw2/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	src/drivers/berniw3/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	src/drivers/inferno/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	src/drivers/lliaw/mycar.h	/^		double ca;$/;"	m	class:MyCar
ca	src/drivers/tita/mycar.h	/^		double ca;$/;"	m	class:MyCar
cache	export/include/learning/Distribution.h	/^	bool cache;$/;"	m	class:NormalDistribution
cache	src/libs/learning/Distribution.h	/^	bool cache;$/;"	m	class:NormalDistribution
caching	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^bool caching = true;$/;"	v
calc_bbox	src/tools/texmapper/maintexmapper.cpp	/^void calc_bbox(void)$/;"	f
calc_coord	src/tools/texmapper/maintexmapper.cpp	/^void calc_coord(void)$/;"	f
calculateAttenuation	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateAttenuation (tCarElt* car)$/;"	f	class:CarSoundData
calculateBackfireSound	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateBackfireSound (tCarElt* car)$/;"	f	class:CarSoundData
calculateCollisionSound	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateCollisionSound (tCarElt* car)$/;"	f	class:CarSoundData
calculateEngineSound	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateEngineSound (tCarElt* car)$/;"	f	class:CarSoundData
calculateGearChangeSound	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateGearChangeSound (tCarElt* car) {$/;"	f	class:CarSoundData
calculateTyreSound	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::calculateTyreSound(tCarElt* car)$/;"	f	class:CarSoundData
callback	src/windows/include/plib/sl.h	/^  slCallBack     callback ;$/;"	m	class:slPlayer
callback	src/windows/include/plib/sl.h	/^  slCallBack callback ;$/;"	m	struct:slPendingCallBack
calloc	export/include/tgf.h	161;"	d
calloc	src/libs/tgf/tgf.h	161;"	d
calloc	src/libs/txml/xmldef.h	29;"	d
calls	export/include/tgf.h	/^  int calls;$/;"	m	class:ProfileInstance
calls	src/libs/tgf/tgf.h	/^  int calls;$/;"	m	class:ProfileInstance
cam	export/include/track.h	/^    tRoadCam        *cam;	\/* current camera *\/$/;"	m	struct:trackSeg
cam	src/interfaces/track.h	/^    tRoadCam        *cam;	\/* current camera *\/$/;"	m	struct:trackSeg
camChangeInterval	src/modules/graphic/ssggraph/grcam.cpp	/^    double camChangeInterval;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
camDraw	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::camDraw(tSituation *s)$/;"	f	class:cGrScreen
camEventInterval	src/modules/graphic/ssggraph/grcam.cpp	/^    double camEventInterval;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
camber	src/modules/simu/simuv2/wheel.h	/^    tdble	camber;		\/* camber, negative toward exterior on both sides *\/$/;"	m	struct:__anon21
cameraMatrix	src/windows/include/plib/ssg.h	/^  sgMat4    cameraMatrix       ;$/;"	m	class:ssgContext
cams	src/modules/graphic/ssggraph/grscreen.h	/^		tGrCamHead		cams[10];				\/\/ From F2 to F11.$/;"	m	class:cGrScreen
capped	src/windows/include/plib/ssgaShapes.h	/^  int capped ;$/;"	m	class:ssgaCylinder
car	export/include/track.h	/^	struct CarElt	*car[TR_PIT_MAXCARPERPIT];	\/**< Car links for pit *\/$/;"	m	struct:TrackOwnPit	typeref:struct:TrackOwnPit::CarElt
car	src/drivers/bt/cardata.h	/^		tCarElt *car;		\/\/ For identification.$/;"	m	class:SingleCardata
car	src/drivers/bt/driver.h	/^		tCarElt *car;			\/\/ Pointer to tCarElt struct.$/;"	m	class:Driver
car	src/drivers/bt/opponent.h	/^		tCarElt *car;$/;"	m	class:Opponent
car	src/drivers/bt/pit.h	/^		tCarElt *car;$/;"	m	class:Pit
car	src/drivers/damned/cardata.h	/^		tCarElt *car;		\/\/ For identification.$/;"	m	class:SingleCardata
car	src/drivers/damned/driver.h	/^		tCarElt *car;			\/\/ Pointer to tCarElt struct.$/;"	m	class:Driver
car	src/drivers/damned/opponent.h	/^		tCarElt *car;$/;"	m	class:Opponent
car	src/drivers/damned/pit.h	/^		tCarElt *car;$/;"	m	class:Pit
car	src/drivers/olethros/cardata.h	/^	tCarElt *car;		\/\/ For identification.$/;"	m	class:olethros::SingleCardata
car	src/drivers/olethros/driver.h	/^	tCarElt *car;			\/\/\/< Pointer to tCarElt struct.$/;"	m	class:olethros::Driver
car	src/drivers/olethros/opponent.h	/^		tCarElt *car;$/;"	m	class:olethros::Opponent
car	src/drivers/olethros/pit.h	/^		tCarElt *car;$/;"	m	class:olethros::Pit
car	src/drivers/sparkle/driver.h	/^		tCarElt *car;			\/* pointer to tCarElt struct *\/$/;"	m	class:Driver
car	src/drivers/sparkle/opponent.h	/^		tCarElt *car;$/;"	m	class:Opponent
car	src/drivers/sparkle/pit.h	/^		tCarElt *car;$/;"	m	class:Pit
car	src/interfaces/track.h	/^	struct CarElt	*car[TR_PIT_MAXCARPERPIT];	\/**< Car links for pit *\/$/;"	m	struct:TrackOwnPit	typeref:struct:TrackOwnPit::CarElt
car	src/libs/racescreens/driverselect.cpp	/^    void	*car;$/;"	m	struct:DrvElt	file:
carElt	src/modules/simu/simuv2/carstruct.h	/^    tCarElt	*carElt;$/;"	m	struct:__anon18
carEntity	src/modules/graphic/ssggraph/grcar.h	/^	ssgEntity       *carEntity;$/;"	m	struct:__anon5
carHandle	export/include/car.h	/^    void	*carHandle;	\/**< parameters for car caracteristics *\/$/;"	m	struct:__anon201
carHandle	src/interfaces/car.h	/^    void	*carHandle;	\/**< parameters for car caracteristics *\/$/;"	m	struct:__anon161
carInfo	export/include/raceman.h	/^    tReCarInfo		*carInfo;$/;"	m	struct:__anon209
carInfo	src/interfaces/raceman.h	/^    tReCarInfo		*carInfo;$/;"	m	struct:__anon168
carList	export/include/raceman.h	/^    tCarElt		*carList;	\/**< List of all the cars racing *\/$/;"	m	struct:RmInfo
carList	src/interfaces/raceman.h	/^    tCarElt		*carList;	\/**< List of all the cars racing *\/$/;"	m	struct:RmInfo
carName	export/include/car.h	/^    char	carName[MAX_NAME_LEN];	\/**< Car object name *\/$/;"	m	struct:__anon197
carName	src/interfaces/car.h	/^    char	carName[MAX_NAME_LEN];	\/**< Car object name *\/$/;"	m	struct:__anon157
carName	src/libs/raceengineclient/raceresults.cpp	/^	char	*carName;$/;"	m	struct:__anon85	file:
carPos	src/modules/graphic/ssggraph/grcar.h	/^    sgMat4		carPos;$/;"	m	struct:__anon5
carTrackRatioX	src/modules/graphic/ssggraph/grloadac.cpp	/^double carTrackRatioX=0;$/;"	v
carTrackRatioY	src/modules/graphic/ssggraph/grloadac.cpp	/^double carTrackRatioY=0;$/;"	v
carTransform	src/modules/graphic/ssggraph/grcar.h	/^    ssgTransform	*carTransform;$/;"	m	struct:__anon5
car_sound_data	src/modules/graphic/ssggraph/grsound.cpp	/^static CarSoundData** car_sound_data = NULL;$/;"	v	file:
car_src	src/modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource* car_src;$/;"	m	class:OpenalSoundInterface
car_src	src/modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource* car_src;$/;"	m	class:PlibSoundInterface
cardata	src/drivers/bt/driver.cpp	/^Cardata *Driver::cardata = NULL;$/;"	m	class:Driver	file:
cardata	src/drivers/bt/driver.h	/^		static Cardata *cardata;		\/\/ Data about all cars shared by all instances.$/;"	m	class:Driver
cardata	src/drivers/bt/opponent.h	/^		SingleCardata *cardata;		\/\/ Pointer to global data about this opponent.$/;"	m	class:Opponent
cardata	src/drivers/damned/driver.cpp	/^Cardata *Driver::cardata = NULL;$/;"	m	class:Driver	file:
cardata	src/drivers/damned/driver.h	/^		static Cardata *cardata;		\/\/ Data about all cars shared by all instances.$/;"	m	class:Driver
cardata	src/drivers/damned/opponent.h	/^		SingleCardata *cardata;		\/\/ Pointer to global data about this opponent.$/;"	m	class:Opponent
cardata	src/drivers/olethros/driver.cpp	/^    Cardata *Driver::cardata = NULL;$/;"	m	class:olethros::Driver	file:
cardata	src/drivers/olethros/driver.h	/^	static Cardata *cardata;		\/\/\/< Data about all cars shared by all instances.$/;"	m	class:olethros::Driver
cardata	src/drivers/olethros/opponent.h	/^		SingleCardata *cardata;		\/\/ Pointer to global data about this opponent.$/;"	m	class:olethros::Opponent
cardot	src/modules/graphic/ssggraph/grtrackmap.cpp	/^GLuint cGrTrackMap::cardot;$/;"	m	class:cGrTrackMap	file:
cardot	src/modules/graphic/ssggraph/grtrackmap.h	/^		static GLuint cardot;$/;"	m	class:cGrTrackMap
care_about	src/windows/include/plib/ssg.h	/^  virtual void      care_about ( int mode ) { dont_care &= ~(1<<mode) ; }$/;"	f	class:ssgSimpleState
carinfo	src/libs/confscreens/driverconfig.cpp	/^    tCarInfo	*carinfo;$/;"	m	struct:PlayerInfo	file:
carmass	src/drivers/berniw/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	src/drivers/berniw2/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	src/drivers/berniw3/mycar.h	/^		double carmass;			\/* mass of car without fuel *\/$/;"	m	class:MyCar
carmass	src/drivers/inferno/mycar.h	/^		double carmass;			\/\/ Mass of car without fuel.$/;"	m	class:MyCar
carmass	src/drivers/lliaw/mycar.h	/^		double carmass;			\/\/ Mass of car without fuel.$/;"	m	class:MyCar
carmass	src/drivers/tita/mycar.h	/^		double carmass;			\/\/ Mass of car without fuel.$/;"	m	class:MyCar
cars	export/include/raceman.h	/^    tCarElt		**cars;		\/**< list of cars *\/ $/;"	m	struct:Situation
cars	src/interfaces/raceman.h	/^    tCarElt		**cars;		\/**< list of cars *\/ $/;"	m	struct:Situation
cars	src/modules/graphic/ssggraph/grscreen.h	/^		tCarElt	**cars;			\/\/ List of cars.$/;"	m	class:cGrScreen
carsPerPit	export/include/track.h	/^	int carsPerPit;$/;"	m	struct:__anon183
carsPerPit	src/interfaces/track.h	/^	int carsPerPit;$/;"	m	struct:__anon150
cat	src/libs/confscreens/driverconfig.cpp	/^    tCatInfo		*cat;$/;"	m	struct:tCarInfo	file:
catch_me	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^void catch_me() {}$/;"	f
catchdist	src/drivers/berniw/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon119
catchdist	src/drivers/berniw2/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon94
catchdist	src/drivers/berniw3/pathfinder.h	/^	int catchdist;$/;"	m	struct:__anon110
catchdist	src/drivers/bt/opponent.h	/^		float catchdist;	\/\/ distance needed to catch the opponent (linear estimate).$/;"	m	class:Opponent
catchdist	src/drivers/damned/opponent.h	/^		float catchdist;	\/\/ distance needed to catch the opponent (linear estimate).$/;"	m	class:Opponent
catchdist	src/drivers/inferno/pathfinder.h	/^	int catchdist;			\/\/ roughly estimated distance to catch up with the opponent.$/;"	m	struct:__anon136
catchdist	src/drivers/lliaw/pathfinder.h	/^	int catchdist;			\/\/ roughly estimated distance to catch up with the opponent.$/;"	m	struct:__anon129
catchdist	src/drivers/olethros/opponent.h	/^		float catchdist;	\/\/\/< distance needed to catch the opponent (linear estimate).$/;"	m	class:olethros::Opponent
catchdist	src/drivers/sparkle/opponent.h	/^		float catchdist;	\/* distance needed to catch the opponent *\/$/;"	m	class:Opponent
catchdist	src/drivers/tita/pathfinder.h	/^	int catchdist;			\/\/ roughly estimated distance to catch up with the opponent.$/;"	m	struct:__anon102
catchsegid	src/drivers/berniw/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon119
catchsegid	src/drivers/berniw2/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon94
catchsegid	src/drivers/berniw3/pathfinder.h	/^	int catchsegid;			\/* segment, where i expect (or better guess!) to catch opponent *\/$/;"	m	struct:__anon110
catchsegid	src/drivers/inferno/pathfinder.h	/^	int catchsegid;			\/\/ segment, where i expect (or better guess!) to catch opponent.$/;"	m	struct:__anon136
catchsegid	src/drivers/lliaw/pathfinder.h	/^	int catchsegid;			\/\/ segment, where i expect (or better guess!) to catch opponent.$/;"	m	struct:__anon129
catchsegid	src/drivers/tita/pathfinder.h	/^	int catchsegid;			\/\/ segment, where i expect (or better guess!) to catch opponent.$/;"	m	struct:__anon102
category	export/include/car.h	/^    char	category[MAX_NAME_LEN];	\/**< Car's category *\/$/;"	m	struct:__anon197
category	export/include/track.h	/^    char	  *category;	\/**< Category of the track *\/$/;"	m	struct:__anon186
category	src/interfaces/car.h	/^    char	category[MAX_NAME_LEN];	\/**< Car's category *\/$/;"	m	struct:__anon157
category	src/interfaces/track.h	/^    char	  *category;	\/**< Category of the track *\/$/;"	m	struct:__anon153
catfile	src/tools/nfsperf/mainnfsperf.cpp	/^char	*catfile = NULL;$/;"	v
cb	src/windows/include/plib/ssg.h	/^  void setCreateBranchCallback ( ssgBranch *(*cb)(char *) )$/;"	f	class:ssgLoaderOptions
cb	src/windows/include/plib/ssg.h	/^  void setCreateStateCallback ( ssgState *(*cb)(char *) )$/;"	f	class:ssgLoaderOptions
cb	src/windows/include/plib/ssg.h	/^inline void ssgSetAppStateCallback ( ssgState *(*cb)(char *) )$/;"	f
cc	src/modules/graphic/ssggraph/SoundInterface.h	/^	ALCcontext* cc;$/;"	m	class:OpenalSoundInterface
cdataSectionProcessor	src/libs/txml/xmlparse.c	/^enum XML_Error cdataSectionProcessor(XML_Parser parser,$/;"	f	file:
cdataSectionProcessor	src/libs/txml/xmlparse.c	/^static Processor cdataSectionProcessor;$/;"	v	file:
cdataSectionTok	src/libs/txml/xmltok_impl.c	/^int PREFIX(cdataSectionTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
center	export/include/js.h	/^  float center    [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
center	export/include/track.h	/^    t3Dd center;		\/**< Center of the curve *\/$/;"	m	struct:trackSeg
center	src/interfaces/js.h	/^  float center    [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
center	src/interfaces/track.h	/^    t3Dd center;		\/**< Center of the curve *\/$/;"	m	struct:trackSeg
center	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 center;$/;"	m	class:cGrCamera
center	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Point center;$/;"	m	class:BBox
center	src/windows/include/plib/sg.h	/^  sgVec3  center ;$/;"	m	class:sgSphere
center	src/windows/include/plib/sg.h	/^  sgdVec3  center ;$/;"	m	class:sgdSphere
center	src/windows/include/plib/ssgaShapes.h	/^  sgVec3 center ;$/;"	m	class:ssgaShape
cgcorr_b	src/drivers/berniw/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	src/drivers/berniw2/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	src/drivers/berniw3/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	src/drivers/inferno/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	src/drivers/lliaw/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgcorr_b	src/drivers/tita/mycar.h	/^		double cgcorr_b;$/;"	m	class:MyCar
cgh	src/drivers/berniw/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	src/drivers/berniw2/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	src/drivers/berniw3/mycar.h	/^		double cgh;			\/* height of center of gravity *\/$/;"	m	class:AbstractCar
cgh	src/drivers/inferno/mycar.h	/^		double cgh;		\/\/ Height of center of gravity.$/;"	m	class:AbstractCar
cgh	src/drivers/lliaw/mycar.h	/^		double cgh;		\/\/ Height of center of gravity.$/;"	m	class:AbstractCar
cgh	src/drivers/tita/mycar.h	/^		double cgh;		\/\/ Height of center of gravity.$/;"	m	class:AbstractCar
chai	src/tools/trackgen/easymesh.cpp	/^struct chai$/;"	s	file:
chain	src/tools/trackgen/easymesh.cpp	/^} *chain;$/;"	v	typeref:struct:chai
chain	src/tools/trackgen/easymesh.h	/^    int chain;            \/* on which chains is the node *\/$/;"	m	struct:nod
chain	src/tools/trackgen/easymesh.h	/^    int chain;$/;"	m	struct:seg
chanList	src/modules/telemetry/telemetry.cpp	/^    tChannel	*chanList;$/;"	m	struct:Tlm	file:
changeBase	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^void Complex::changeBase(const void *ptr) {$/;"	f	class:Complex
changeSoundState	src/libs/confscreens/soundconfig.cpp	/^static void changeSoundState(void *vp)$/;"	f	file:
changeTextureCompressState	src/libs/confscreens/openglconfig.cpp	/^static void changeTextureCompressState(void *vp)$/;"	f	file:
changeTextureSizeState	src/libs/confscreens/openglconfig.cpp	/^static void changeTextureSizeState(void *vp)$/;"	f	file:
changed	src/drivers/berniw/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	src/drivers/berniw2/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	src/drivers/berniw3/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	src/drivers/inferno/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	src/drivers/lliaw/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changed	src/drivers/tita/pathfinder.h	/^		int changed;$/;"	m	class:Pathfinder
changetwoframes	doc/tutorials/robot/js/utilities.js	/^function changetwoframes(uri1, dest1, uri2, dest2)$/;"	f
channels	src/windows/include/png.h	/^   png_byte channels;         \/* number of channels in file *\/$/;"	m	struct:png_struct_def
channels	src/windows/include/png.h	/^   png_byte channels;       \/* number of data channels per pixel (1, 2, 3, 4)*\/$/;"	m	struct:png_info_struct
channels	src/windows/include/png.h	/^   png_byte channels; \/* number of channels (1, 2, 3, or 4) *\/$/;"	m	struct:png_row_info_struct
charRefNumber	src/libs/txml/xmltok.h	/^  int (*charRefNumber)(const ENCODING *enc, const char *ptr);$/;"	m	struct:encoding
charRefNumber	src/libs/txml/xmltok_impl.c	/^int PREFIX(charRefNumber)(const ENCODING *enc, const char *ptr)$/;"	f	file:
characterDataHandler	src/libs/txml/xmlparse.c	/^  XML_CharacterDataHandler characterDataHandler;$/;"	m	struct:__anon82	file:
characterDataHandler	src/libs/txml/xmlparse.c	263;"	d	file:
charf	src/windows/include/zconf.h	/^typedef char  FAR charf;$/;"	t
charf	src/windows/include/zconf.h	43;"	d
check	src/drivers/bt/learn.h	/^		bool check;$/;"	m	class:SegLearn
check	src/drivers/damned/learn.h	/^		bool check;$/;"	m	class:SegLearn
check	src/drivers/olethros/learn.h	/^	bool check; \/\/\/< whether we should update radius$/;"	m	class:olethros::SegLearn
checkAndSetMaximum	src/modules/graphic/ssggraph/grtrackmap.cpp	/^inline void cGrTrackMap::checkAndSetMaximum(float &currentmax, float &value)$/;"	f	class:cGrTrackMap
checkAndSetMinimum	src/modules/graphic/ssggraph/grtrackmap.cpp	/^inline void cGrTrackMap::checkAndSetMinimum(float &currentmin, float &value)$/;"	f	class:cGrTrackMap
checkCharRefNumber	src/libs/txml/xmltok.c	/^int checkCharRefNumber(int result)$/;"	f	file:
checkCompressARBAvailable	src/libs/tgfclient/glfeatures.cpp	/^void checkCompressARBAvailable(bool &result)$/;"	f
checkCompressARBEnabled	src/libs/tgfclient/glfeatures.cpp	/^void checkCompressARBEnabled(bool &result)$/;"	f
checkGLFeatures	src/libs/tgfclient/glfeatures.cpp	/^void checkGLFeatures(void) {$/;"	f
checkMustSmoothVector	src/tools/accc/ac3dload.cpp	/^int checkMustSmoothVector(point_t *n1, point_t *n2,point_t *t1, point_t *t2)$/;"	f
checkPiTarget	src/libs/txml/xmltok_impl.c	/^int PREFIX(checkPiTarget)(const ENCODING *enc, const char *ptr, const char *end, int *tokPtr)$/;"	f	file:
checking_bounds	src/drivers/olethros/geometry.h	/^	enum BoundsCheckingStatus checking_bounds;$/;"	m	class:Vector	typeref:enum:Vector::BoundsCheckingStatus
chunk_list	src/windows/include/png.h	/^   png_bytep chunk_list;$/;"	m	struct:png_struct_def
chunk_name	src/windows/include/png.h	/^   png_byte chunk_name[5];    \/* null-terminated name of current chunk *\/$/;"	m	struct:png_struct_def
ci	src/modules/simu/simuv2/SOLID-2.0/src/Polygon.h	/^  mutable int ci;$/;"	m	class:Polygon
circles	src/tools/trackgen/easymesh.cpp	/^void circles(int e)$/;"	f
ck	src/windows/include/plib/ssg.h	/^  static ulClock ck ;$/;"	m	class:ssgTimedSelector
classify	src/tools/trackgen/easymesh.cpp	/^void classify(void)$/;"	f
cleanObject	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^void RespTable::cleanObject(DtObjectRef obj) {$/;"	f	class:RespTable
cleanUnusedSection	src/libs/tgf/params.cpp	/^cleanUnusedSection (struct parmHeader *conf, struct section *section)$/;"	f	file:
cleanup	src/modules/graphic/ssggraph/grboard.cpp	/^static ssgSimpleState* cleanup[1024];$/;"	v	file:
client_data	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  void *client_data;$/;"	m	class:Response
clipPlane	src/windows/include/plib/ssg.h	/^  sgVec4 clipPlane [ 6 ] ;$/;"	m	class:ssgContext
clist	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec4         *clist    [ MAX_MATERIALS ] ;$/;"	v	file:
clone	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgBase *ssgVtxTableCarlight::clone(int clone_flags)$/;"	f	class:ssgVtxTableCarlight
clone	src/modules/graphic/ssggraph/grshadow.cpp	/^ssgBase *ssgVtxTableShadow::clone ( int clone_flags )$/;"	f	class:ssgVtxTableShadow
clone	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgBase *ssgVtxTableSmoke::clone ( int clone_flags )$/;"	f	class:ssgVtxTableSmoke
clone	src/modules/graphic/ssggraph/grvtxtable.cpp	/^ssgBase *grVtxTable::clone (int clone_flags)$/;"	f	class:grVtxTable
close	export/include/js.h	/^  void close ()$/;"	f	class:jsJoystick
close	src/interfaces/js.h	/^  void close ()$/;"	f	class:jsJoystick
closest	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool closest(Vector& v) {$/;"	f
closestAxis	export/include/3D/Vector.h	/^inline int Vector::closestAxis() const {$/;"	f	class:Vector
closestAxis	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline int Vector::closestAxis() const {$/;"	f	class:Vector
closest_points	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^void closest_points(const Convex& a, const Convex& b,$/;"	f
clothlength	src/drivers/berniw/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothlength	src/drivers/berniw2/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothlength	src/drivers/berniw3/pathfinder.cpp	/^double Pathfinder::clothlength(double beta, double y)$/;"	f	class:Pathfinder
clothparam	src/drivers/berniw/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothparam	src/drivers/berniw2/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothparam	src/drivers/berniw3/pathfinder.cpp	/^double Pathfinder::clothparam(double alpha)$/;"	f	class:Pathfinder
clothsigma	src/drivers/berniw/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clothsigma	src/drivers/berniw2/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clothsigma	src/drivers/berniw3/pathfinder.cpp	/^double Pathfinder::clothsigma(double beta, double y)$/;"	f	class:Pathfinder
clr	src/modules/graphic/ssggraph/grskidmarks.h	/^  ssgColourArray        **clr;$/;"	m	struct:__anon2
clrClipPlane	src/windows/include/plib/ssg.h	/^  void clrClipPlane ( int i )$/;"	f	class:ssgContext
clrTraversalMaskBits	src/windows/include/plib/ssg.h	/^  void clrTraversalMaskBits ( int t ) { traversal_mask &= ~t ; }$/;"	f	class:ssgEntity
clutch	src/modules/simu/simuv2/transmission.h	/^    tClutch	clutch;$/;"	m	struct:__anon28
clutchCmd	export/include/car.h	/^    tdble	clutchCmd;  \/**< Clutch command [0.0, 1.0] *\/$/;"	m	struct:__anon202
clutchCmd	src/interfaces/car.h	/^    tdble	clutchCmd;  \/**< Clutch command [0.0, 1.0] *\/$/;"	m	struct:__anon162
clutchdelay	src/drivers/human/human.h	/^	tdble	clutchdelay;$/;"	m	struct:HumanContext
clutchtime	src/drivers/bt/driver.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:Driver
clutchtime	src/drivers/damned/driver.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:Driver
clutchtime	src/drivers/human/human.h	/^	tdble	clutchtime;$/;"	m	struct:HumanContext
clutchtime	src/drivers/inferno/mycar.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:MyCar
clutchtime	src/drivers/lliaw/mycar.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:MyCar
clutchtime	src/drivers/olethros/driver.h	/^	float clutchtime;		\/\/\/< Clutch timer.$/;"	m	class:olethros::Driver
clutchtime	src/drivers/tita/mycar.h	/^		float clutchtime;		\/\/ Clutch timer.$/;"	m	class:MyCar
cmdfile	src/modules/telemetry/telemetry.cpp	/^    char	*cmdfile;$/;"	m	struct:Tlm	file:
cobound	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	/^  IndexArray *cobound;$/;"	m	class:Polyhedron
coeff	src/modules/simu/simuv2/brake.h	/^    tdble	coeff;$/;"	m	struct:__anon23
coeff	src/modules/simu/simuv2/brake.h	/^    tdble	coeff;$/;"	m	struct:__anon24
col	src/tools/accc/accc.h	/^typedef struct col$/;"	s
col	src/windows/include/plib/ssgaParticleSystem.h	/^  sgVec4 col ;$/;"	m	class:ssgaParticle
coll_data	src/modules/simu/simuv2/SOLID-2.0/src/Response.cpp	/^DtCollData Response::coll_data;$/;"	m	class:Response	file:
coll_data	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  static DtCollData coll_data;$/;"	m	class:Response
collapseObject	src/tools/accc/mainaccc.cpp	/^int collapseObject=0;$/;"	v
collcar	src/drivers/berniw/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon119
collcar	src/drivers/berniw2/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon94
collcar	src/drivers/berniw3/pathfinder.h	/^	OtherCar* collcar;		\/* pointers to the cars *\/$/;"	m	struct:__anon110
collcar	src/drivers/inferno/pathfinder.h	/^	OtherCar* collcar;		\/\/ pointer to the car.$/;"	m	struct:__anon136
collcar	src/drivers/lliaw/pathfinder.h	/^	OtherCar* collcar;		\/\/ pointer to the car.$/;"	m	struct:__anon129
collcar	src/drivers/tita/pathfinder.h	/^	OtherCar* collcar;		\/\/ pointer to the car.$/;"	m	struct:__anon102
collcars	src/drivers/berniw/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	src/drivers/berniw2/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	src/drivers/berniw3/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	src/drivers/inferno/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	src/drivers/lliaw/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collcars	src/drivers/tita/pathfinder.h	/^		int collcars;$/;"	m	class:Pathfinder
collision	export/include/car.h	/^    int		collision;$/;"	m	struct:__anon201
collision	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	src/drivers/inferno/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	src/drivers/lliaw/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	src/drivers/tita/pathfinder.cpp	/^int Pathfinder::collision(int trackSegId, tCarElt* mycar, tSituation* s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
collision	src/interfaces/car.h	/^    int		collision;$/;"	m	struct:__anon161
collision	src/modules/simu/simuv2/carstruct.h	/^    int		collision;$/;"	m	struct:__anon18
collisionAware	src/modules/simu/simuv2/carstruct.h	/^    int		collisionAware;$/;"	m	struct:__anon18
collision_count	export/include/car.h	/^	int collision_count;$/;"	m	struct:tCollisionState_
collision_count	src/interfaces/car.h	/^	int collision_count;$/;"	m	struct:tCollisionState_
collision_state	export/include/car.h	/^	tCollisionState collision_state; \/**< collision state *\/$/;"	m	struct:__anon201
collision_state	src/interfaces/car.h	/^	tCollisionState collision_state; \/**< collision state *\/$/;"	m	struct:__anon161
collpos	export/include/car.h	/^    t3Dd	collpos;        \/**< Collision position, useful for sound*\/$/;"	m	struct:__anon201
collpos	src/interfaces/car.h	/^    t3Dd	collpos;        \/**< Collision position, useful for sound*\/$/;"	m	struct:__anon161
collpos	src/modules/simu/simuv2/carstruct.h	/^    t3Dd	collpos;$/;"	m	struct:__anon18
color	src/drivers/human/human.cpp	/^static float color[] = {0.0, 0.0, 1.0, 1.0};$/;"	v	file:
color	src/libs/confscreens/driverconfig.cpp	/^    float	color[4];$/;"	m	struct:PlayerInfo	file:
color	src/tools/trackgen/objects.cpp	/^    unsigned int	color;$/;"	m	struct:objdef	file:
color_t	src/tools/accc/accc.h	/^} color_t;$/;"	t	typeref:struct:col
color_type	src/windows/include/png.h	/^   png_byte color_type;       \/* color type of file *\/$/;"	m	struct:png_struct_def
color_type	src/windows/include/png.h	/^   png_byte color_type;     \/* see PNG_COLOR_TYPE_ below (from IHDR) *\/$/;"	m	struct:png_info_struct
color_type	src/windows/include/png.h	/^   png_byte color_type; \/* color type of row *\/$/;"	m	struct:png_row_info_struct
colormap	src/modules/graphic/ssggraph/grloadsgi.h	/^		int            colormap ;$/;"	m	class:ssgSGIHeader
colour	src/windows/include/plib/ssg.h	/^  sgVec4 colour ;$/;"	m	struct:ssgInterleavedArrayElement
colour	src/windows/include/plib/ssgaShapes.h	/^  sgVec4 colour ;$/;"	m	class:ssgaShape
colourTable	src/windows/include/plib/ssgaFire.h	/^  float *colourTable ;$/;"	m	class:ssgaFire
colour_material_mode	src/windows/include/plib/ssg.h	/^  int colour_material_mode ;$/;"	m	class:ssgSimpleState
colours	src/windows/include/plib/ssg.h	/^  sgVec4 *colours   ; int num_colours   ; unsigned short *c_index ;$/;"	m	class:ssgVTable
colours	src/windows/include/plib/ssg.h	/^  ssgColourArray   *colours   ;$/;"	m	class:ssgVtxTable
colours	src/windows/include/plib/ssgaWaveSystem.h	/^  sgVec4 *colours   ;$/;"	m	class:ssgaWaveSystem
columnNumber	src/libs/txml/xmltok.h	/^  unsigned long columnNumber;$/;"	m	struct:position
commandlineopts	doc/website/download_and_install.html	/^    <h2><a name="commandlineopts"><\/a>TORCS Command Line Options<\/h2>$/;"	a
comment	src/windows/include/plib/sl.h	/^  char  *comment;$/;"	m	class:slSample
commonState	src/modules/graphic/ssggraph/grcar.cpp	/^static ssgSimpleState *commonState = NULL;$/;"	v	file:
common_drive	src/drivers/human/human.cpp	/^static void common_drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
common_point	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool common_point(const BBoxNode *a, const BBoxNode *b,$/;"	f
common_point	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool common_point(const BBoxNode *tree, const Convex& c, const BBox& bb, $/;"	f
common_point	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool common_point(const Complex& a, const Complex& b, $/;"	f
common_point	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool common_point(const Complex& a, const Convex& b, $/;"	f
common_point	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool common_point(const Convex& a, const Convex& b, const Transform& b2a,$/;"	f
common_point	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool common_point(const Convex& a, const Convex& b,$/;"	f
common_point	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_point(const Object& a, const Object& b, Vector& v, Point& pa, Point& pb) {$/;"	f
common_pointComplexComplex	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_pointComplexComplex(const Shape& a, const Shape& b, $/;"	f
common_pointComplexConvex	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_pointComplexConvex(const Shape& a, const Shape& b, $/;"	f
common_pointConvexConvex	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool common_pointConvexConvex(const Shape& a, const Shape& b, $/;"	f
common_pointInitialize	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^Common_pointTable *common_pointInitialize() {$/;"	f
comp	export/include/3D/Tuple3.h	/^  Scalar comp[3];                            $/;"	m	class:Tuple3
comp	export/include/3D/Tuple4.h	/^  Scalar comp[4];                            $/;"	m	class:Tuple4
comp	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Scalar comp[3];                            $/;"	m	class:Tuple3
comp	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Scalar comp[4];                            $/;"	m	class:Tuple4
comparCars	src/modules/graphic/ssggraph/grscreen.cpp	/^comparCars(const void *car1, const void *car2)$/;"	f	file:
complete	src/libs/txml/xmlparse.c	/^  int complete;$/;"	m	struct:__anon81	file:
complexList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^ComplexList complexList;$/;"	v
compress	src/windows/include/zconf.h	32;"	d
compress2	src/windows/include/zconf.h	33;"	d
compressARBAvailable	src/libs/tgfclient/glfeatures.cpp	/^static bool compressARBAvailable;$/;"	v	file:
compressARBEnabled	src/libs/tgfclient/glfeatures.cpp	/^static bool compressARBEnabled;$/;"	v	file:
compression	src/windows/include/png.h	/^   int  compression;       \/* compression value:$/;"	m	struct:png_text_struct
compression	src/windows/include/png.h	/^   png_byte compression;      \/* file compression type (always 0) *\/$/;"	m	struct:png_struct_def
compression_type	src/windows/include/png.h	/^   png_byte compression_type; \/* must be PNG_COMPRESSION_TYPE_BASE (IHDR) *\/$/;"	m	struct:png_info_struct
computeNorm	src/tools/accc/ac3dload.cpp	/^int computeNorm( point_t * pv1, point_t *pv2, point_t *pv3, point_t *norm)$/;"	f
computeObjectTriNorm	src/tools/accc/ac3dload.cpp	/^void computeObjectTriNorm(ob_t * object )$/;"	f
computeRadius	src/drivers/bt/driver.cpp	/^void Driver::computeRadius(float *radius)$/;"	f	class:Driver
computeRadius	src/drivers/damned/driver.cpp	/^void Driver::computeRadius(float *radius)$/;"	f	class:Driver
computeRadius	src/drivers/olethros/driver.cpp	/^    void Driver::computeRadius(float *radius)$/;"	f	class:olethros::Driver
computeSaveAC3D	src/tools/accc/ac3dload.cpp	/^void computeSaveAC3D( char * OutputFilename, ob_t * object)$/;"	f
computeSaveAC3DM	src/tools/accc/ac3dload.cpp	/^void computeSaveAC3DM( char * OutputFilename, ob_t * object)$/;"	f
computeSaveAC3DStrip	src/tools/accc/ac3dload.cpp	/^void computeSaveAC3DStrip( char * OutputFilename, ob_t * object)$/;"	f
computeSaveOBJ	src/tools/accc/ac3dload.cpp	/^void computeSaveOBJ( char * OutputFilename, ob_t * object)$/;"	f
computeTriNorm	src/tools/accc/ac3dload.cpp	/^void computeTriNorm(ob_t * object )$/;"	f
computeWeight	src/drivers/berniw/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
computeWeight	src/drivers/berniw2/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
computeWeight	src/drivers/berniw3/pathfinder.cpp	/^double Pathfinder::computeWeight(double x, double len)$/;"	f	class:Pathfinder
compute_det	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^void compute_det() {$/;"	f
compute_loop_time	src/windows/include/plib/ssg.h	/^  void compute_loop_time ()$/;"	f	class:ssgTimedSelector
compute_points	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline void compute_points(int bits, Point& p1, Point& p2) {$/;"	f
compute_vector	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline void compute_vector(int bits, Vector& v) {$/;"	f
condition	export/include/car.h	/^	tdble   condition;$/;"	m	struct:__anon200
condition	src/interfaces/car.h	/^	tdble   condition;$/;"	m	struct:__anon160
conf	src/libs/tgf/params.cpp	/^	struct parmHeader *conf;$/;"	m	struct:parmHandle	typeref:struct:parmHandle::parmHeader	file:
confMask	export/include/confscreens.h	/^    unsigned int	confMask;	\/* Tell what to configure *\/$/;"	m	struct:__anon178
confMask	export/include/racescreens.h	/^    unsigned int	confMask;	\/* Tell what to configure *\/$/;"	m	struct:__anon174
confMask	src/libs/confscreens/confscreens.h	/^    unsigned int	confMask;	\/* Tell what to configure *\/$/;"	m	struct:__anon42
confMask	src/libs/racescreens/racescreens.h	/^    unsigned int	confMask;	\/* Tell what to configure *\/$/;"	m	struct:__anon36
confMax	src/libs/learning/policy.cpp	/^int DiscretePolicy::confMax(real* Qs, real* vQs, real p) {$/;"	f	class:DiscretePolicy
confSample	src/libs/learning/policy.cpp	/^int DiscretePolicy::confSample(real* Qs, real* vQs) {$/;"	f	class:DiscretePolicy
confidence	export/include/learning/policy.h	/^	bool confidence; \/\/\/< Confidence estimates option$/;"	m	class:DiscretePolicy
confidence	src/libs/learning/policy.h	/^	bool confidence; \/\/\/< Confidence estimates option$/;"	m	class:DiscretePolicy
confidence_distribution	export/include/learning/policy.h	/^	enum ConfidenceDistribution confidence_distribution; \/\/\/< Distribution to use for confidence sampling$/;"	m	class:DiscretePolicy	typeref:enum:DiscretePolicy::ConfidenceDistribution
confidence_distribution	src/libs/learning/policy.h	/^	enum ConfidenceDistribution confidence_distribution; \/\/\/< Distribution to use for confidence sampling$/;"	m	class:DiscretePolicy	typeref:enum:DiscretePolicy::ConfidenceDistribution
confidence_eligibility	export/include/learning/policy.h	/^	bool confidence_eligibility; \/\/\/< Apply eligibility traces to confidence$/;"	m	class:DiscretePolicy
confidence_eligibility	src/libs/learning/policy.h	/^	bool confidence_eligibility; \/\/\/< Apply eligibility traces to confidence$/;"	m	class:DiscretePolicy
confidence_uses_gibbs	export/include/learning/policy.h	/^	bool confidence_uses_gibbs; \/\/\/< Additional gibbs sampling for confidence$/;"	m	class:DiscretePolicy
confidence_uses_gibbs	src/libs/learning/policy.h	/^	bool confidence_uses_gibbs; \/\/\/< Additional gibbs sampling for confidence$/;"	m	class:DiscretePolicy
config	export/include/simu.h	/^    tfSimConfig   config;$/;"	m	struct:__anon204
config	src/interfaces/simu.h	/^    tfSimConfig   config;$/;"	m	struct:__anon164
config	src/windows/include/plib/sl.h	/^  ALconfig        config;       \/\/ configuration stuff$/;"	m	class:slDSP
configHookActivate	src/libs/raceengineclient/racemanmenu.cpp	/^configHookActivate(void * \/* dummy *\/)$/;"	f	file:
configHookHandle	src/libs/raceengineclient/racemanmenu.cpp	/^static void	*configHookHandle = 0;$/;"	v	file:
conjugate	export/include/3D/Quaternion.h	/^inline Quaternion Quaternion::conjugate() const {$/;"	f	class:Quaternion
conjugate	export/include/3D/Quaternion.h	/^inline void Quaternion::conjugate() {$/;"	f	class:Quaternion
conjugate	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::conjugate() const {$/;"	f	class:Quaternion
conjugate	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline void Quaternion::conjugate() {$/;"	f	class:Quaternion
connection	src/windows/include/plib/ul.h	/^    CFragConnectionID connection;$/;"	m	class:ulDynamicLibrary
connection	src/windows/include/ul.h	/^    CFragConnectionID connection;$/;"	m	class:ulDynamicLibrary
const	src/windows/include/zconf.h	85;"	d
contentProcessor	src/libs/txml/xmlparse.c	/^enum XML_Error contentProcessor(XML_Parser parser,$/;"	f	file:
contentProcessor	src/libs/txml/xmlparse.c	/^static Processor contentProcessor;$/;"	v	file:
contentTok	src/libs/txml/xmltok_impl.c	/^int PREFIX(contentTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
control	src/windows/include/plib/ssg.h	/^  void control ( ssgAnimEnum m )$/;"	f	class:ssgTimedSelector
controlList	src/drivers/human/pref.cpp	/^static tCtrl	controlList[] = {$/;"	v	file:
control_points	src/windows/include/plib/ssgaShapes.h	/^  sgVec9 control_points[4][4] ;$/;"	m	class:ssgaPatch
convert	export/include/xmlparse.h	/^  int (*convert)(void *data, const char *s);$/;"	m	struct:__anon222
convert	src/libs/txml/xmlparse.h	/^  int (*convert)(void *data, const char *s);$/;"	m	struct:__anon83
convert	src/libs/txml/xmltok.c	/^  int (*convert)(void *userData, const char *p);$/;"	m	struct:unknown_encoding	file:
copyEngPri	src/modules/graphic/ssggraph/CarSoundData.h	/^	void copyEngPri (SoundPri& epri) 	{epri = eng_pri;}$/;"	f	class:CarSoundData
copy_from	src/modules/graphic/ssggraph/grcarlight.cpp	/^void ssgVtxTableCarlight::copy_from(ssgVtxTableCarlight *src, int clone_flags)$/;"	f	class:ssgVtxTableCarlight
copy_from	src/modules/graphic/ssggraph/grshadow.cpp	/^void ssgVtxTableShadow::copy_from ( ssgVtxTableShadow *src, int clone_flags )$/;"	f	class:ssgVtxTableShadow
copy_from	src/modules/graphic/ssggraph/grsmoke.cpp	/^void ssgVtxTableSmoke::copy_from ( ssgVtxTableSmoke *src, int clone_flags )$/;"	f	class:ssgVtxTableSmoke
copy_from	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::copy_from (grVtxTable *src, int clone_flags)$/;"	f	class:grVtxTable
corner	export/include/car.h	/^    tPosd	corner[4];	\/**< car's corners position *\/$/;"	m	struct:__anon201
corner	export/include/car.h	/^    tPosd	corner[4];$/;"	m	struct:__anon199
corner	src/interfaces/car.h	/^    tPosd	corner[4];	\/**< car's corners position *\/$/;"	m	struct:__anon161
corner	src/interfaces/car.h	/^    tPosd	corner[4];$/;"	m	struct:__anon159
corner	src/modules/simu/simuv2/carstruct.h	/^    tDynPt	corner[4];	\/* x,y,z for static relative pos, ax,ay,az for dyn. world coord *\/$/;"	m	struct:__anon18
correctPath	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	src/drivers/inferno/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	src/drivers/lliaw/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
correctPath	src/drivers/tita/pathfinder.cpp	/^int Pathfinder::correctPath(int id, tCarElt* car, MyCar* myc)$/;"	f	class:Pathfinder
corrupted	src/windows/include/plib/ssgaShapes.h	/^  int corrupted ;$/;"	m	class:ssgaShape
cosalpha	export/include/tmath/v2_t.h	/^template<class T> inline T v2t<T>::cosalpha(const v2t<T> &p2, const v2t<T> &c) const$/;"	f	class:v2t
cosalpha	src/drivers/berniw/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon119
cosalpha	src/drivers/berniw/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	src/drivers/berniw2/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon94
cosalpha	src/drivers/berniw2/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	src/drivers/berniw3/pathfinder.h	/^	double cosalpha;		\/* cos(alpha) from angle between my ond opponent *\/$/;"	m	struct:__anon110
cosalpha	src/drivers/berniw3/trackdesc.h	/^		static inline double cosalpha(v3d* a, v3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	src/drivers/inferno/pathfinder.h	/^	double cosalpha;		\/\/ cos(alpha) from angle between my ond opponent.$/;"	m	struct:__anon136
cosalpha	src/drivers/inferno/trackdesc.h	/^		static inline double cosalpha(vec3d* a, vec3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	src/drivers/lliaw/pathfinder.h	/^	double cosalpha;		\/\/ cos(alpha) from angle between my ond opponent.$/;"	m	struct:__anon129
cosalpha	src/drivers/lliaw/trackdesc.h	/^		static inline double cosalpha(vec3d* a, vec3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	src/drivers/olethros/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	src/drivers/sparkle/linalg.h	/^inline float v2d::cosalpha(const v2d &p2, const v2d &c) const$/;"	f	class:v2d
cosalpha	src/drivers/tita/pathfinder.h	/^	double cosalpha;		\/\/ cos(alpha) from angle between my ond opponent.$/;"	m	struct:__anon102
cosalpha	src/drivers/tita/trackdesc.h	/^		static inline double cosalpha(vec3d* a, vec3d* b) { return (*a)*(*b)\/(a->len()*b->len()); }$/;"	f	class:TrackDesc
cosalpha	src/libs/math/v2_t.h	/^template<class T> inline T v2t<T>::cosalpha(const v2t<T> &p2, const v2t<T> &c) const$/;"	f	class:v2t
count	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  int count;$/;"	m	class:Complex
count	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  int count;$/;"	m	class:IndexArray
countRec	src/tools/trackgen/relief.cpp	/^countRec(ssgEntity *e, int *nb_vert, int *nb_seg)$/;"	f	file:
countSegments	src/drivers/berniw/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	src/drivers/berniw2/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	src/drivers/berniw3/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	src/drivers/inferno/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	src/drivers/lliaw/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countSegments	src/drivers/tita/pathfinder.h	/^inline int Pathfinder::countSegments(int from, int to)$/;"	f	class:Pathfinder
countTriangles	src/tools/texmapper/ssgSaveAC.cpp	/^static int countTriangles ( ssgEntity *e )$/;"	f	file:
countVertices	src/tools/texmapper/ssgSaveAC.cpp	/^static int countVertices ( ssgEntity *e )$/;"	f	file:
counter	src/windows/include/plib/sl.h	/^   int            counter;       \/\/ counter-written packets$/;"	m	class:slDSP
counter	src/windows/include/plib/sl.h	/^  long            counter;      \/\/ counter-written packets$/;"	m	class:slDSP
counter	src/windows/include/plib/sl.h	/^  long            counter;$/;"	m	class:slDSP
counterFlag	src/modules/graphic/ssggraph/grboard.h	/^    int counterFlag;$/;"	m	class:cGrBoard
cp	src/drivers/berniw/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
cp	src/drivers/berniw2/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
cp	src/drivers/berniw3/pathfinder.h	/^		tParam cp[NTPARAMS];			\/* holds values needed for clothiod *\/$/;"	m	class:Pathfinder
crash	src/modules/graphic/ssggraph/CarSoundData.h	/^	bool crash;$/;"	m	class:CarSoundData
crash_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* crash_sound[NB_CRASH_SOUND]; \/\/\/< list of crash sounds$/;"	m	class:SoundInterface
crc	src/windows/include/png.h	/^   png_uint_32 crc;           \/* current chunk CRC value *\/$/;"	m	struct:png_struct_def
crc32	src/windows/include/zconf.h	36;"	d
create	src/libs/tgfclient/guifont.cpp	/^void GfuiFontClass::create(int point_size)$/;"	f	class:GfuiFontClass
createBranch	src/windows/include/plib/ssg.h	/^  virtual ssgBranch* createBranch ( char* text ) const$/;"	f	class:ssgLoaderOptions
createParmHeader	src/libs/tgf/params.cpp	/^createParmHeader (const char *file)$/;"	f	file:
createSimpleState	src/windows/include/plib/ssg.h	/^  virtual ssgSimpleState* createSimpleState ( char* tfname ) const$/;"	f	class:ssgLoaderOptions
createState	src/windows/include/plib/ssg.h	/^  virtual ssgState* createState ( char* tfname ) const$/;"	f	class:ssgLoaderOptions
createTexture	src/modules/graphic/ssggraph/grssgext.h	/^		ssgTexture* createTexture(char* tfname, int wrapu = TRUE, int wrapv = TRUE, int mipmap = TRUE) {$/;"	f	class:ssgLoaderOptionsEx
create_branch_cb	src/windows/include/plib/ssg.h	/^  ssgBranch *(*create_branch_cb)(char *) ;$/;"	m	class:ssgLoaderOptions
create_dir_win32	Make-default.mk	/^define create_dir_win32$/;"	m
create_dir_win32_	Make-default.mk	/^define create_dir_win32_$/;"	m
create_dir_win32_data	Make-default.mk	/^define create_dir_win32_data$/;"	m
create_error	src/windows/include/plib/ssgaParticleSystem.h	/^  float create_error ;$/;"	m	class:ssgaParticleSystem
create_rate	src/windows/include/plib/ssgaParticleSystem.h	/^  float create_rate ;$/;"	m	class:ssgaParticleSystem
create_state_cb	src/windows/include/plib/ssg.h	/^  ssgState *(*create_state_cb)( char *) ;$/;"	m	class:ssgLoaderOptions
cross	export/include/3D/Vector.h	/^inline Vector cross(const Vector& v1, const Vector& v2) {$/;"	f
cross	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector cross(const Vector& v1, const Vector& v2) {$/;"	f
crossProduct	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> crossProduct(const v3t<T>& a, const v3t<T>& b)$/;"	f
crossProduct	export/include/tmath/v3_t.h	/^template<class T> inline void v3t<T>::crossProduct(const v3t<T>& b, v3t<T>& r) const$/;"	f	class:v3t
crossProduct	src/drivers/berniw/linalg.h	/^inline void v3d::crossProduct(const v3d* b, v3d* r) {$/;"	f	class:v3d
crossProduct	src/drivers/berniw2/linalg.h	/^inline void v3d::crossProduct(const v3d* b, v3d* r) {$/;"	f	class:v3d
crossProduct	src/drivers/berniw3/linalg.h	/^inline void v3d::crossProduct(const v3d* b, v3d* r) {$/;"	f	class:v3d
crossProduct	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> crossProduct(const v3t<T>& a, const v3t<T>& b)$/;"	f
crossProduct	src/libs/math/v3_t.h	/^template<class T> inline void v3t<T>::crossProduct(const v3t<T>& b, v3t<T>& r) const$/;"	f	class:v3t
ctrl	export/include/car.h	/^    tCarCtrl		ctrl;	\/**< private *\/$/;"	m	struct:CarElt
ctrl	src/interfaces/car.h	/^    tCarCtrl		ctrl;	\/**< private *\/$/;"	m	struct:CarElt
ctrl	src/modules/simu/simuv2/carstruct.h	/^    tCarCtrl	*ctrl;$/;"	m	struct:__anon18
ctrlCheck	src/modules/simu/simuv2/simu.cpp	/^ctrlCheck(tCar *car)$/;"	f	file:
cull	src/modules/graphic/ssggraph/grssgext.h	/^  void cull  ( sgFrustum *f, sgMat4 m, int test_needed )$/;"	f	class:ssgBranchCb
cullFace	src/windows/include/plib/ssg.h	/^  int       cullFace           ;$/;"	m	class:ssgContext
cull_face	src/windows/include/plib/ssg.h	/^  int cull_face ;$/;"	m	class:ssgLeaf
cullfaceIsEnabled	src/windows/include/plib/ssg.h	/^  int  cullfaceIsEnabled  () { return cullFace   ; }$/;"	f	class:ssgContext
cullfaceOverridden	src/windows/include/plib/ssg.h	/^  int  cullfaceOverridden () { return ovCullface ; }$/;"	f	class:ssgContext
curCam	src/modules/graphic/ssggraph/grscreen.h	/^		class cGrPerspCamera *curCam;			\/\/ The current camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrPerspCamera
curCamHead	src/modules/graphic/ssggraph/grscreen.h	/^		int	curCamHead;							\/\/ The current camera list.$/;"	m	class:cGrScreen
curCar	src/modules/graphic/ssggraph/grscreen.h	/^		tCarElt	*curCar;		\/\/ Current car viewed.$/;"	m	class:cGrScreen
curCrashSnd	src/modules/graphic/ssggraph/SoundInterface.h	/^	int curCrashSnd; \/\/\/< holds current crash sound used - the sound cycles$/;"	m	class:SoundInterface
curDepth	src/libs/tgfclient/screen.cpp	/^static int	curDepth = 0;$/;"	v	file:
curElem	src/libs/tgf/hash.cpp	/^    tHashElem	*curElem;$/;"	m	struct:HashHeader	file:
curI	src/modules/simu/simuv2/transmission.h	/^    tdble	curI;$/;"	m	struct:__anon28
curI	src/modules/simu/simuv2/wheel.h	/^    tdble  	curI;       	\/* Current inertia for the wheel (including transmission) *\/$/;"	m	struct:__anon21
curId	src/libs/tgfclient/gui.h	/^    int			curId;$/;"	m	struct:__anon68
curIndex	src/libs/tgf/hash.cpp	/^    int		curIndex;$/;"	m	struct:HashHeader	file:
curLapTime	export/include/car.h	/^    double		curLapTime;$/;"	m	struct:__anon198
curLapTime	src/interfaces/car.h	/^    double		curLapTime;$/;"	m	struct:__anon158
curMaxFreq	src/libs/tgfclient/screen.cpp	/^static int	curMaxFreq = 75;$/;"	v	file:
curMode	src/libs/tgfclient/screen.cpp	/^static int	curMode = 0;$/;"	v	file:
curNum	export/include/tgf.h	/^    int		curNum;$/;"	m	struct:__anon194
curNum	src/libs/tgf/tgf.h	/^    int		curNum;$/;"	m	struct:__anon52
curOption	src/libs/confscreens/soundconfig.cpp	/^static int curOption = 0;$/;"	v	file:
curOptionTextComp	src/libs/confscreens/openglconfig.cpp	/^static int curOptionTextComp = 0;$/;"	v	file:
curOptionTextSize	src/libs/confscreens/openglconfig.cpp	/^static int curOptionTextSize = 0;$/;"	v	file:
curOverallRatio	src/modules/simu/simuv2/transmission.h	/^    tdble	curOverallRatio;$/;"	m	struct:__anon28
curParam	src/libs/tgf/params.cpp	/^    struct param	*curParam;$/;"	m	struct:parmOutput	typeref:struct:parmOutput::param	file:
curPlayer	src/libs/confscreens/driverconfig.cpp	/^static tPlayerInfo	*curPlayer;$/;"	v	file:
curProfile	export/include/tgf.h	/^  ProfileInstance * curProfile;$/;"	m	class:Profiler
curProfile	src/libs/tgf/tgf.h	/^  ProfileInstance * curProfile;$/;"	m	class:Profiler
curRes	src/libs/tgfclient/screen.cpp	/^static int	curRes = 0;$/;"	v	file:
curSection	src/libs/tgf/params.cpp	/^	struct section *curSection;$/;"	m	struct:parmHandle	typeref:struct:parmHandle::section	file:
curSection	src/libs/tgf/params.cpp	/^    struct section	*curSection;$/;"	m	struct:parmOutput	typeref:struct:parmOutput::section	file:
curSubSection	src/libs/tgf/params.cpp	/^    struct section			*curSubSection;$/;"	m	struct:section	typeref:struct:section::section	file:
curTime	export/include/car.h	/^    double		curTime;$/;"	m	struct:__anon198
curTime	export/include/raceman.h	/^    double		curTime;$/;"	m	struct:__anon209
curTime	src/interfaces/car.h	/^    double		curTime;$/;"	m	struct:__anon158
curTime	src/interfaces/raceman.h	/^    double		curTime;$/;"	m	struct:__anon168
curTrack	src/drivers/human/human.cpp	/^static tTrack	*curTrack;$/;"	v	file:
curVInit	src/libs/tgfclient/screen.cpp	/^static int curVInit = 0;$/;"	v	file:
curVersion	src/libs/confscreens/simuconfig.cpp	/^static int curVersion = 0;$/;"	v	file:
cur_col	src/modules/graphic/ssggraph/grsmoke.h	/^  sgVec3 cur_col;$/;"	m	class:ssgVtxTableSmoke
cur_life	src/modules/graphic/ssggraph/grsmoke.h	/^  double cur_life;$/;"	m	class:ssgVtxTableSmoke
cur_palette	src/windows/include/png.h	/^   int cur_palette;                  \/* current push library palette index *\/$/;"	m	struct:png_struct_def
curidx	src/drivers/inferno2/inferno2.cpp	/^static int	curidx;$/;"	v	file:
curmod	src/libs/raceengineclient/raceinit.cpp	/^	tModList *curmod;$/;"	m	struct:__anon86	file:
curr	export/include/learning/List.h	/^	LISTITEM* curr; \/\/\/< current item$/;"	m	struct:List
curr	src/libs/learning/List.h	/^	LISTITEM* curr; \/\/\/< current item$/;"	m	struct:List
curr	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Transform curr;$/;"	m	class:Object
curr	src/windows/include/plib/ssg.h	/^  int   curr  ;$/;"	m	class:ssgTimedSelector
currTime	src/windows/include/plib/sl.h	/^  UnsignedWide   currTime ;$/;"	m	class:slDSP
curr_bank	src/windows/include/plib/ssg.h	/^  float curr_bank ;$/;"	m	class:ssgTweenController
curr_bank	src/windows/include/plib/ssg.h	/^  int curr_bank ;$/;"	m	class:ssgTween
curr_header	src/windows/include/plib/sl.h	/^   int            curr_header;   \/\/ index of actual wavehdr$/;"	m	class:slDSP
curr_vertex	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.h	/^  mutable unsigned int curr_vertex;$/;"	m	class:Polyhedron
current	src/modules/graphic/ssggraph/grcam.cpp	/^    int		current;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
current	src/modules/graphic/ssggraph/grcam.cpp	/^    int current;$/;"	m	class:cGrCarCamRoadFly	file:
current	src/windows/include/plib/sl.h	/^  static slScheduler *current ;$/;"	m	class:slScheduler
currentCapture	export/include/raceman.h	/^    int		currentCapture;$/;"	m	struct:RmMovieCapture
currentCapture	src/interfaces/raceman.h	/^    int		currentCapture;$/;"	m	struct:RmMovieCapture
currentCarColor	src/modules/graphic/ssggraph/grtrackmap.cpp	/^GLfloat cGrTrackMap::currentCarColor[4];$/;"	m	class:cGrTrackMap	file:
currentCarColor	src/modules/graphic/ssggraph/grtrackmap.h	/^		static GLfloat currentCarColor[4];$/;"	m	class:cGrTrackMap
currentCmd	src/windows/include/plib/sl.h	/^  SndCommand     currentCmd   ;   \/\/ command we are sending to chnl$/;"	m	class:slDSP
currentComplex	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^Complex *currentComplex = 0;$/;"	v
currentFrame	export/include/raceman.h	/^    int		currentFrame;$/;"	m	struct:RmMovieCapture
currentFrame	src/interfaces/raceman.h	/^    int		currentFrame;$/;"	m	struct:RmMovieCapture
currentKey	src/drivers/human/human.cpp	/^static int currentKey[256];$/;"	v	file:
currentObject	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^Object *currentObject = 0;$/;"	v
currentOwner	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* currentOwner;$/;"	m	struct:sharedSource
currentSKey	src/drivers/human/human.cpp	/^static int currentSKey[256];$/;"	v	file:
currentState	src/windows/include/plib/ssg.h	/^  ssgSimpleState *currentState ;$/;"	m	class:ssgContext
currentTime	export/include/raceman.h	/^    double		currentTime;	\/**< current time in sec since the beginning of the simulation *\/$/;"	m	struct:Situation
currentTime	src/interfaces/raceman.h	/^    double		currentTime;	\/**< current time in sec since the beginning of the simulation *\/$/;"	m	struct:Situation
currentType	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtPolyType currentType;$/;"	v
current_allowed_speed	src/drivers/olethros/driver.h	/^	float current_allowed_speed;$/;"	m	class:olethros::Driver
current_branch	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgBranch	*current_branch   = NULL ;$/;"	v	file:
current_buffer	src/windows/include/png.h	/^   png_bytep current_buffer;         \/* buffer for recently used data *\/$/;"	m	struct:png_struct_def
current_buffer_ptr	src/windows/include/png.h	/^   png_bytep current_buffer_ptr;     \/* current location in current_buffer *\/$/;"	m	struct:png_struct_def
current_buffer_size	src/windows/include/png.h	/^   png_size_t current_buffer_size;   \/* amount of data now in current_buffer *\/$/;"	m	struct:png_struct_def
current_colour	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec4		*current_colour   = NULL ;$/;"	v	file:
current_data	src/modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_data     = NULL ;$/;"	v	file:
current_flags	src/modules/graphic/ssggraph/grloadac.cpp	/^static int current_flags    = -1 ;$/;"	v	file:
current_material	src/modules/graphic/ssggraph/grloadac.cpp	/^static _ssgMaterial	*current_material = NULL ;$/;"	v	file:
current_matrix	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgMat4 current_matrix ;$/;"	v	file:
current_options	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgLoaderOptions	*current_options  = NULL ;$/;"	v	file:
current_tbase	src/modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tbase    = NULL ;$/;"	v	file:
current_text	src/windows/include/png.h	/^     png_charp current_text;         \/* current text chunk buffer *\/$/;"	m	struct:png_struct_def
current_text_left	src/windows/include/png.h	/^     png_size_t current_text_left;   \/* how much text left to read in input *\/$/;"	m	struct:png_struct_def
current_text_ptr	src/windows/include/png.h	/^     png_charp current_text_ptr;     \/* current location in current_text *\/$/;"	m	struct:png_struct_def
current_text_size	src/windows/include/png.h	/^     png_size_t current_text_size;   \/* current size of text input data *\/$/;"	m	struct:png_struct_def
current_tfname	src/modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tfname   = NULL ;$/;"	v	file:
current_tshad	src/modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tshad    = NULL ;$/;"	v	file:
current_tskids	src/modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_tskids   = NULL ;$/;"	v	file:
current_ttiled	src/modules/graphic/ssggraph/grloadac.cpp	/^static char		*current_ttiled   = NULL ;$/;"	v	file:
currentpathseg	src/drivers/berniw/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathseg	src/drivers/berniw2/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathseg	src/drivers/berniw3/mycar.h	/^		PathSeg* currentpathseg;$/;"	m	class:MyCar
currentpathsegid	src/drivers/inferno/mycar.h	/^		int currentpathsegid;$/;"	m	class:MyCar
currentpathsegid	src/drivers/lliaw/mycar.h	/^		int currentpathsegid;$/;"	m	class:MyCar
currentpathsegid	src/drivers/tita/mycar.h	/^		int currentpathsegid;$/;"	m	class:MyCar
currentpos	src/drivers/berniw/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	src/drivers/berniw2/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	src/drivers/berniw3/mycar.h	/^		v3d currentpos;$/;"	m	class:AbstractCar
currentpos	src/drivers/inferno/mycar.h	/^		vec2d currentpos;$/;"	m	class:AbstractCar
currentpos	src/drivers/lliaw/mycar.h	/^		vec2d currentpos;$/;"	m	class:AbstractCar
currentpos	src/drivers/tita/mycar.h	/^		vec2d currentpos;$/;"	m	class:AbstractCar
currentseg	src/drivers/berniw/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	src/drivers/berniw2/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	src/drivers/berniw3/mycar.h	/^		TrackSegment* currentseg;$/;"	m	class:MyCar
currentseg	src/drivers/inferno/mycar.h	/^		TrackSegment2D* currentseg;$/;"	m	class:MyCar
currentseg	src/drivers/lliaw/mycar.h	/^		TrackSegment2D* currentseg;$/;"	m	class:MyCar
currentseg	src/drivers/tita/mycar.h	/^		TrackSegment2D* currentseg;$/;"	m	class:MyCar
currentsegid	src/drivers/berniw/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	src/drivers/berniw2/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	src/drivers/berniw3/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	src/drivers/inferno/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	src/drivers/lliaw/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsegid	src/drivers/tita/mycar.h	/^		int currentsegid;$/;"	m	class:AbstractCar
currentsimtime	src/drivers/bt/driver.cpp	/^double Driver::currentsimtime;$/;"	m	class:Driver	file:
currentsimtime	src/drivers/bt/driver.h	/^		static double currentsimtime;	\/\/ Store time to avoid useless updates.$/;"	m	class:Driver
currentsimtime	src/drivers/damned/driver.cpp	/^double Driver::currentsimtime;$/;"	m	class:Driver	file:
currentsimtime	src/drivers/damned/driver.h	/^		static double currentsimtime;	\/\/ Store time to avoid useless updates.$/;"	m	class:Driver
currentsimtime	src/drivers/olethros/driver.cpp	/^    double Driver::currentsimtime;$/;"	m	class:olethros::Driver	file:
currentsimtime	src/drivers/olethros/driver.h	/^	static double currentsimtime;	\/\/\/< Store time to avoid useless updates.$/;"	m	class:olethros::Driver
currentspeedsqr	src/drivers/bt/driver.h	/^		float currentspeedsqr;	\/\/ Square of the current speed_x.$/;"	m	class:Driver
currentspeedsqr	src/drivers/damned/driver.h	/^		float currentspeedsqr;	\/\/ Square of the current speed_x.$/;"	m	class:Driver
currentspeedsqr	src/drivers/olethros/driver.h	/^	float currentspeedsqr;	\/\/\/< Square of the current speed_x.$/;"	m	class:olethros::Driver
currentspeedsqr	src/drivers/sparkle/driver.h	/^		float currentspeedsqr;	\/* square of the current speed_x *\/$/;"	m	class:Driver
currenttime	src/drivers/berniw/berniw.cpp	/^static double currenttime;$/;"	v	file:
currenttime	src/drivers/berniw2/berniw2.cpp	/^static double currenttime;$/;"	v	file:
currenttime	src/drivers/berniw3/berniw3.cpp	/^static double currenttime;$/;"	v	file:
currenttime	src/drivers/inferno/inferno.cpp	/^static double currenttime;$/;"	v	file:
currenttime	src/drivers/lliaw/lliaw.cpp	/^static double currenttime;$/;"	v	file:
currenttime	src/drivers/tita/tita.cpp	/^static double currenttime;$/;"	v	file:
currenttime	src/modules/graphic/ssggraph/grcam.cpp	/^    double currenttime;$/;"	m	class:cGrCarCamRoadFly	file:
cursorColor	src/libs/tgfclient/gui.h	/^    float		*cursorColor[3];$/;"	m	struct:__anon65
cursorIdx	src/libs/tgfclient/gui.h	/^    int			cursorIdx;$/;"	m	struct:__anon65
cursorx	src/libs/tgfclient/gui.h	/^    int			cursorx;$/;"	m	struct:__anon65
cursory1	src/libs/tgfclient/gui.h	/^    int			cursory1;$/;"	m	struct:__anon65
cursory2	src/libs/tgfclient/gui.h	/^    int			cursory2;$/;"	m	struct:__anon65
curvature	src/drivers/berniw/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	src/drivers/berniw2/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	src/drivers/berniw3/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	src/drivers/inferno/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	src/drivers/lliaw/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curvature	src/drivers/tita/pathfinder.cpp	/^inline double Pathfinder::curvature(double xp, double yp, double x, double y, double xn, double yn)$/;"	f	class:Pathfinder
curve	src/modules/simu/simuv2/engine.h	/^    tEngineCurve	curve;$/;"	m	struct:__anon12
cutoff	src/windows/include/plib/ssg.h	/^  float  cutoff ;$/;"	m	class:ssgLight
cw	src/drivers/berniw/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	src/drivers/berniw2/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	src/drivers/berniw3/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	src/drivers/inferno/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	src/drivers/lliaw/mycar.h	/^		double cw;$/;"	m	class:MyCar
cw	src/drivers/tita/mycar.h	/^		double cw;$/;"	m	class:MyCar
d	export/include/learning/ANN.h	/^	real* d; \/\/\/< delta vector$/;"	m	struct:ANN_
d	export/include/learning/ANN.h	/^	real* d; \/\/\/< derivatives$/;"	m	struct:Layer_
d	export/include/learning/Distribution.h	/^	int d; \/\/\/< number of dimensions$/;"	m	class:MultinomialGaussian
d	export/include/tmath/straight2_t.h	/^		v2t<T> d;	\/\/ Direction of the straight.$/;"	m	class:straight2t
d	src/drivers/berniw/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
d	src/drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon125
d	src/drivers/berniw2/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
d	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon100
d	src/drivers/berniw3/pathfinder.h	/^		v3d d;			\/* direction vector of dynamic trajectory *\/$/;"	m	class:PathSeg
d	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
d	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon116
d	src/drivers/inferno/pathfinder.h	/^				vec2d d;		\/\/ Direction vector of dynamic trajectory.$/;"	m	class:PathSeg::pseg
d	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
d	src/drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon141
d	src/drivers/lliaw/pathfinder.h	/^				vec2d d;		\/\/ Direction vector of dynamic trajectory.$/;"	m	class:PathSeg::pseg
d	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
d	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon134
d	src/drivers/olethros/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	src/drivers/sparkle/linalg.h	/^        v2d d;          \/* direction of the straight *\/$/;"	m	class:Straight
d	src/drivers/tita/pathfinder.h	/^				vec2d d;		\/\/ Direction vector of dynamic trajectory.$/;"	m	class:PathSeg::pseg
d	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
d	src/drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon107
d	src/libs/learning/ANN.h	/^	real* d; \/\/\/< delta vector$/;"	m	struct:ANN_
d	src/libs/learning/ANN.h	/^	real* d; \/\/\/< derivatives$/;"	m	struct:Layer_
d	src/libs/learning/Distribution.h	/^	int d; \/\/\/< number of dimensions$/;"	m	class:MultinomialGaussian
d	src/libs/math/straight2_t.h	/^		v2t<T> d;	\/\/ Direction of the straight.$/;"	m	class:straight2t
d	src/tools/trackgen/easymesh.cpp	/^    int a, b, c, d;       \/* left, right, start and end point *\/$/;"	m	struct:sid	file:
d1	src/tools/accc/mainaccc.cpp	/^int d1=0;$/;"	v
d2	src/tools/accc/mainaccc.cpp	/^int d2=0;$/;"	v
d3	src/tools/accc/mainaccc.cpp	/^int d3=0;$/;"	v
dSlipMax	src/modules/simu/simuv2/differential.h	/^    tdble	dSlipMax;$/;"	m	struct:__anon20
dTqMax	src/modules/simu/simuv2/differential.h	/^    tdble	dTqMax;$/;"	m	struct:__anon20
dTqMin	src/modules/simu/simuv2/differential.h	/^    tdble	dTqMin;$/;"	m	struct:__anon20
dX	src/tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
dY	src/tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
dZ	src/tools/trackgen/elevation.cpp	/^static tdble	kZ, dZ;$/;"	v	file:
d_isdir	src/windows/include/plib/ul.h	/^  bool d_isdir ;$/;"	m	struct:ulDirEnt
d_isdir	src/windows/include/ul.h	/^  bool d_isdir ;$/;"	m	struct:ulDirEnt
d_name	src/windows/include/plib/ul.h	/^  char d_name [ UL_NAME_MAX+1 ];$/;"	m	struct:ulDirEnt
d_name	src/windows/include/ul.h	/^  char d_name [ UL_NAME_MAX+1 ];$/;"	m	struct:ulDirEnt
dammage	export/include/car.h	/^    int		dammage;$/;"	m	struct:__anon201
dammage	src/interfaces/car.h	/^    int		dammage;$/;"	m	struct:__anon161
dammage	src/modules/simu/simuv2/carstruct.h	/^    int		dammage;$/;"	m	struct:__anon18
damned	src/drivers/damned/damned.cpp	/^extern "C" int damned(tModInfo *modInfo)$/;"	f
damp	src/modules/graphic/ssggraph/grcam.cpp	/^    float damp;$/;"	m	class:cGrCarCamRoadFly	file:
damper	src/modules/simu/simuv2/susp.h	/^    tDamper damper;$/;"	m	struct:Suspension
damperForce	src/modules/simu/simuv2/susp.cpp	/^static tdble damperForce(tSuspension *susp)$/;"	f	file:
damping	src/windows/include/plib/sg.h	/^  float damping    ;$/;"	m	class:sgSpringDamper
data	export/include/xmlparse.h	/^  void *data;$/;"	m	struct:__anon222
data	src/drivers/bt/cardata.h	/^		SingleCardata *data;	\/\/ Array with car data.$/;"	m	class:Cardata
data	src/drivers/damned/cardata.h	/^		SingleCardata *data;	\/\/ Array with car data.$/;"	m	class:Cardata
data	src/drivers/olethros/cardata.h	/^	SingleCardata *data;	\/\/ Array with car data.$/;"	m	class:olethros::Cardata
data	src/libs/tgf/hash.cpp	/^    void				*data;$/;"	m	struct:HashElem	file:
data	src/libs/txml/xmlparse.h	/^  void *data;$/;"	m	struct:__anon83
data	src/modules/simu/simuv2/engine.h	/^    tEngineCurveElem	*data;$/;"	m	struct:__anon11
data	src/tools/accc/accc.h	/^  char * data;$/;"	m	struct:ob
data	src/windows/include/png.h	/^    png_byte *data;$/;"	m	struct:png_unknown_chunk_t
data-cars-Patwo-Design_PKGDIR	data/cars/models/pw-206wrc/Makefile	/^data-cars-Patwo-Design_PKGDIR	= $(DATADIR)$/;"	m
data-cars-Patwo-Design_PKGDIR	data/cars/models/pw-306wrc/Makefile	/^data-cars-Patwo-Design_PKGDIR	= $(DATADIR)$/;"	m
data-cars-Patwo-Design_PKGDIR	data/cars/models/pw-corollawrc/Makefile	/^data-cars-Patwo-Design_PKGDIR	= $(DATADIR)$/;"	m
data-cars-Patwo-Design_PKGDIR	data/cars/models/pw-evoviwrc/Makefile	/^data-cars-Patwo-Design_PKGDIR	= $(DATADIR)$/;"	m
data-cars-Patwo-Design_PKGDIR	data/cars/models/pw-focuswrc/Makefile	/^data-cars-Patwo-Design_PKGDIR	= $(DATADIR)$/;"	m
data-cars-Patwo-Design_PKGDIR	data/cars/models/pw-imprezawrc/Makefile	/^data-cars-Patwo-Design_PKGDIR	= $(DATADIR)$/;"	m
data-cars-Patwo-Design_PKGFILES	data/cars/models/pw-206wrc/Makefile	/^data-cars-Patwo-Design_PKGFILES	= $(DATA)$/;"	m
data-cars-Patwo-Design_PKGFILES	data/cars/models/pw-306wrc/Makefile	/^data-cars-Patwo-Design_PKGFILES	= $(DATA)$/;"	m
data-cars-Patwo-Design_PKGFILES	data/cars/models/pw-corollawrc/Makefile	/^data-cars-Patwo-Design_PKGFILES	= $(DATA)$/;"	m
data-cars-Patwo-Design_PKGFILES	data/cars/models/pw-evoviwrc/Makefile	/^data-cars-Patwo-Design_PKGFILES	= $(DATA)$/;"	m
data-cars-Patwo-Design_PKGFILES	data/cars/models/pw-focuswrc/Makefile	/^data-cars-Patwo-Design_PKGFILES	= $(DATA)$/;"	m
data-cars-Patwo-Design_PKGFILES	data/cars/models/pw-imprezawrc/Makefile	/^data-cars-Patwo-Design_PKGFILES	= $(DATA)$/;"	m
data-cars-extra_PKGDIR	data/cars/models/155-DTM/Makefile	/^data-cars-extra_PKGDIR		= $(DATADIR)$/;"	m
data-cars-extra_PKGDIR	data/cars/models/acura-nsx-sz/Makefile	/^data-cars-extra_PKGDIR		= $(DATADIR)$/;"	m
data-cars-extra_PKGDIR	data/cars/models/baja-bug/Makefile	/^data-cars-extra_PKGDIR		= $(DATADIR)$/;"	m
data-cars-extra_PKGDIR	data/cars/models/buggy/Makefile	/^data-cars-extra_PKGDIR		= $(DATADIR)$/;"	m
data-cars-extra_PKGDIR	data/cars/models/cg-nascar-rwd/Makefile	/^data-cars-extra_PKGDIR	= $(DATADIR)$/;"	m
data-cars-extra_PKGFILES	data/cars/models/155-DTM/Makefile	/^data-cars-extra_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-extra_PKGFILES	data/cars/models/acura-nsx-sz/Makefile	/^data-cars-extra_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-extra_PKGFILES	data/cars/models/baja-bug/Makefile	/^data-cars-extra_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-extra_PKGFILES	data/cars/models/buggy/Makefile	/^data-cars-extra_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-extra_PKGFILES	data/cars/models/cg-nascar-rwd/Makefile	/^data-cars-extra_PKGFILES = $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-2000gt/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-5300gt/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-corvette-ttop/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-daytona/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-db4z/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-dbs/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-dino/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-ghibli/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGDIR	data/cars/models/kc-grifo/Makefile	/^data-cars-kcendra-gt_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-2000gt/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-5300gt/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-corvette-ttop/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-daytona/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-db4z/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-dbs/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-dino/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-ghibli/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-gt_PKGFILES	data/cars/models/kc-grifo/Makefile	/^data-cars-kcendra-gt_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-roadster_PKGDIR	data/cars/models/kc-giulietta/Makefile	/^data-cars-kcendra-roadster_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-roadster_PKGFILES	data/cars/models/kc-giulietta/Makefile	/^data-cars-kcendra-roadster_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-roadsters_PKGDIR	data/cars/models/kc-bigh/Makefile	/^data-cars-kcendra-roadsters_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-roadsters_PKGFILES	data/cars/models/kc-bigh/Makefile	/^data-cars-kcendra-roadsters_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-a110/Makefile	/^data-cars-kcendra-sport_PKGDIR		= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-alfatz2/Makefile	/^data-cars-kcendra-sport_PKGDIR		= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-coda/Makefile	/^data-cars-kcendra-sport_PKGDIR	= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-conrero/Makefile	/^data-cars-kcendra-sport_PKGDIR		= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-gt40/Makefile	/^data-cars-kcendra-sport_PKGDIR		= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-gto/Makefile	/^data-cars-kcendra-sport_PKGDIR		= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGDIR	data/cars/models/kc-p4/Makefile	/^data-cars-kcendra-sport_PKGDIR		= $(DATADIR)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-a110/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-alfatz2/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-coda/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-conrero/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-gt40/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-gto/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-cars-kcendra-sport_PKGFILES	data/cars/models/kc-p4/Makefile	/^data-cars-kcendra-sport_PKGFILES	= $(DATA_PKG) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data-devel_PKGDIR	data/data/objects/Makefile	/^data-devel_PKGDIR	= $(DATADIR)$/;"	m
data-devel_PKGFILES	data/data/objects/Makefile	/^data-devel_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/dirt-2/Makefile	/^data-tracks-dirt_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/dirt-4/Makefile	/^data-tracks-dirt_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/dirt-5/Makefile	/^data-tracks-dirt_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/dirt-6/Makefile	/^data-tracks-dirt_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/dirt/dirt-1/Makefile	/^data-tracks-dirt_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/dirt/dirt-3/Makefile	/^data-tracks-dirt_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/mixed-1/Makefile	/^data-tracks-dirt_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-dirt_PKGDIR	data/tracks/mixed-2/Makefile	/^data-tracks-dirt_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/dirt-2/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/dirt-4/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/dirt-5/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/dirt-6/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/dirt/dirt-1/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/dirt/dirt-3/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/mixed-1/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-dirt_PKGFILES	data/tracks/mixed-2/Makefile	/^data-tracks-dirt_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/a-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/e-track-5/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/b-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/c-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/d-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/e-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/f-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/g-speedway/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGDIR	data/tracks/oval/michigan/Makefile	/^data-tracks-oval_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/a-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/e-track-5/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/b-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/c-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/d-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/e-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/f-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/g-speedway/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-oval_PKGFILES	data/tracks/oval/michigan/Makefile	/^data-tracks-oval_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGDIR	data/tracks/aalborg/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/e-track-1/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/e-track-2/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/e-track-3/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/e-track-4/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/eroad/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/g-track-1/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/alpine-1/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/alpine-2/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/e-track-6/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/forza/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/g-track-2/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/g-track-3/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/ole-road-1/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/ruudskogen/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/spring/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/street-1/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/road/wheel-2/Makefile	/^data-tracks-road_PKGDIR	= $(DATADIR)$/;"	m
data-tracks-road_PKGDIR	data/tracks/wheel-1/Makefile	/^data-tracks-road_PKGDIR		= $(DATADIR)$/;"	m
data-tracks-road_PKGFILES	data/tracks/aalborg/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/e-track-1/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/e-track-2/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/e-track-3/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/e-track-4/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/eroad/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/g-track-1/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/alpine-1/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/alpine-2/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/e-track-6/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/forza/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/g-track-2/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/g-track-3/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/ole-road-1/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/ruudskogen/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/spring/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/street-1/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/road/wheel-2/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
data-tracks-road_PKGFILES	data/tracks/wheel-1/Makefile	/^data-tracks-road_PKGFILES	= $(DATA)$/;"	m
dataBuf	src/libs/txml/xmlparse.c	/^  XML_Char *dataBuf;$/;"	m	struct:__anon82	file:
dataBuf	src/libs/txml/xmlparse.c	292;"	d	file:
dataBufEnd	src/libs/txml/xmlparse.c	/^  XML_Char *dataBufEnd;$/;"	m	struct:__anon82	file:
dataBufEnd	src/libs/txml/xmlparse.c	293;"	d	file:
dataDir	src/libs/tgf/tgf.cpp	/^static char *dataDir = "";$/;"	v	file:
data_PKGDIR	data/cars/categories/F1/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Historic/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Nascar/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Offroad-4WD-GrA/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Offroad-RWD-GrA/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Track-4WD-GrB/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Track-FWD-GrA/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Track-FWD-GrB/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Track-RWD-GrA/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Track-RWD-GrB/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/Track-RWD-GrC/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/categories/free/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car1-trb1/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car1-trb3/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car2-trb1/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car3-trb1/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car4-trb1/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car5-trb1/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car6-trb1/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/car7-trb1/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/p406/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/cars/models/sc-f1/Makefile	/^data_PKGDIR		= $(DATADIR)$/;"	m
data_PKGDIR	data/data/fonts/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/data/img/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/data/menu/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/data/sound/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/data/textures/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGDIR	data/data/tracks/Makefile	/^data_PKGDIR	= $(DATADIR)$/;"	m
data_PKGFILES	data/cars/categories/F1/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Historic/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Nascar/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Offroad-4WD-GrA/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Offroad-RWD-GrA/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Track-4WD-GrB/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Track-FWD-GrA/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Track-FWD-GrB/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Track-RWD-GrA/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Track-RWD-GrB/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/Track-RWD-GrC/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/categories/free/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/cars/models/car1-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car1-trb3/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car2-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car3-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car4-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car5-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car6-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/car7-trb1/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/p406/Makefile	/^data_PKGFILES	= $(DATA) $(shell find *.xcf -maxdepth 0 -type f -print)$/;"	m
data_PKGFILES	data/cars/models/sc-f1/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/data/fonts/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/data/img/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/data/menu/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/data/sound/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/data/textures/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_PKGFILES	data/data/tracks/Makefile	/^data_PKGFILES	= $(DATA)$/;"	m
data_type	src/windows/include/zlib.h	/^    int     data_type;  \/* best guess about the data type: ascii or binary *\/$/;"	m	struct:z_stream_s
day	src/windows/include/png.h	/^   png_byte day;     \/* day of month, 1 - 31 *\/$/;"	m	struct:png_time_struct
dbgmsg	export/include/learning/learn_debug.h	18;"	d
dbgmsg	src/libs/learning/learn_debug.h	18;"	d
deRef	src/windows/include/plib/ssg.h	/^  void deRef () { assert ( refc > 0 ) ; refc-- ; }$/;"	f	class:ssgBase
deadBeefCheck	src/windows/include/plib/ssg.h	/^  void deadBeefCheck () { assert ( type != (int) 0xDeadBeef ) ; }$/;"	f	class:ssgBase
deadZone	src/drivers/human/pref.h	/^    float	deadZone;	\/* dead zone (% of the available zone) *\/$/;"	m	struct:__anon144
deadZoneName	src/drivers/human/pref.h	/^    char	*deadZoneName;	\/* Name of the dead zone attribute *\/$/;"	m	struct:__anon144
dead_band	export/include/js.h	/^  float dead_band [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
dead_band	src/interfaces/js.h	/^  float dead_band [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
debug	export/include/car.h	/^    int		debug;$/;"	m	struct:__anon201
debug	src/interfaces/car.h	/^    int		debug;$/;"	m	struct:__anon161
debugFlag	src/modules/graphic/ssggraph/grboard.h	/^    int debugFlag;$/;"	m	class:cGrBoard
declAttributeId	src/libs/txml/xmlparse.c	/^  ATTRIBUTE_ID *declAttributeId;$/;"	m	struct:__anon82	file:
declAttributeId	src/libs/txml/xmlparse.c	299;"	d	file:
declAttributeIsCdata	src/libs/txml/xmlparse.c	/^  char declAttributeIsCdata;$/;"	m	struct:__anon82	file:
declAttributeIsCdata	src/libs/txml/xmlparse.c	300;"	d	file:
declClose	src/libs/txml/xmlrole.c	/^  declClose,$/;"	v	file:
declClose	src/libs/txml/xmlrole.c	/^int declClose(PROLOG_STATE *state,$/;"	f	file:
declElementType	src/libs/txml/xmlparse.c	/^  ELEMENT_TYPE *declElementType;$/;"	m	struct:__anon82	file:
declElementType	src/libs/txml/xmlparse.c	298;"	d	file:
declEntity	src/libs/txml/xmlparse.c	/^  ENTITY *declEntity;$/;"	m	struct:__anon82	file:
declEntity	src/libs/txml/xmlparse.c	295;"	d	file:
declNotationName	src/libs/txml/xmlparse.c	/^  const XML_Char *declNotationName;$/;"	m	struct:__anon82	file:
declNotationName	src/libs/txml/xmlparse.c	296;"	d	file:
declNotationPublicId	src/libs/txml/xmlparse.c	/^  const XML_Char *declNotationPublicId;$/;"	m	struct:__anon82	file:
declNotationPublicId	src/libs/txml/xmlparse.c	297;"	d	file:
defaultAtts	src/libs/txml/xmlparse.c	/^  DEFAULT_ATTRIBUTE *defaultAtts;$/;"	m	struct:__anon80	file:
defaultHandler	src/libs/txml/xmlparse.c	/^  XML_DefaultHandler defaultHandler;$/;"	m	struct:__anon82	file:
defaultHandler	src/libs/txml/xmlparse.c	265;"	d	file:
defaultResp	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  Response defaultResp;$/;"	m	class:RespTable
defaultTextSize	src/libs/confscreens/openglconfig.cpp	/^static const int defaultTextSize = 64; \/\/ In case everything goes wrong.$/;"	v	file:
defineAttribute	src/libs/txml/xmlparse.c	/^defineAttribute(ELEMENT_TYPE *type, ATTRIBUTE_ID *attId, int isCdata, const XML_Char *value)$/;"	f	file:
deflate	src/windows/include/zconf.h	17;"	d
deflateCopy	src/windows/include/zconf.h	24;"	d
deflateEnd	src/windows/include/zconf.h	18;"	d
deflateInit	src/windows/include/zlib.h	870;"	d
deflateInit2	src/windows/include/zlib.h	874;"	d
deflateInit2_	src/windows/include/zconf.h	22;"	d
deflateInit_	src/windows/include/zconf.h	16;"	d
deflateParams	src/windows/include/zconf.h	26;"	d
deflateReset	src/windows/include/zconf.h	25;"	d
deflateSetDictionary	src/windows/include/zconf.h	23;"	d
degenerate	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool degenerate(const Vector& w) {$/;"	f
degs	export/include/3D/Basic.h	/^inline Scalar degs(Scalar x) { return x * DEGS_PER_RAD; }$/;"	f
degs	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar degs(Scalar x) { return x * DEGS_PER_RAD; }$/;"	f
delta	src/windows/include/plib/ul.h	/^  double delta ;$/;"	m	class:ulClock
delta	src/windows/include/ul.h	/^  double delta ;$/;"	m	class:ulClock
deltaBestLapTime	export/include/car.h	/^    double		deltaBestLapTime;$/;"	m	struct:__anon198
deltaBestLapTime	src/interfaces/car.h	/^    double		deltaBestLapTime;$/;"	m	struct:__anon158
deltaFrame	export/include/raceman.h	/^    double	deltaFrame;$/;"	m	struct:RmMovieCapture
deltaFrame	src/interfaces/raceman.h	/^    double	deltaFrame;$/;"	m	struct:RmMovieCapture
deltaHeight	src/tools/trackgen/objects.cpp	/^    tdble		deltaHeight;$/;"	m	struct:objdef	file:
deltaSimu	export/include/raceman.h	/^    double	deltaSimu;$/;"	m	struct:RmMovieCapture
deltaSimu	src/interfaces/raceman.h	/^    double	deltaSimu;$/;"	m	struct:RmMovieCapture
deltaTime	export/include/raceman.h	/^    double		deltaTime;$/;"	m	struct:Situation
deltaTime	src/interfaces/raceman.h	/^    double		deltaTime;$/;"	m	struct:Situation
deltaVert	src/tools/trackgen/objects.cpp	/^    tdble		deltaVert;$/;"	m	struct:objdef	file:
delta_time	src/drivers/olethros/learn.h	/^	double delta_time; \/\/\/< dt for friction estimate$/;"	m	class:olethros::SegLearn
delta_vector	export/include/learning/ann_policy.h	/^	real* delta_vector; \/\/\/< Scratch vector for TD error$/;"	m	class:ANN_Policy
delta_vector	src/libs/learning/ann_policy.h	/^	real* delta_vector; \/\/\/< Scratch vector for TD error$/;"	m	class:ANN_Policy
deltapitch	src/drivers/berniw/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	src/drivers/berniw2/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	src/drivers/berniw3/mycar.h	/^		double deltapitch;		\/* angle between road and car *\/$/;"	m	class:MyCar
deltapitch	src/drivers/inferno/mycar.h	/^		double deltapitch;		\/\/ Angle of attack between road and car.$/;"	m	class:MyCar
deltapitch	src/drivers/lliaw/mycar.h	/^		double deltapitch;		\/\/ Angle of attack between road and car.$/;"	m	class:MyCar
deltapitch	src/drivers/tita/mycar.h	/^		double deltapitch;		\/\/ Angle of attack between road and car.$/;"	m	class:MyCar
dependencies	doc/website/download_and_install.html	/^    <h2><a name="dependencies"><\/a>Dependencies<\/h2>$/;"	a
depth	src/windows/include/plib/ssg.h	/^	unsigned int depth ;$/;"	m	struct:ssgTextureInfo
depth	src/windows/include/png.h	/^   png_byte depth;           \/* depth of palette samples *\/$/;"	m	struct:png_sPLT_struct
derr	src/drivers/olethros/learn.h	/^		float derr; \/\/\/< steering error$/;"	m	class:olethros::SegLearn::Averages
derror	src/drivers/berniw/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	src/drivers/berniw2/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	src/drivers/berniw3/mycar.h	/^		double derror;			\/* distance to desired trajectory *\/$/;"	m	class:MyCar
derror	src/drivers/inferno/mycar.h	/^		double derror;			\/\/ Distance to desired trajectory.$/;"	m	class:MyCar
derror	src/drivers/lliaw/mycar.h	/^		double derror;			\/\/ Distance to desired trajectory.$/;"	m	class:MyCar
derror	src/drivers/olethros/learn.h	/^	float* derror; \/\/\/< Steering control for each quantum$/;"	m	class:olethros::SegLearn
derror	src/drivers/tita/mycar.h	/^		double derror;			\/\/ Distance to desired trajectory.$/;"	m	class:MyCar
derrorsgn	src/drivers/berniw/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	src/drivers/berniw2/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	src/drivers/berniw3/mycar.h	/^		double derrorsgn;		\/* on which side of the trajectory am i left -1 or 1 right *\/$/;"	m	class:MyCar
derrorsgn	src/drivers/inferno/mycar.h	/^		double derrorsgn;		\/\/ On which side of the trajectory am i left -1 or 1 right.$/;"	m	class:MyCar
derrorsgn	src/drivers/lliaw/mycar.h	/^		double derrorsgn;		\/\/ On which side of the trajectory am i left -1 or 1 right.$/;"	m	class:MyCar
derrorsgn	src/drivers/tita/mycar.h	/^		double derrorsgn;		\/\/ On which side of the trajectory am i left -1 or 1 right.$/;"	m	class:MyCar
desactivate	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::desactivate(void)$/;"	f	class:cGrScreen
desc	export/include/tgf.h	/^    char		*desc;		\/**< description of the module (can be long) *\/$/;"	m	struct:ModInfo
desc	src/libs/tgf/tgf.h	/^    char		*desc;		\/**< description of the module (can be long) *\/$/;"	m	struct:ModInfo
descr	src/libs/tgfclient/control.cpp	/^    char	*descr;$/;"	m	struct:__anon59	file:
descr	src/libs/tgfclient/gui.h	/^    char		*descr;$/;"	m	struct:GfuiKey
destpathseg	src/drivers/berniw/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathseg	src/drivers/berniw2/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathseg	src/drivers/berniw3/mycar.h	/^		PathSeg* destpathseg;$/;"	m	class:MyCar
destpathsegid	src/drivers/inferno/mycar.h	/^		int destpathsegid;$/;"	m	class:MyCar
destpathsegid	src/drivers/lliaw/mycar.h	/^		int destpathsegid;$/;"	m	class:MyCar
destpathsegid	src/drivers/tita/mycar.h	/^		int destpathsegid;$/;"	m	class:MyCar
destseg	src/drivers/berniw/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	src/drivers/berniw2/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	src/drivers/berniw3/mycar.h	/^		TrackSegment* destseg;$/;"	m	class:MyCar
destseg	src/drivers/inferno/mycar.h	/^		TrackSegment2D* destseg;$/;"	m	class:MyCar
destseg	src/drivers/lliaw/mycar.h	/^		TrackSegment2D* destseg;$/;"	m	class:MyCar
destseg	src/drivers/tita/mycar.h	/^		TrackSegment2D* destseg;$/;"	m	class:MyCar
destsegid	src/drivers/berniw/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	src/drivers/berniw2/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	src/drivers/berniw3/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	src/drivers/inferno/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	src/drivers/lliaw/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
destsegid	src/drivers/tita/mycar.h	/^		int destsegid;$/;"	m	class:MyCar
det	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Scalar det[16][4]; \/\/ cached sub-determinants$/;"	v	file:
determinant	export/include/3D/Matrix.h	/^inline Scalar Matrix::determinant() const { $/;"	f	class:Matrix
determinant	export/include/3D/Matrix.h	/^inline Scalar determinant(const Matrix& m) { return m.determinant(); }$/;"	f
determinant	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Scalar Matrix::determinant() const { $/;"	f	class:Matrix
determinant	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Scalar determinant(const Matrix& m) { return m.determinant(); }$/;"	f
dev	src/modules/graphic/ssggraph/SoundInterface.h	/^	ALCdevice* dev;$/;"	m	class:OpenalSoundInterface
devices	src/windows/include/plib/sm.h	/^  int devices ;$/;"	m	class:smMixer
diamond	src/tools/trackgen/easymesh.cpp	/^void diamond(void)$/;"	f
diffSegId	src/drivers/berniw/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	src/drivers/berniw2/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	src/drivers/berniw3/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	src/drivers/inferno/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	src/drivers/lliaw/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
diffSegId	src/drivers/tita/trackdesc.h	/^inline int TrackDesc::diffSegId(int id1, int id2) {$/;"	f	class:TrackDesc
differential	src/modules/simu/simuv2/transmission.h	/^    tDifferential	differential[3];$/;"	m	struct:__anon28
diffuse	src/windows/include/plib/ssg.h	/^  sgVec4 diffuse ;$/;"	m	class:ssgLight
diffuse_colour	src/windows/include/plib/ssg.h	/^  sgVec4  diffuse_colour ;$/;"	m	class:ssgSimpleState
digitXCenter	src/modules/graphic/ssggraph/grcar.h	/^    tdble		digitXCenter, digitYCenter;$/;"	m	struct:__anon4
digitYCenter	src/modules/graphic/ssggraph/grcar.h	/^    tdble		digitXCenter, digitYCenter;$/;"	m	struct:__anon4
digital	src/modules/graphic/ssggraph/grcar.h	/^    int			digital;$/;"	m	struct:__anon4
dim	src/drivers/bt/spline.h	/^		int dim;$/;"	m	class:Spline
dim	src/drivers/damned/spline.h	/^		int dim;$/;"	m	class:Spline
dim	src/drivers/olethros/spline.h	/^		int dim;$/;"	m	class:Spline
dim	src/drivers/sparkle/spline.h	/^		int dim;$/;"	m	class:Spline
dim	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short dim ;$/;"	m	class:ssgSGIHeader
dimension	export/include/car.h	/^    t3Dd	dimension;		\/**< Car's mesures *\/$/;"	m	struct:__anon197
dimension	src/interfaces/car.h	/^    t3Dd	dimension;		\/**< Car's mesures *\/$/;"	m	struct:__anon157
dimension	src/modules/simu/simuv2/carstruct.h	/^    t3Dd	dimension;	\/* car's mesures *\/$/;"	m	struct:__anon18
dir	src/drivers/berniw/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	src/drivers/berniw2/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	src/drivers/berniw3/mycar.h	/^		v3d dir;$/;"	m	class:AbstractCar
dir	src/drivers/inferno/mycar.h	/^		vec2d dir;$/;"	m	class:AbstractCar
dir	src/drivers/lliaw/mycar.h	/^		vec2d dir;$/;"	m	class:AbstractCar
dir	src/drivers/tita/mycar.h	/^		vec2d dir;$/;"	m	class:AbstractCar
dirGetList	export/include/os.h	/^    tfDirGetList		dirGetList;$/;"	m	struct:__anon171
dirGetList	src/libs/tgf/os.h	/^    tfDirGetList		dirGetList;$/;"	m	struct:__anon45
dirGetListFiltered	export/include/os.h	/^    tfDirGetListFiltered	dirGetListFiltered;$/;"	m	struct:__anon171
dirGetListFiltered	src/libs/tgf/os.h	/^    tfDirGetListFiltered	dirGetListFiltered;$/;"	m	struct:__anon45
dirVector	export/include/tmath/v3_t.h	/^template<class T> inline void v3t<T>::dirVector(const v3t<T>* b, v3t<T>* r)$/;"	f	class:v3t
dirVector	src/drivers/berniw/linalg.h	/^inline void v3d::dirVector(const v3d* b, v3d* r) {$/;"	f	class:v3d
dirVector	src/drivers/berniw2/linalg.h	/^inline void v3d::dirVector(const v3d* b, v3d* r) {$/;"	f	class:v3d
dirVector	src/drivers/berniw3/linalg.h	/^inline void v3d::dirVector(const v3d* b, v3d* r) {$/;"	f	class:v3d
dirVector	src/libs/math/v3_t.h	/^template<class T> inline void v3t<T>::dirVector(const v3t<T>* b, v3t<T>* r)$/;"	f	class:v3t
dirVector2D	src/drivers/berniw/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/berniw2/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/berniw3/trackdesc.h	/^		static inline void dirVector2D(v3d* a, v3d* b, v3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/inferno/trackdesc.h	/^		static inline void dirVector2D(const vec2d* a, const vec2d* b, vec2d* r) { r->x = a->x - b->x; r->y = a->y - b->y; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/inferno/trackdesc.h	/^		static inline void dirVector2D(const vec3d* a, const vec3d* b, vec3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/lliaw/trackdesc.h	/^		static inline void dirVector2D(const vec2d* a, const vec2d* b, vec2d* r) { r->x = a->x - b->x; r->y = a->y - b->y; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/lliaw/trackdesc.h	/^		static inline void dirVector2D(const vec3d* a, const vec3d* b, vec3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/tita/trackdesc.h	/^		static inline void dirVector2D(const vec2d* a, const vec2d* b, vec2d* r) { r->x = a->x - b->x; r->y = a->y - b->y; }$/;"	f	class:TrackDesc
dirVector2D	src/drivers/tita/trackdesc.h	/^		static inline void dirVector2D(const vec3d* a, const vec3d* b, vec3d* r) { r->x = a->x - b->x; r->y = a->y - b->y; r->z = 0.0; }$/;"	f	class:TrackDesc
direction	src/windows/include/plib/ssg.h	/^  sgVec3 direction ;$/;"	m	class:ssgLight
direction_vector	src/windows/include/plib/sg.h	/^  sgVec3 direction_vector ;  \/* Should be a unit vector *\/$/;"	m	struct:sgLine3
direction_vector	src/windows/include/plib/sg.h	/^  sgdVec3 direction_vector ;  \/* Should be a unit vector *\/$/;"	m	struct:sgdLine3
disabled	src/libs/tgfclient/gui.h	/^    unsigned char	*disabled;$/;"	m	struct:__anon62
dispCam	src/modules/graphic/ssggraph/grscreen.h	/^		class cGrPerspCamera *dispCam;			\/\/ The display camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrPerspCamera
dispElt	src/tools/trackgen/track.cpp	/^typedef struct dispElt $/;"	s	file:
dispInfo	src/libs/tgfclient/guimenu.cpp	/^dispInfo(void *cbinfo)$/;"	f	file:
dispList	src/tools/trackgen/track.cpp	/^    tDispElt	*dispList;$/;"	m	struct:group	file:
dispName	export/include/tgf.h	/^    char		*dispName;	\/**< Name to display on screen *\/$/;"	m	struct:FList
dispName	src/libs/tgf/tgf.h	/^    char		*dispName;	\/**< Name to display on screen *\/$/;"	m	struct:FList
display	src/libs/tgfclient/fg_gm.cpp	/^	Display*			display;            \/\/ The display we are being run in.$/;"	m	struct:tagSFG_Display	file:
display	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::display (void)$/;"	f	class:cGrCarCamMirror
display	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::display($/;"	f	class:cGrTrackMap
displayMode	export/include/raceman.h	/^    int			displayMode;$/;"	m	struct:__anon209
displayMode	src/interfaces/raceman.h	/^    int			displayMode;$/;"	m	struct:__anon168
dispname	src/libs/confscreens/driverconfig.cpp	/^    char	*dispname;$/;"	m	struct:tInfo	file:
dist	export/include/tmath/straight2_t.h	/^template<class T> inline T straight2t<T>::dist(const v2t<T> &s) const$/;"	f	class:straight2t
dist	export/include/tmath/v2_t.h	/^template<class T> inline T v2t<T>::dist(const v2t<T> &p) const$/;"	f	class:v2t
dist	export/include/tmath/v4_t.h	/^template<class T> inline T v4t<T>::dist(const v4t<T> &p) const$/;"	f	class:v4t
dist	src/drivers/berniw/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	src/drivers/berniw/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon119
dist	src/drivers/berniw2/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	src/drivers/berniw2/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon94
dist	src/drivers/berniw3/pathfinder.h	/^		inline double dist(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y) + sqr(a->z-b->z)); }$/;"	f	class:Pathfinder
dist	src/drivers/berniw3/pathfinder.h	/^	double dist;			\/* #segments from me to the other car *\/$/;"	m	struct:__anon110
dist	src/drivers/inferno/pathfinder.h	/^		inline double dist(const vec2d* a, const vec2d* b) const { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist	src/drivers/inferno/pathfinder.h	/^	double dist;			\/\/ #segments from me to the other car.$/;"	m	struct:__anon136
dist	src/drivers/lliaw/pathfinder.h	/^		inline double dist(const vec2d* a, const vec2d* b) const { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist	src/drivers/lliaw/pathfinder.h	/^	double dist;			\/\/ #segments from me to the other car.$/;"	m	struct:__anon129
dist	src/drivers/olethros/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	src/drivers/olethros/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	src/drivers/sparkle/linalg.h	/^inline float Straight::dist(const v2d &s) const$/;"	f	class:Straight
dist	src/drivers/sparkle/linalg.h	/^inline float v2d::dist(const v2d &p) const$/;"	f	class:v2d
dist	src/drivers/tita/pathfinder.h	/^		inline double dist(const vec2d* a, const vec2d* b) const { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist	src/drivers/tita/pathfinder.h	/^	double dist;			\/\/ #segments from me to the other car.$/;"	m	struct:__anon102
dist	src/libs/math/straight2_t.h	/^template<class T> inline T straight2t<T>::dist(const v2t<T> &s) const$/;"	f	class:straight2t
dist	src/libs/math/v2_t.h	/^template<class T> inline T v2t<T>::dist(const v2t<T> &p) const$/;"	f	class:v2t
dist	src/libs/math/v4_t.h	/^template<class T> inline T v4t<T>::dist(const v4t<T> &p) const$/;"	f	class:v4t
dist	src/modules/graphic/ssggraph/grcam.cpp	/^    float dist;$/;"	m	class:cGrCarCamBehind	file:
dist	src/modules/graphic/ssggraph/grcam.cpp	/^    float dist;$/;"	m	class:cGrCarCamBehind2	file:
dist	src/modules/graphic/ssggraph/grcam.cpp	/^    float dist;$/;"	m	class:cGrCarCamFront	file:
dist	src/tools/trackgen/easymesh.cpp	/^double dist(struct nod *na, struct nod *nb)$/;"	f
dist2D	src/drivers/berniw/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	src/drivers/berniw2/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	src/drivers/berniw3/pathfinder.h	/^		inline double dist2D(v3d* a, v3d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	src/drivers/inferno/pathfinder.h	/^		inline double dist2D(vec2d* a, vec2d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	src/drivers/lliaw/pathfinder.h	/^		inline double dist2D(vec2d* a, vec2d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
dist2D	src/drivers/tita/pathfinder.h	/^		inline double dist2D(vec2d* a, vec2d* b) { return sqrt(sqr(a->x-b->x) + sqr(a->y-b->y)); }$/;"	f	class:Pathfinder
distFromStart	src/modules/graphic/ssggraph/grcar.h	/^    tdble               distFromStart;$/;"	m	struct:__anon5
distFromStartLine	export/include/car.h	/^    tdble		distFromStartLine;$/;"	m	struct:__anon198
distFromStartLine	src/interfaces/car.h	/^    tdble		distFromStartLine;$/;"	m	struct:__anon158
distGFromPoint	src/drivers/berniw/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	src/drivers/berniw2/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	src/drivers/berniw3/trackdesc.h	/^inline double TrackDesc::distGFromPoint(v3d* r1, v3d* rdir, v3d* p) {$/;"	f	class:TrackDesc
distGFromPoint	src/drivers/inferno/trackdesc.h	/^inline double TrackDesc::distGFromPoint(vec2d* r1, vec2d* rdir, vec2d* p) {$/;"	f	class:TrackDesc
distGFromPoint	src/drivers/lliaw/trackdesc.h	/^inline double TrackDesc::distGFromPoint(vec2d* r1, vec2d* rdir, vec2d* p) {$/;"	f	class:TrackDesc
distGFromPoint	src/drivers/tita/trackdesc.h	/^inline double TrackDesc::distGFromPoint(vec2d* r1, vec2d* rdir, vec2d* p) {$/;"	f	class:TrackDesc
distRaced	export/include/car.h	/^    tdble		distRaced;$/;"	m	struct:__anon198
distRaced	src/interfaces/car.h	/^    tdble		distRaced;$/;"	m	struct:__anon158
distSplit	src/tools/accc/mainaccc.cpp	/^int distSplit=0;$/;"	v
distToLeft	src/drivers/inferno/trackdesc.h	/^		inline double distToLeft(const vec2d* p) const{ return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y)); }$/;"	f	class:TrackSegment2D
distToLeft	src/drivers/lliaw/trackdesc.h	/^		inline double distToLeft(const vec2d* p) const{ return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y)); }$/;"	f	class:TrackSegment2D
distToLeft	src/drivers/tita/trackdesc.h	/^		inline double distToLeft(const vec2d* p) const{ return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y)); }$/;"	f	class:TrackSegment2D
distToLeft3D	src/drivers/berniw/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	src/drivers/berniw2/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	src/drivers/berniw3/trackdesc.h	/^		inline double distToLeft3D(v3d* p) { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	src/drivers/inferno/trackdesc.h	/^		inline double distToLeft3D(const vec3d* p) const { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	src/drivers/lliaw/trackdesc.h	/^		inline double distToLeft3D(const vec3d* p) const { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToLeft3D	src/drivers/tita/trackdesc.h	/^		inline double distToLeft3D(const vec3d* p) const { return sqrt(sqr(p->x-l.x) + sqr(p->y-l.y) + sqr(p->z-l.z)); }$/;"	f	class:TrackSegment
distToMiddle	src/drivers/berniw/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	src/drivers/berniw2/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	src/drivers/berniw3/trackdesc.h	/^		inline double distToMiddle(int id, v3d* p) { return (*p - *ts[id].getMiddle())*(*ts[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddle(const vec2d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddle(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddle(int id, const vec2d* p) { return (*p - *ts2d[id].getMiddle())*(*ts2d[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddle(const vec2d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddle(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddle(int id, const vec2d* p) { return (*p - *ts2d[id].getMiddle())*(*ts2d[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle	src/drivers/tita/trackdesc.h	/^		inline double distToMiddle(const vec2d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	src/drivers/tita/trackdesc.h	/^		inline double distToMiddle(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment2D
distToMiddle	src/drivers/tita/trackdesc.h	/^		inline double distToMiddle(int id, const vec2d* p) { return (*p - *ts2d[id].getMiddle())*(*ts2d[id].getToRight()); }$/;"	f	class:TrackDesc
distToMiddle2D	src/drivers/berniw/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	src/drivers/berniw2/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	src/drivers/berniw3/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle2D	src/drivers/tita/trackdesc.h	/^		inline double distToMiddle2D(double x, double y) const { return sqrt(sqr(x-m.x) + sqr(y-m.y)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/berniw/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/berniw/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/berniw2/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/berniw2/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/berniw3/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/berniw3/trackdesc.h	/^		inline double distToMiddle3D(v3d* p) { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddle3D(const vec3d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) const { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddle3D(const vec3d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) const { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/tita/trackdesc.h	/^		inline double distToMiddle3D(const vec3d* p) const { return sqrt(sqr(p->x-m.x) + sqr(p->y-m.y) + sqr(p->z-m.z)); }$/;"	f	class:TrackSegment
distToMiddle3D	src/drivers/tita/trackdesc.h	/^		inline double distToMiddle3D(double x, double y, double z) const { return sqrt(sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z)); }$/;"	f	class:TrackSegment
distToMiddleSqr	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddleSqr(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y); }$/;"	f	class:TrackSegment2D
distToMiddleSqr	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddleSqr(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y); }$/;"	f	class:TrackSegment2D
distToMiddleSqr	src/drivers/tita/trackdesc.h	/^		inline double distToMiddleSqr(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y); }$/;"	f	class:TrackSegment2D
distToMiddleSqr3D	src/drivers/berniw/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	src/drivers/berniw2/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	src/drivers/berniw3/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	src/drivers/inferno/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	src/drivers/lliaw/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToMiddleSqr3D	src/drivers/tita/trackdesc.h	/^		inline double distToMiddleSqr3D(double x, double y, double z) const { return sqr(x-m.x) + sqr(y-m.y) + sqr(z-m.z); }$/;"	f	class:TrackSegment
distToOptPath	src/drivers/inferno/pathfinder.h	/^inline double Pathfinder::distToOptPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToOptPath	src/drivers/lliaw/pathfinder.h	/^inline double Pathfinder::distToOptPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToOptPath	src/drivers/tita/pathfinder.h	/^inline double Pathfinder::distToOptPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToPath	src/drivers/berniw/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	src/drivers/berniw2/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	src/drivers/berniw3/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, v3d* p)$/;"	f	class:Pathfinder
distToPath	src/drivers/inferno/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToPath	src/drivers/lliaw/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToPath	src/drivers/tita/pathfinder.h	/^inline double Pathfinder::distToPath(int trackSegId, vec2d* p)$/;"	f	class:Pathfinder
distToRight	src/drivers/inferno/trackdesc.h	/^		inline double distToRight(const vec2d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y)); }$/;"	f	class:TrackSegment2D
distToRight	src/drivers/lliaw/trackdesc.h	/^		inline double distToRight(const vec2d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y)); }$/;"	f	class:TrackSegment2D
distToRight	src/drivers/tita/trackdesc.h	/^		inline double distToRight(const vec2d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y)); }$/;"	f	class:TrackSegment2D
distToRight3D	src/drivers/berniw/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	src/drivers/berniw2/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	src/drivers/berniw3/trackdesc.h	/^		inline double distToRight3D(v3d* p) { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	src/drivers/inferno/trackdesc.h	/^		inline double distToRight3D(const vec3d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	src/drivers/lliaw/trackdesc.h	/^		inline double distToRight3D(const vec3d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToRight3D	src/drivers/tita/trackdesc.h	/^		inline double distToRight3D(const vec3d* p) const { return sqrt(sqr(p->x-r.x) + sqr(p->y-r.y) + sqr(p->z-r.z)); }$/;"	f	class:TrackSegment
distToStart	src/drivers/human/human.h	/^	tdble	distToStart;$/;"	m	struct:HumanContext
dist_min	src/tools/accc/accc.h	/^  double dist_min;$/;"	m	struct:ob
distance	export/include/3D/Point.h	/^inline Scalar distance(const Point& p1, const Point& p2) { $/;"	f
distance	src/drivers/bt/opponent.h	/^		float distance;		\/\/ approximation of the real distance, negative if the opponent is behind.$/;"	m	class:Opponent
distance	src/drivers/damned/opponent.h	/^		float distance;		\/\/ approximation of the real distance, negative if the opponent is behind.$/;"	m	class:Opponent
distance	src/drivers/olethros/opponent.h	/^		float distance;		\/\/\/< approximation of the real distance, negative if the opponent is behind.$/;"	m	class:olethros::Opponent
distance	src/drivers/sparkle/opponent.h	/^		float distance;		\/* approximation of the real distance *\/$/;"	m	class:Opponent
distance	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Scalar distance(const Point& p1, const Point& p2) { $/;"	f
distance2	export/include/3D/Point.h	/^inline Scalar distance2(const Point& p1, const Point& p2) { $/;"	f
distance2	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Scalar distance2(const Point& p1, const Point& p2) { $/;"	f
disttomiddle	src/drivers/berniw/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon119
disttomiddle	src/drivers/berniw2/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon94
disttomiddle	src/drivers/berniw3/pathfinder.h	/^	double disttomiddle;	\/* distance to middle (for prediction) *\/$/;"	m	struct:__anon110
disttomiddle	src/drivers/inferno/pathfinder.h	/^		float* disttomiddle;	\/\/ Distance of path point to middle.$/;"	m	class:PathSegOpt
disttomiddle	src/drivers/inferno/pathfinder.h	/^	double disttomiddle;	\/\/ distance to middle (for prediction).$/;"	m	struct:__anon136
disttomiddle	src/drivers/lliaw/pathfinder.h	/^		float* disttomiddle;	\/\/ Distance of path point to middle.$/;"	m	class:PathSegOpt
disttomiddle	src/drivers/lliaw/pathfinder.h	/^	double disttomiddle;	\/\/ distance to middle (for prediction).$/;"	m	struct:__anon129
disttomiddle	src/drivers/tita/pathfinder.h	/^		float* disttomiddle;	\/\/ Distance of path point to middle.$/;"	m	class:PathSegOpt
disttomiddle	src/drivers/tita/pathfinder.h	/^	double disttomiddle;	\/\/ distance to middle (for prediction).$/;"	m	struct:__anon102
disttopath	src/drivers/berniw/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon119
disttopath	src/drivers/berniw2/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon94
disttopath	src/drivers/berniw3/pathfinder.h	/^	double disttopath;		\/* distance to my path *\/$/;"	m	struct:__anon110
disttopath	src/drivers/inferno/pathfinder.h	/^	double disttopath;		\/\/ distance to my path.$/;"	m	struct:__anon136
disttopath	src/drivers/lliaw/pathfinder.h	/^	double disttopath;		\/\/ distance to my path.$/;"	m	struct:__anon129
disttopath	src/drivers/tita/pathfinder.h	/^	double disttopath;		\/\/ distance to my path.$/;"	m	struct:__anon102
distx	src/modules/graphic/ssggraph/grcam.cpp	/^    float distx;$/;"	m	class:cGrCarCamSide	file:
disty	src/modules/graphic/ssggraph/grcam.cpp	/^    float disty;$/;"	m	class:cGrCarCamSide	file:
distz	src/modules/graphic/ssggraph/grcam.cpp	/^    float distz;$/;"	m	class:cGrCarCamCenter	file:
distz	src/modules/graphic/ssggraph/grcam.cpp	/^    float distz;$/;"	m	class:cGrCarCamSide	file:
distz	src/modules/graphic/ssggraph/grcam.cpp	/^    float distz;$/;"	m	class:cGrCarCamUp	file:
dither_index	src/windows/include/png.h	/^   png_bytep dither_index;           \/* index translation for palette files *\/$/;"	m	struct:png_struct_def
dlist	src/windows/include/plib/ssg.h	/^  GLuint dlist ;$/;"	m	class:ssgLeaf
dllname	src/libs/confscreens/driverconfig.cpp	31;"	d	file:
dm	src/drivers/olethros/learn.h	/^	float dm; \/\/\/< global friction coefficient 1$/;"	m	class:olethros::SegLearn
dm2	src/drivers/olethros/learn.h	/^	float dm2; \/\/\/< gloabal friction coefficient 2$/;"	m	class:olethros::SegLearn
dm3	src/drivers/olethros/learn.h	/^	float dm3; \/\/\/< global friction coefficient 3$/;"	m	class:olethros::SegLearn
dname	src/libs/racescreens/driverselect.cpp	/^    char	*dname;$/;"	m	struct:DrvElt	file:
doCdataSection	src/libs/txml/xmlparse.c	/^enum XML_Error doCdataSection(XML_Parser parser,$/;"	f	file:
doContent	src/libs/txml/xmlparse.c	/^doContent(XML_Parser parser,$/;"	f	file:
doCrease	src/tools/accc/ac3dload.cpp	/^int doCrease(char *Line, ob_t *object, mat_t *material)$/;"	f
doData	src/tools/accc/ac3dload.cpp	/^int doData(char *Line, ob_t *object, mat_t *material)$/;"	f
doGetSurf	src/tools/accc/ac3dload.cpp	/^int doGetSurf(char *Line, ob_t *object, mat_t *material)$/;"	f
doGetVertex	src/tools/accc/ac3dload.cpp	/^int doGetVertex(char *Line, ob_t *object, mat_t *material)$/;"	f
doKids	src/tools/accc/ac3dload.cpp	/^int doKids(char *Line, ob_t *object, mat_t *material)$/;"	f
doLoc	src/tools/accc/ac3dload.cpp	/^int doLoc(char *Line, ob_t *object, mat_t *material)$/;"	f
doMat	src/tools/accc/ac3dload.cpp	/^int doMat(char *Line, ob_t *object, mat_t *material)$/;"	f
doMaterial	src/tools/accc/ac3dload.cpp	/^int doMaterial(char *Line, ob_t *object, mat_t *material)$/;"	f
doMipMap	src/modules/graphic/ssggraph/grtexture.cpp	/^bool doMipMap(const char *tfname, int mipmap)$/;"	f
doName	src/tools/accc/ac3dload.cpp	/^int doName(char *Line, ob_t *object, mat_t *material)$/;"	f
doNumsurf	src/tools/accc/ac3dload.cpp	/^int doNumsurf(char *Line, ob_t *object, mat_t *material)$/;"	f
doNumvert	src/tools/accc/ac3dload.cpp	/^int doNumvert(char *Line, ob_t *object, mat_t *material)$/;"	f
doObject	src/tools/accc/ac3dload.cpp	/^int doObject(char *Line, ob_t *object, mat_t *material)$/;"	f
doRefs	src/tools/accc/ac3dload.cpp	/^int doRefs(char *Line, ob_t *object, mat_t *material)$/;"	f
doSurf	src/tools/accc/ac3dload.cpp	/^int doSurf(char *Line, ob_t *object, mat_t *material)$/;"	f
doTexrep	src/tools/accc/ac3dload.cpp	/^int doTexrep(char *Line, ob_t *object, mat_t *material)$/;"	f
doTexture	src/tools/accc/ac3dload.cpp	/^int doTexture(char *Line, ob_t *object, mat_t *material)$/;"	f
doVerb	src/tools/accc/ac3dload.cpp	/^    int  (*doVerb)(char * Line,  ob_t *object, mat_t * material);$/;"	m	struct:verbaction	file:
do_data	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_data     ( char *s )$/;"	f	file:
do_filter	src/windows/include/png.h	/^   png_byte do_filter;        \/* row filter flags (see PNG_FILTER_ below ) *\/$/;"	m	struct:png_struct_def
do_kids	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_kids ( char *s )$/;"	f	file:
do_loc	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_loc      ( char *s )$/;"	f	file:
do_mat	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_mat ( char *s )$/;"	f	file:
do_material	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_material ( char *s )$/;"	f	file:
do_name	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_name ( char *s )$/;"	f	file:
do_numsurf	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_numsurf  ( char *s )$/;"	f	file:
do_numvert	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_numvert  ( char *s )$/;"	f	file:
do_obj_group	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_group ( char * ) { return OBJ_GROUP ; }$/;"	f	file:
do_obj_light	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_light ( char * ) { return OBJ_LIGHT ; }$/;"	f	file:
do_obj_poly	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_poly  ( char * ) { return OBJ_POLY  ; }$/;"	f	file:
do_obj_world	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_obj_world ( char * ) { return OBJ_WORLD ; } $/;"	f	file:
do_object	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_object   ( char * s  )$/;"	f	file:
do_refs	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_refs( char *s )$/;"	f	file:
do_rot	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_rot ( char *s )$/;"	f	file:
do_surf	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_surf     ( char *s )$/;"	f	file:
do_texoff	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_texoff ( char *s )$/;"	f	file:
do_texrep	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_texrep ( char *s )$/;"	f	file:
do_texture	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_texture  ( char *s )$/;"	f	file:
do_url	src/modules/graphic/ssggraph/grloadac.cpp	/^static int do_url      ( char *s )$/;"	f	file:
doctype0	src/libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype0	src/libs/txml/xmlrole.c	/^int doctype0(PROLOG_STATE *state,$/;"	f	file:
doctype1	src/libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype1	src/libs/txml/xmlrole.c	/^int doctype1(PROLOG_STATE *state,$/;"	f	file:
doctype2	src/libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype2	src/libs/txml/xmlrole.c	/^int doctype2(PROLOG_STATE *state,$/;"	f	file:
doctype3	src/libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype3	src/libs/txml/xmlrole.c	/^int doctype3(PROLOG_STATE *state,$/;"	f	file:
doctype4	src/libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype4	src/libs/txml/xmlrole.c	/^int doctype4(PROLOG_STATE *state,$/;"	f	file:
doctype5	src/libs/txml/xmlrole.c	/^  doctype0, doctype1, doctype2, doctype3, doctype4, doctype5,$/;"	v	file:
doctype5	src/libs/txml/xmlrole.c	/^int doctype5(PROLOG_STATE *state,$/;"	f	file:
dont_care	src/windows/include/plib/ssg.h	/^  int    dont_care ; $/;"	m	class:ssgSimpleState
dont_care_about	src/windows/include/plib/ssg.h	/^  virtual void dont_care_about ( int mode ) { dont_care |=  (1<<mode) ; }$/;"	f	class:ssgSimpleState
dot	export/include/3D/Quaternion.h	/^inline Scalar dot(const Quaternion& q1, const Quaternion& q2) {$/;"	f
dot	export/include/3D/Vector.h	/^inline Scalar dot(const Vector& v1, const Vector& v2) {$/;"	f
dot	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar dot(const Quaternion& q1, const Quaternion& q2) {$/;"	f
dot	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar dot(const Vector& v1, const Vector& v2) {$/;"	f
drag	src/modules/simu/simuv2/aero.h	/^    tdble	drag;		\/* drag force along car x axis *\/$/;"	m	struct:__anon13
drag_collision	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar drag_collision;$/;"	m	class:CarSoundData
draw	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw ()$/;"	f	class:grVtxTable
draw	src/tools/texmapper/maintexmapper.cpp	/^void draw(void)$/;"	f
drawBackground	src/modules/graphic/ssggraph/grcam.h	/^    int			drawBackground;	\/* flag to draw the background *\/$/;"	m	class:cGrCamera
drawCar	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawCar(tCarElt *currentCar, GLfloat* color, int x, int y)$/;"	f	class:cGrTrackMap
drawCars	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawCars(tCarElt *currentCar, tSituation *s, int x, int y)$/;"	f	class:cGrTrackMap
drawCurrent	src/modules/graphic/ssggraph/grcam.h	/^    int			drawCurrent;	\/* flag to draw the current car *\/$/;"	m	class:cGrCamera
drawCurrent	src/modules/graphic/ssggraph/grscreen.h	/^		int drawCurrent;						\/\/ Should the current car be drawn.$/;"	m	class:cGrScreen
drawDriver	src/modules/graphic/ssggraph/grcam.h	/^    int			drawDriver;	\/* flag to draw the driver *\/$/;"	m	class:cGrCamera
drawHighlight	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);} $/;"	f	class:ssgVtxTableCarlight
drawHighlight	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} $/;"	f	class:ssgVtxTableCarlight
drawHighlight	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);} $/;"	f	class:ssgVtxTableShadow
drawHighlight	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} $/;"	f	class:ssgVtxTableShadow
drawHighlight	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);} $/;"	f	class:ssgVtxTableSmoke
drawHighlight	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} $/;"	f	class:ssgVtxTableSmoke
drawHighlight	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void drawHighlight ( sgVec4 colour ){ssgVtxTable::drawHighlight(colour);}  \/* doesn't not work *\/$/;"	f	class:grVtxTable
drawHighlight	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void drawHighlight ( sgVec4 colour, int i ){ssgVtxTable::drawHighlight(colour,i);} \/* doesn't work also *\/$/;"	f	class:grVtxTable
drawTrackNormal	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawTrackNormal(int x, int y)$/;"	f	class:cGrTrackMap
drawTrackPanning	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawTrackPanning($/;"	f	class:cGrTrackMap
drawTrackPanningAligned	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::drawTrackPanningAligned($/;"	f	class:cGrTrackMap
draw_ac	src/tools/trackgen/easymesh.cpp	/^draw_ac(FILE *ac_file, char *name)$/;"	f	file:
draw_geometry	src/modules/graphic/ssggraph/grcarlight.cpp	/^void ssgVtxTableCarlight::draw_geometry ()$/;"	f	class:ssgVtxTableCarlight
draw_geometry	src/modules/graphic/ssggraph/grshadow.cpp	/^void ssgVtxTableShadow::draw_geometry ()$/;"	f	class:ssgVtxTableShadow
draw_geometry	src/modules/graphic/ssggraph/grsmoke.cpp	/^void ssgVtxTableSmoke::draw_geometry ()$/;"	f	class:ssgVtxTableSmoke
draw_geometry_array	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_array ()$/;"	f	class:grVtxTable
draw_geometry_for_a_car	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_for_a_car ()$/;"	f	class:grVtxTable
draw_geometry_for_a_car_array	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_for_a_car_array ()$/;"	f	class:grVtxTable
draw_geometry_multi	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::draw_geometry_multi ()$/;"	f	class:grVtxTable
drive	src/drivers/berniw/berniw.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	src/drivers/berniw2/berniw2.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	src/drivers/berniw3/berniw3.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	src/drivers/bt/bt.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	src/drivers/bt/driver.cpp	/^void Driver::drive(tSituation *s)$/;"	f	class:Driver
drive	src/drivers/damned/damned.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	src/drivers/damned/driver.cpp	/^void Driver::drive(tSituation *s)$/;"	f	class:Driver
drive	src/drivers/inferno/inferno.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	src/drivers/inferno2/inferno2.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	src/drivers/lliaw/lliaw.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
drive	src/drivers/olethros/driver.cpp	/^    void Driver::drive(tSituation *s)$/;"	f	class:olethros::Driver
drive	src/drivers/olethros/olethros.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	namespace:olethros
drive	src/drivers/sparkle/driver.cpp	/^void Driver::drive(tSituation *s)$/;"	f	class:Driver
drive	src/drivers/sparkle/sparkle.cpp	/^static void drive(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive	src/drivers/tita/tita.cpp	/^static void drive(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
driveI	src/modules/simu/simuv2/transmission.h	/^    tdble	driveI[MAX_GEARS];		\/* Inertia (including engine) *\/$/;"	m	struct:__anon28
driveTq	src/modules/simu/simuv2/wheel.h	/^    tdble  	driveTq;   	\/* engine torque *\/$/;"	m	struct:__anon21
drive_at	src/drivers/human/human.cpp	/^static void drive_at(int index, tCarElt* car, tSituation *s)$/;"	f	file:
drive_mt	src/drivers/human/human.cpp	/^static void drive_mt(int index, tCarElt* car, tSituation *s)$/;"	f	file:
driver	src/drivers/bt/bt.cpp	/^static Driver *driver[NBBOTS];$/;"	v	file:
driver	src/drivers/damned/damned.cpp	/^static Driver *driver[NBBOTS];$/;"	v	file:
driver	src/drivers/olethros/olethros.cpp	/^static Driver *driver[NBBOTS];$/;"	m	namespace:olethros	file:
driver	src/drivers/sparkle/sparkle.cpp	/^static Driver *driver[NBBOTS];$/;"	v	file:
driverIndex	export/include/car.h	/^    int		driverIndex;	\/**< index when multiple drivers are in the same dll *\/$/;"	m	struct:__anon201
driverIndex	src/interfaces/car.h	/^    int		driverIndex;	\/**< index when multiple drivers are in the same dll *\/$/;"	m	struct:__anon161
driverSelector	src/modules/graphic/ssggraph/grcar.h	/^    ssgSelector		*driverSelector;$/;"	m	struct:__anon5
driverSelectorinsg	src/modules/graphic/ssggraph/grcar.h	/^	bool driverSelectorinsg;$/;"	m	struct:__anon5
driverType	export/include/car.h	/^    int		driverType;		\/**< Driver type *\/$/;"	m	struct:__anon197
driverType	src/interfaces/car.h	/^    int		driverType;		\/**< Driver type *\/$/;"	m	struct:__anon157
driversPits	export/include/track.h	/^	tTrackOwnPit *driversPits;	\/**< List of pits by driver *\/$/;"	m	struct:__anon183
driversPits	src/interfaces/track.h	/^	tTrackOwnPit *driversPits;	\/**< List of pits by driver *\/$/;"	m	struct:__anon150
driversPitsNb	export/include/track.h	/^	int driversPitsNb;			\/**< Number of drivers *\/$/;"	m	struct:__anon183
driversPitsNb	src/interfaces/track.h	/^	int driversPitsNb;			\/**< Number of drivers *\/$/;"	m	struct:__anon150
drivetrain	src/drivers/berniw/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	src/drivers/berniw2/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	src/drivers/berniw3/mycar.h	/^		int drivetrain;			\/* RWD, FWD or 4WD *\/$/;"	m	class:MyCar
drivetrain	src/drivers/human/human.h	/^	int		drivetrain;$/;"	m	struct:HumanContext
drivetrain	src/drivers/inferno/mycar.h	/^		int drivetrain;			\/\/ RWD, FWD or 4WD.$/;"	m	class:MyCar
drivetrain	src/drivers/lliaw/mycar.h	/^		int drivetrain;			\/\/ RWD, FWD or 4WD.$/;"	m	class:MyCar
drivetrain	src/drivers/tita/mycar.h	/^		int drivetrain;			\/\/ RWD, FWD or 4WD.$/;"	m	class:MyCar
drvIdx	src/libs/raceengineclient/raceresults.cpp	/^	int		drvIdx;$/;"	m	struct:__anon85	file:
drvPos	export/include/car.h	/^    t3Dd	drvPos;			\/**< Driver's position *\/$/;"	m	struct:__anon197
drvPos	src/interfaces/car.h	/^    t3Dd	drvPos;			\/**< Driver's position *\/$/;"	m	struct:__anon157
ds	src/libs/raceengineclient/racemanmenu.cpp	/^static tRmDrvSelect	ds;$/;"	v	file:
ds	src/libs/racescreens/driverselect.cpp	/^static tRmDrvSelect	*ds;$/;"	v	file:
dt	src/drivers/berniw/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	src/drivers/berniw2/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	src/drivers/berniw3/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	src/drivers/inferno/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	src/drivers/lliaw/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	src/drivers/olethros/driver.h	/^	float dt; \/\/\/< delta time$/;"	m	class:olethros::Driver
dt	src/drivers/tita/mycar.h	/^		double dt;$/;"	m	class:OtherCar
dt	src/modules/graphic/ssggraph/grsmoke.h	/^  double dt;$/;"	m	class:ssgVtxTableSmoke
dtBegin	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtBegin(DtPolyType type) { currentType = type; }$/;"	f
dtBox	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtBox(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtChangeVertexBase	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtChangeVertexBase(DtShapeRef shape, const void *base) { $/;"	f
dtClearDefaultResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtClearDefaultResponse() {$/;"	f
dtClearObjectResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtClearObjectResponse(DtObjectRef object) {$/;"	f
dtClearPairResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtClearPairResponse(DtObjectRef object1, DtObjectRef object2) {$/;"	f
dtCone	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtCone(DtScalar radius, DtScalar height) {$/;"	f
dtCreateObject	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtCreateObject(DtObjectRef object, DtShapeRef shape) {$/;"	f
dtCylinder	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtCylinder(DtScalar radius, DtScalar height) {$/;"	f
dtDeleteObject	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtDeleteObject(DtObjectRef object) {$/;"	f
dtDeleteShape	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtDeleteShape(DtShapeRef shape) { $/;"	f
dtDisableCaching	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtDisableCaching() { caching = false; }$/;"	f
dtEnableCaching	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtEnableCaching() {$/;"	f
dtEnd	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtEnd() { $/;"	f
dtEndComplexShape	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtEndComplexShape() {$/;"	f
dtLoadIdentity	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtLoadIdentity() { $/;"	f
dtLoadMatrixd	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtLoadMatrixd(const double *m) { $/;"	f
dtLoadMatrixf	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtLoadMatrixf(const float *m) { $/;"	f
dtMultMatrixd	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtMultMatrixd(const double *m) { $/;"	f
dtMultMatrixf	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtMultMatrixf(const float *m) { $/;"	f
dtNewComplexShape	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtNewComplexShape() {$/;"	f
dtProceed	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtProceed() {$/;"	f
dtResetObjectResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtResetObjectResponse(DtObjectRef object) {$/;"	f
dtResetPairResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtResetPairResponse(DtObjectRef object1, DtObjectRef object2) {$/;"	f
dtRotate	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtRotate(DtScalar x, DtScalar y, DtScalar z, DtScalar w) {$/;"	f
dtScale	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtScale(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtSelectObject	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSelectObject(DtObjectRef object) {$/;"	f
dtSetDefaultResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetDefaultResponse(DtResponse response, DtResponseType type,$/;"	f
dtSetObjectResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetObjectResponse(DtObjectRef object, DtResponse response, $/;"	f
dtSetPairResponse	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetPairResponse(DtObjectRef object1, DtObjectRef object2, $/;"	f
dtSetTolerance	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtSetTolerance(DtScalar tol) { rel_error = tol; }$/;"	f
dtSphere	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtShapeRef dtSphere(DtScalar radius) {$/;"	f
dtTest	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^DtCount dtTest() {$/;"	f
dtTranslate	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtTranslate(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtVertex	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertex(DtScalar x, DtScalar y, DtScalar z) {$/;"	f
dtVertexBase	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexBase(const void *base) { $/;"	f
dtVertexIndex	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexIndex(DtIndex index) { indexBuf.push_back(index); }$/;"	f
dtVertexIndices	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexIndices(DtPolyType type, DtCount count, $/;"	f
dtVertexRange	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void dtVertexRange(DtPolyType type, DtIndex first, DtCount count) {$/;"	f
dtan	src/libs/learning/ANN.cpp	/^real dtan(real x)$/;"	f
dtan_d	src/libs/learning/ANN.cpp	/^real dtan_d(real x)$/;"	f
dtd	src/libs/tgf/params.cpp	/^    char				*dtd;		\/**< Optional DTD location *\/$/;"	m	struct:parmHeader	file:
dtd	src/libs/txml/xmlparse.c	/^  DTD dtd;$/;"	m	struct:__anon82	file:
dtd	src/libs/txml/xmlparse.c	294;"	d	file:
dtdCopy	src/libs/txml/xmlparse.c	/^static int dtdCopy(DTD *newDtd, const DTD *oldDtd)$/;"	f	file:
dtdDestroy	src/libs/txml/xmlparse.c	/^static void dtdDestroy(DTD *p)$/;"	f	file:
dtdInit	src/libs/txml/xmlparse.c	/^static int dtdInit(DTD *p)$/;"	f	file:
dtm	src/drivers/olethros/learn.h	/^		float dtm; \/\/\/< path error$/;"	m	class:olethros::SegLearn::Averages
dummy	src/windows/include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	m	struct:internal_state
dumpUpdate	src/windows/include/plib/sl.h	/^  void dumpUpdate () { realUpdate ( SL_TRUE  ) ; }$/;"	f	class:slScheduler
dw	export/include/learning/ANN.h	/^	real dw; \/\/\/< Weight-change$/;"	m	struct:Connection_
dw	src/drivers/olethros/Trajectory.h	/^    std::vector<float> dw; \/\/\/< parameter steps$/;"	m	class:Trajectory
dw	src/libs/learning/ANN.h	/^	real dw; \/\/\/< Weight-change$/;"	m	struct:Connection_
dw2	src/drivers/olethros/Trajectory.h	/^    std::vector<float> dw2; \/\/\/<  parameter gradients$/;"	m	class:Trajectory
dx	src/libs/tgfclient/guifont.h	/^    float dx, dy;$/;"	m	struct:__anon54
dy	src/libs/tgfclient/guifont.h	/^    float dx, dy;$/;"	m	struct:__anon54
dynpath	src/drivers/inferno/mycar.h	/^		PathSeg* dynpath;$/;"	m	class:MyCar
dynpath	src/drivers/lliaw/mycar.h	/^		PathSeg* dynpath;$/;"	m	class:MyCar
dynpath	src/drivers/tita/mycar.h	/^		PathSeg* dynpath;$/;"	m	class:MyCar
e	export/include/learning/ANN.h	/^	real e; \/\/\/< eligibility;$/;"	m	struct:Connection_
e	export/include/learning/policy.h	/^ 	real** e; \/\/\/< eligibility trace$/;"	m	class:DiscretePolicy
e	src/libs/learning/ANN.h	/^	real e; \/\/\/< eligibility;$/;"	m	struct:Connection_
e	src/libs/learning/policy.h	/^ 	real** e; \/\/\/< eligibility trace$/;"	m	class:DiscretePolicy
e1	src/drivers/berniw/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	src/drivers/berniw2/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	src/drivers/berniw3/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e1	src/drivers/inferno/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e1	src/drivers/lliaw/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e1	src/drivers/tita/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e3	src/drivers/berniw/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	src/drivers/berniw2/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	src/drivers/berniw3/pathfinder.h	/^		int e1, e3;				\/* pitexitstart, pitexitend *\/$/;"	m	class:Pathfinder
e3	src/drivers/inferno/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e3	src/drivers/lliaw/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
e3	src/drivers/tita/pathfinder.h	/^		int e1, e3;				\/\/ pitexitstart, pitexitend.$/;"	m	class:Pathfinder
eGreedy	src/libs/learning/policy.cpp	/^int DiscretePolicy::eGreedy(real* Qs) {$/;"	f	class:DiscretePolicy
ea	src/tools/trackgen/easymesh.cpp	/^    int ea, eb;           \/* left and right element *\/$/;"	m	struct:sid	file:
eb	src/tools/trackgen/easymesh.cpp	/^    int ea, eb;           \/* left and right element *\/$/;"	m	struct:sid	file:
edgeDn	src/drivers/human/human.cpp	/^	int edgeDn;$/;"	m	struct:__anon146	file:
edgeFlatten	src/windows/include/plib/ssgaWaveSystem.h	/^  float edgeFlatten ;$/;"	m	class:ssgaWaveSystem
edgeUp	src/drivers/human/human.cpp	/^	int edgeUp;$/;"	m	struct:__anon146	file:
edgedn	export/include/tgfclient.h	/^    int		edgedn[3];	\/**< Button transition from up to down *\/$/;"	m	struct:__anon214
edgedn	export/include/tgfclient.h	/^    int		edgedn[GFCTRL_JOY_MAXBUTTON * NUM_JOY];	\/**< Button transition from up to down *\/$/;"	m	struct:__anon213
edgedn	src/libs/tgfclient/tgfclient.h	/^    int		edgedn[3];	\/**< Button transition from up to down *\/$/;"	m	struct:__anon58
edgedn	src/libs/tgfclient/tgfclient.h	/^    int		edgedn[GFCTRL_JOY_MAXBUTTON * NUM_JOY];	\/**< Button transition from up to down *\/$/;"	m	struct:__anon57
edgeup	export/include/tgfclient.h	/^    int		edgeup[3];	\/**< Button transition from down (pressed) to up *\/$/;"	m	struct:__anon214
edgeup	export/include/tgfclient.h	/^    int		edgeup[GFCTRL_JOY_MAXBUTTON * NUM_JOY];	\/**< Button transition from down (pressed) to up *\/$/;"	m	struct:__anon213
edgeup	src/libs/tgfclient/tgfclient.h	/^    int		edgeup[3];	\/**< Button transition from down (pressed) to up *\/$/;"	m	struct:__anon58
edgeup	src/libs/tgfclient/tgfclient.h	/^    int		edgeup[GFCTRL_JOY_MAXBUTTON * NUM_JOY];	\/**< Button transition from down (pressed) to up *\/$/;"	m	struct:__anon57
editbox	src/libs/tgfclient/gui.h	/^	tGfuiEditbox	editbox;$/;"	m	union:GfuiObject::__anon67
efficiency	src/modules/simu/simuv2/differential.h	/^    tdble	efficiency;$/;"	m	struct:__anon20
ei	src/tools/trackgen/easymesh.cpp	/^    int ei, ej, ek;$/;"	m	struct:ele	file:
ej	src/tools/trackgen/easymesh.cpp	/^    int ei, ej, ek;$/;"	m	struct:ele	file:
ek	src/tools/trackgen/easymesh.cpp	/^    int ei, ej, ek;$/;"	m	struct:ele	file:
ele	src/tools/trackgen/easymesh.cpp	/^struct ele$/;"	s	file:
elem	export/include/3D/Matrix.h	/^  Mat3 elem;$/;"	m	class:Matrix
elem	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Mat3 elem;$/;"	m	class:Matrix
elem	src/tools/trackgen/easymesh.cpp	/^elem[MAX_NODES*2];$/;"	v	typeref:struct:ele
element0	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element0	src/libs/txml/xmlrole.c	/^int element0(PROLOG_STATE *state,$/;"	f	file:
element1	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element1	src/libs/txml/xmlrole.c	/^int element1(PROLOG_STATE *state,$/;"	f	file:
element2	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element2	src/libs/txml/xmlrole.c	/^int element2(PROLOG_STATE *state,$/;"	f	file:
element3	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element3	src/libs/txml/xmlrole.c	/^int element3(PROLOG_STATE *state,$/;"	f	file:
element4	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element4	src/libs/txml/xmlrole.c	/^int element4(PROLOG_STATE *state,$/;"	f	file:
element5	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element5	src/libs/txml/xmlrole.c	/^int element5(PROLOG_STATE *state,$/;"	f	file:
element6	src/libs/txml/xmlrole.c	/^  element0, element1, element2, element3, element4, element5, element6,$/;"	v	file:
element6	src/libs/txml/xmlrole.c	/^int element6(PROLOG_STATE *state,$/;"	f	file:
element7	src/libs/txml/xmlrole.c	/^  element7,$/;"	v	file:
element7	src/libs/txml/xmlrole.c	/^int element7(PROLOG_STATE *state,$/;"	f	file:
elementTypes	src/libs/txml/xmlparse.c	/^  HASH_TABLE elementTypes;$/;"	m	struct:__anon81	file:
elig	src/drivers/olethros/learn.h	/^	float* elig; \/\/\/< Eligibility of previously visited quantums for updates$/;"	m	class:olethros::SegLearn
eligibility	export/include/learning/ann_policy.h	/^	bool eligibility; \/\/\/< eligibility option$/;"	m	class:ANN_Policy
eligibility	src/libs/learning/ann_policy.h	/^	bool eligibility; \/\/\/< eligibility option$/;"	m	class:ANN_Policy
eligibility_traces	export/include/learning/ANN.h	/^	bool eligibility_traces; \/\/\/< use eligibility$/;"	m	struct:ANN_
eligibility_traces	src/libs/learning/ANN.h	/^	bool eligibility_traces; \/\/\/< use eligibility$/;"	m	struct:ANN_
elts	src/libs/tgfclient/gui.h	/^    tGfuiListElement	*elts;$/;"	m	struct:__anon63
emis	src/modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 emis ;$/;"	m	struct:_ssgMaterial	file:
emis	src/tools/accc/accc.h	/^  color_t emis;$/;"	m	struct:mat
emission_colour	src/windows/include/plib/ssg.h	/^  sgVec4 emission_colour ;$/;"	m	class:ssgSimpleState
empty	src/windows/include/plib/sg.h	/^  void empty  (void)	   { radius = - SG_ONE ; }$/;"	f	class:sgSphere
empty	src/windows/include/plib/sg.h	/^  void empty  (void)       { radius = - SGD_ONE ; }$/;"	f	class:sgdSphere
empty	src/windows/include/plib/sg.h	/^  void empty (void) $/;"	f	class:sgBox
empty	src/windows/include/plib/sg.h	/^  void empty (void)$/;"	f	class:sgdBox
emptyBSphere	src/windows/include/plib/ssg.h	/^  void emptyBSphere  ()              { bsphere.empty  ()    ; }$/;"	f	class:ssgEntity
empty_log	src/libs/learning/policy.cpp	/^void empty_log(char* s, ...)$/;"	f
empty_log	src/modules/graphic/ssggraph/SoundInterface.h	/^static void empty_log(char* s, ...)$/;"	f
enabled	export/include/raceman.h	/^    int		enabled;$/;"	m	struct:RmMovieCapture
enabled	src/interfaces/raceman.h	/^    int		enabled;$/;"	m	struct:RmMovieCapture
enabled	src/libs/tgfclient/gui.h	/^    unsigned char	*enabled;$/;"	m	struct:__anon62
enabledClipPlanes	src/windows/include/plib/ssg.h	/^  int enabledClipPlanes ;$/;"	m	class:ssgContext
enables	src/windows/include/plib/ssg.h	/^  int    enables   ; $/;"	m	class:ssgSimpleState
enc	src/libs/txml/xmltok.c	/^  ENCODING enc;$/;"	m	struct:normal_encoding	file:
encPtr	src/libs/txml/xmltok.h	/^  const ENCODING **encPtr;$/;"	m	struct:__anon70
enclose	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void enclose(const BBox& a, const BBox& b) {$/;"	f	class:BBox
encoding	src/libs/txml/xmlparse.c	/^  const ENCODING *encoding;$/;"	m	struct:__anon82	file:
encoding	src/libs/txml/xmlparse.c	270;"	d	file:
encoding	src/libs/txml/xmltok.h	/^struct encoding {$/;"	s
end	src/libs/txml/gennmtab.c	/^  int end;$/;"	m	struct:range	file:
end	src/libs/txml/gennmtab/gennmtab.c	/^  int end;$/;"	m	struct:range	file:
end	src/libs/txml/hashtable.h	/^  NAMED **end;$/;"	m	struct:__anon74
end	src/libs/txml/xmlparse.c	/^  const XML_Char *end;$/;"	m	struct:__anon77	file:
end	src/windows/include/plib/ssg.h	/^  int   end   ;$/;"	m	class:ssgTimedSelector
endElement	src/libs/txml/xml.cpp	/^endElement(void *userData, const char * \/* name *\/)$/;"	f	file:
endElementHandler	src/libs/txml/xmlparse.c	/^  XML_EndElementHandler endElementHandler;$/;"	m	struct:__anon82	file:
endElementHandler	src/libs/txml/xmlparse.c	262;"	d	file:
endLoad	src/windows/include/plib/ssg.h	/^  virtual void endLoad ()$/;"	f	class:ssgLoaderOptions
endRace	src/drivers/bt/bt.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	file:
endRace	src/drivers/bt/driver.cpp	/^void Driver::endRace(tSituation *s)$/;"	f	class:Driver
endRace	src/drivers/damned/damned.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	file:
endRace	src/drivers/damned/driver.cpp	/^void Driver::endRace(tSituation *s)$/;"	f	class:Driver
endRace	src/drivers/olethros/driver.cpp	/^    void Driver::endRace(tSituation *s)$/;"	f	class:olethros::Driver
endRace	src/drivers/olethros/olethros.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	namespace:olethros
endRace	src/drivers/sparkle/driver.cpp	/^void Driver::endRace(tSituation *s)$/;"	f	class:Driver
endRace	src/drivers/sparkle/sparkle.cpp	/^static void endRace(int index, tCarElt *car, tSituation *s)$/;"	f	file:
endWidth	export/include/track.h	/^    tdble endWidth;		\/**< Width of the end of the segment *\/$/;"	m	struct:trackSeg
endWidth	src/interfaces/track.h	/^    tdble endWidth;		\/**< Width of the end of the segment *\/$/;"	m	struct:trackSeg
end_fn	src/windows/include/png.h	/^   png_progressive_end_ptr end_fn;   \/* called after image is complete *\/$/;"	m	struct:png_struct_def
endid	src/drivers/inferno/pathfinder.h	/^		int endid;			\/\/ Id of last pit Segment.$/;"	m	class:PathSegPit
endid	src/drivers/lliaw/pathfinder.h	/^		int endid;			\/\/ Id of last pit Segment.$/;"	m	class:PathSegPit
endid	src/drivers/tita/pathfinder.h	/^		int endid;			\/\/ Id of last pit Segment.$/;"	m	class:PathSegPit
endofprog	src/libs/client/exitmenu.cpp	/^endofprog(void * \/* dummy *\/)$/;"	f	file:
endpointList	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^static EndpointList endpointList[3];$/;"	v	file:
eng_pri	src/modules/graphic/ssggraph/CarSoundData.h	/^	SoundPri eng_pri;$/;"	m	class:CarSoundData
engine	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar engine;$/;"	m	class:CarSoundData
engine	src/modules/simu/simuv2/carstruct.h	/^    tEngine		engine;$/;"	m	struct:__anon18
engineMaxPw	export/include/car.h	/^    tdble	engineMaxPw;$/;"	m	struct:__anon201
engineMaxPw	src/interfaces/car.h	/^    tdble	engineMaxPw;$/;"	m	struct:__anon161
engineMaxTq	export/include/car.h	/^    tdble	engineMaxTq;$/;"	m	struct:__anon201
engineMaxTq	src/interfaces/car.h	/^    tdble	engineMaxTq;$/;"	m	struct:__anon161
engine_backfire	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar engine_backfire;$/;"	m	class:CarSoundData
engine_sound	src/modules/graphic/ssggraph/CarSoundData.h	/^	TorcsSound* engine_sound;$/;"	m	class:CarSoundData
enginerpm	export/include/car.h	/^    tdble	enginerpm;$/;"	m	struct:__anon201
enginerpm	src/interfaces/car.h	/^    tdble	enginerpm;$/;"	m	struct:__anon161
enginerpmMax	export/include/car.h	/^    tdble	enginerpmMax;$/;"	m	struct:__anon201
enginerpmMax	src/interfaces/car.h	/^    tdble	enginerpmMax;$/;"	m	struct:__anon161
enginerpmMaxPw	export/include/car.h	/^    tdble	enginerpmMaxPw;$/;"	m	struct:__anon201
enginerpmMaxPw	src/interfaces/car.h	/^    tdble	enginerpmMaxPw;$/;"	m	struct:__anon161
enginerpmMaxTq	export/include/car.h	/^    tdble	enginerpmMaxTq;$/;"	m	struct:__anon201
enginerpmMaxTq	src/interfaces/car.h	/^    tdble	enginerpmMaxTq;$/;"	m	struct:__anon161
enginerpmRedLine	export/include/car.h	/^    tdble	enginerpmRedLine;$/;"	m	struct:__anon201
enginerpmRedLine	src/interfaces/car.h	/^    tdble	enginerpmRedLine;$/;"	m	struct:__anon161
engpri	src/modules/graphic/ssggraph/SoundInterface.h	/^	SoundPri* engpri; \/\/\/< the engine priority, used for sorting$/;"	m	class:SoundInterface
engpri	src/modules/graphic/ssggraph/SoundInterface.h	/^	SoundPri* engpri;$/;"	m	class:PlibSoundInterface
entity	src/windows/include/plib/ssg.h	/^  ssgEntity **entity     ;$/;"	m	struct:ssgEntityBinding
entity0	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity0	src/libs/txml/xmlrole.c	/^int entity0(PROLOG_STATE *state,$/;"	f	file:
entity1	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity1	src/libs/txml/xmlrole.c	/^int entity1(PROLOG_STATE *state,$/;"	f	file:
entity2	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity2	src/libs/txml/xmlrole.c	/^int entity2(PROLOG_STATE *state,$/;"	f	file:
entity3	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity3	src/libs/txml/xmlrole.c	/^int entity3(PROLOG_STATE *state,$/;"	f	file:
entity4	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity4	src/libs/txml/xmlrole.c	/^int entity4(PROLOG_STATE *state,$/;"	f	file:
entity5	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity5	src/libs/txml/xmlrole.c	/^int entity5(PROLOG_STATE *state,$/;"	f	file:
entity6	src/libs/txml/xmlrole.c	/^  entity0, entity1, entity2, entity3, entity4, entity5, entity6,$/;"	v	file:
entity6	src/libs/txml/xmlrole.c	/^int entity6(PROLOG_STATE *state,$/;"	f	file:
entity7	src/libs/txml/xmlrole.c	/^  entity7, entity8, entity9,$/;"	v	file:
entity7	src/libs/txml/xmlrole.c	/^int entity7(PROLOG_STATE *state,$/;"	f	file:
entity8	src/libs/txml/xmlrole.c	/^  entity7, entity8, entity9,$/;"	v	file:
entity8	src/libs/txml/xmlrole.c	/^int entity8(PROLOG_STATE *state,$/;"	f	file:
entity9	src/libs/txml/xmlrole.c	/^  entity7, entity8, entity9,$/;"	v	file:
entity9	src/libs/txml/xmlrole.c	/^int entity9(PROLOG_STATE *state,$/;"	f	file:
entityValueTok	src/libs/txml/xmltok_impl.c	/^int PREFIX(entityValueTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
entity_list	src/windows/include/plib/ssg.h	/^  ssgEntity **entity_list ;  \/* The list. *\/$/;"	m	class:ssgList
entity_list	src/windows/include/plib/ul.h	/^  void **entity_list ;  \/* The list. *\/$/;"	m	class:ulList
entity_list	src/windows/include/ul.h	/^  void **entity_list ;  \/* The list. *\/$/;"	m	class:ulList
entries	src/windows/include/png.h	/^   png_sPLT_entryp entries;  \/* palette entries *\/$/;"	m	struct:png_sPLT_struct
env	export/include/track.h	/^    char		**env;$/;"	m	struct:__anon185
env	src/interfaces/track.h	/^    char		**env;$/;"	m	struct:__anon152
env	src/windows/include/plib/sl.h	/^  slEnvelope    *env            [ SL_MAX_ENVELOPES ] ;$/;"	m	class:slPlayer
envAngle	src/modules/graphic/ssggraph/grcar.h	/^    tdble               envAngle;$/;"	m	struct:__anon5
envIndex	export/include/track.h	/^    int		envIndex;	\/* Environment mapping image index *\/$/;"	m	struct:trackSeg
envIndex	src/interfaces/track.h	/^    int		envIndex;	\/* Environment mapping image index *\/$/;"	m	struct:trackSeg
envIndex	src/modules/track/track2.cpp	/^static int envIndex;$/;"	v	file:
envIndex	src/modules/track/track3.cpp	/^static int envIndex;$/;"	v	file:
envIndex	src/modules/track/track4.cpp	/^static int envIndex;$/;"	v	file:
envSelector	src/modules/graphic/ssggraph/grcar.h	/^    ssgStateSelector	*envSelector;$/;"	m	struct:__anon5
env_start_time	src/windows/include/plib/sl.h	/^  int            env_start_time [ SL_MAX_ENVELOPES ] ;$/;"	m	class:slPlayer
env_type	src/windows/include/plib/sl.h	/^  slEnvelopeType env_type       [ SL_MAX_ENVELOPES ] ;$/;"	m	class:slPlayer
envnb	export/include/track.h	/^    int			envnb;$/;"	m	struct:__anon185
envnb	src/interfaces/track.h	/^    int			envnb;$/;"	m	struct:__anon152
epilogProcessor	src/libs/txml/xmlparse.c	/^enum XML_Error epilogProcessor(XML_Parser parser,$/;"	f	file:
epilogProcessor	src/libs/txml/xmlparse.c	/^static Processor epilogProcessor;$/;"	v	file:
eqz	export/include/3D/Basic.h	/^inline bool   eqz(Scalar x) { return fabs(x) <= EPSILON; }$/;"	f
eqz	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline bool   eqz(Scalar x) { return fabs(x) <= EPSILON; }$/;"	f
erase	src/tools/trackgen/easymesh.cpp	/^void erase()$/;"	f
errno	src/libs/client/errno.cpp	/^    int errno;$/;"	v
error	export/include/js.h	/^  int          error    ;$/;"	m	class:jsJoystick
error	export/include/learning/ANN.h	/^	real* error; \/\/\/< errors$/;"	m	struct:ANN_
error	src/interfaces/js.h	/^  int          error    ;$/;"	m	class:jsJoystick
error	src/libs/learning/ANN.h	/^	real* error; \/\/\/< errors$/;"	m	struct:ANN_
error	src/libs/txml/xmlrole.c	/^  error;$/;"	v	file:
error	src/libs/txml/xmlrole.c	/^int error(PROLOG_STATE *state,$/;"	f	file:
error	src/windows/include/plib/sl.h	/^  int error ;$/;"	m	class:slDSP
error	src/windows/include/plib/sm.h	/^  int error ;$/;"	m	class:smMixer
error	src/windows/include/plib/ul.h	/^    OSStatus          error;$/;"	m	class:ulDynamicLibrary
error	src/windows/include/ul.h	/^    OSStatus          error;$/;"	m	class:ulDynamicLibrary
errorCode	src/libs/txml/xmlparse.c	/^  enum XML_Error errorCode;$/;"	m	struct:__anon82	typeref:enum:__anon82::XML_Error	file:
errorCode	src/libs/txml/xmlparse.c	280;"	d	file:
error_base	src/libs/tgfclient/fg_gm.cpp	/^	int					error_base;			\/\/ Base error number of the extension.$/;"	m	struct:tagSFG_Display	file:
error_fn	src/windows/include/png.h	/^   png_error_ptr error_fn;    \/* function for printing errors and aborting *\/$/;"	m	struct:png_struct_def
error_ptr	src/windows/include/png.h	/^   png_voidp error_ptr;       \/* user supplied struct for error functions *\/$/;"	m	struct:png_struct_def
eval	export/include/learning/policy.h	/^	real* eval; \/\/\/< evaluation of current aciton$/;"	m	class:DiscretePolicy
eval	src/libs/learning/policy.h	/^	real* eval; \/\/\/< evaluation of current aciton$/;"	m	class:DiscretePolicy
evalUnit	src/libs/tgf/params.cpp	/^evalUnit (char *unit, tdble *dest, int flg)$/;"	f	file:
evaluate	src/drivers/bt/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
evaluate	src/drivers/damned/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
evaluate	src/drivers/olethros/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
evaluate	src/drivers/sparkle/spline.cpp	/^float Spline::evaluate(float z)$/;"	f	class:Spline
event	export/include/car.h	/^    int			event;$/;"	m	struct:__anon198
event	src/interfaces/car.h	/^    int			event;$/;"	m	struct:__anon158
event	src/modules/graphic/ssggraph/grcam.cpp	/^    int		event;$/;"	m	struct:__anon6	file:
event	src/windows/include/plib/sl.h	/^  slEvent    event    ;$/;"	m	struct:slPendingCallBack
eventEndPtr	src/libs/txml/xmlparse.c	/^  const char *eventEndPtr;$/;"	m	struct:__anon82	file:
eventEndPtr	src/libs/txml/xmlparse.c	282;"	d	file:
eventPtr	src/libs/txml/xmlparse.c	/^  const char *eventPtr;$/;"	m	struct:__anon82	file:
eventPtr	src/libs/txml/xmlparse.c	281;"	d	file:
event_base	src/libs/tgfclient/fg_gm.cpp	/^	int					event_base;			\/\/ Base event number of the extension.$/;"	m	struct:tagSFG_Display	file:
execlp	src/windows/osspec.h	39;"	d
exhaustNb	export/include/car.h	/^    int		exhaustNb;	\/**< Number of exhaust pipes (max 2) *\/$/;"	m	struct:__anon196
exhaustNb	src/interfaces/car.h	/^    int		exhaustNb;	\/**< Number of exhaust pipes (max 2) *\/$/;"	m	struct:__anon156
exhaustPos	export/include/car.h	/^    t3Dd	exhaustPos[2];	\/**< Position of exhaust pipes *\/$/;"	m	struct:__anon196
exhaustPos	src/interfaces/car.h	/^    t3Dd	exhaustPos[2];	\/**< Position of exhaust pipes *\/$/;"	m	struct:__anon156
exhaustPower	export/include/car.h	/^    tdble	exhaustPower;	\/**< Power of the flames (from 1 to 3) *\/$/;"	m	struct:__anon196
exhaustPower	src/interfaces/car.h	/^    tdble	exhaustPower;	\/**< Power of the flames (from 1 to 3) *\/$/;"	m	struct:__anon156
exhaust_pressure	src/modules/simu/simuv2/engine.h	/^	tdble       exhaust_pressure;$/;"	m	struct:__anon12
exhaust_refract	src/modules/simu/simuv2/engine.h	/^	tdble       exhaust_refract;$/;"	m	struct:__anon12
exitMainMenuHandle	src/libs/client/exitmenu.cpp	/^static void *exitMainMenuHandle = NULL;$/;"	v	file:
exitMenuInit	src/libs/client/exitmenu.cpp	/^void * exitMenuInit(void *menu, void *menuHandle)$/;"	f
exitmenuHandle	src/libs/client/exitmenu.cpp	/^static void *exitmenuHandle = NULL;$/;"	v	file:
expected_V	export/include/learning/policy.h	/^	real expected_V; \/\/\/< Expected state return$/;"	m	class:DiscretePolicy
expected_V	src/libs/learning/policy.h	/^	real expected_V; \/\/\/< Expected state return$/;"	m	class:DiscretePolicy
expected_r	export/include/learning/policy.h	/^	real expected_r; \/\/\/< Expected reward$/;"	m	class:DiscretePolicy
expected_r	src/libs/learning/policy.h	/^	real expected_r; \/\/\/< Expected reward$/;"	m	class:DiscretePolicy
expectedfuelperlap	src/drivers/olethros/strategy.h	/^	float expectedfuelperlap;		\/\/ Expected fuel per lap (may be very inaccurate).$/;"	m	class:olethros::SimpleStrategy
exponent	src/windows/include/plib/ssg.h	/^  float  exponent ;$/;"	m	class:ssgLight
ext	export/include/track.h	/^    tSegExt		*ext;$/;"	m	struct:trackSeg
ext	src/interfaces/track.h	/^    tSegExt		*ext;$/;"	m	struct:trackSeg
extSndHeader	src/windows/include/plib/sl.h	/^  ExtSoundHeader extSndHeader ;   \/\/ sound header for bufferCmd$/;"	m	class:slDSP
extendBSphere	src/windows/include/plib/ssg.h	/^  void extendBSphere ( sgBox    *b ) { bsphere.extend ( b ) ; }$/;"	f	class:ssgEntity
extendBSphere	src/windows/include/plib/ssg.h	/^  void extendBSphere ( sgSphere *s ) { bsphere.extend ( s ) ; }$/;"	f	class:ssgEntity
extendBSphere	src/windows/include/plib/ssg.h	/^  void extendBSphere ( sgVec3    v ) { bsphere.extend ( v ) ; }$/;"	f	class:ssgEntity
extendedEnvCoord	src/tools/accc/mainaccc.cpp	/^int extendedEnvCoord=0;$/;"	v
extendedStrips	src/tools/accc/mainaccc.cpp	/^int extendedStrips=0;$/;"	v
extendedTriangles	src/tools/accc/mainaccc.cpp	/^int extendedTriangles=0;$/;"	v
extent	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Vector extent;$/;"	m	class:BBox
extent	src/modules/simu/simuv2/SOLID-2.0/src/Box.h	/^  Vector extent;$/;"	m	class:Box
externalEntityContentProcessor	src/libs/txml/xmlparse.c	/^enum XML_Error externalEntityContentProcessor(XML_Parser parser,$/;"	f	file:
externalEntityContentProcessor	src/libs/txml/xmlparse.c	/^static Processor externalEntityContentProcessor;$/;"	v	file:
externalEntityInitProcessor	src/libs/txml/xmlparse.c	/^enum XML_Error externalEntityInitProcessor(XML_Parser parser,$/;"	f	file:
externalEntityInitProcessor	src/libs/txml/xmlparse.c	/^static Processor externalEntityInitProcessor;$/;"	v	file:
externalEntityInitProcessor2	src/libs/txml/xmlparse.c	/^enum XML_Error externalEntityInitProcessor2(XML_Parser parser,$/;"	f	file:
externalEntityInitProcessor2	src/libs/txml/xmlparse.c	/^static Processor externalEntityInitProcessor2;$/;"	v	file:
externalEntityInitProcessor3	src/libs/txml/xmlparse.c	/^enum XML_Error externalEntityInitProcessor3(XML_Parser parser,$/;"	f	file:
externalEntityInitProcessor3	src/libs/txml/xmlparse.c	/^static Processor externalEntityInitProcessor3;$/;"	v	file:
externalEntityRefHandler	src/libs/txml/xmlparse.c	/^  XML_ExternalEntityRefHandler externalEntityRefHandler;$/;"	m	struct:__anon82	file:
externalEntityRefHandler	src/libs/txml/xmlparse.c	268;"	d	file:
external_property_index	src/windows/include/plib/ssg.h	/^  int external_property_index ;$/;"	m	class:ssgState
eye	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 eye;$/;"	m	class:cGrCamera
f	export/include/learning/ANN.h	/^	real (*f) (real x); \/\/\/< activation function$/;"	m	struct:Layer_
f	src/libs/learning/ANN.h	/^	real (*f) (real x); \/\/\/< activation function$/;"	m	struct:Layer_
f	src/modules/graphic/ssggraph/QSoundChar.h	/^	float f;$/;"	m	struct:QSoundChar_
f	src/modules/graphic/ssggraph/SoundInterface.h	/^		float f; \/\/frequency modulation$/;"	m	struct:OpenalSoundInterface::SoundChar_
f	src/modules/graphic/ssggraph/SoundInterface.h	/^		float f; \/\/frequency modulation$/;"	m	struct:PlibSoundInterface::SoundChar_
f	src/modules/graphic/ssggraph/TorcsSound.h	/^    float f; \/\/\/< Environmental frequency shift$/;"	m	class:SoundSource
fStartTime	export/include/tgf.h	/^  double fStartTime;$/;"	m	class:Profiler
fStartTime	src/libs/tgf/tgf.h	/^  double fStartTime;$/;"	m	class:Profiler
f_d	export/include/learning/ANN.h	/^	real (*f_d) (real x); \/\/\/< derivative of activation function$/;"	m	struct:Layer_
f_d	src/libs/learning/ANN.h	/^	real (*f_d) (real x); \/\/\/< derivative of activation function$/;"	m	struct:Layer_
faceName	src/tools/texmapper/maintexmapper.cpp	/^    char	*faceName;$/;"	m	struct:Face	file:
faces	src/tools/texmapper/maintexmapper.cpp	/^    tRingListHead	faces;$/;"	m	struct:__anon30	file:
factor	src/modules/graphic/ssggraph/grcarlight.h	/^  double factor;$/;"	m	class:ssgVtxTableCarlight
factor	src/modules/graphic/ssggraph/grshadow.h	/^  float factor;$/;"	m	class:ssgVtxTableShadow
fakeCrossProduct	export/include/tmath/v2_t.h	/^template<class T> inline T v2t<T>::fakeCrossProduct(const v2t<T>* b) const$/;"	f	class:v2t
fakeCrossProduct	src/libs/math/v2_t.h	/^template<class T> inline T v2t<T>::fakeCrossProduct(const v2t<T>* b) const$/;"	f	class:v2t
false	src/windows/include/plib/ul.h	/^const   int false = 0 ;$/;"	v
false	src/windows/include/ul.h	/^const   int false = 0 ;$/;"	v
far_dist	src/tools/accc/mainaccc.cpp	/^int far_dist=10000;$/;"	v
fctInit	export/include/tgf.h	/^    tfModPrivInit	fctInit;	\/**< init function *\/$/;"	m	struct:ModInfo
fctInit	src/libs/tgf/tgf.h	/^    tfModPrivInit	fctInit;	\/**< init function *\/$/;"	m	struct:ModInfo
fd	export/include/js.h	/^  int          fd       ;$/;"	m	class:jsJoystick
fd	src/interfaces/js.h	/^  int          fd       ;$/;"	m	class:jsJoystick
fd	src/windows/include/plib/sl.h	/^  int fd ;$/;"	m	class:slDSP
fd	src/windows/include/plib/sm.h	/^  int fd ;$/;"	m	class:smMixer
feedBack	src/modules/simu/simuv2/differential.h	/^    tDynAxis	feedBack;$/;"	m	struct:__anon20
feedBack	src/modules/simu/simuv2/wheel.h	/^    tDynAxis	feedBack;$/;"	m	struct:__anon21
ffar	src/modules/graphic/ssggraph/grcam.h	/^    float ffar;$/;"	m	class:cGrPerspCamera
ffar	src/windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
ffar	src/windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
fgColor	src/libs/tgfclient/gui.h	/^    float		*fgColor[3];$/;"	m	struct:__anon61
fgColor	src/libs/tgfclient/gui.h	/^    float		*fgColor[3];$/;"	m	struct:__anon63
fgColor	src/libs/tgfclient/gui.h	/^    float		*fgColor[3];$/;"	m	struct:__anon65
fgColor	src/libs/tgfclient/gui.h	/^    float	*fgColor;$/;"	m	struct:__anon60
fgColor1	src/libs/tgfclient/guihelp.cpp	/^static float	*fgColor1 = &(GfuiColor[GFUI_HELPCOLOR1][0]);$/;"	v	file:
fgColor2	src/libs/tgfclient/guihelp.cpp	/^static float	*fgColor2 = &(GfuiColor[GFUI_HELPCOLOR2][0]);$/;"	v	file:
fgDisplay	src/libs/tgfclient/fg_gm.cpp	/^static SFG_Display fgDisplay;$/;"	v	file:
fgFocusColor	src/libs/tgfclient/gui.h	/^    float		*fgFocusColor[3];$/;"	m	struct:__anon61
fgFocusColor	src/libs/tgfclient/gui.h	/^    float		*fgFocusColor[3];$/;"	m	struct:__anon65
fgInitDone	src/libs/tgfclient/fg_gm.cpp	/^static int fgInitDone = 0;$/;"	v	file:
fgInitialize	src/libs/tgfclient/fg_gm.cpp	/^static void fgInitialize(void)$/;"	f	file:
fgSelectColor	src/libs/tgfclient/gui.h	/^    float		*fgSelectColor[3];$/;"	m	struct:__anon63
fgState	src/libs/tgfclient/fg_gm.cpp	/^static SFG_State fgState;$/;"	v	file:
fghChangeDisplayMode	src/libs/tgfclient/fg_gm.cpp	/^static int fghChangeDisplayMode( int \/* haveToTest *\/ )$/;"	f	file:
fghCheckDisplayMode	src/libs/tgfclient/fg_gm.cpp	/^static int fghCheckDisplayMode( int width, int height, int depth, int refresh )$/;"	f	file:
fghRememberState	src/libs/tgfclient/fg_gm.cpp	/^static void fghRememberState( void )$/;"	f	file:
fghRestoreState	src/libs/tgfclient/fg_gm.cpp	/^static void fghRestoreState( void )$/;"	f	file:
fglutEnterGameMode	src/libs/tgfclient/fg_gm.cpp	/^int fglutEnterGameMode( void )$/;"	f
fglutGameModeString	src/libs/tgfclient/fg_gm.cpp	/^void fglutGameModeString( const char* string )$/;"	f
fglutLeaveGameMode	src/libs/tgfclient/fg_gm.cpp	/^void fglutLeaveGameMode( void )$/;"	f
file	src/modules/telemetry/telemetry.cpp	/^    FILE	*file;	\/* associated file *\/$/;"	m	struct:Tlm	file:
fileL0	src/tools/accc/mainaccc.cpp	/^char * fileL0=NULL;$/;"	v
fileL1	src/tools/accc/mainaccc.cpp	/^char * fileL1=NULL;$/;"	v
fileL2	src/tools/accc/mainaccc.cpp	/^char * fileL2=NULL;$/;"	v
fileL3	src/tools/accc/mainaccc.cpp	/^char * fileL3=NULL;$/;"	v
fileScrollList	src/libs/racescreens/fileselect.cpp	/^static int		fileScrollList;$/;"	v	file:
filename	export/include/raceman.h	/^    char		*filename;$/;"	m	struct:__anon209
filename	export/include/track.h	/^    char	  *filename;	\/**< Filename of the track description *\/$/;"	m	struct:__anon186
filename	src/drivers/bt/learn.h	/^		char filename[1024];$/;"	m	class:SegLearn
filename	src/drivers/damned/learn.h	/^		char filename[1024];$/;"	m	class:SegLearn
filename	src/interfaces/raceman.h	/^    char		*filename;$/;"	m	struct:__anon168
filename	src/interfaces/track.h	/^    char	  *filename;	\/**< Filename of the track description *\/$/;"	m	struct:__anon153
filename	src/libs/tgf/params.cpp	/^    char				*filename;	\/**< Name of the configuration file *\/$/;"	m	struct:parmHeader	file:
filename	src/libs/tgf/params.cpp	/^    char		*filename;	\/**< Name of the output configuration file *\/$/;"	m	struct:parmOutput	file:
filename	src/windows/include/plib/ssg.h	/^  char *filename ; $/;"	m	class:ssgTexture
filler	src/windows/include/png.h	/^   png_byte filler;           \/* filler byte for pixel expansion *\/$/;"	m	struct:png_struct_def
filler	src/windows/include/png.h	/^   png_uint_16 filler;           \/* filler bytes for pixel expansion *\/$/;"	m	struct:png_struct_def
filter	src/windows/include/png.h	/^   png_byte filter;           \/* file filter type (always 0) *\/$/;"	m	struct:png_struct_def
filterABS	src/drivers/bt/driver.cpp	/^float Driver::filterABS(float brake)$/;"	f	class:Driver
filterABS	src/drivers/damned/driver.cpp	/^float Driver::filterABS(float brake)$/;"	f	class:Driver
filterABS	src/drivers/olethros/driver.cpp	/^    float Driver::filterABS(float brake)$/;"	f	class:olethros::Driver
filterABS	src/drivers/sparkle/driver.cpp	/^float Driver::filterABS(float brake)$/;"	f	class:Driver
filterAPit	src/drivers/olethros/driver.cpp	/^    float Driver::filterAPit(float accel)$/;"	f	class:olethros::Driver
filterBColl	src/drivers/bt/driver.cpp	/^float Driver::filterBColl(float brake)$/;"	f	class:Driver
filterBColl	src/drivers/damned/driver.cpp	/^float Driver::filterBColl(float brake)$/;"	f	class:Driver
filterBColl	src/drivers/olethros/driver.cpp	/^    float Driver::filterBColl(float brake)$/;"	f	class:olethros::Driver
filterBColl	src/drivers/sparkle/driver.cpp	/^float Driver::filterBColl(float brake)$/;"	f	class:Driver
filterBPit	src/drivers/bt/driver.cpp	/^float Driver::filterBPit(float brake)$/;"	f	class:Driver
filterBPit	src/drivers/damned/driver.cpp	/^float Driver::filterBPit(float brake)$/;"	f	class:Driver
filterBPit	src/drivers/olethros/driver.cpp	/^    float Driver::filterBPit(float brake)$/;"	f	class:olethros::Driver
filterBPit	src/drivers/sparkle/driver.cpp	/^float Driver::filterBPit(float brake)$/;"	f	class:Driver
filterBrakeSpeed	src/drivers/bt/driver.cpp	/^float Driver::filterBrakeSpeed(float brake)$/;"	f	class:Driver
filterBrakeSpeed	src/drivers/damned/driver.cpp	/^float Driver::filterBrakeSpeed(float brake)$/;"	f	class:Driver
filterBrakeSpeed	src/drivers/olethros/driver.cpp	/^    float Driver::filterBrakeSpeed(float brake)$/;"	f	class:olethros::Driver
filterBrakeSpeed	src/drivers/sparkle/driver.cpp	/^float Driver::filterBrakeSpeed(float brake)$/;"	f	class:Driver
filterOverlap	src/drivers/bt/driver.cpp	/^float Driver::filterOverlap(float accel)$/;"	f	class:Driver
filterOverlap	src/drivers/damned/driver.cpp	/^float Driver::filterOverlap(float accel)$/;"	f	class:Driver
filterOverlap	src/drivers/olethros/driver.cpp	/^    float Driver::filterOverlap(float accel)$/;"	f	class:olethros::Driver
filterSColl	src/drivers/bt/driver.cpp	/^float Driver::filterSColl(float steer)$/;"	f	class:Driver
filterSColl	src/drivers/damned/driver.cpp	/^float Driver::filterSColl(float steer)$/;"	f	class:Driver
filterSColl	src/drivers/olethros/driver.cpp	/^    float Driver::filterSColl(float steer)$/;"	f	class:olethros::Driver
filterSColl	src/drivers/sparkle/driver.cpp	/^float Driver::filterSColl(float steer)$/;"	f	class:Driver
filterTCL	src/drivers/bt/driver.cpp	/^float Driver::filterTCL(float accel)$/;"	f	class:Driver
filterTCL	src/drivers/damned/driver.cpp	/^float Driver::filterTCL(float accel)$/;"	f	class:Driver
filterTCL	src/drivers/olethros/driver.cpp	/^    float Driver::filterTCL(float accel)$/;"	f	class:olethros::Driver
filterTCL	src/drivers/sparkle/driver.cpp	/^float Driver::filterTCL(float accel)$/;"	f	class:Driver
filterTCL_4WD	src/drivers/bt/driver.cpp	/^float Driver::filterTCL_4WD()$/;"	f	class:Driver
filterTCL_4WD	src/drivers/damned/driver.cpp	/^float Driver::filterTCL_4WD()$/;"	f	class:Driver
filterTCL_4WD	src/drivers/olethros/driver.cpp	/^    float Driver::filterTCL_4WD()$/;"	f	class:olethros::Driver
filterTCL_4WD	src/drivers/sparkle/driver.cpp	/^float Driver::filterTCL_4WD()$/;"	f	class:Driver
filterTCL_FWD	src/drivers/bt/driver.cpp	/^float Driver::filterTCL_FWD()$/;"	f	class:Driver
filterTCL_FWD	src/drivers/damned/driver.cpp	/^float Driver::filterTCL_FWD()$/;"	f	class:Driver
filterTCL_FWD	src/drivers/olethros/driver.cpp	/^    float Driver::filterTCL_FWD()$/;"	f	class:olethros::Driver
filterTCL_FWD	src/drivers/sparkle/driver.cpp	/^float Driver::filterTCL_FWD()$/;"	f	class:Driver
filterTCL_RWD	src/drivers/bt/driver.cpp	/^float Driver::filterTCL_RWD()$/;"	f	class:Driver
filterTCL_RWD	src/drivers/damned/driver.cpp	/^float Driver::filterTCL_RWD()$/;"	f	class:Driver
filterTCL_RWD	src/drivers/olethros/driver.cpp	/^    float Driver::filterTCL_RWD()$/;"	f	class:olethros::Driver
filterTCL_RWD	src/drivers/sparkle/driver.cpp	/^float Driver::filterTCL_RWD()$/;"	f	class:Driver
filterTrk	src/drivers/bt/driver.cpp	/^float Driver::filterTrk(float accel)$/;"	f	class:Driver
filterTrk	src/drivers/damned/driver.cpp	/^float Driver::filterTrk(float accel)$/;"	f	class:Driver
filterTrk	src/drivers/olethros/driver.cpp	/^    float Driver::filterTrk(tSituation* s, float accel)$/;"	f	class:olethros::Driver
filterTrk	src/drivers/sparkle/driver.cpp	/^float Driver::filterTrk(float accel)$/;"	f	class:Driver
filter_costs	src/windows/include/png.h	/^   png_uint_16p filter_costs;        \/* relative filter calculation cost *\/$/;"	m	struct:png_struct_def
filter_type	src/windows/include/png.h	/^   png_byte filter_type;    \/* must be PNG_FILTER_TYPE_BASE (from IHDR) *\/$/;"	m	struct:png_info_struct
filter_type	src/windows/include/png.h	/^   png_byte filter_type;$/;"	m	struct:png_struct_def
filter_weights	src/windows/include/png.h	/^   png_uint_16p filter_weights;      \/* weight(s) for previous line(s) *\/$/;"	m	struct:png_struct_def
find	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^const Response& RespTable::find(DtObjectRef obj1, DtObjectRef obj2) const {$/;"	f	class:RespTable
findCar	src/drivers/bt/cardata.cpp	/^SingleCardata *Cardata::findCar(tCarElt *car)$/;"	f	class:Cardata
findCar	src/drivers/damned/cardata.cpp	/^SingleCardata *Cardata::findCar(tCarElt *car)$/;"	f	class:Cardata
findCar	src/drivers/olethros/cardata.cpp	/^SingleCardata *Cardata::findCar(tCarElt *car)$/;"	f	class:olethros::Cardata
findDistmin	src/tools/accc/ac3dload.cpp	/^double  findDistmin(ob_t * ob1, ob_t *ob2)$/;"	f
findEncoding	src/libs/txml/xmltok.c	/^const ENCODING *findEncoding(const ENCODING *enc, const char *ptr, const char *end)$/;"	f	file:
findEndSegId	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findEndSegId	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findEndSegId	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::findEndSegId(int id)$/;"	f	class:Pathfinder
findIndice	src/tools/accc/ac3dload.cpp	/^int findIndice(int indice,int *oldva,int  n)$/;"	f
findPoint	src/tools/accc/ac3dload.cpp	/^int findPoint(point_t * vertexArray,int sizeVertexArray, point_t * theVertex)$/;"	f
findStartSegId	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
findStartSegId	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
findStartSegId	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::findStartSegId(int id)$/;"	f	class:Pathfinder
find_prim	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool find_prim(const BBoxNode *a, const BBoxNode *b,$/;"	f
find_prim	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool find_prim(const BBoxNode *tree, const Convex& c, const BBox& bb, $/;"	f
find_prim	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool find_prim(const Complex& a, const Complex& b, $/;"	f
find_prim	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool find_prim(const Complex& a, const Convex& b, $/;"	f
finish	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^void Complex::finish(int n, const Polytope **p) {$/;"	f	class:Complex
finite	src/drivers/olethros/learn.cpp	28;"	d	file:
fireCount	src/modules/graphic/ssggraph/grcar.h	/^    int			fireCount;$/;"	m	struct:__anon5
firstTime	src/drivers/human/human.cpp	/^static int	firstTime = 0;$/;"	v	file:
firstVisible	src/libs/tgfclient/gui.h	/^    int			firstVisible;$/;"	m	struct:__anon63
first_time	src/windows/include/plib/ssg.h	/^  int    first_time ;$/;"	m	class:ssgBaseTransform
firsttime	src/windows/include/plib/ssg.h	/^  void firsttime ()$/;"	f	class:ssgBaseTransform
fitBBox	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^void BBoxLeaf::fitBBox() { $/;"	f	class:BBoxLeaf
fixedid	src/modules/simu/simuv2/collide.cpp	/^static unsigned int fixedid;$/;"	v	file:
fixedobjects	src/modules/simu/simuv2/collide.cpp	/^static DtShapeRef fixedobjects[100];$/;"	v	file:
flag	src/libs/tgf/params.cpp	/^	int flag;$/;"	m	struct:parmHandle	file:
flags	src/modules/graphic/ssggraph/TorcsSound.h	/^	int flags; \/\/\/< Flags relating to what effects are to be used.$/;"	m	class:TorcsSound
flags	src/windows/include/png.h	/^   png_uint_32 flags;         \/* flags indicating various things to libpng *\/$/;"	m	struct:png_struct_def
flush_dist	src/windows/include/png.h	/^   png_uint_32 flush_dist;    \/* how many rows apart to flush, 0 - no flush *\/$/;"	m	struct:png_struct_def
flush_rows	src/windows/include/png.h	/^   png_uint_32 flush_rows;    \/* number of rows written since last flush *\/$/;"	m	struct:png_struct_def
fname	export/include/js.h	/^  char         fname [ 128 ] ;$/;"	m	class:jsJoystick
fname	src/interfaces/js.h	/^  char         fname [ 128 ] ;$/;"	m	class:jsJoystick
fnear	src/modules/graphic/ssggraph/grcam.h	/^    float fnear;$/;"	m	class:cGrPerspCamera
focus	src/libs/tgfclient/gui.h	/^    int		focus;$/;"	m	struct:GfuiObject
focusMode	src/libs/tgfclient/gui.h	/^    int		focusMode;$/;"	m	struct:GfuiObject
focused	src/libs/tgfclient/gui.h	/^    unsigned char	*focused;$/;"	m	struct:__anon62
fogend	src/modules/graphic/ssggraph/grcam.h	/^    float fogend;$/;"	m	class:cGrPerspCamera
fogstart	src/modules/graphic/ssggraph/grcam.h	/^    float fogstart;$/;"	m	class:cGrPerspCamera
font	src/libs/tgfclient/gui.h	/^    GfuiFontClass	*font;		\/* ttf font *\/$/;"	m	struct:__anon60
font	src/libs/tgfclient/gui.h	/^    GfuiFontClass	*font;$/;"	m	struct:__anon63
font	src/libs/tgfclient/guifont.h	/^    GLFONT	*font;$/;"	m	class:GfuiFontClass
force	export/include/car.h	/^	sgVec3 force;$/;"	m	struct:tCollisionState_
force	src/interfaces/car.h	/^	sgVec3 force;$/;"	m	struct:tCollisionState_
force	src/modules/simu/simuv2/axle.h	/^    tdble	force[2]; \/* right and left *\/$/;"	m	struct:__anon22
force	src/modules/simu/simuv2/susp.h	/^    tdble force;        \/* generated force *\/$/;"	m	struct:Suspension
force	src/windows/include/plib/sg.h	/^  sgVec3 force ;$/;"	m	class:sgParticle
forced_learning	export/include/learning/policy.h	/^	bool forced_learning; \/\/\/< Force agent to take supplied action$/;"	m	class:DiscretePolicy
forced_learning	src/libs/learning/policy.h	/^	bool forced_learning; \/\/\/< Force agent to take supplied action$/;"	m	class:DiscretePolicy
forces	src/modules/simu/simuv2/aero.h	/^    t3Dd	forces;$/;"	m	struct:__anon14
forces	src/modules/simu/simuv2/wheel.h	/^    t3Dd	forces;		\/* forces acting on car *\/$/;"	m	struct:__anon21
forward	export/include/learning/ANN.h	/^	void (*forward) (struct Layer_* current_layer, bool stochastic); \/\/\/< forward calculation$/;"	m	struct:Layer_
forward	src/libs/learning/ANN.h	/^	void (*forward) (struct Layer_* current_layer, bool stochastic); \/\/\/< forward calculation$/;"	m	struct:Layer_
foundNear	src/tools/accc/ac3dload.cpp	/^int foundNear(ob_t * object, ob_t *allobjects, int dist,int print)$/;"	f
fourStateHdle	src/libs/racescreens/miscscreens.cpp	/^static void *fourStateHdle = 0;$/;"	v	file:
fovy	src/modules/graphic/ssggraph/grcam.h	/^    float fovy;$/;"	m	class:cGrPerspCamera
fovydflt	src/modules/graphic/ssggraph/grcam.h	/^    float fovydflt;$/;"	m	class:cGrPerspCamera
fovymax	src/modules/graphic/ssggraph/grcam.h	/^    float fovymax;$/;"	m	class:cGrPerspCamera
fovymin	src/modules/graphic/ssggraph/grcam.h	/^    float fovymin;$/;"	m	class:cGrPerspCamera
fps	export/include/raceman.h	/^    unsigned long	fps;$/;"	m	struct:__anon206
fps	src/interfaces/raceman.h	/^    unsigned long	fps;$/;"	m	struct:__anon165
free	export/include/tgf.h	163;"	d
free	src/libs/tgf/tgf.h	163;"	d
free	src/libs/txml/xmldef.h	30;"	d
freeBlocks	src/libs/txml/xmlparse.c	/^  BLOCK *freeBlocks;$/;"	m	struct:__anon77	file:
freeCarIndex	export/include/track.h	/^	int freeCarIndex;	\/\/ Index of next free car entry (look at the next line).$/;"	m	struct:TrackOwnPit
freeCarIndex	src/interfaces/track.h	/^	int freeCarIndex;	\/\/ Index of next free car entry (look at the next line).$/;"	m	struct:TrackOwnPit
freeI	src/modules/simu/simuv2/transmission.h	/^    tdble	freeI[MAX_GEARS];		\/* Inertia when clutch is applied (wheels side) *\/$/;"	m	struct:__anon28
freeSeg	src/modules/track/track.cpp	/^freeSeg(tTrackSeg *seg)$/;"	f	file:
freeTagList	src/libs/txml/xmlparse.c	/^  TAG *freeTagList;$/;"	m	struct:__anon82	file:
freeTagList	src/libs/txml/xmlparse.c	301;"	d	file:
free_base	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  bool free_base;$/;"	m	class:Complex
free_fn	src/windows/include/png.h	/^   png_free_ptr free_fn;             \/* function for freeing memory *\/$/;"	m	struct:png_struct_def
free_func	src/windows/include/zlib.h	/^typedef void   (*free_func)  OF((voidpf opaque, voidpf address));$/;"	t
free_me	src/windows/include/png.h	/^   png_uint_32 free_me;       \/* flags items libpng is responsible for freeing *\/$/;"	m	struct:png_struct_def
free_me	src/windows/include/png.h	/^   png_uint_32 free_me;     \/* flags items libpng is responsible for freeing *\/$/;"	m	struct:png_info_struct
free_node	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^BBoxInternal *free_node;$/;"	v
free_obj	export/include/learning/List.h	/^	void (*free_obj) (void* obj); \/\/\/< free hook$/;"	m	struct:ListItem
free_obj	src/libs/learning/List.h	/^	void (*free_obj) (void* obj); \/\/\/< free hook$/;"	m	struct:ListItem
free_shared_mem	src/linux/main.cpp	/^void free_shared_mem()$/;"	f
freeobject	src/tools/accc/ac3dload.cpp	/^int freeobject(ob_t *o)$/;"	f
freez	export/include/tgf.h	68;"	d
freez	src/libs/tgf/tgf.h	68;"	d
freez	src/tools/accc/accc.h	167;"	d
frequency	src/windows/include/png.h	/^   png_uint_16 frequency;$/;"	m	struct:png_sPLT_entry_struct
front	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat front[6]; \/\/\/< direction of front $/;"	m	class:OpenalTorcsSound
frontlight1	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*frontlight1 = NULL;$/;"	v
frontlight2	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*frontlight2 = NULL;$/;"	v
frustum	src/windows/include/plib/ssg.h	/^  sgFrustum      *frustum      ;$/;"	m	class:ssgContext
fs	src/libs/raceengineclient/racemanmenu.cpp	/^static tRmFileSelect    fs;$/;"	v	file:
fudge_axis	export/include/js.h	/^  float fudge_axis ( float value, int axis ) const$/;"	f	class:jsJoystick
fudge_axis	src/interfaces/js.h	/^  float fudge_axis ( float value, int axis ) const$/;"	f	class:jsJoystick
fuel	export/include/car.h	/^    tdble		fuel;$/;"	m	struct:__anon203
fuel	export/include/car.h	/^    tdble	fuel;	    	\/**< remaining fuel (liters) *\/$/;"	m	struct:__anon201
fuel	export/include/raceman.h	/^    tdble	fuel;$/;"	m	struct:__anon208
fuel	src/interfaces/car.h	/^    tdble		fuel;$/;"	m	struct:__anon163
fuel	src/interfaces/car.h	/^    tdble	fuel;	    	\/**< remaining fuel (liters) *\/$/;"	m	struct:__anon161
fuel	src/interfaces/raceman.h	/^    tdble	fuel;$/;"	m	struct:__anon167
fuel	src/modules/simu/simuv2/carstruct.h	/^    tdble	fuel;		\/* current fuel load *\/$/;"	m	struct:__anon18
fuelId	src/libs/racescreens/pitmenu.cpp	/^static int		fuelId;$/;"	v	file:
fuel_consumption_instant	export/include/car.h	/^	tdble   fuel_consumption_instant; \/\/ l\/100km (>100 means infinity)$/;"	m	struct:__anon201
fuel_consumption_instant	src/interfaces/car.h	/^	tdble   fuel_consumption_instant; \/\/ l\/100km (>100 means infinity)$/;"	m	struct:__anon161
fuel_consumption_total	export/include/car.h	/^	tdble   fuel_consumption_total; \/\/ l$/;"	m	struct:__anon201
fuel_consumption_total	src/interfaces/car.h	/^	tdble   fuel_consumption_total; \/\/ l$/;"	m	struct:__anon161
fuelchecked	src/drivers/berniw/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	src/drivers/berniw2/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	src/drivers/berniw3/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	src/drivers/inferno/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	src/drivers/lliaw/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelchecked	src/drivers/olethros/strategy.h	/^	bool fuelchecked;				\/\/ Fuel statistics updated.$/;"	m	class:olethros::SimpleStrategy
fuelchecked	src/drivers/sparkle/pit.h	/^		bool fuelchecked;       \/* fuel statistics updated *\/$/;"	m	class:Pit
fuelchecked	src/drivers/tita/mycar.h	/^		bool fuelchecked;$/;"	m	class:MyCar
fuelcons	src/modules/simu/simuv2/engine.h	/^    tdble		fuelcons;$/;"	m	struct:__anon12
fuelperlap	src/drivers/berniw/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	src/drivers/berniw2/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	src/drivers/berniw3/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	src/drivers/inferno/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	src/drivers/lliaw/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fuelperlap	src/drivers/olethros/strategy.h	/^	float fuelperlap;				\/\/ The maximum amount of fuel we needed for a lap.$/;"	m	class:olethros::SimpleStrategy
fuelperlap	src/drivers/sparkle/pit.h	/^		float fuelperlap;       \/* the maximum amount of fuel we needed for a lap *\/$/;"	m	class:Pit
fuelperlap	src/drivers/tita/mycar.h	/^		double fuelperlap;$/;"	m	class:MyCar
fullName	src/libs/tgf/params.cpp	/^    char				*fullName;	\/**< Name of the parameter including the full section name ('\/' separated) *\/$/;"	m	struct:param	file:
fullName	src/libs/tgf/params.cpp	/^    char *fullName;	\/**< Name of the section including full path ('\/' separated) *\/$/;"	m	struct:section	file:
func	src/modules/graphic/ssggraph/grloadac.cpp	/^  int (*func) ( char *s ) ;$/;"	m	struct:Tag	file:
g	src/drivers/berniw/berniw.h	/^static const double g = 9.81;$/;"	v
g	src/drivers/berniw2/berniw.h	/^static const double g = 9.81;$/;"	v
g	src/drivers/berniw3/berniw.h	/^static const double g = 9.81;$/;"	v
g	src/drivers/inferno/berniw.h	/^static const double g = 9.81;$/;"	v
g	src/drivers/lliaw/berniw.h	/^static const double g = 9.81;$/;"	v
g	src/drivers/tita/berniw.h	/^static const double g = 9.81;$/;"	v
g	src/tools/accc/accc.h	/^  double g;$/;"	m	struct:col
gain	src/modules/graphic/ssggraph/grcam.cpp	/^    float gain;$/;"	m	class:cGrCarCamRoadFly	file:
gameScreen	export/include/raceman.h	/^    void		*gameScreen;$/;"	m	struct:__anon209
gameScreen	src/interfaces/raceman.h	/^    void		*gameScreen;$/;"	m	struct:__anon168
gamma	export/include/learning/policy.h	/^	real gamma; \/\/\/< Future discount parameter$/;"	m	class:DiscretePolicy
gamma	src/libs/learning/policy.h	/^	real gamma; \/\/\/< Future discount parameter$/;"	m	class:DiscretePolicy
gamma	src/misc/png2jpg/png2jpg.c	/^static float	gamma;$/;"	v	file:
gamma	src/windows/include/png.h	/^   float gamma;          \/* file gamma value *\/$/;"	m	struct:png_struct_def
gamma	src/windows/include/png.h	/^   float gamma; \/* gamma value of image, if (valid & PNG_INFO_gAMA) *\/$/;"	m	struct:png_info_struct
gamma_16_from_1	src/windows/include/png.h	/^   png_uint_16pp gamma_16_from_1; \/* converts from 1.0 to screen *\/$/;"	m	struct:png_struct_def
gamma_16_table	src/windows/include/png.h	/^   png_uint_16pp gamma_16_table; \/* gamma table for 16-bit depth files *\/$/;"	m	struct:png_struct_def
gamma_16_to_1	src/windows/include/png.h	/^   png_uint_16pp gamma_16_to_1; \/* converts from file to 1.0 *\/$/;"	m	struct:png_struct_def
gamma_from_1	src/windows/include/png.h	/^   png_bytep gamma_from_1;    \/* converts from 1.0 to screen *\/$/;"	m	struct:png_struct_def
gamma_shift	src/windows/include/png.h	/^   int gamma_shift;      \/* number of "insignificant" bits 16-bit gamma *\/$/;"	m	struct:png_struct_def
gamma_table	src/windows/include/png.h	/^   png_bytep gamma_table;     \/* gamma table for 8-bit depth files *\/$/;"	m	struct:png_struct_def
gamma_to_1	src/windows/include/png.h	/^   png_bytep gamma_to_1;      \/* converts from file to 1.0 *\/$/;"	m	struct:png_struct_def
gear	export/include/car.h	/^    int		gear;	    	\/**< current gear *\/$/;"	m	struct:__anon201
gear	export/include/car.h	/^    int		gear;  	    \/**< [-1,6] for gear selection *\/$/;"	m	struct:__anon202
gear	src/interfaces/car.h	/^    int		gear;	    	\/**< current gear *\/$/;"	m	struct:__anon161
gear	src/interfaces/car.h	/^    int		gear;  	    \/**< [-1,6] for gear selection *\/$/;"	m	struct:__anon162
gear	src/modules/simu/simuv2/transmission.h	/^    int		gear;$/;"	m	struct:__anon26
gearEff	src/modules/simu/simuv2/transmission.h	/^    tdble	gearEff[MAX_GEARS];		\/* Gear Efficiency *\/$/;"	m	struct:__anon28
gearMax	src/modules/simu/simuv2/transmission.h	/^    int		gearMax;$/;"	m	struct:__anon26
gearMin	src/modules/simu/simuv2/transmission.h	/^    int		gearMin;$/;"	m	struct:__anon26
gearNb	export/include/car.h	/^    int		gearNb;			\/**< incl reverse and neutral *\/$/;"	m	struct:__anon201
gearNb	src/interfaces/car.h	/^    int		gearNb;			\/**< incl reverse and neutral *\/$/;"	m	struct:__anon161
gearOffset	export/include/car.h	/^    int		gearOffset;		\/**< gearRatio[gear + gearOffset] is the ratio for gear *\/$/;"	m	struct:__anon201
gearOffset	src/interfaces/car.h	/^    int		gearOffset;		\/**< gearRatio[gear + gearOffset] is the ratio for gear *\/$/;"	m	struct:__anon161
gearRatio	export/include/car.h	/^    tdble	gearRatio[MAX_GEARS];	\/**< including final drive *\/$/;"	m	struct:__anon201
gearRatio	src/interfaces/car.h	/^    tdble	gearRatio[MAX_GEARS];	\/**< including final drive *\/$/;"	m	struct:__anon161
gearStr	src/modules/graphic/ssggraph/grboard.cpp	/^static const char *gearStr[MAX_GEARS] = {"R", "N", "1", "2", "3", "4", "5", "6", "7", "8"};$/;"	v	file:
gear_change_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* gear_change_sound; \/\/\/< sound when changing gears$/;"	m	class:SoundInterface
gear_changing	src/modules/graphic/ssggraph/CarSoundData.h	/^	bool gear_changing;$/;"	m	class:CarSoundData
gearbox	src/modules/simu/simuv2/transmission.h	/^    tGearbox	gearbox;$/;"	m	struct:__anon28
gearname	src/modules/simu/simuv2/transmission.cpp	/^static char *gearname[MAX_GEARS] = {"r", "n", "1", "2", "3", "4", "5", "6", "7", "8"};$/;"	v	file:
gears	src/tools/nfsperf/mainnfsperf.cpp	/^char	*gears[] = {"r", "n", "1", "2", "3", "4", "5", "6", "7", "8", "9"};$/;"	v
genRec	src/tools/trackgen/relief.cpp	/^genRec(ssgEntity *e)$/;"	f	file:
generalEntities	src/libs/txml/xmlparse.c	/^  HASH_TABLE generalEntities;$/;"	m	struct:__anon81	file:
generate	src/libs/learning/Distribution.cpp	/^real DiscreteDistribution::generate()$/;"	f	class:DiscreteDistribution
generate	src/libs/learning/Distribution.cpp	/^real ExponentialDistribution::generate()$/;"	f	class:ExponentialDistribution
generate	src/libs/learning/Distribution.cpp	/^real LaplacianDistribution::generate()$/;"	f	class:LaplacianDistribution
generate	src/libs/learning/Distribution.cpp	/^real NormalDistribution::generate()$/;"	f	class:NormalDistribution
generate	src/libs/learning/Distribution.cpp	/^real UniformDistribution::generate()$/;"	f	class:UniformDistribution
generate_mesh	src/tools/trackgen/easymesh.cpp	/^generate_mesh(void)$/;"	f	file:
get	src/windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgColourArray
get	src/windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgNormalArray
get	src/windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgTexCoordArray
get	src/windows/include/plib/ssg.h	/^  float *get ( unsigned int n ) { return (float *) raw_get ( n ) ; }$/;"	f	class:ssgVertexArray
get	src/windows/include/plib/ssg.h	/^  sgMat4 *get ( unsigned int n ) { return (sgMat4 *) raw_get ( n ) ; }$/;"	f	class:ssgTransformArray
get	src/windows/include/plib/ssg.h	/^  short *get ( unsigned int n ) { return (short *) raw_get ( n ) ; }$/;"	f	class:ssgIndexArray
get	src/windows/include/plib/ssg.h	/^  ssgInterleavedArrayElement *get ( unsigned int n ) { return (ssgInterleavedArrayElement *) raw_get ( n ) ; }$/;"	f	class:ssgInterleavedArray
get	src/windows/include/plib/ssg.h	/^  ssgSimpleState* get ( unsigned int n )$/;"	f	class:ssgSimpleStateArray
get	src/windows/include/plib/ssg.h	/^  ssgTexture* get ( unsigned int n )$/;"	f	class:ssgTextureArray
getAbsTime	src/windows/include/plib/ul.h	/^  double getAbsTime   () const { return now   ; }$/;"	f	class:ulClock
getAbsTime	src/windows/include/ul.h	/^  double getAbsTime   () const { return now   ; }$/;"	f	class:ulClock
getAccel	src/drivers/bt/driver.cpp	/^float Driver::getAccel()$/;"	f	class:Driver
getAccel	src/drivers/damned/driver.cpp	/^float Driver::getAccel()$/;"	f	class:Driver
getAccel	src/drivers/olethros/driver.cpp	/^    float Driver::getAccel()$/;"	f	class:olethros::Driver
getAccel	src/drivers/sparkle/driver.cpp	/^float Driver::getAccel()$/;"	f	class:Driver
getActionProbabilities	export/include/learning/ann_policy.h	/^	virtual real* getActionProbabilities () {$/;"	f	class:ANN_Policy
getActionProbabilities	src/libs/learning/ann_policy.h	/^	virtual real* getActionProbabilities () {$/;"	f	class:ANN_Policy
getAllowedSpeed	src/drivers/bt/driver.cpp	/^float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:Driver
getAllowedSpeed	src/drivers/damned/driver.cpp	/^float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:Driver
getAllowedSpeed	src/drivers/olethros/driver.cpp	/^    float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:olethros::Driver
getAllowedSpeed	src/drivers/sparkle/driver.cpp	/^float Driver::getAllowedSpeed(tTrackSeg *segment)$/;"	f	class:Driver
getAttributeId	src/libs/txml/xmlparse.c	/^getAttributeId(XML_Parser parser, const ENCODING *enc, const char *start, const char *end)$/;"	f	file:
getAtts	src/libs/txml/xmltok.h	/^  int (*getAtts)(const ENCODING *enc, const char *ptr,$/;"	m	struct:encoding
getAtts	src/libs/txml/xmltok_impl.c	/^int PREFIX(getAtts)(const ENCODING *enc, const char *ptr,$/;"	f	file:
getAutoClutch	src/drivers/human/human.cpp	/^static tdble getAutoClutch(int idx, int gear, int newgear, tCarElt *car)$/;"	f	file:
getBBox	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  const BBox& getBBox() const { return bbox; }$/;"	f	class:Object
getBSphere	src/windows/include/plib/ssg.h	/^  sgSphere *getBSphere ()$/;"	f	class:ssgEntity
getBase	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  const VertexBase& getBase() const { return base; } $/;"	f	class:Complex
getBasis	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  const Matrix& getBasis() const { return basis; }$/;"	f	class:Transform
getBot	src/windows/include/plib/sg.h	/^  SGDfloat  getBot  (void) const { return bot   ; }$/;"	f	class:sgdFrustum
getBot	src/windows/include/plib/sg.h	/^  SGfloat  getBot  (void) const { return bot   ; }$/;"	f	class:sgFrustum
getBps	src/windows/include/plib/sl.h	/^  int  getBps    () const  { return bps    ; }$/;"	f	class:slSample
getBps	src/windows/include/plib/sl.h	/^  int getBps   () const { return bps    ; }$/;"	f	class:slDSP
getBrake	src/drivers/bt/driver.cpp	/^float Driver::getBrake()$/;"	f	class:Driver
getBrake	src/drivers/damned/driver.cpp	/^float Driver::getBrake()$/;"	f	class:Driver
getBrake	src/drivers/olethros/driver.cpp	/^    float Driver::getBrake()$/;"	f	class:olethros::Driver
getBrake	src/drivers/sparkle/driver.cpp	/^float Driver::getBrake()$/;"	f	class:Driver
getBrakeOvertake	src/drivers/olethros/opponent.h	/^		float getBrakeOvertake () { return brake_overtake_filter; }$/;"	f	class:olethros::Opponent
getBuffer	src/windows/include/plib/sl.h	/^  Uchar *getBuffer () const { return buffer ; }$/;"	f	class:slSample
getCallback	src/windows/include/plib/ssg.h	/^  virtual ssgCallback getCallback ( int cb_type )$/;"	f	class:ssgLeaf
getCarAngle	src/drivers/bt/cardata.h	/^		inline float getCarAngle() { return angle; }$/;"	f	class:SingleCardata
getCarAngle	src/drivers/damned/cardata.h	/^		inline float getCarAngle() { return angle; }$/;"	f	class:SingleCardata
getCarAngle	src/drivers/olethros/cardata.h	/^	inline float getCarAngle() { return angle; }$/;"	f	class:olethros::SingleCardata
getCarPosition	src/modules/graphic/ssggraph/CarSoundData.h	/^	void getCarPosition (sgVec3 p)$/;"	f	class:CarSoundData
getCarPtr	src/drivers/berniw/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	src/drivers/berniw2/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	src/drivers/berniw3/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	src/drivers/bt/driver.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Driver
getCarPtr	src/drivers/bt/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Opponent
getCarPtr	src/drivers/damned/driver.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Driver
getCarPtr	src/drivers/damned/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Opponent
getCarPtr	src/drivers/inferno/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	src/drivers/lliaw/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarPtr	src/drivers/olethros/driver.h	/^	tCarElt *getCarPtr() { return car; }$/;"	f	class:olethros::Driver
getCarPtr	src/drivers/olethros/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:olethros::Opponent
getCarPtr	src/drivers/sparkle/driver.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Driver
getCarPtr	src/drivers/sparkle/opponent.h	/^		tCarElt *getCarPtr() { return car; }$/;"	f	class:Opponent
getCarPtr	src/drivers/tita/mycar.h	/^		inline tCarElt* getCarPtr() { return me; }$/;"	f	class:AbstractCar
getCarSpeed	src/modules/graphic/ssggraph/CarSoundData.h	/^	void getCarSpeed (sgVec3 u)$/;"	f	class:CarSoundData
getCareAbout	src/windows/include/plib/ssg.h	/^  virtual int     getCareAbout ( int mode ) { return dont_care & (1<<mode) ; }$/;"	f	class:ssgSimpleState
getCatchDist	src/drivers/bt/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:Opponent
getCatchDist	src/drivers/damned/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:Opponent
getCatchDist	src/drivers/olethros/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:olethros::Opponent
getCatchDist	src/drivers/sparkle/opponent.h	/^		float getCatchDist() { return catchdist; }$/;"	f	class:Opponent
getCenter	export/include/js.h	/^  void getCenter   ( float *axes ) const { memcpy ( axes, center, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getCenter	src/interfaces/js.h	/^  void getCenter   ( float *axes ) const { memcpy ( axes, center, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getCenter	src/modules/graphic/ssggraph/grcam.h	/^    t3Dd *getCenter(void) {$/;"	f	class:cGrCamera
getCenter	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  const Point& getCenter() const { return center; }$/;"	f	class:BBox
getCenter	src/windows/include/plib/sg.h	/^  const SGDfloat *getCenter (void) const { return center ; }$/;"	f	class:sgdSphere
getCenter	src/windows/include/plib/sg.h	/^  const SGfloat *getCenter (void) const { return center ; }$/;"	f	class:sgSphere
getCenter	src/windows/include/plib/ssgaShapes.h	/^  float *getCenter  () { return center     ; }$/;"	f	class:ssgaShape
getCenterv	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getCenterv(void) {$/;"	f	class:cGrCamera
getClipPlane	src/windows/include/plib/ssg.h	/^  float *getClipPlane ( int i )$/;"	f	class:ssgContext
getClutch	src/drivers/bt/driver.cpp	/^float Driver::getClutch()$/;"	f	class:Driver
getClutch	src/drivers/damned/driver.cpp	/^float Driver::getClutch()$/;"	f	class:Driver
getClutch	src/drivers/inferno/inferno.cpp	/^float getClutch(MyCar* myc, tCarElt* car)$/;"	f
getClutch	src/drivers/lliaw/lliaw.cpp	/^float getClutch(MyCar* myc, tCarElt* car)$/;"	f
getClutch	src/drivers/olethros/driver.cpp	/^    float Driver::getClutch()$/;"	f	class:olethros::Driver
getClutch	src/drivers/tita/tita.cpp	/^float getClutch(MyCar* myc, tCarElt* car)$/;"	f
getColour	src/windows/include/plib/ssg.h	/^  float *getColour  (int i){ if(i>=getNumColours())i=getNumColours()-1;$/;"	f	class:ssgVtxTable
getColour	src/windows/include/plib/ssg.h	/^  float *getColour  (int i){ if(i>=num_colours)i=num_colours-1;$/;"	f	class:ssgVTable
getColour	src/windows/include/plib/ssg.h	/^  void getColour   ( GLenum which, sgVec4 col )$/;"	f	class:ssgLight
getColourList	src/windows/include/plib/ssg.h	/^  void getColourList   ( void **list ) { *list = colours   -> get ( 0 ) ; } $/;"	f	class:ssgVtxTable
getColourList	src/windows/include/plib/ssg.h	/^  void getColourList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getColourMaterial	src/windows/include/plib/ssg.h	/^  virtual GLenum getColourMaterial ()$/;"	f	class:ssgSimpleState
getColours	src/windows/include/plib/ssg.h	/^  ssgColourArray   *getColours   () { return colours   ; }$/;"	f	class:ssgVtxTable
getComment	src/windows/include/plib/sl.h	/^  char  *getComment () const { return comment ; }$/;"	f	class:slSample
getControl	src/windows/include/plib/ssg.h	/^  ssgAnimEnum getControl () { return running ; }$/;"	f	class:ssgTimedSelector
getCreationRate	src/windows/include/plib/ssgaParticleSystem.h	/^  float getCreationRate () { return create_rate ; }$/;"	f	class:ssgaParticleSystem
getCullFace	src/windows/include/plib/ssg.h	/^  int  getCullFace () { return cull_face ; }$/;"	f	class:ssgLeaf
getCurCamHead	src/modules/graphic/ssggraph/grscreen.h	/^		int getCurCamHead(void) { return curCamHead; }$/;"	f	class:cGrScreen
getCurCamera	src/modules/graphic/ssggraph/grscreen.h	/^		cGrCamera* getCurCamera(void) { return curCam; }$/;"	f	class:cGrScreen
getCurrBank	src/windows/include/plib/ssg.h	/^  float getCurrBank () { return curr_bank ; }$/;"	f	class:ssgTweenController
getCurrent	src/windows/include/plib/sl.h	/^  static slScheduler *getCurrent () { return current ; }$/;"	f	class:slScheduler
getCurrentCar	src/modules/graphic/ssggraph/grscreen.h	/^		tCarElt *getCurrentCar(void) { return curCar; }$/;"	f	class:cGrScreen
getCurrentPos	src/drivers/berniw/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	src/drivers/berniw2/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	src/drivers/berniw3/mycar.h	/^		inline v3d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	src/drivers/inferno/mycar.h	/^		inline vec2d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	src/drivers/lliaw/mycar.h	/^		inline vec2d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentPos	src/drivers/tita/mycar.h	/^		inline vec2d* getCurrentPos() { return &currentpos; }$/;"	f	class:AbstractCar
getCurrentSegId	src/drivers/berniw/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	src/drivers/berniw2/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	src/drivers/berniw3/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	src/drivers/inferno/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	src/drivers/lliaw/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegId	src/drivers/tita/mycar.h	/^		inline int getCurrentSegId() { return currentsegid; }$/;"	f	class:AbstractCar
getCurrentSegment	src/drivers/berniw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/berniw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/berniw/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/berniw/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/berniw2/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/berniw2/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/berniw2/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/berniw2/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/berniw3/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/berniw3/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/berniw3/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/berniw3/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/inferno/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/inferno/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/inferno/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/inferno/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/lliaw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/lliaw/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/lliaw/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/lliaw/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/tita/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/tita/pathfinder.h	/^inline int Pathfinder::getCurrentSegment(tCarElt* car, int range)$/;"	f	class:Pathfinder
getCurrentSegment	src/drivers/tita/trackdesc.cpp	/^int TrackDesc::getCurrentSegment(tCarElt* car)$/;"	f	class:TrackDesc
getCurrentSegment	src/drivers/tita/trackdesc.h	/^inline int TrackDesc::getCurrentSegment(tCarElt* car, int lastId, int range)$/;"	f	class:TrackDesc
getDListIndex	src/windows/include/plib/ssg.h	/^  GLuint getDListIndex () { return dlist ; }$/;"	f	class:ssgLeaf
getDamage	src/drivers/bt/opponent.h	/^		int getDamage() { return car->_dammage; }$/;"	f	class:Opponent
getDamage	src/drivers/damned/opponent.h	/^		int getDamage() { return car->_dammage; }$/;"	f	class:Opponent
getDamping	src/windows/include/plib/sg.h	/^  float       getDamping    () { return damping    ; }$/;"	f	class:sgSpringDamper
getDeadBand	export/include/js.h	/^  float getDeadBand ( int axis ) const       { return dead_band [ axis ] ; }$/;"	f	class:jsJoystick
getDeadBand	src/interfaces/js.h	/^  float getDeadBand ( int axis ) const       { return dead_band [ axis ] ; }$/;"	f	class:jsJoystick
getDefaultViewMode	src/modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::getDefaultViewMode() {$/;"	f	class:cGrTrackMap
getDeltaPitch	src/drivers/berniw/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	src/drivers/berniw2/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	src/drivers/berniw3/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	src/drivers/inferno/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	src/drivers/lliaw/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaPitch	src/drivers/tita/mycar.h	/^		inline double getDeltaPitch() { return deltapitch; }$/;"	f	class:MyCar
getDeltaTime	src/windows/include/plib/ul.h	/^  double getDeltaTime () const { return delta ; }$/;"	f	class:ulClock
getDeltaTime	src/windows/include/ul.h	/^  double getDeltaTime () const { return delta ; }$/;"	f	class:ulClock
getDepthCallback	src/windows/include/plib/ssgaWaveSystem.h	/^  ssgaWSDepthCallback getDepthCallback () { return gridGetter ; } $/;"	f	class:ssgaWaveSystem
getDescender	src/libs/tgfclient/guifont.cpp	/^int GfuiFontClass::getDescender() const$/;"	f	class:GfuiFontClass
getDir	src/drivers/berniw/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	src/drivers/berniw/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	src/drivers/berniw2/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	src/drivers/berniw2/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	src/drivers/berniw3/mycar.h	/^		inline v3d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	src/drivers/berniw3/pathfinder.h	/^		inline v3d* getDir() { return &d; }$/;"	f	class:PathSeg
getDir	src/drivers/inferno/mycar.h	/^		inline vec2d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	src/drivers/inferno/pathfinder.h	/^		inline vec2d* getDir(int segid) { return &ps[getid(segid)].d; }$/;"	f	class:PathSeg
getDir	src/drivers/lliaw/mycar.h	/^		inline vec2d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	src/drivers/lliaw/pathfinder.h	/^		inline vec2d* getDir(int segid) { return &ps[getid(segid)].d; }$/;"	f	class:PathSeg
getDir	src/drivers/tita/mycar.h	/^		inline vec2d* getDir() { return &dir; }$/;"	f	class:AbstractCar
getDir	src/drivers/tita/pathfinder.h	/^		inline vec2d* getDir(int segid) { return &ps[getid(segid)].d; }$/;"	f	class:PathSeg
getDist2	src/modules/graphic/ssggraph/grcam.cpp	/^cGrCamera::getDist2 (tCarElt *car)$/;"	f	class:cGrCamera
getDistToSegEnd	src/drivers/bt/driver.cpp	/^float Driver::getDistToSegEnd()$/;"	f	class:Driver
getDistToSegEnd	src/drivers/damned/driver.cpp	/^float Driver::getDistToSegEnd()$/;"	f	class:Driver
getDistToSegEnd	src/drivers/olethros/driver.cpp	/^    float Driver::getDistToSegEnd()$/;"	f	class:olethros::Driver
getDistToSegEnd	src/drivers/sparkle/driver.cpp	/^float Driver::getDistToSegEnd()$/;"	f	class:Driver
getDistToSegStart	src/drivers/bt/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:Opponent
getDistToSegStart	src/drivers/damned/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:Opponent
getDistToSegStart	src/drivers/olethros/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:olethros::Opponent
getDistToSegStart	src/drivers/sparkle/opponent.cpp	/^float Opponent::getDistToSegStart()$/;"	f	class:Opponent
getDistance	src/drivers/bt/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:Opponent
getDistance	src/drivers/damned/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:Opponent
getDistance	src/drivers/olethros/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:olethros::Opponent
getDistance	src/drivers/sparkle/opponent.h	/^		float getDistance() { return distance; }$/;"	f	class:Opponent
getDrawBackground	src/modules/graphic/ssggraph/grcam.h	/^    int getDrawBackground(void)	{ return drawBackground; }$/;"	f	class:cGrCamera
getDrawCurrent	src/modules/graphic/ssggraph/grcam.h	/^    int getDrawCurrent(void)	{ return drawCurrent; }$/;"	f	class:cGrCamera
getDrawDriver	src/modules/graphic/ssggraph/grcam.h	/^    int getDrawDriver(void)	{ return drawDriver; }$/;"	f	class:cGrCamera
getDuration	src/windows/include/plib/sl.h	/^  float getDuration () const { return (float) getLength() \/$/;"	f	class:slSample
getDuration	src/windows/include/plib/ssg.h	/^  float getDuration ( int i = 0 ) { return times [ i ] ; }$/;"	f	class:ssgTimedSelector
getEdgeFlatten	src/windows/include/plib/ssgaWaveSystem.h	/^  float getEdgeFlatten   () { return edgeFlatten ; }$/;"	f	class:ssgaWaveSystem
getElapsedTime	src/windows/include/plib/sl.h	/^  float getElapsedTime ( int then ) const { return (float)(now-then)\/(float)getRate() ; }$/;"	f	class:slScheduler
getEngineSound	src/modules/graphic/ssggraph/CarSoundData.h	/^	TorcsSound* getEngineSound () {return engine_sound;}$/;"	f	class:CarSoundData
getEntity	src/windows/include/plib/ssg.h	/^  ssgEntity *getEntity ( unsigned int n )$/;"	f	class:ssgList
getEntity	src/windows/include/plib/ul.h	/^  void *getEntity ( unsigned int n )$/;"	f	class:ulList
getEntity	src/windows/include/ul.h	/^  void *getEntity ( unsigned int n )$/;"	f	class:ulList
getErrorSgn	src/drivers/berniw/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	src/drivers/berniw2/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	src/drivers/berniw3/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	src/drivers/inferno/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	src/drivers/lliaw/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getErrorSgn	src/drivers/tita/mycar.h	/^		inline double getErrorSgn() { return derrorsgn; }$/;"	f	class:MyCar
getExtent	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  const Vector& getExtent() const { return extent; }$/;"	f	class:BBox
getExtent	src/modules/simu/simuv2/SOLID-2.0/src/Box.h	/^  const Vector& getExtent() const { return extent; }$/;"	f	class:Box
getExternalPropertyIndex	src/windows/include/plib/ssg.h	/^  int  getExternalPropertyIndex ()$/;"	f	class:ssgLeaf
getExternalPropertyIndex	src/windows/include/plib/ssg.h	/^  int  getExternalPropertyIndex (void) { return external_property_index ; }$/;"	f	class:ssgState
getFOV	src/windows/include/plib/sg.h	/^  void getFOV ( SGDfloat *h, SGDfloat *v ) const $/;"	f	class:sgdFrustum
getFOV	src/windows/include/plib/sg.h	/^  void getFOV ( SGfloat *h, SGfloat *v ) const $/;"	f	class:sgFrustum
getFar	src/windows/include/plib/sg.h	/^  SGDfloat  getFar  (void) const { return ffar  ; }$/;"	f	class:sgdFrustum
getFar	src/windows/include/plib/sg.h	/^  SGfloat  getFar  (void) const { return ffar  ; }$/;"	f	class:sgFrustum
getFilename	src/windows/include/plib/ssg.h	/^  char *getFilename(void) { return filename ; }$/;"	f	class:ssgTexture
getFirstSelectedKid	src/windows/include/plib/ssg.h	/^  ssgEntity *getFirstSelectedKid ()$/;"	f	class:ssgSelector
getFirstSelection	src/windows/include/plib/ssg.h	/^  int getFirstSelection ()$/;"	f	class:ssgSelector
getFirstWallStart	src/modules/simu/simuv2/collide.cpp	/^static tTrackSeg *getFirstWallStart(tTrackSeg *start, int side)$/;"	f	file:
getFogEnd	src/modules/graphic/ssggraph/grcam.h	/^    float getFogEnd(void) { return fogend; }$/;"	f	class:cGrPerspCamera
getFogStart	src/modules/graphic/ssggraph/grcam.h	/^    float getFogStart(void) { return fogstart; }$/;"	f	class:cGrPerspCamera
getForce	src/windows/include/plib/sg.h	/^  SGfloat *getForce () { return force    ; }$/;"	f	class:sgParticle
getForce	src/windows/include/plib/sg.h	/^  const SGfloat *getForce () const { return force    ; }$/;"	f	class:sgParticle
getFovY	src/modules/graphic/ssggraph/grcam.h	/^    virtual float getFovY(void) {$/;"	f	class:cGrCamera
getFovY	src/modules/graphic/ssggraph/grcam.h	/^   virtual float getFovY(void) {$/;"	f	class:cGrPerspCamera
getFrameRate	src/windows/include/plib/ul.h	/^  double getFrameRate () const { return 1.0 \/ delta ; }$/;"	f	class:ulClock
getFrameRate	src/windows/include/ul.h	/^  double getFrameRate () const { return 1.0 \/ delta ; }$/;"	f	class:ulClock
getFrustum	src/windows/include/plib/ssg.h	/^  sgFrustum *getFrustum () { return frustum ; }$/;"	f	class:ssgContext
getFuel	src/drivers/sparkle/pit.cpp	/^float Pit::getFuel()$/;"	f	class:Pit
getFullName	src/libs/tgf/params.cpp	/^getFullName (const char *sectionName, const char *paramName)$/;"	f	file:
getFuncAddress	src/windows/include/plib/ul.h	/^    void* getFuncAddress ( const char *funcname )$/;"	f	class:ulDynamicLibrary
getFuncAddress	src/windows/include/plib/ul.h	/^  void *getFuncAddress ( const char *funcname )$/;"	f	class:ulDynamicLibrary
getFuncAddress	src/windows/include/ul.h	/^    void* getFuncAddress ( const char *funcname )$/;"	f	class:ulDynamicLibrary
getFuncAddress	src/windows/include/ul.h	/^  void *getFuncAddress ( const char *funcname )$/;"	f	class:ulDynamicLibrary
getGLTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^int getGLTextureMaxSize(void)$/;"	f
getGLTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^void getGLTextureMaxSize(int &result)$/;"	f
getGLtype	src/windows/include/plib/ssg.h	/^  GLenum getGLtype () { return getPrimitiveType() ; }$/;"	f	class:ssgLeaf
getGear	src/drivers/bt/driver.cpp	/^int Driver::getGear()$/;"	f	class:Driver
getGear	src/drivers/damned/driver.cpp	/^int Driver::getGear()$/;"	f	class:Driver
getGear	src/drivers/olethros/driver.cpp	/^    int Driver::getGear()$/;"	f	class:olethros::Driver
getGear	src/drivers/sparkle/driver.cpp	/^int Driver::getGear()$/;"	f	class:Driver
getGlobalGain	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual float getGlobalGain() { return global_gain; }$/;"	f	class:OpenalSoundInterface
getGlobalGain	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual float getGlobalGain() {return 1.0f;}$/;"	f	class:SoundInterface
getGlobalGain	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual float getGlobalGain() {return global_gain;}$/;"	f	class:PlibSoundInterface
getHFOV	src/windows/include/plib/sg.h	/^  SGDfloat  getHFOV (void) const { return hfov  ; }$/;"	f	class:sgdFrustum
getHFOV	src/windows/include/plib/sg.h	/^  SGfloat  getHFOV (void) const { return hfov  ; }$/;"	f	class:sgFrustum
getHOT	src/tools/trackgen/util.cpp	/^getHOT(ssgRoot *root, float x, float y)$/;"	f
getHandle	src/windows/include/plib/ssg.h	/^  GLuint getHandle () { return handle ; }$/;"	f	class:ssgTexture
getHeading	src/windows/include/plib/ssgaWaveSystem.h	/^  float getHeading () { return heading  ; }$/;"	f	class:ssgaWaveTrain
getHeight	src/libs/tgfclient/guifont.cpp	/^int GfuiFontClass::getHeight() const$/;"	f	class:GfuiFontClass
getHotColour	src/windows/include/plib/ssgaFire.h	/^  void getHotColour ( sgVec4 col ) { sgCopyVec4 ( col, hot_colour ) ; }$/;"	f	class:ssgaFire
getId	src/modules/graphic/ssggraph/grcam.h	/^    int getId(void)		{ return id; }$/;"	f	class:cGrCamera
getId	src/modules/graphic/ssggraph/grscreen.h	/^		int getId(void) { return id; }$/;"	f	class:cGrScreen
getInPit	src/drivers/bt/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:Pit
getInPit	src/drivers/damned/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:Pit
getInPit	src/drivers/olethros/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:olethros::Pit
getInPit	src/drivers/sparkle/pit.h	/^		bool getInPit() { return inpitlane; }$/;"	f	class:Pit
getIndex	src/modules/graphic/ssggraph/grvertexarray.h	/^  short *getIndex  (int i){ if(i>=getNumIndices())i=getNumIndices()-1;$/;"	f	class:ssgGrVtxArray
getIndex	src/windows/include/plib/ssg.h	/^  short *getIndex  (int i){ if(i>=getNumIndices())i=getNumIndices()-1;$/;"	f	class:ssgVtxArray
getIndexList	src/modules/graphic/ssggraph/grvertexarray.h	/^  void getIndexList ( void **list ) { *list = indices  -> get ( 0 ) ; }$/;"	f	class:ssgGrVtxArray
getIndexList	src/windows/include/plib/ssg.h	/^  void getIndexList ( void **list ) { *list = indices  -> get ( 0 ) ; }$/;"	f	class:ssgVtxArray
getInstance	src/libs/tgf/profiler.cpp	/^Profiler * Profiler::getInstance() {$/;"	f	class:Profiler
getKalpha	src/drivers/berniw/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKalpha() { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	src/drivers/inferno/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	src/drivers/inferno/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment2D
getKalpha	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment2D
getKalpha	src/drivers/tita/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment
getKalpha	src/drivers/tita/trackdesc.h	/^		inline tdble getKalpha() const { return kalpha; }$/;"	f	class:TrackSegment2D
getKarmaFilename	src/drivers/bt/learn.cpp	/^FILE* SegLearn::getKarmaFilename(tTrack* track, tSituation *s, int driverindex)$/;"	f	class:SegLearn
getKarmaFilename	src/drivers/damned/learn.cpp	/^FILE* SegLearn::getKarmaFilename(tTrack* track, tSituation *s, int driverindex)$/;"	f	class:SegLearn
getKbeta	src/drivers/berniw/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKbeta() { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	src/drivers/inferno/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	src/drivers/inferno/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment2D
getKbeta	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment2D
getKbeta	src/drivers/tita/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment
getKbeta	src/drivers/tita/trackdesc.h	/^		inline tdble getKbeta() const { return kbeta; }$/;"	f	class:TrackSegment2D
getKfriction	src/drivers/berniw/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKfriction() { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	src/drivers/inferno/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	src/drivers/inferno/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment2D
getKfriction	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment2D
getKfriction	src/drivers/tita/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment
getKfriction	src/drivers/tita/trackdesc.h	/^		inline tdble getKfriction() const { return pTrackSeg->surface->kFriction; }$/;"	f	class:TrackSegment2D
getKgamma	src/drivers/berniw/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKgamma() { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	src/drivers/inferno/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	src/drivers/inferno/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment2D
getKgamma	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment2D
getKgamma	src/drivers/tita/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment
getKgamma	src/drivers/tita/trackdesc.h	/^		inline tdble getKgamma() const { return kgamma; }$/;"	f	class:TrackSegment2D
getKid	src/windows/include/plib/ssg.h	/^  ssgEntity *getKid     ( int n ) { return kids.getEntity  ( n ) ; }$/;"	f	class:ssgBranch
getKidPostDrawCB	src/windows/include/plib/ssgaShapes.h	/^  ssgCallback  getKidPostDrawCB () { return kidPostDrawCB ; }$/;"	f	class:ssgaShape
getKidPreDrawCB	src/windows/include/plib/ssgaShapes.h	/^  ssgCallback  getKidPreDrawCB  () { return kidPreDrawCB  ; }$/;"	f	class:ssgaShape
getKidState	src/windows/include/plib/ssgaShapes.h	/^  ssgState    *getKidState      () { return kidState      ; }$/;"	f	class:ssgaShape
getKrollres	src/drivers/berniw/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKrollres() { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	src/drivers/inferno/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	src/drivers/inferno/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment2D
getKrollres	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment2D
getKrollres	src/drivers/tita/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment
getKrollres	src/drivers/tita/trackdesc.h	/^		inline tdble getKrollres() const { return pTrackSeg->surface->kRollRes; }$/;"	f	class:TrackSegment2D
getKroughness	src/drivers/berniw/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKroughness() { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	src/drivers/inferno/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	src/drivers/inferno/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment2D
getKroughness	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment2D
getKroughness	src/drivers/tita/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment
getKroughness	src/drivers/tita/trackdesc.h	/^		inline tdble getKroughness() const { return pTrackSeg->surface->kRoughness; }$/;"	f	class:TrackSegment2D
getKroughwavelen	src/drivers/berniw/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	src/drivers/berniw2/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	src/drivers/berniw3/trackdesc.h	/^		inline tdble getKroughwavelen() { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	src/drivers/inferno/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	src/drivers/inferno/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment2D
getKroughwavelen	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	src/drivers/lliaw/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment2D
getKroughwavelen	src/drivers/tita/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment
getKroughwavelen	src/drivers/tita/trackdesc.h	/^		inline tdble getKroughwavelen() const { return pTrackSeg->surface->kRoughWaveLen; }$/;"	f	class:TrackSegment2D
getLODFactor	src/modules/graphic/ssggraph/grcam.cpp	/^float cGrPerspCamera::getLODFactor(float x, float y, float z) {$/;"	f	class:cGrPerspCamera
getLODFactor	src/modules/graphic/ssggraph/grcam.h	/^    float getLODFactor(float x, float y, float z) { return 1; }$/;"	f	class:cGrOrthoCamera
getLPfilter	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual float getLPfilter() {return lowpass;}$/;"	f	class:TorcsSound
getLambda	src/windows/include/plib/ssgaWaveSystem.h	/^  float getLambda () { return lambda  ; }$/;"	f	class:ssgaWaveTrain
getLastActionValue	export/include/learning/ann_policy.h	/^	virtual real getLastActionValue () {return J_ps_pa;} $/;"	f	class:ANN_Policy
getLastActionValue	export/include/learning/policy.h	/^	virtual real getLastActionValue () {return Q[ps][pa];}$/;"	f	class:DiscretePolicy
getLastActionValue	src/libs/learning/ann_policy.h	/^	virtual real getLastActionValue () {return J_ps_pa;} $/;"	f	class:ANN_Policy
getLastActionValue	src/libs/learning/policy.h	/^	virtual real getLastActionValue () {return Q[ps][pa];}$/;"	f	class:DiscretePolicy
getLastTransform	src/windows/include/plib/ssg.h	/^  void getLastTransform ( sgMat4 xform )$/;"	f	class:ssgBaseTransform
getLeafCount	src/windows/include/plib/ssg.h	/^  int getLeafCount   () { return leaf_count ; }$/;"	f	class:ssgStatistics
getLeft	src/windows/include/plib/sg.h	/^  SGDfloat  getLeft (void) const { return left  ; }$/;"	f	class:sgdFrustum
getLeft	src/windows/include/plib/sg.h	/^  SGfloat  getLeft (void) const { return left  ; }$/;"	f	class:sgFrustum
getLeftBorder	src/drivers/berniw/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	src/drivers/berniw2/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	src/drivers/berniw3/trackdesc.h	/^		inline v3d* getLeftBorder() { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	src/drivers/inferno/trackdesc.h	/^		inline const vec2d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment2D
getLeftBorder	src/drivers/inferno/trackdesc.h	/^		inline const vec3d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	src/drivers/lliaw/trackdesc.h	/^		inline const vec2d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment2D
getLeftBorder	src/drivers/lliaw/trackdesc.h	/^		inline const vec3d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment
getLeftBorder	src/drivers/tita/trackdesc.h	/^		inline const vec2d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment2D
getLeftBorder	src/drivers/tita/trackdesc.h	/^		inline const vec3d* getLeftBorder() const { return &l; }$/;"	f	class:TrackSegment
getLength	src/drivers/berniw/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	src/drivers/berniw/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	src/drivers/berniw2/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	src/drivers/berniw2/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	src/drivers/berniw3/pathfinder.h	/^		inline tdble getLength() { return length; }$/;"	f	class:PathSeg
getLength	src/drivers/berniw3/trackdesc.h	/^		inline tdble getLength() { return length; }$/;"	f	class:TrackSegment
getLength	src/drivers/inferno/pathfinder.h	/^		inline tdble getLength(int segid) { return ps[getid(segid)].length; }$/;"	f	class:PathSeg
getLength	src/drivers/inferno/trackdesc.h	/^		inline tdble getLength() const { return length; }$/;"	f	class:TrackSegment
getLength	src/drivers/lliaw/pathfinder.h	/^		inline tdble getLength(int segid) { return ps[getid(segid)].length; }$/;"	f	class:PathSeg
getLength	src/drivers/lliaw/trackdesc.h	/^		inline tdble getLength() const { return length; }$/;"	f	class:TrackSegment
getLength	src/drivers/tita/pathfinder.h	/^		inline tdble getLength(int segid) { return ps[getid(segid)].length; }$/;"	f	class:PathSeg
getLength	src/drivers/tita/trackdesc.h	/^		inline tdble getLength() const { return length; }$/;"	f	class:TrackSegment
getLength	src/windows/include/plib/sl.h	/^  int    getLength () const { return length ; }$/;"	f	class:slSample
getLength	src/windows/include/plib/ssgaWaveSystem.h	/^  float getLength () { return length  ; }$/;"	f	class:ssgaWaveTrain
getLimits	src/windows/include/plib/ssg.h	/^  void getLimits ( int *st, int *en )$/;"	f	class:ssgTimedSelector
getLine	src/modules/graphic/ssggraph/grcarlight.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:ssgVtxTableCarlight
getLine	src/modules/graphic/ssggraph/grshadow.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:ssgVtxTableShadow
getLine	src/modules/graphic/ssggraph/grsmoke.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:ssgVtxTableSmoke
getLine	src/modules/graphic/ssggraph/grvertexarray.h	/^  void getLine ( int n, short *v1, short *v2 ) { ssgVtxArray::getLine(n,v1,v2);}$/;"	f	class:ssgGrVtxArray
getLine	src/modules/graphic/ssggraph/grvtxtable.h	/^  void getLine ( int n, short *v1, short *v2 )  { ssgVtxTable::getLine(n,v1,v2);}$/;"	f	class:grVtxTable
getLoc	src/drivers/berniw/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	src/drivers/berniw2/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	src/drivers/berniw3/pathfinder.h	/^		inline v3d* getLoc() { return &p; }$/;"	f	class:PathSeg
getLoc	src/drivers/inferno/pathfinder.h	/^		inline vec2d* getLoc(int segid) { return &ps[getid(segid)].p; }$/;"	f	class:PathSeg
getLoc	src/drivers/lliaw/pathfinder.h	/^		inline vec2d* getLoc(int segid) { return &ps[getid(segid)].p; }$/;"	f	class:PathSeg
getLoc	src/drivers/tita/pathfinder.h	/^		inline vec2d* getLoc(int segid) { return &ps[getid(segid)].p; }$/;"	f	class:PathSeg
getLower	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Scalar getLower(int i) const { return center[i] - extent[i]; }$/;"	f	class:BBox
getMagic	src/windows/include/plib/sl.h	/^  int getMagic  () const { return magic  ; }$/;"	f	class:slPlayer
getMass	src/windows/include/plib/sg.h	/^  float  getMass        () { return 1.0f \/ ooMass ; }$/;"	f	class:sgParticle
getMat4	src/windows/include/plib/sg.h	/^  void     getMat4 ( sgMat4 dst ) { sgCopyMat4 ( dst, mat ) ; }$/;"	f	class:sgFrustum
getMat4	src/windows/include/plib/sg.h	/^  void     getMat4 ( sgdMat4 dst ) { sgdCopyMat4 ( dst, mat ) ; }$/;"	f	class:sgdFrustum
getMaterial	src/windows/include/plib/ssg.h	/^  virtual float *getMaterial ( GLenum which )$/;"	f	class:ssgSimpleState
getMax	src/windows/include/plib/sg.h	/^  const SGDfloat *getMax (void) const { return max ; }$/;"	f	class:sgdBox
getMax	src/windows/include/plib/sg.h	/^  const SGfloat *getMax (void) const { return max ; }$/;"	f	class:sgBox
getMaxDelta	src/windows/include/plib/ul.h	/^  double getMaxDelta  () const { return max_delta ; }$/;"	f	class:ulClock
getMaxDelta	src/windows/include/ul.h	/^  double getMaxDelta  () const { return max_delta ; }$/;"	f	class:ulClock
getMaxKids	src/windows/include/plib/ssg.h	/^  int getMaxKids (void) const { return max_kids ; }$/;"	f	class:ssgSelector
getMaxRange	export/include/js.h	/^  void getMaxRange ( float *axes ) const { memcpy ( axes, max   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMaxRange	src/interfaces/js.h	/^  void getMaxRange ( float *axes ) const { memcpy ( axes, max   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMiddle	src/drivers/berniw/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	src/drivers/berniw2/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	src/drivers/berniw3/trackdesc.h	/^		inline v3d* getMiddle() { return &m; }$/;"	f	class:TrackSegment
getMiddle	src/drivers/inferno/trackdesc.h	/^		inline const vec2d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment2D
getMiddle	src/drivers/inferno/trackdesc.h	/^		inline const vec3d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment
getMiddle	src/drivers/lliaw/trackdesc.h	/^		inline const vec2d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment2D
getMiddle	src/drivers/lliaw/trackdesc.h	/^		inline const vec3d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment
getMiddle	src/drivers/tita/trackdesc.h	/^		inline const vec2d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment2D
getMiddle	src/drivers/tita/trackdesc.h	/^		inline const vec3d* getMiddle() const { return &m; }$/;"	f	class:TrackSegment
getMin	src/windows/include/plib/sg.h	/^  const SGDfloat *getMin (void) const { return min ; }$/;"	f	class:sgdBox
getMin	src/windows/include/plib/sg.h	/^  const SGfloat *getMin (void) const { return min ; }$/;"	f	class:sgBox
getMinRange	export/include/js.h	/^  void getMinRange ( float *axes ) const { memcpy ( axes, min   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMinRange	src/interfaces/js.h	/^  void getMinRange ( float *axes ) const { memcpy ( axes, min   , num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
getMode	src/windows/include/plib/ssg.h	/^  int   getMode ()            { return mode ; }$/;"	f	class:ssgTweenController
getMode	src/windows/include/plib/ssg.h	/^  ssgAnimDirection getMode () { return mode ; }$/;"	f	class:ssgTimedSelector
getModelDir	src/windows/include/plib/ssg.h	/^  const char* getModelDir ( void ) const { return model_dir ; }$/;"	f	class:ssgLoaderOptions
getMovedAxis	src/libs/confscreens/controlconfig.cpp	/^getMovedAxis(void)$/;"	f	file:
getNOpponents	src/drivers/bt/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:Opponents
getNOpponents	src/drivers/damned/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:Opponents
getNOpponents	src/drivers/olethros/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:olethros::Opponents
getNOpponents	src/drivers/sparkle/opponent.h	/^		int getNOpponents() { return nopponents; }$/;"	f	class:Opponents
getNOpponentsBehind	src/drivers/olethros/opponent.h	/^		int getNOpponentsBehind() { return nopponents_behind; }$/;"	f	class:olethros::Opponents
getNOpponentsInFront	src/drivers/olethros/opponent.h	/^		int getNOpponentsInFront() { return nopponents_infront;}$/;"	f	class:olethros::Opponents
getNPitEnd	src/drivers/bt/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:Pit
getNPitEnd	src/drivers/damned/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:Pit
getNPitEnd	src/drivers/olethros/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:olethros::Pit
getNPitEnd	src/drivers/sparkle/pit.h	/^		float getNPitEnd() { return p[5].x; }$/;"	f	class:Pit
getNPitLoc	src/drivers/bt/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:Pit
getNPitLoc	src/drivers/damned/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:Pit
getNPitLoc	src/drivers/olethros/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:olethros::Pit
getNPitLoc	src/drivers/sparkle/pit.h	/^		float getNPitLoc() { return p[3].x; }$/;"	f	class:Pit
getNPitStart	src/drivers/bt/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:Pit
getNPitStart	src/drivers/damned/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:Pit
getNPitStart	src/drivers/olethros/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:olethros::Pit
getNPitStart	src/drivers/sparkle/pit.h	/^		float getNPitStart() { return p[1].x; }$/;"	f	class:Pit
getName	export/include/js.h	/^  const char* getName () const { return name ;     }$/;"	f	class:jsJoystick
getName	src/interfaces/js.h	/^  const char* getName () const { return name ;     }$/;"	f	class:jsJoystick
getName	src/windows/include/plib/ssg.h	/^  char *getName () { return name ; }$/;"	f	class:ssgBase
getNbSources	src/modules/graphic/ssggraph/SoundInterface.h	/^		int getNbSources(void) { return nbsources; }$/;"	f	class:SharedSourcePool
getNear	src/windows/include/plib/sg.h	/^  SGDfloat  getNear (void) const { return nnear ; }$/;"	f	class:sgdFrustum
getNear	src/windows/include/plib/sg.h	/^  SGfloat  getNear (void) const { return nnear ; }$/;"	f	class:sgFrustum
getNearFar	src/windows/include/plib/sg.h	/^  void getNearFar ( SGDfloat *n, SGDfloat *f ) const $/;"	f	class:sgdFrustum
getNearFar	src/windows/include/plib/sg.h	/^  void getNearFar ( SGfloat *n, SGfloat *f ) const $/;"	f	class:sgFrustum
getNearestId	src/drivers/berniw/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	src/drivers/berniw2/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	src/drivers/berniw3/trackdesc.cpp	/^int TrackDesc::getNearestId(v3d* p)$/;"	f	class:TrackDesc
getNearestId	src/drivers/inferno/trackdesc.cpp	/^int TrackDesc::getNearestId(vec2d* p)$/;"	f	class:TrackDesc
getNearestId	src/drivers/lliaw/trackdesc.cpp	/^int TrackDesc::getNearestId(vec2d* p)$/;"	f	class:TrackDesc
getNearestId	src/drivers/tita/trackdesc.cpp	/^int TrackDesc::getNearestId(vec2d* p)$/;"	f	class:TrackDesc
getNextEntity	src/windows/include/plib/ssg.h	/^  ssgEntity *getNextEntity     (void) { return getEntity ( next ) ; }$/;"	f	class:ssgList
getNextEntity	src/windows/include/plib/ul.h	/^  void *getNextEntity   (void) { return getEntity ( next ) ; }$/;"	f	class:ulList
getNextEntity	src/windows/include/ul.h	/^  void *getNextEntity   (void) { return getEntity ( next ) ; }$/;"	f	class:ulList
getNextKid	src/windows/include/plib/ssg.h	/^  ssgEntity *getNextKid (void)    { return kids.getNextEntity () ; }$/;"	f	class:ssgBranch
getNextParent	src/windows/include/plib/ssg.h	/^  ssgBranch *getNextParent () { return (ssgBranch *) parents.getNextEntity () ; }$/;"	f	class:ssgEntity
getNoise	src/windows/include/plib/sg.h	/^  SGfloat getNoise ( SGfloat x, SGfloat y )$/;"	f	class:sgPerlinNoise_2D
getNoise	src/windows/include/plib/sg.h	/^  SGfloat getNoise ( SGfloat x, SGfloat y, SGfloat z )$/;"	f	class:sgPerlinNoise_3D
getNormal	src/windows/include/plib/ssg.h	/^  float *getNormal  (int i){ if(i>=getNumNormals())i=getNumNormals()-1;$/;"	f	class:ssgVtxTable
getNormal	src/windows/include/plib/ssg.h	/^  float *getNormal  (int i){ if(i>=num_normals)i=num_normals-1;$/;"	f	class:ssgVTable
getNormalList	src/windows/include/plib/ssg.h	/^  void getNormalList   ( void **list ) { *list = normals   -> get ( 0 ) ; } $/;"	f	class:ssgVtxTable
getNormalList	src/windows/include/plib/ssg.h	/^  void getNormalList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getNormals	src/windows/include/plib/ssg.h	/^  ssgNormalArray   *getNormals   () { return normals   ; }$/;"	f	class:ssgVtxTable
getNum	src/windows/include/plib/ssg.h	/^  int getNum (void) { return total ; }$/;"	f	class:ssgSimpleList
getNum	src/windows/include/plib/ssg.h	/^  int getNum (void) { return total ; }$/;"	f	class:ssgSimpleStateArray
getNum	src/windows/include/plib/ssg.h	/^  int getNum (void) { return total ; }$/;"	f	class:ssgTextureArray
getNumActiveParticles	src/windows/include/plib/ssgaParticleSystem.h	/^  int getNumActiveParticles () { return num_active    ; }$/;"	f	class:ssgaParticleSystem
getNumAxes	export/include/js.h	/^  int   getNumAxes    () const { return num_axes ; }$/;"	f	class:jsJoystick
getNumAxes	src/interfaces/js.h	/^  int   getNumAxes    () const { return num_axes ; }$/;"	f	class:jsJoystick
getNumBanks	src/windows/include/plib/ssg.h	/^  int getNumBanks () { return banked_vertices -> getNumEntities () ; }$/;"	f	class:ssgTween
getNumColours	src/modules/graphic/ssggraph/grcarlight.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumColours	src/modules/graphic/ssggraph/grshadow.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumColours	src/modules/graphic/ssggraph/grsmoke.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumColours	src/modules/graphic/ssggraph/grvtxtable.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:grVtxTable
getNumColours	src/windows/include/plib/ssg.h	/^  int getNumColours   () { return colours   -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumColours	src/windows/include/plib/ssg.h	/^  int getNumColours   () { return num_colours   ; }$/;"	f	class:ssgVTable
getNumColours	src/windows/include/plib/ssg.h	/^  virtual int getNumColours   () { return 0 ; }$/;"	f	class:ssgLeaf
getNumEntities	src/windows/include/plib/ssg.h	/^  int        getNumEntities    (void) { return total ; }$/;"	f	class:ssgList
getNumEntities	src/windows/include/plib/ul.h	/^  int   getNumEntities  (void) const { return total ; }$/;"	f	class:ulList
getNumEntities	src/windows/include/ul.h	/^  int   getNumEntities  (void) const { return total ; }$/;"	f	class:ulList
getNumIndices	src/modules/graphic/ssggraph/grvertexarray.h	/^  int getNumIndices () { return indices -> getNum () ; }$/;"	f	class:ssgGrVtxArray
getNumIndices	src/windows/include/plib/ssg.h	/^  int getNumIndices () { return indices -> getNum () ; }$/;"	f	class:ssgVtxArray
getNumKids	src/windows/include/plib/ssg.h	/^  virtual int getNumKids (void)   { return kids.getNumEntities() ; }$/;"	f	class:ssgBranch
getNumKids	src/windows/include/plib/ssg.h	/^  virtual int getNumKids (void) { return 0 ; }$/;"	f	class:ssgEntity
getNumLines	src/modules/graphic/ssggraph/grcarlight.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:ssgVtxTableCarlight
getNumLines	src/modules/graphic/ssggraph/grshadow.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:ssgVtxTableShadow
getNumLines	src/modules/graphic/ssggraph/grsmoke.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:ssgVtxTableSmoke
getNumLines	src/modules/graphic/ssggraph/grvertexarray.h	/^  int  getNumLines () {return ssgVtxArray::getNumLines();}$/;"	f	class:ssgGrVtxArray
getNumLines	src/modules/graphic/ssggraph/grvtxtable.h	/^  int  getNumLines ()  {return ssgVtxTable::getNumLines();}$/;"	f	class:grVtxTable
getNumNodes	src/windows/include/plib/ul.h	/^  int  getNumNodes ( void ) const { return nnodes ; }$/;"	f	class:ulLinkedList
getNumNodes	src/windows/include/ul.h	/^  int  getNumNodes ( void ) const { return nnodes ; }$/;"	f	class:ulLinkedList
getNumNormals	src/modules/graphic/ssggraph/grcarlight.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumNormals	src/modules/graphic/ssggraph/grshadow.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumNormals	src/modules/graphic/ssggraph/grsmoke.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumNormals	src/modules/graphic/ssggraph/grvtxtable.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:grVtxTable
getNumNormals	src/windows/include/plib/ssg.h	/^  int getNumNormals   () { return normals   -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumNormals	src/windows/include/plib/ssg.h	/^  int getNumNormals   () { return num_normals   ; }$/;"	f	class:ssgVTable
getNumNormals	src/windows/include/plib/ssg.h	/^  virtual int getNumNormals   () { return 0 ; }$/;"	f	class:ssgLeaf
getNumParents	src/windows/include/plib/ssg.h	/^  int getNumParents () { return parents.getNumEntities () ; }$/;"	f	class:ssgEntity
getNumParticles	src/windows/include/plib/ssgaParticleSystem.h	/^  int getNumParticles       () { return num_particles ; }$/;"	f	class:ssgaParticleSystem
getNumPathEntries	src/windows/include/plib/ssg.h	/^  int getNumPathEntries () { return num_entries ; }$/;"	f	class:ssgHit
getNumSteps	src/windows/include/plib/sl.h	/^  int   getNumSteps  () const { return nsteps ; }$/;"	f	class:slEnvelope
getNumSteps	src/windows/include/plib/ssg.h	/^  int             getNumSteps ( void ) { return nstates ; }$/;"	f	class:ssgStateSelector
getNumTexCoords	src/modules/graphic/ssggraph/grcarlight.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumTexCoords	src/modules/graphic/ssggraph/grshadow.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumTexCoords	src/modules/graphic/ssggraph/grsmoke.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumTexCoords	src/modules/graphic/ssggraph/grvtxtable.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:grVtxTable
getNumTexCoords	src/windows/include/plib/ssg.h	/^  int getNumTexCoords () { return num_texcoords ; }$/;"	f	class:ssgVTable
getNumTexCoords	src/windows/include/plib/ssg.h	/^  int getNumTexCoords () { return texcoords -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumTexCoords	src/windows/include/plib/ssg.h	/^  virtual int getNumTexCoords () { return 0 ; }$/;"	f	class:ssgLeaf
getNumTriangles	src/modules/graphic/ssggraph/grcarlight.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:ssgVtxTableCarlight
getNumTriangles	src/modules/graphic/ssggraph/grshadow.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:ssgVtxTableShadow
getNumTriangles	src/modules/graphic/ssggraph/grsmoke.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:ssgVtxTableSmoke
getNumTriangles	src/modules/graphic/ssggraph/grvertexarray.h	/^  int getNumTriangles () { return ssgVtxArray::getNumTriangles();}$/;"	f	class:ssgGrVtxArray
getNumTriangles	src/modules/graphic/ssggraph/grvtxtable.h	/^  int getNumTriangles ()  { return ssgVtxTable::getNumTriangles();}$/;"	f	class:grVtxTable
getNumTris	src/windows/include/plib/ssgaShapes.h	/^  int    getNumTris () { return ntriangles ; }$/;"	f	class:ssgaShape
getNumVertices	src/modules/graphic/ssggraph/grcarlight.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTableCarlight
getNumVertices	src/modules/graphic/ssggraph/grshadow.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTableShadow
getNumVertices	src/modules/graphic/ssggraph/grsmoke.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTableSmoke
getNumVertices	src/modules/graphic/ssggraph/grvtxtable.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:grVtxTable
getNumVertices	src/windows/include/plib/ssg.h	/^  int getNumVertices  () { return num_vertices  ; }$/;"	f	class:ssgVTable
getNumVertices	src/windows/include/plib/ssg.h	/^  int getNumVertices  () { return vertices  -> getNum () ; }$/;"	f	class:ssgVtxTable
getNumVertices	src/windows/include/plib/ssg.h	/^  virtual int getNumVertices  () { return 0 ; }$/;"	f	class:ssgLeaf
getOffset	src/drivers/bt/driver.cpp	/^float Driver::getOffset()$/;"	f	class:Driver
getOffset	src/drivers/damned/driver.cpp	/^float Driver::getOffset()$/;"	f	class:Driver
getOffset	src/drivers/inferno2/common.cpp	/^getOffset(int idx, tCarElt* car, tdble *maxSpeed)$/;"	f	file:
getOffset	src/drivers/olethros/driver.cpp	/^    float Driver::getOffset()$/;"	f	class:olethros::Driver
getOneOverMass	src/windows/include/plib/sg.h	/^  float  getOneOverMass () { return ooMass   ; }$/;"	f	class:sgParticle
getOpenEntityNames	src/libs/txml/xmlparse.c	/^const XML_Char *getOpenEntityNames(XML_Parser parser)$/;"	f	file:
getOpponentPtr	src/drivers/bt/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:Opponents
getOpponentPtr	src/drivers/damned/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:Opponents
getOpponentPtr	src/drivers/olethros/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:olethros::Opponents
getOpponentPtr	src/drivers/sparkle/opponent.h	/^		Opponent *getOpponentPtr() { return opponent; }$/;"	f	class:Opponents
getOptLength	src/drivers/inferno/pathfinder.h	/^		inline float getOptLength(int id) { return length[id]; }$/;"	f	class:PathSegOpt
getOptLength	src/drivers/lliaw/pathfinder.h	/^		inline float getOptLength(int id) { return length[id]; }$/;"	f	class:PathSegOpt
getOptLength	src/drivers/tita/pathfinder.h	/^		inline float getOptLength(int id) { return length[id]; }$/;"	f	class:PathSegOpt
getOptLoc	src/drivers/berniw/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	src/drivers/berniw2/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	src/drivers/berniw3/pathfinder.h	/^		inline v3d* getOptLoc() { return &o; }$/;"	f	class:PathSeg
getOptLoc	src/drivers/inferno/pathfinder.h	/^		inline const vec2d* getOptLoc(int id) { return &o[id]; }$/;"	f	class:PathSegOpt
getOptLoc	src/drivers/lliaw/pathfinder.h	/^		inline const vec2d* getOptLoc(int id) { return &o[id]; }$/;"	f	class:PathSegOpt
getOptLoc	src/drivers/tita/pathfinder.h	/^		inline const vec2d* getOptLoc(int id) { return &o[id]; }$/;"	f	class:PathSegOpt
getOptToMiddle	src/drivers/inferno/pathfinder.h	/^		inline float getOptToMiddle(int id) { return disttomiddle[id]; }$/;"	f	class:PathSegOpt
getOptToMiddle	src/drivers/lliaw/pathfinder.h	/^		inline float getOptToMiddle(int id) { return disttomiddle[id]; }$/;"	f	class:PathSegOpt
getOptToMiddle	src/drivers/tita/pathfinder.h	/^		inline float getOptToMiddle(int id) { return disttomiddle[id]; }$/;"	f	class:PathSegOpt
getOptToRight	src/drivers/inferno/pathfinder.h	/^		inline const vec2d* getOptToRight(int id) { return &tr[id]; }$/;"	f	class:PathSegOpt
getOptToRight	src/drivers/lliaw/pathfinder.h	/^		inline const vec2d* getOptToRight(int id) { return &tr[id]; }$/;"	f	class:PathSegOpt
getOptToRight	src/drivers/tita/pathfinder.h	/^		inline const vec2d* getOptToRight(int id) { return &tr[id]; }$/;"	f	class:PathSegOpt
getOrigin	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  const Point& getOrigin() const { return origin; }$/;"	f	class:Transform
getOrtho	src/windows/include/plib/sg.h	/^  void getOrtho ( SGDfloat *w, SGDfloat *h ) const$/;"	f	class:sgdFrustum
getOrtho	src/windows/include/plib/sg.h	/^  void getOrtho ( SGfloat *w, SGfloat *h ) const$/;"	f	class:sgFrustum
getOverlapTimer	src/drivers/bt/opponent.h	/^		float getOverlapTimer() { return overlaptimer; }$/;"	f	class:Opponent
getOverlapTimer	src/drivers/damned/opponent.h	/^		float getOverlapTimer() { return overlaptimer; }$/;"	f	class:Opponent
getOverlapTimer	src/drivers/olethros/opponent.h	/^		float getOverlapTimer() { return overlaptimer; }$/;"	f	class:olethros::Opponent
getOvertakeOffset	src/drivers/sparkle/driver.cpp	/^float Driver::getOvertakeOffset()$/;"	f	class:Driver
getParamByName	src/libs/tgf/params.cpp	/^getParamByName (struct parmHeader *conf, const char *sectionName, const char *paramName, int flag)$/;"	f	file:
getParent	src/libs/tgf/params.cpp	/^getParent (struct parmHeader *conf, const char *sectionName)$/;"	f	file:
getParent	src/windows/include/plib/ssg.h	/^  ssgBranch *getParent ( int p ) { return (ssgBranch *) parents.getEntity ( p ) ; }$/;"	f	class:ssgEntity
getParticle	src/windows/include/plib/sg.h	/^  sgParticle *getParticle   ( int which ) { return ( which == 0 ) ? p0 : p1 ; }$/;"	f	class:sgSpringDamper
getPath	src/drivers/inferno/pathfinder.h	/^		inline PathSeg* getPath() { return psdyn; }$/;"	f	class:Pathfinder
getPath	src/drivers/lliaw/pathfinder.h	/^		inline PathSeg* getPath() { return psdyn; }$/;"	f	class:Pathfinder
getPath	src/drivers/tita/pathfinder.h	/^		inline PathSeg* getPath() { return psdyn; }$/;"	f	class:Pathfinder
getPathEntry	src/windows/include/plib/ssg.h	/^  ssgEntity *getPathEntry ( int i )$/;"	f	class:ssgHit
getPathSeg	src/drivers/berniw/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathSeg	src/drivers/berniw2/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathSeg	src/drivers/berniw3/pathfinder.h	/^		inline PathSeg* getPathSeg(int pathSegId) { return &ps[pathSegId]; }$/;"	f	class:Pathfinder
getPathfinderPtr	src/drivers/berniw/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	src/drivers/berniw2/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	src/drivers/berniw3/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	src/drivers/inferno/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	src/drivers/lliaw/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPathfinderPtr	src/drivers/tita/mycar.h	/^		inline Pathfinder* getPathfinderPtr() { return pf; }$/;"	f	class:MyCar
getPitEntryStartId	src/drivers/berniw/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	src/drivers/berniw2/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	src/drivers/berniw3/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	src/drivers/inferno/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	src/drivers/lliaw/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitEntryStartId	src/drivers/tita/trackdesc.h	/^		inline int getPitEntryStartId() { return nPitEntryStart; }$/;"	f	class:TrackDesc
getPitExitEndId	src/drivers/berniw/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	src/drivers/berniw2/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	src/drivers/berniw3/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	src/drivers/inferno/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	src/drivers/lliaw/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitExitEndId	src/drivers/tita/trackdesc.h	/^		inline int getPitExitEndId() { return nPitExitEnd; }$/;"	f	class:TrackDesc
getPitLoc	src/drivers/berniw/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	src/drivers/berniw2/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	src/drivers/berniw3/pathfinder.h	/^		inline v3d* getPitLoc() { return l; }$/;"	f	class:PathSeg
getPitLoc	src/drivers/inferno/pathfinder.h	/^		inline const vec2d* getPitLoc(int id) {$/;"	f	class:PathSegPit
getPitLoc	src/drivers/lliaw/pathfinder.h	/^		inline const vec2d* getPitLoc(int id) {$/;"	f	class:PathSegPit
getPitLoc	src/drivers/tita/pathfinder.h	/^		inline const vec2d* getPitLoc(int id) {$/;"	f	class:PathSegPit
getPitOffset	src/drivers/bt/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:Pit
getPitOffset	src/drivers/damned/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:Pit
getPitOffset	src/drivers/olethros/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:olethros::Pit
getPitOffset	src/drivers/sparkle/pit.cpp	/^float Pit::getPitOffset(float offset, float fromstart)$/;"	f	class:Pit
getPitSegId	src/drivers/berniw/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	src/drivers/berniw2/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	src/drivers/berniw3/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	src/drivers/inferno/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	src/drivers/lliaw/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSegId	src/drivers/tita/pathfinder.h	/^		inline int getPitSegId() { return pitSegId; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	src/drivers/berniw/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	src/drivers/berniw2/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	src/drivers/berniw3/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	src/drivers/inferno/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	src/drivers/lliaw/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitSpeedSqrLimit	src/drivers/tita/pathfinder.h	/^		inline double getPitSpeedSqrLimit() { return pitspeedsqrlimit; }$/;"	f	class:Pathfinder
getPitStop	src/drivers/berniw/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	src/drivers/berniw2/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	src/drivers/berniw3/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	src/drivers/inferno/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	src/drivers/lliaw/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitStop	src/drivers/tita/pathfinder.h	/^		inline bool getPitStop() { return pitStop; }$/;"	f	class:Pathfinder
getPitType	src/drivers/berniw/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	src/drivers/berniw2/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	src/drivers/berniw3/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	src/drivers/inferno/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	src/drivers/lliaw/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitType	src/drivers/tita/trackdesc.h	/^		inline int getPitType() { return torcstrack->pits.type; }$/;"	f	class:TrackDesc
getPitch	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual float getPitch() {return pitch;}$/;"	f	class:TorcsSound
getPitstop	src/drivers/bt/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:Pit
getPitstop	src/drivers/damned/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:Pit
getPitstop	src/drivers/olethros/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:olethros::Pit
getPitstop	src/drivers/sparkle/pit.h	/^		bool getPitstop() { return pitstop; }$/;"	f	class:Pit
getPlane	src/windows/include/plib/sg.h	/^  const SGDfloat *getPlane ( int i ) const { return plane [ i ] ; }$/;"	f	class:sgdFrustum
getPlane	src/windows/include/plib/sg.h	/^  const SGfloat *getPlane ( int i ) const { return plane [ i ] ; }$/;"	f	class:sgFrustum
getPlayCount	src/windows/include/plib/sl.h	/^  int getPlayCount () const { return ref_count ; }$/;"	f	class:slEnvelope
getPlayCount	src/windows/include/plib/sl.h	/^  int getPlayCount () const { return ref_count ; }$/;"	f	class:slSample
getPointer	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  const void *getPointer() const { return base; }$/;"	f	class:VertexBase
getPos	src/modules/graphic/ssggraph/grcam.h	/^    t3Dd *getPos(void) {$/;"	f	class:cGrCamera
getPos	src/modules/graphic/ssggraph/grcarlight.h	/^  sgVec3 * getPos() { return(&pos);}$/;"	f	class:ssgVtxTableCarlight
getPos	src/windows/include/plib/sg.h	/^  SGfloat *getPos   () { return pos      ; }$/;"	f	class:sgParticle
getPos	src/windows/include/plib/sg.h	/^  const SGfloat *getPos   () const { return pos      ; }$/;"	f	class:sgParticle
getPosition	src/windows/include/plib/ssg.h	/^  void getPosition ( sgVec3 pos )       { sgCopyVec3 ( pos, position ) ; }$/;"	f	class:ssgLight
getPosv	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getPosv(void) {$/;"	f	class:cGrCamera
getPreemptMode	src/windows/include/plib/sl.h	/^  slPreemptMode getPreemptMode () const { return preempt_mode ; }$/;"	f	class:slPlayer
getPrimitiveType	src/windows/include/plib/ssg.h	/^  virtual GLenum getPrimitiveType () { return gltype ; }$/;"	f	class:ssgLeaf
getPrintableName	src/windows/include/plib/ssg.h	/^  const char *getPrintableName () { return (name == NULL) ? "NoName" : name ; }$/;"	f	class:ssgBase
getPriority	src/windows/include/plib/sl.h	/^  int getPriority () const$/;"	f	class:slPlayer
getRaceType	src/drivers/berniw/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	src/drivers/berniw2/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	src/drivers/berniw3/trackdesc.h	/^		inline unsigned int getRaceType() { return raceType; }$/;"	f	class:TrackSegment
getRaceType	src/drivers/inferno/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment
getRaceType	src/drivers/inferno/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment2D
getRaceType	src/drivers/lliaw/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment
getRaceType	src/drivers/lliaw/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment2D
getRaceType	src/drivers/tita/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment
getRaceType	src/drivers/tita/trackdesc.h	/^		inline unsigned int getRaceType() const { return pTrackSeg->raceInfo; }$/;"	f	class:TrackSegment2D
getRadius	src/drivers/berniw/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	src/drivers/berniw/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	src/drivers/berniw2/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	src/drivers/berniw2/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	src/drivers/berniw3/pathfinder.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:PathSeg
getRadius	src/drivers/berniw3/trackdesc.h	/^		inline tdble getRadius() { return radius; }$/;"	f	class:TrackSegment
getRadius	src/drivers/bt/learn.h	/^		float getRadius(tTrackSeg *s) { return radius[s->id]; }$/;"	f	class:SegLearn
getRadius	src/drivers/damned/learn.h	/^		float getRadius(tTrackSeg *s) { return radius[s->id]; }$/;"	f	class:SegLearn
getRadius	src/drivers/inferno/pathfinder.h	/^		inline tdble getRadius(int segid) { return ps[getid(segid)].radius; }$/;"	f	class:PathSeg
getRadius	src/drivers/inferno/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment
getRadius	src/drivers/inferno/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment2D
getRadius	src/drivers/lliaw/pathfinder.h	/^		inline tdble getRadius(int segid) { return ps[getid(segid)].radius; }$/;"	f	class:PathSeg
getRadius	src/drivers/lliaw/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment
getRadius	src/drivers/lliaw/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment2D
getRadius	src/drivers/olethros/learn.h	/^	float getRadius(tTrackSeg *s) { return radius[s->id]; }$/;"	f	class:olethros::SegLearn
getRadius	src/drivers/tita/pathfinder.h	/^		inline tdble getRadius(int segid) { return ps[getid(segid)].radius; }$/;"	f	class:PathSeg
getRadius	src/drivers/tita/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment
getRadius	src/drivers/tita/trackdesc.h	/^		inline tdble getRadius() const { return radius; }$/;"	f	class:TrackSegment2D
getRadius	src/windows/include/plib/sg.h	/^  SGDfloat getRadius (void) const         { return radius ; }$/;"	f	class:sgdSphere
getRadius	src/windows/include/plib/sg.h	/^  SGfloat getRadius (void) const        { return radius ; }$/;"	f	class:sgSphere
getRange	src/windows/include/plib/ssg.h	/^  float getRange ( unsigned int which )$/;"	f	class:ssgRangeSelector
getRanges	src/windows/include/plib/ssg.h	/^  float *getRanges ()$/;"	f	class:ssgRangeSelector
getRate	src/windows/include/plib/sl.h	/^  int  getRate   () const  { return rate   ; }$/;"	f	class:slSample
getRate	src/windows/include/plib/sl.h	/^  int getRate  () const { return rate   ; }$/;"	f	class:slDSP
getRef	src/windows/include/plib/ssg.h	/^  int  getRef() { return refc ; }$/;"	f	class:ssgBase
getRepair	src/drivers/sparkle/pit.cpp	/^int Pit::getRepair()$/;"	f	class:Pit
getRestLength	src/windows/include/plib/sg.h	/^  float       getRestLength () { return restLength ; }$/;"	f	class:sgSpringDamper
getRight	src/windows/include/plib/sg.h	/^  SGDfloat  getRight(void) const { return right ; }$/;"	f	class:sgdFrustum
getRight	src/windows/include/plib/sg.h	/^  SGfloat  getRight(void) const { return right ; }$/;"	f	class:sgFrustum
getRightBorder	src/drivers/berniw/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	src/drivers/berniw2/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	src/drivers/berniw3/trackdesc.h	/^		inline v3d* getRightBorder() { return &r; }$/;"	f	class:TrackSegment
getRightBorder	src/drivers/inferno/trackdesc.h	/^		inline const vec2d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment2D
getRightBorder	src/drivers/inferno/trackdesc.h	/^		inline const vec3d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment
getRightBorder	src/drivers/lliaw/trackdesc.h	/^		inline const vec2d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment2D
getRightBorder	src/drivers/lliaw/trackdesc.h	/^		inline const vec3d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment
getRightBorder	src/drivers/tita/trackdesc.h	/^		inline const vec2d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment2D
getRightBorder	src/drivers/tita/trackdesc.h	/^		inline const vec3d* getRightBorder() const { return &r; }$/;"	f	class:TrackSegment
getSample	src/windows/include/plib/sl.h	/^  slSample *getSample () const { return sample ; }$/;"	f	class:slSamplePlayer
getSample	src/windows/include/plib/sl.h	/^  virtual slSample *getSample () const { return NULL ; }$/;"	f	class:slMODPlayer
getSaturation	export/include/js.h	/^  float getSaturation ( int axis ) const     { return saturate [ axis ]  ; }$/;"	f	class:jsJoystick
getSaturation	src/interfaces/js.h	/^  float getSaturation ( int axis ) const     { return saturate [ axis ]  ; }$/;"	f	class:jsJoystick
getScheduler	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^slScheduler* PlibSoundInterface::getScheduler()$/;"	f	class:PlibSoundInterface
getScrH	src/modules/graphic/ssggraph/grscreen.h	/^		int getScrH (void) { return scrh; }$/;"	f	class:cGrScreen
getScrW	src/modules/graphic/ssggraph/grscreen.h	/^		int getScrW (void) { return scrw; }$/;"	f	class:cGrScreen
getScrX	src/modules/graphic/ssggraph/grscreen.h	/^		int getScrX (void) { return scrx; }$/;"	f	class:cGrScreen
getScrY	src/modules/graphic/ssggraph/grscreen.h	/^		int getScrY (void) { return scry; }$/;"	f	class:cGrScreen
getSegPtr	src/drivers/inferno/trackdesc.h	/^		inline tTrackSeg* getSegPtr() const { return pTrackSeg;}$/;"	f	class:TrackSegment
getSegPtr	src/drivers/lliaw/trackdesc.h	/^		inline tTrackSeg* getSegPtr() const { return pTrackSeg;}$/;"	f	class:TrackSegment
getSegPtr	src/drivers/tita/trackdesc.h	/^		inline tTrackSeg* getSegPtr() const { return pTrackSeg;}$/;"	f	class:TrackSegment
getSegmentPtr	src/drivers/berniw/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	src/drivers/berniw2/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	src/drivers/berniw3/trackdesc.h	/^		inline TrackSegment* getSegmentPtr(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	src/drivers/inferno/trackdesc.h	/^		inline TrackSegment2D* getSegmentPtr(int index) { return &ts2d[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	src/drivers/lliaw/trackdesc.h	/^		inline TrackSegment2D* getSegmentPtr(int index) { return &ts2d[index]; }$/;"	f	class:TrackDesc
getSegmentPtr	src/drivers/tita/trackdesc.h	/^		inline TrackSegment2D* getSegmentPtr(int index) { return &ts2d[index]; }$/;"	f	class:TrackDesc
getSegmentPtr3D	src/drivers/inferno/trackdesc.h	/^		inline TrackSegment* getSegmentPtr3D(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr3D	src/drivers/lliaw/trackdesc.h	/^		inline TrackSegment* getSegmentPtr3D(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSegmentPtr3D	src/drivers/tita/trackdesc.h	/^		inline TrackSegment* getSegmentPtr3D(int index) { return &ts[index]; }$/;"	f	class:TrackDesc
getSelect	src/windows/include/plib/ssg.h	/^  unsigned int getSelect ()$/;"	f	class:ssgSelector
getSharedHeader	src/libs/tgf/params.cpp	/^getSharedHeader (const char *file, int mode)$/;"	f	file:
getShininess	src/windows/include/plib/ssg.h	/^  virtual float getShininess (void)$/;"	f	class:ssgSimpleState
getSideDist	src/drivers/bt/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:Opponent
getSideDist	src/drivers/damned/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:Opponent
getSideDist	src/drivers/olethros/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:olethros::Opponent
getSideDist	src/drivers/sparkle/opponent.h	/^		float getSideDist() { return sidedist; }$/;"	f	class:Opponent
getSize	src/windows/include/plib/ssgaParticleSystem.h	/^  float getSize () { return size ; }$/;"	f	class:ssgaParticleSystem
getSize	src/windows/include/plib/ssgaShapes.h	/^  float *getSize    () { return size       ; }$/;"	f	class:ssgaShape
getSizeOf	src/windows/include/plib/ssg.h	/^  int getSizeOf (void) { return size_of ; }$/;"	f	class:ssgSimpleList
getSource	src/modules/graphic/ssggraph/SoundInterface.h	/^		bool getSource(TorcsSound* sound, ALuint* source, bool* needs_init, int* index) {$/;"	f	class:SharedSourcePool
getSource	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::getSource(sgVec3 p, sgVec3 u)$/;"	f	class:OpenalTorcsSound
getSource	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual void getSource (sgVec3 p, sgVec3 u) {}$/;"	f	class:TorcsSound
getSourcePool	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual SharedSourcePool* getSourcePool(void) { return sourcepool; } $/;"	f	class:OpenalSoundInterface
getSpeed	src/drivers/berniw/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	src/drivers/berniw2/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	src/drivers/berniw3/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	src/drivers/bt/cardata.cpp	/^float SingleCardata::getSpeed(tCarElt *car, float ltrackangle)$/;"	f	class:SingleCardata
getSpeed	src/drivers/bt/driver.h	/^		float getSpeed() { return mycardata->getSpeedInTrackDirection(); \/*speed;*\/ }$/;"	f	class:Driver
getSpeed	src/drivers/bt/opponent.h	/^		float getSpeed() { return cardata->getSpeedInTrackDirection(); }$/;"	f	class:Opponent
getSpeed	src/drivers/damned/cardata.cpp	/^float SingleCardata::getSpeed(tCarElt *car, float ltrackangle)$/;"	f	class:SingleCardata
getSpeed	src/drivers/damned/driver.h	/^		float getSpeed() { return mycardata->getSpeedInTrackDirection(); \/*speed;*\/ }$/;"	f	class:Driver
getSpeed	src/drivers/damned/opponent.h	/^		float getSpeed() { return cardata->getSpeedInTrackDirection(); }$/;"	f	class:Opponent
getSpeed	src/drivers/inferno/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	src/drivers/lliaw/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	src/drivers/olethros/cardata.cpp	/^float SingleCardata::getSpeed(tCarElt *car, float ltrackangle)$/;"	f	class:olethros::SingleCardata
getSpeed	src/drivers/olethros/driver.h	/^	float getSpeed() { return mycardata->getSpeedInTrackDirection(); \/*speed;*\/ }$/;"	f	class:olethros::Driver
getSpeed	src/drivers/olethros/opponent.h	/^		float getSpeed() { return cardata->getSpeedInTrackDirection(); }$/;"	f	class:olethros::Opponent
getSpeed	src/drivers/sparkle/driver.h	/^		float getSpeed() { return speed; }$/;"	f	class:Driver
getSpeed	src/drivers/sparkle/opponent.cpp	/^float Opponent::getSpeed(tCarElt *car)$/;"	f	class:Opponent
getSpeed	src/drivers/sparkle/opponent.h	/^		float getSpeed() { return speed; }$/;"	f	class:Opponent
getSpeed	src/drivers/tita/mycar.h	/^		inline double getSpeed() { return speed; }$/;"	f	class:AbstractCar
getSpeed	src/windows/include/plib/ssgaWaveSystem.h	/^  float getSpeed () { return speed  ; }$/;"	f	class:ssgaWaveTrain
getSpeedFactor	src/drivers/olethros/strategy.cpp	/^float ManagedStrategy::getSpeedFactor(tCarElt* car, tSituation* s, Opponents* opponents)$/;"	f	class:olethros::ManagedStrategy
getSpeedFactor	src/drivers/olethros/strategy.cpp	/^float SimpleStrategy::getSpeedFactor(tCarElt* car, tSituation* s, Opponents* opponents)$/;"	f	class:olethros::SimpleStrategy
getSpeedInTrackDirection	src/drivers/bt/cardata.h	/^		inline float getSpeedInTrackDirection() { return speed; }$/;"	f	class:SingleCardata
getSpeedInTrackDirection	src/drivers/damned/cardata.h	/^		inline float getSpeedInTrackDirection() { return speed; }$/;"	f	class:SingleCardata
getSpeedInTrackDirection	src/drivers/olethros/cardata.h	/^	inline float getSpeedInTrackDirection() {$/;"	f	class:olethros::SingleCardata
getSpeedLimitBrake	src/drivers/bt/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:Pit
getSpeedLimitBrake	src/drivers/damned/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:Pit
getSpeedLimitBrake	src/drivers/olethros/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:olethros::Pit
getSpeedLimitBrake	src/drivers/sparkle/pit.cpp	/^float Pit::getSpeedLimitBrake(float speedsqr)$/;"	f	class:Pit
getSpeedSqr	src/drivers/berniw/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	src/drivers/berniw2/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	src/drivers/berniw3/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	src/drivers/inferno/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	src/drivers/lliaw/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedSqr	src/drivers/tita/mycar.h	/^		inline double getSpeedSqr() { return speedsqr; }$/;"	f	class:AbstractCar
getSpeedlimit	src/drivers/bt/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:Pit
getSpeedlimit	src/drivers/damned/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:Pit
getSpeedlimit	src/drivers/olethros/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:olethros::Pit
getSpeedlimit	src/drivers/sparkle/pit.h	/^		float getSpeedlimit() { return speedlimit; }$/;"	f	class:Pit
getSpeedlimitSqr	src/drivers/bt/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:Pit
getSpeedlimitSqr	src/drivers/damned/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:Pit
getSpeedlimitSqr	src/drivers/olethros/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:olethros::Pit
getSpeedlimitSqr	src/drivers/sparkle/pit.h	/^		float getSpeedlimitSqr() { return speedlimitsqr; }$/;"	f	class:Pit
getSpeedsqr	src/drivers/berniw/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	src/drivers/berniw2/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	src/drivers/berniw3/pathfinder.h	/^		inline tdble getSpeedsqr() { return speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	src/drivers/inferno/pathfinder.h	/^		inline tdble getSpeedsqr(int segid) { return ps[getid(segid)].speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	src/drivers/lliaw/pathfinder.h	/^		inline tdble getSpeedsqr(int segid) { return ps[getid(segid)].speedsqr; }$/;"	f	class:PathSeg
getSpeedsqr	src/drivers/tita/pathfinder.h	/^		inline tdble getSpeedsqr(int segid) { return ps[getid(segid)].speedsqr; }$/;"	f	class:PathSeg
getSpeedv	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getSpeedv(void) {$/;"	f	class:cGrCamera
getSpotAttenuation	src/windows/include/plib/ssg.h	/^  void getSpotAttenuation ( float *constant, float *linear, float *quadratic )$/;"	f	class:ssgLight
getSpotDiffusion	src/windows/include/plib/ssg.h	/^  void getSpotDiffusion ( float *exp, float *cut = 0 )$/;"	f	class:ssgLight
getSpotDirection	src/windows/include/plib/ssg.h	/^  void getSpotDirection ( sgVec3 dir )       { sgCopyVec3 ( dir, direction ) ; }$/;"	f	class:ssgLight
getState	src/drivers/bt/opponent.h	/^		int getState() { return state; }$/;"	f	class:Opponent
getState	src/drivers/damned/opponent.h	/^		int getState() { return state; }$/;"	f	class:Opponent
getState	src/drivers/olethros/opponent.h	/^		int getState() { return state; }$/;"	f	class:olethros::Opponent
getState	src/drivers/olethros/pit.h	/^		enum PitState getState (void) {return pit_state;}$/;"	f	class:olethros::Pit
getState	src/drivers/sparkle/opponent.h	/^		int getState() { return state; }$/;"	f	class:Opponent
getState	src/windows/include/plib/ssg.h	/^  ssgSimpleState *getState () { return currentState ; }$/;"	f	class:ssgContext
getState	src/windows/include/plib/ssg.h	/^  ssgState *getState () { return state ; }$/;"	f	class:ssgLeaf
getState1	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgState *getState1 () { return state1 ; }$/;"	f	class:grVtxTable
getState2	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgState *getState2 () { return state2 ; }$/;"	f	class:grVtxTable
getState3	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgState *getState3 () { return state3 ; }$/;"	f	class:grVtxTable
getStateCallback	src/windows/include/plib/ssg.h	/^  ssgStateCallback getStateCallback ( int cb_type )$/;"	f	class:ssgState
getStaticSource	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^bool OpenalSoundInterface::getStaticSource(ALuint *source)$/;"	f	class:OpenalSoundInterface
getSteer	src/drivers/bt/driver.cpp	/^float Driver::getSteer()$/;"	f	class:Driver
getSteer	src/drivers/damned/driver.cpp	/^float Driver::getSteer()$/;"	f	class:Driver
getSteer	src/drivers/olethros/driver.cpp	/^    float Driver::getSteer()$/;"	f	class:olethros::Driver
getSteer	src/drivers/sparkle/driver.cpp	/^float Driver::getSteer()$/;"	f	class:Driver
getStepTime	src/windows/include/plib/sl.h	/^  float getStepTime  ( int s ) const { return time  [ s ] ; }$/;"	f	class:slEnvelope
getStepValue	src/windows/include/plib/sl.h	/^  float getStepValue ( int s ) const { return value [ s ] ; }$/;"	f	class:slEnvelope
getStereo	src/windows/include/plib/sl.h	/^  int  getStereo () const  { return stereo ; }$/;"	f	class:slSample
getStereo	src/windows/include/plib/sl.h	/^  int getStereo() const { return stereo ; }$/;"	f	class:slDSP
getStiffness	src/windows/include/plib/sg.h	/^  float       getStiffness  () { return stiffness  ; }$/;"	f	class:sgSpringDamper
getStuff	src/tools/texmapper/ssgSaveAC.cpp	/^static void getStuff ( ssgEntity *e, sgVec3 *vtab, saveTriangle *ttab )$/;"	f	file:
getTDError	export/include/learning/policy.h	/^	virtual real getTDError () {return tdError;}$/;"	f	class:DiscretePolicy
getTDError	src/libs/learning/policy.h	/^	virtual real getTDError () {return tdError;}$/;"	f	class:DiscretePolicy
getTargetPoint	src/drivers/bt/driver.cpp	/^vec2f Driver::getTargetPoint()$/;"	f	class:Driver
getTargetPoint	src/drivers/damned/driver.cpp	/^vec2f Driver::getTargetPoint()$/;"	f	class:Driver
getTargetPoint	src/drivers/olethros/driver.cpp	/^    v2d Driver::getTargetPoint()$/;"	f	class:olethros::Driver
getTargetPoint	src/drivers/sparkle/driver.cpp	/^v2d Driver::getTargetPoint()$/;"	f	class:Driver
getTexCoord	src/windows/include/plib/ssg.h	/^  float *getTexCoord(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:ssgVtxTable
getTexCoord	src/windows/include/plib/ssg.h	/^  float *getTexCoord(int i){ if(i>=num_texcoords)i=num_texcoords-1;$/;"	f	class:ssgVTable
getTexCoord1	src/modules/graphic/ssggraph/grvtxtable.h	/^  float *getTexCoord1(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:grVtxTable
getTexCoord2	src/modules/graphic/ssggraph/grvtxtable.h	/^  float *getTexCoord2(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:grVtxTable
getTexCoord3	src/modules/graphic/ssggraph/grvtxtable.h	/^  float *getTexCoord3(int i){ if(i>=getNumTexCoords())i=getNumTexCoords()-1;$/;"	f	class:grVtxTable
getTexCoordList	src/windows/include/plib/ssg.h	/^  void getTexCoordList ( void **list ) { *list = texcoords -> get ( 0 ) ; } $/;"	f	class:ssgVtxTable
getTexCoordList	src/windows/include/plib/ssg.h	/^  void getTexCoordList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getTexCoords	src/windows/include/plib/ssg.h	/^  ssgTexCoordArray *getTexCoords () { return texcoords ; }$/;"	f	class:ssgVtxTable
getTexScaleU	src/windows/include/plib/ssgaWaveSystem.h	/^  float getTexScaleU () { return tu ; }$/;"	f	class:ssgaWaveSystem
getTexScaleV	src/windows/include/plib/ssgaWaveSystem.h	/^  float getTexScaleV () { return tv ; }$/;"	f	class:ssgaWaveSystem
getTexture	src/windows/include/plib/ssg.h	/^  virtual ssgTexture* getTexture (void)$/;"	f	class:ssgSimpleState
getTextureDir	src/windows/include/plib/ssg.h	/^  const char* getTextureDir ( void ) const { return texture_dir ; }$/;"	f	class:ssgLoaderOptions
getTextureFilename	src/windows/include/plib/ssg.h	/^  virtual char *getTextureFilename(void)$/;"	f	class:ssgSimpleState
getTextureHandle	src/windows/include/plib/ssg.h	/^  virtual GLuint getTextureHandle (void)$/;"	f	class:ssgSimpleState
getTimeMode	src/windows/include/plib/ssg.h	/^  ssgAnimTimeMode getTimeMode() const { return time_mode; }$/;"	f	class:ssgTimedSelector
getTimeNow	src/windows/include/plib/sl.h	/^  int   getTimeNow     () const { return now ; }$/;"	f	class:slScheduler
getToRight	src/drivers/berniw/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	src/drivers/berniw2/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	src/drivers/berniw3/trackdesc.h	/^		inline v3d* getToRight() { return &tr; }$/;"	f	class:TrackSegment
getToRight	src/drivers/inferno/trackdesc.h	/^		inline const vec2d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment2D
getToRight	src/drivers/inferno/trackdesc.h	/^		inline const vec3d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment
getToRight	src/drivers/lliaw/trackdesc.h	/^		inline const vec2d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment2D
getToRight	src/drivers/lliaw/trackdesc.h	/^		inline const vec3d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment
getToRight	src/drivers/tita/trackdesc.h	/^		inline const vec2d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment2D
getToRight	src/drivers/tita/trackdesc.h	/^		inline const vec3d* getToRight() const { return &tr; }$/;"	f	class:TrackSegment
getTop	src/windows/include/plib/sg.h	/^  SGDfloat  getTop  (void) const { return top   ; }$/;"	f	class:sgdFrustum
getTop	src/windows/include/plib/sg.h	/^  SGfloat  getTop  (void) const { return top   ; }$/;"	f	class:sgFrustum
getTorcsTrack	src/drivers/berniw/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	src/drivers/berniw2/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	src/drivers/berniw3/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	src/drivers/inferno/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	src/drivers/lliaw/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrack	src/drivers/tita/trackdesc.h	/^		inline tTrack* getTorcsTrack() { return torcstrack; }$/;"	f	class:TrackDesc
getTorcsTrackSeg	src/drivers/inferno/trackdesc.h	/^		inline tTrackSeg* getTorcsTrackSeg() const { return pTrackSeg; }$/;"	f	class:TrackSegment2D
getTorcsTrackSeg	src/drivers/lliaw/trackdesc.h	/^		inline tTrackSeg* getTorcsTrackSeg() const { return pTrackSeg; }$/;"	f	class:TrackSegment2D
getTorcsTrackSeg	src/drivers/tita/trackdesc.h	/^		inline tTrackSeg* getTorcsTrackSeg() const { return pTrackSeg; }$/;"	f	class:TrackSegment2D
getTrackMap	src/modules/graphic/ssggraph/grboard.h	/^	cGrTrackMap *getTrackMap() { return trackMap; }$/;"	f	class:cGrBoard
getTrackPtr	src/drivers/bt/driver.h	/^		tTrack *getTrackPtr() { return track; }$/;"	f	class:Driver
getTrackPtr	src/drivers/damned/driver.h	/^		tTrack *getTrackPtr() { return track; }$/;"	f	class:Driver
getTrackPtr	src/drivers/olethros/driver.h	/^	tTrack *getTrackPtr() { return track; }$/;"	f	class:olethros::Driver
getTrackPtr	src/drivers/sparkle/driver.h	/^		tTrack *getTrackPtr() { return track; }$/;"	f	class:Driver
getTrackangle	src/drivers/bt/cardata.h	/^		inline float getTrackangle() { return trackangle; }$/;"	f	class:SingleCardata
getTrackangle	src/drivers/damned/cardata.h	/^		inline float getTrackangle() { return trackangle; }$/;"	f	class:SingleCardata
getTrackangle	src/drivers/olethros/cardata.h	/^	inline float getTrackangle() { return trackangle; }$/;"	f	class:olethros::SingleCardata
getTransform	src/windows/include/plib/ssg.h	/^  void getTransform ( sgMat4 xform )$/;"	f	class:ssgBaseTransform
getTravCallback	src/windows/include/plib/ssg.h	/^  ssgTravCallback getTravCallback ( int cb_type )$/;"	f	class:ssgEntity
getTraversalMask	src/windows/include/plib/ssg.h	/^  int  getTraversalMask     ()        { return traversal_mask ;}$/;"	f	class:ssgEntity
getTriangle	src/modules/graphic/ssggraph/grcarlight.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgVtxTableCarlight
getTriangle	src/modules/graphic/ssggraph/grshadow.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgVtxTableShadow
getTriangle	src/modules/graphic/ssggraph/grsmoke.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgVtxTableSmoke
getTriangle	src/modules/graphic/ssggraph/grvertexarray.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxArray::getTriangle(n,v1,v2,v3);}$/;"	f	class:ssgGrVtxArray
getTriangle	src/modules/graphic/ssggraph/grvtxtable.h	/^  void getTriangle ( int n, short *v1, short *v2, short *v3 )  { ssgVtxTable::getTriangle(n,v1,v2,v3);}$/;"	f	class:grVtxTable
getType	src/drivers/berniw/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	src/drivers/berniw2/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	src/drivers/berniw3/trackdesc.h	/^		inline int getType() { return type; }$/;"	f	class:TrackSegment
getType	src/drivers/inferno/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment
getType	src/drivers/inferno/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment2D
getType	src/drivers/lliaw/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment
getType	src/drivers/lliaw/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment2D
getType	src/drivers/tita/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment
getType	src/drivers/tita/trackdesc.h	/^		inline int getType() const { return pTrackSeg->type; }$/;"	f	class:TrackSegment2D
getType	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  ShapeType getType() const { return COMPLEX; } $/;"	f	class:Complex
getType	src/modules/simu/simuv2/SOLID-2.0/src/Convex.h	/^  ShapeType getType() const { return CONVEX; } $/;"	f	class:Convex
getType	src/windows/include/plib/ssg.h	/^  int   getType    (void)     { return type ; }$/;"	f	class:ssgBase
getTypeName	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:ssgVtxTableCarlight
getTypeName	src/modules/graphic/ssggraph/grshadow.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:ssgVtxTableShadow
getTypeName	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:ssgVtxTableSmoke
getTypeName	src/modules/graphic/ssggraph/grvertexarray.h	/^  virtual char *getTypeName(void) { return ssgVtxArray::getTypeName();}$/;"	f	class:ssgGrVtxArray
getTypeName	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual const char *getTypeName(void)  { return ssgVtxTable::getTypeName();}$/;"	f	class:grVtxTable
getUnique	src/windows/include/plib/ssg.h	/^  int  getUnique () { return unique ; }$/;"	f	class:ssgBase
getUp	src/modules/graphic/ssggraph/grcam.h	/^    t3Dd *getUp(void) {$/;"	f	class:cGrCamera
getUpper	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Scalar getUpper(int i) const { return center[i] + extent[i]; }$/;"	f	class:BBox
getUpv	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 *getUpv(void) {$/;"	f	class:cGrCamera
getUserData	src/windows/include/plib/ssg.h	/^  ssgBase *getUserData () { return user_data ; }$/;"	f	class:ssgBase
getUserTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^int getUserTextureMaxSize(void)$/;"	f
getUserTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^void getUserTextureMaxSize(int &result)$/;"	f
getVFOV	src/windows/include/plib/sg.h	/^  SGDfloat  getVFOV (void) const { return vfov  ; }$/;"	f	class:sgdFrustum
getVFOV	src/windows/include/plib/sg.h	/^  SGfloat  getVFOV (void) const { return vfov  ; }$/;"	f	class:sgFrustum
getValNumFromStr	src/libs/tgf/params.cpp	/^getValNumFromStr (const char *str)$/;"	f	file:
getValue	export/include/3D/Matrix.h	/^  Mat3&       getValue()       { return elem; }$/;"	f	class:Matrix
getValue	export/include/3D/Matrix.h	/^  const Mat3& getValue() const { return elem; }$/;"	f	class:Matrix
getValue	export/include/3D/Tuple3.h	/^  Scalar       *getValue()       { return comp; }$/;"	f	class:Tuple3
getValue	export/include/3D/Tuple3.h	/^  const Scalar *getValue() const { return comp; }$/;"	f	class:Tuple3
getValue	export/include/3D/Tuple4.h	/^  Scalar       *getValue()       { return comp; }$/;"	f	class:Tuple4
getValue	export/include/3D/Tuple4.h	/^  const Scalar *getValue() const { return comp; }$/;"	f	class:Tuple4
getValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Mat3&       getValue()       { return elem; }$/;"	f	class:Matrix
getValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  const Mat3& getValue() const { return elem; }$/;"	f	class:Matrix
getValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Scalar       *getValue()       { return comp; }$/;"	f	class:Tuple3
getValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  const Scalar *getValue() const { return comp; }$/;"	f	class:Tuple3
getValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Scalar       *getValue()       { return comp; }$/;"	f	class:Tuple4
getValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  const Scalar *getValue() const { return comp; }$/;"	f	class:Tuple4
getVel	src/windows/include/plib/sg.h	/^  SGfloat *getVel   () { return vel      ; }$/;"	f	class:sgParticle
getVel	src/windows/include/plib/sg.h	/^  const SGfloat *getVel   () const { return vel      ; }$/;"	f	class:sgParticle
getVertex	src/windows/include/plib/ssg.h	/^  float *getVertex  (int i){ if(i>=getNumVertices())i=getNumVertices()-1;$/;"	f	class:ssgVtxTable
getVertex	src/windows/include/plib/ssg.h	/^  float *getVertex  (int i){ if(i>=num_vertices)i=num_vertices-1;$/;"	f	class:ssgVTable
getVertexCount	src/windows/include/plib/ssg.h	/^  int getVertexCount () { return vertex_count ; }$/;"	f	class:ssgStatistics
getVertexList	src/windows/include/plib/ssg.h	/^  void getVertexList   ( void **list ) { *list = vertices  -> get ( 0 ) ; }$/;"	f	class:ssgVtxTable
getVertexList	src/windows/include/plib/ssg.h	/^  void getVertexList ( void **list, unsigned short **idx )$/;"	f	class:ssgVTable
getVertices	src/windows/include/plib/ssg.h	/^  ssgVertexArray   *getVertices  () { return vertices  ; }$/;"	f	class:ssgVtxTable
getViewMode	src/modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::getViewMode() {$/;"	f	class:cGrTrackMap
getViewRatio	src/modules/graphic/ssggraph/grscreen.h	/^		float getViewRatio(void) { return viewRatio; }$/;"	f	class:cGrScreen
getVolume	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual float getVolume() {return volume;}$/;"	f	class:TorcsSound
getWaveHeight	src/windows/include/plib/ssgaWaveSystem.h	/^  float getWaveHeight () { return height  ; }$/;"	f	class:ssgaWaveTrain
getWaveTrain	src/windows/include/plib/ssgaWaveSystem.h	/^  ssgaWaveTrain *getWaveTrain ( int i )$/;"	f	class:ssgaWaveSystem
getWeight	src/drivers/berniw/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWeight	src/drivers/berniw2/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWeight	src/drivers/berniw3/pathfinder.h	/^		inline tdble getWeight() { return weight; }$/;"	f	class:PathSeg
getWheelBase	src/drivers/berniw/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	src/drivers/berniw2/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	src/drivers/berniw3/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	src/drivers/inferno/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	src/drivers/lliaw/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelBase	src/drivers/tita/mycar.h	/^		inline double getWheelBase() { return wheelbase; }$/;"	f	class:MyCar
getWheelTrack	src/drivers/berniw/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	src/drivers/berniw2/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	src/drivers/berniw3/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	src/drivers/inferno/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	src/drivers/lliaw/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWheelTrack	src/drivers/tita/mycar.h	/^		inline double getWheelTrack() { return wheeltrack; }$/;"	f	class:MyCar
getWidth	src/drivers/berniw/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	src/drivers/berniw2/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	src/drivers/berniw3/trackdesc.h	/^		inline tdble getWidth() { return width; }$/;"	f	class:TrackSegment
getWidth	src/drivers/bt/opponent.h	/^		float getWidth() { return cardata->getWidthOnTrack(); }$/;"	f	class:Opponent
getWidth	src/drivers/damned/opponent.h	/^		float getWidth() { return cardata->getWidthOnTrack(); }$/;"	f	class:Opponent
getWidth	src/drivers/inferno/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment
getWidth	src/drivers/inferno/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment2D
getWidth	src/drivers/lliaw/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment
getWidth	src/drivers/lliaw/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment2D
getWidth	src/drivers/olethros/opponent.h	/^		float getWidth() { return cardata->getWidthOnTrack(); }$/;"	f	class:olethros::Opponent
getWidth	src/drivers/sparkle/opponent.h	/^		float getWidth() { return width; }$/;"	f	class:Opponent
getWidth	src/drivers/tita/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment
getWidth	src/drivers/tita/trackdesc.h	/^		inline tdble getWidth() const { return width; }$/;"	f	class:TrackSegment2D
getWidth	src/libs/tgfclient/guifont.cpp	/^int GfuiFontClass::getWidth(const char* text)$/;"	f	class:GfuiFontClass
getWidthOnTrack	src/drivers/bt/cardata.h	/^		inline float getWidthOnTrack() { return width; }$/;"	f	class:SingleCardata
getWidthOnTrack	src/drivers/damned/cardata.h	/^		inline float getWidthOnTrack() { return width; }$/;"	f	class:SingleCardata
getWidthOnTrack	src/drivers/olethros/cardata.h	/^	inline float getWidthOnTrack() { return width; }$/;"	f	class:olethros::SingleCardata
getWindDirn	src/windows/include/plib/ssgaWaveSystem.h	/^  float getWindDirn      () { return windHeading ; }$/;"	f	class:ssgaWaveSystem
getWindSpeed	src/windows/include/plib/ssgaWaveSystem.h	/^  float getWindSpeed     () { return windSpeed   ; }$/;"	f	class:ssgaWaveSystem
get_crc_table	src/windows/include/zconf.h	37;"	d
get_state	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgState *get_state ( _ssgMaterial *mat )$/;"	f	file:
get_state_ext	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgState *get_state_ext ( char * name)$/;"	f	file:
get_time	src/windows/include/plib/ssg.h	/^  double get_time() const$/;"	f	class:ssgTimedSelector
getid	src/drivers/inferno/pathfinder.h	/^		int getid(int id) {$/;"	f	class:PathSeg
getid	src/drivers/lliaw/pathfinder.h	/^		int getid(int id) {$/;"	f	class:PathSeg
getid	src/drivers/tita/pathfinder.h	/^		int getid(int id) {$/;"	f	class:PathSeg
getnPathSeg	src/drivers/berniw/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	src/drivers/berniw2/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	src/drivers/berniw3/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	src/drivers/inferno/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	src/drivers/lliaw/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnPathSeg	src/drivers/tita/pathfinder.h	/^		inline int getnPathSeg() { return nPathSeg; }$/;"	f	class:Pathfinder
getnTrackSegments	src/drivers/berniw/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	src/drivers/berniw2/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	src/drivers/berniw3/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	src/drivers/inferno/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	src/drivers/lliaw/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
getnTrackSegments	src/drivers/tita/trackdesc.h	/^		inline int getnTrackSegments() { return nTrackSegments; }$/;"	f	class:TrackDesc
gfDirInit	src/libs/tgf/directory.cpp	/^gfDirInit(void)$/;"	f
gfId	export/include/tgf.h	/^    unsigned int	gfId;		\/**< supported framework version *\/$/;"	m	struct:ModInfo
gfId	src/libs/tgf/tgf.h	/^    unsigned int	gfId;		\/**< supported framework version *\/$/;"	m	struct:ModInfo
gfIncreaseHash	src/libs/tgf/hash.cpp	/^gfIncreaseHash(tHashHeader *curHeader)$/;"	f	file:
gfJoyFirstInit	src/libs/tgfclient/control.cpp	/^gfJoyFirstInit(void)$/;"	f	file:
gfMean	src/libs/tgf/tgf.cpp	/^tdble gfMean(tdble v, tMeanVal *pvt, int n, int w)$/;"	f
gfMeanReset	src/libs/tgf/tgf.cpp	/^void gfMeanReset(tdble v, tMeanVal *pvt)$/;"	f
gfMenuInit	src/libs/tgfclient/guimenu.cpp	/^gfMenuInit(void)$/;"	f
gfModInit	src/libs/tgf/module.cpp	/^gfModInit(void)$/;"	f
gfOsInit	src/libs/tgf/os.cpp	/^gfOsInit(void)$/;"	f
gfParamInit	src/libs/tgf/params.cpp	/^gfParamInit (void)$/;"	f
gfRemElem	src/libs/tgf/hash.cpp	/^gfRemElem(tHashHead *hashHead, tHashElem *elem)$/;"	f	file:
gfScreenInit	src/libs/tgfclient/screen.cpp	/^gfScreenInit(void)$/;"	f
gfTraceInit	src/libs/tgf/trace.cpp	/^gfTraceInit(void)$/;"	f
gfctrlJoyPresent	src/libs/tgfclient/control.cpp	/^static int gfctrlJoyPresent = GFCTRL_JOY_UNTESTED;$/;"	v	file:
gfmaxJoyAxis	src/libs/tgfclient/control.cpp	/^static int gfmaxJoyAxis		= sizeof(GfJoyAxis)	\/ sizeof(GfJoyAxis[0]);$/;"	v	file:
gfmaxJoyButton	src/libs/tgfclient/control.cpp	/^static int gfmaxJoyButton	= sizeof(GfJoyBtn)	\/ sizeof(GfJoyBtn[0]);$/;"	v	file:
gfmaxKey	src/libs/tgfclient/control.cpp	/^static int gfmaxKey		= sizeof(GfKey)		\/ sizeof(GfKey[0]);$/;"	v	file:
gfmaxMouseAxis	src/libs/tgfclient/control.cpp	/^static int gfmaxMouseAxis	= sizeof(GfMouseAxis)	\/ sizeof(GfMouseAxis[0]);$/;"	v	file:
gfmaxMouseButton	src/libs/tgfclient/control.cpp	/^static int gfmaxMouseButton	= sizeof(GfMouseBtn)	\/ sizeof(GfMouseBtn[0]);$/;"	v	file:
gfmaxSKey	src/libs/tgfclient/control.cpp	/^static int gfmaxSKey		= sizeof(GfSKey)	\/ sizeof(GfSKey[0]);$/;"	v	file:
gfuiAddObject	src/libs/tgfclient/guiobject.cpp	/^gfuiAddObject(tGfuiScreen *screen, tGfuiObject *object)$/;"	f
gfuiButtonAction	src/libs/tgfclient/guibutton.cpp	/^gfuiButtonAction(int action)$/;"	f
gfuiButtonInit	src/libs/tgfclient/guibutton.cpp	/^gfuiButtonInit(void)$/;"	f
gfuiColorInit	src/libs/tgfclient/gui.cpp	/^gfuiColorInit(void)$/;"	f	file:
gfuiDrawButton	src/libs/tgfclient/guibutton.cpp	/^gfuiDrawButton(tGfuiObject *obj)$/;"	f
gfuiDrawEditbox	src/libs/tgfclient/guiedit.cpp	/^gfuiDrawEditbox(tGfuiObject *obj)$/;"	f
gfuiDrawGrButton	src/libs/tgfclient/guibutton.cpp	/^gfuiDrawGrButton(tGfuiObject *obj)$/;"	f
gfuiDrawImage	src/libs/tgfclient/guiimage.cpp	/^gfuiDrawImage(tGfuiObject *obj)$/;"	f
gfuiDrawLabel	src/libs/tgfclient/guilabel.cpp	/^gfuiDrawLabel(tGfuiObject *obj)$/;"	f
gfuiDrawScrollist	src/libs/tgfclient/guiscrollist.cpp	/^gfuiDrawScrollist(tGfuiObject *obj)$/;"	f
gfuiEditboxAction	src/libs/tgfclient/guiedit.cpp	/^gfuiEditboxAction(int mouse)$/;"	f
gfuiEditboxInit	src/libs/tgfclient/guiedit.cpp	/^gfuiEditboxInit(void)$/;"	f
gfuiEditboxKey	src/libs/tgfclient/guiedit.cpp	/^gfuiEditboxKey(tGfuiObject *obj, int key, int modifier)$/;"	f
gfuiEditboxRecalcCursor	src/libs/tgfclient/guiedit.cpp	/^gfuiEditboxRecalcCursor(tGfuiObject *obj)$/;"	f	file:
gfuiFont	src/libs/tgfclient/guifont.cpp	/^GfuiFontClass *gfuiFont[FONT_NB];$/;"	v
gfuiGetObject	src/libs/tgfclient/guiobject.cpp	/^gfuiGetObject(void *scr, int id)$/;"	f
gfuiGrButtonAction	src/libs/tgfclient/guibutton.cpp	/^gfuiGrButtonAction(int action)$/;"	f
gfuiHelpInit	src/libs/tgfclient/guihelp.cpp	/^gfuiHelpInit(void)$/;"	f
gfuiInit	src/libs/tgfclient/gui.cpp	/^gfuiInit(void)$/;"	f
gfuiKeyboard	src/libs/tgfclient/gui.cpp	/^gfuiKeyboard(unsigned char key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiKeyboardUp	src/libs/tgfclient/gui.cpp	/^gfuiKeyboardUp(unsigned char key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiLabelInit	src/libs/tgfclient/guilabel.cpp	/^gfuiLabelInit(void)$/;"	f
gfuiLoadFonts	src/libs/tgfclient/guifont.cpp	/^void gfuiLoadFonts(void)$/;"	f
gfuiLoseFocus	src/libs/tgfclient/guiobject.cpp	/^gfuiLoseFocus(tGfuiObject *obj)$/;"	f	file:
gfuiMotion	src/libs/tgfclient/gui.cpp	/^gfuiMotion(int x, int y)$/;"	f	file:
gfuiMouse	src/libs/tgfclient/gui.cpp	/^gfuiMouse(int button, int state, int x, int y)$/;"	f	file:
gfuiMouseAction	src/libs/tgfclient/guiobject.cpp	/^gfuiMouseAction(void *vaction)$/;"	f
gfuiMouseIn	src/libs/tgfclient/guiobject.cpp	/^gfuiMouseIn(tGfuiObject *obj)$/;"	f	file:
gfuiObjectInit	src/libs/tgfclient/guiobject.cpp	/^gfuiObjectInit(void)$/;"	f
gfuiPassiveMotion	src/libs/tgfclient/gui.cpp	/^gfuiPassiveMotion(int x, int y)$/;"	f	file:
gfuiPrintString	src/libs/tgfclient/guiobject.cpp	/^gfuiPrintString(int x, int y, GfuiFontClass *font, const char *string)$/;"	f
gfuiReleaseButton	src/libs/tgfclient/guibutton.cpp	/^gfuiReleaseButton(tGfuiObject *obj)$/;"	f
gfuiReleaseEditbox	src/libs/tgfclient/guiedit.cpp	/^gfuiReleaseEditbox(tGfuiObject *curObject)$/;"	f
gfuiReleaseGrButton	src/libs/tgfclient/guibutton.cpp	/^gfuiReleaseGrButton(tGfuiObject *obj)$/;"	f
gfuiReleaseImage	src/libs/tgfclient/guiimage.cpp	/^gfuiReleaseImage(tGfuiObject *obj)$/;"	f
gfuiReleaseLabel	src/libs/tgfclient/guilabel.cpp	/^gfuiReleaseLabel(tGfuiObject *obj)$/;"	f
gfuiReleaseObject	src/libs/tgfclient/guiobject.cpp	/^gfuiReleaseObject(tGfuiObject *curObject)$/;"	f
gfuiReleaseScrollbar	src/libs/tgfclient/guiscrollbar.cpp	/^gfuiReleaseScrollbar(tGfuiObject *curObject)$/;"	f
gfuiReleaseScrollist	src/libs/tgfclient/guiscrollist.cpp	/^gfuiReleaseScrollist(tGfuiObject *curObject)$/;"	f
gfuiScrListInit	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrListInit(void)$/;"	f
gfuiScroll	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScroll(tScrollBarInfo *sinfo)$/;"	f	file:
gfuiScrollBarInit	src/libs/tgfclient/guiscrollbar.cpp	/^gfuiScrollBarInit(void)$/;"	f
gfuiScrollListAction	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListAction(int mouse)$/;"	f
gfuiScrollListDeselectAll	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListDeselectAll(void)$/;"	f
gfuiScrollListInsElt	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListInsElt(tGfuiScrollList *scrollist, tGfuiListElement *elt, int index)$/;"	f	file:
gfuiScrollListNextElt	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListNextElt (tGfuiObject *object)$/;"	f
gfuiScrollListPrevElt	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListPrevElt (tGfuiObject *object)$/;"	f
gfuiScrollListRemElt	src/libs/tgfclient/guiscrollist.cpp	/^gfuiScrollListRemElt(tGfuiScrollList *scrollist, int index)$/;"	f	file:
gfuiScrollMinus	src/libs/tgfclient/guiscrollbar.cpp	/^gfuiScrollMinus(void *idv)$/;"	f	file:
gfuiScrollPlus	src/libs/tgfclient/guiscrollbar.cpp	/^gfuiScrollPlus(void *idv)$/;"	f	file:
gfuiSelectId	src/libs/tgfclient/guiobject.cpp	/^gfuiSelectId(void *scr, int id)$/;"	f
gfuiSelectNext	src/libs/tgfclient/guiobject.cpp	/^gfuiSelectNext(void * \/* dummy *\/)$/;"	f
gfuiSelectPrev	src/libs/tgfclient/guiobject.cpp	/^gfuiSelectPrev(void * \/* dummy *\/)$/;"	f
gfuiSetFocus	src/libs/tgfclient/guiobject.cpp	/^gfuiSetFocus(tGfuiObject *obj)$/;"	f	file:
gfuiSetLabelText	src/libs/tgfclient/guilabel.cpp	/^gfuiSetLabelText(tGfuiObject *curObject, tGfuiLabel *label, char *text)$/;"	f
gfuiSpecial	src/libs/tgfclient/gui.cpp	/^gfuiSpecial(int key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiSpecialUp	src/libs/tgfclient/gui.cpp	/^gfuiSpecialUp(int key, int \/* x *\/, int \/* y *\/)$/;"	f	file:
gfuiUpdateFocus	src/libs/tgfclient/guiobject.cpp	/^gfuiUpdateFocus(void)$/;"	f
glActiveTextureARB	src/modules/graphic/ssggraph/grmain.cpp	/^PFNGLACTIVETEXTUREARBPROC glActiveTextureARB = NULL;$/;"	v
glClientActiveTextureARB	src/modules/graphic/ssggraph/grmain.cpp	/^PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB = NULL;$/;"	v
glMultiTexCoord2fARB	src/modules/graphic/ssggraph/grmain.cpp	/^PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB = NULL;$/;"	v
glMultiTexCoord2fvARB	src/modules/graphic/ssggraph/grmain.cpp	/^PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB = NULL;$/;"	v
glTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^static int glTextureMaxSize;$/;"	v	file:
global_gain	src/modules/graphic/ssggraph/SoundInterface.h	/^	float global_gain;$/;"	m	class:OpenalSoundInterface
global_gain	src/modules/graphic/ssggraph/SoundInterface.h	/^	float global_gain;$/;"	m	class:PlibSoundInterface
gltype	src/windows/include/plib/ssg.h	/^  GLenum gltype ;$/;"	m	class:ssgLeaf
grAdaptScreenSize	src/modules/graphic/ssggraph/grmain.cpp	/^static void grAdaptScreenSize(void)$/;"	f	file:
grAddCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^void grAddCarlight(tCarElt *car, int type, sgVec3 pos, double size)$/;"	f
grAddSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^void grAddSmoke(tCarElt *car, double t)$/;"	f
grBlack	src/modules/graphic/ssggraph/grboard.cpp	/^static float grBlack[4] = {0.0, 0.0, 0.0, 1.0};$/;"	v	file:
grBlue	src/modules/graphic/ssggraph/grboard.cpp	/^static float grBlue[4] = {0.0, 0.0, 1.0, 1.0};$/;"	v	file:
grCamCreateSceneCameraList	src/modules/graphic/ssggraph/grcam.cpp	/^grCamCreateSceneCameraList(class cGrScreen *myscreen, tGrCamHead *cams, tdble fovFactor)$/;"	f
grCarIndex	src/modules/graphic/ssggraph/grcar.cpp	/^static int grCarIndex;$/;"	v	file:
grCarInfo	src/modules/graphic/ssggraph/grmain.cpp	/^tgrCarInfo *grCarInfo;$/;"	v
grContext	src/modules/graphic/ssggraph/grmain.cpp	/^ssgContext grContext;$/;"	v
grCurTime	src/modules/graphic/ssggraph/grmain.cpp	/^double grCurTime;$/;"	v
grCustomizePits	src/modules/graphic/ssggraph/grscene.cpp	/^grCustomizePits(void)$/;"	f
grDefaultClr	src/modules/graphic/ssggraph/grboard.cpp	/^static float grDefaultClr[4] = {0.9, 0.9, 0.15, 1.0};$/;"	v	file:
grDeltaTime	src/modules/graphic/ssggraph/grmain.cpp	/^double grDeltaTime;$/;"	v
grDispArcade	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispArcade(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCarBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCarBoard(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCarBoard1	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCarBoard1(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCarBoard2	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCarBoard2(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispCounterBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCounterBoard(tCarElt *car)$/;"	f	class:cGrBoard
grDispCounterBoard2	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispCounterBoard2(tCarElt *car)$/;"	f	class:cGrBoard
grDispDebug	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispDebug(float fps, tCarElt *car)$/;"	f	class:cGrBoard
grDispEngineLeds	src/modules/graphic/ssggraph/grboard.cpp	/^grDispEngineLeds (tCarElt *car, int X, int Y, int align, int bg)$/;"	f	file:
grDispGGraph	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispGGraph(tCarElt *car)$/;"	f	class:cGrBoard
grDispLeaderBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispLeaderBoard(tCarElt *car, tSituation *s)$/;"	f	class:cGrBoard
grDispMisc	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDispMisc(tCarElt *car)$/;"	f	class:cGrBoard
grDrawBackground	src/modules/graphic/ssggraph/grscene.cpp	/^void grDrawBackground(class cGrCamera *cam, class cGrBackgroundCam *bgCam)$/;"	f
grDrawCar	src/modules/graphic/ssggraph/grcar.cpp	/^grDrawCar(tCarElt *car, tCarElt *curCar, int dispCarFlag, int dispDrvFlag, double curTime, class cGrPerspCamera *curCam)$/;"	f
grDrawGauge	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::grDrawGauge(tdble X1, tdble Y1, tdble H, float *clr1, float *clr2, tdble val, char *title)$/;"	f	class:cGrBoard
grDrawScene	src/modules/graphic/ssggraph/grscene.cpp	/^void grDrawScene(void)$/;"	f
grDrawShadow	src/modules/graphic/ssggraph/grcar.cpp	/^grDrawShadow(tCarElt *car, int visible)$/;"	f	file:
grDrawSkidmarks	src/modules/graphic/ssggraph/grskidmarks.cpp	/^void grDrawSkidmarks (tCarElt *car)$/;"	f
grEnvSelector	src/modules/graphic/ssggraph/grscene.cpp	/^ssgStateSelector	*grEnvSelector;$/;"	v
grEnvShadowState	src/modules/graphic/ssggraph/grscene.cpp	/^grMultiTexState	*grEnvShadowState=NULL;$/;"	v
grEnvShadowStateOnCars	src/modules/graphic/ssggraph/grscene.cpp	/^grMultiTexState	*grEnvShadowStateOnCars=NULL;$/;"	v
grEnvState	src/modules/graphic/ssggraph/grscene.cpp	/^grMultiTexState	*grEnvState=NULL;$/;"	v
grFilePath	src/modules/graphic/ssggraph/grutil.cpp	/^char *grFilePath;			\/\/ Multiple path (';' separated) used to search for files.$/;"	v
grFireDeltaT	src/modules/graphic/ssggraph/grsmoke.cpp	/^double grFireDeltaT;$/;"	v
grFps	src/modules/graphic/ssggraph/grmain.cpp	/^float grFps;$/;"	v
grGammaValue	src/modules/graphic/ssggraph/grutil.cpp	/^float grGammaValue = 1.8;$/;"	v
grGetDistToStart	src/modules/graphic/ssggraph/grcar.cpp	/^tdble grGetDistToStart(tCarElt *car)$/;"	f
grGetFilename	src/modules/graphic/ssggraph/grutil.cpp	/^int grGetFilename(char *filename, char *filepath, char *buf)$/;"	f
grGetHOT	src/modules/graphic/ssggraph/grutil.cpp	/^float grGetHOT(float x, float y)$/;"	f
grGetState	src/modules/graphic/ssggraph/grutil.cpp	/^static grManagedState * grGetState(char *img)$/;"	f	file:
grGetcurrentScreen	src/modules/graphic/ssggraph/grmain.cpp	/^grGetcurrentScreen(void)$/;"	f	file:
grGreen	src/modules/graphic/ssggraph/grboard.cpp	/^static float grGreen[4] = {0.0, 1.0, 0.0, 1.0};$/;"	v	file:
grHandle	src/modules/graphic/ssggraph/grmain.cpp	/^void *grHandle = NULL;$/;"	v
grInitBoardCar	src/modules/graphic/ssggraph/grboard.cpp	/^void grInitBoardCar(tCarElt *car)$/;"	f
grInitCar	src/modules/graphic/ssggraph/grcar.cpp	/^grInitCar(tCarElt *car)$/;"	f
grInitCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^void grInitCarlight(int index)$/;"	f
grInitCommonState	src/modules/graphic/ssggraph/grcar.cpp	/^grInitCommonState(void)$/;"	f
grInitScene	src/modules/graphic/ssggraph/grscene.cpp	/^grInitScene(void)$/;"	f
grInitShadow	src/modules/graphic/ssggraph/grcar.cpp	/^grInitShadow(tCarElt *car)$/;"	f
grInitSkidmarks	src/modules/graphic/ssggraph/grskidmarks.cpp	/^void grInitSkidmarks(tCarElt *car)$/;"	f
grInitSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^void grInitSmoke(int index)$/;"	f
grInitSound	src/modules/graphic/ssggraph/grsound.cpp	/^void grInitSound(tSituation* s, int ncars)$/;"	f
grLinkCarlights	src/modules/graphic/ssggraph/grcarlight.cpp	/^void grLinkCarlights(tCarElt *car)$/;"	f
grLoadPngTexture	src/modules/graphic/ssggraph/grutil.cpp	/^bool grLoadPngTexture (const char *fname, ssgTextureInfo* info)$/;"	f
grLoadSGI	src/modules/graphic/ssggraph/grtexture.cpp	/^bool grLoadSGI(const char *fname, ssgTextureInfo* info)$/;"	f
grLoadScene	src/modules/graphic/ssggraph/grscene.cpp	/^grLoadScene(tTrack *track)$/;"	f
grLodFactorValue	src/modules/graphic/ssggraph/grmain.cpp	/^tdble grLodFactorValue = 1.0;$/;"	v
grMakeLookAtMat4	src/modules/graphic/ssggraph/grcam.cpp	/^grMakeLookAtMat4 ( sgMat4 dst, const sgVec3 eye, const sgVec3 center, const sgVec3 up )$/;"	f	file:
grMakeMipMaps	src/modules/graphic/ssggraph/grtexture.cpp	/^bool grMakeMipMaps (GLubyte *image, int xsize, int ysize, int zsize, bool mipmap)$/;"	f
grManagedState	src/modules/graphic/ssggraph/grtexture.h	/^class grManagedState : public ssgSimpleState {$/;"	c
grMaxDammage	src/modules/graphic/ssggraph/grmain.cpp	/^tdble grMaxDammage = 10000.0;$/;"	v
grMipMap	src/modules/graphic/ssggraph/grutil.cpp	/^int grMipMap = 0;$/;"	v
grMouseRatioX	src/modules/graphic/ssggraph/grmain.cpp	/^static float grMouseRatioX, grMouseRatioY;$/;"	v	file:
grMouseRatioY	src/modules/graphic/ssggraph/grmain.cpp	/^static float grMouseRatioX, grMouseRatioY;$/;"	v	file:
grMultiTexState	src/modules/graphic/ssggraph/grmultitexstate.h	/^class grMultiTexState : public grManagedState$/;"	c
grNbCars	src/modules/graphic/ssggraph/grmain.cpp	/^int grNbCars = 0;$/;"	v
grNbScreen	src/modules/graphic/ssggraph/grmain.cpp	/^int grNbScreen = 1;$/;"	v
grNextCar	src/modules/graphic/ssggraph/grmain.cpp	/^grNextCar(void * \/* dummy *\/)$/;"	f	file:
grPrevCar	src/modules/graphic/ssggraph/grmain.cpp	/^grPrevCar(void * \/* dummy *\/)$/;"	f	file:
grPropagateDamage	src/modules/graphic/ssggraph/grcar.cpp	/^void grPropagateDamage (ssgEntity* l, sgVec3 poc, sgVec3 force, int cnt)$/;"	f
grRed	src/modules/graphic/ssggraph/grboard.cpp	/^static float grRed[4] = {1.0, 0.0, 0.0, 1.0};$/;"	v	file:
grRefreshSound	src/modules/graphic/ssggraph/grsound.cpp	/^grRefreshSound(tSituation *s, cGrCamera	*camera)$/;"	f
grRegisterCustomSGILoader	src/modules/graphic/ssggraph/grtexture.cpp	/^void grRegisterCustomSGILoader(void)$/;"	f
grSGIHeader	src/modules/graphic/ssggraph/grtexture.cpp	/^grSGIHeader::grSGIHeader(const char *fname, ssgTextureInfo* info)$/;"	f	class:grSGIHeader
grSGIHeader	src/modules/graphic/ssggraph/grtexture.h	/^class grSGIHeader : public ssgSGIHeader {$/;"	c
grScreens	src/modules/graphic/ssggraph/grmain.cpp	/^class cGrScreen *grScreens[GR_NB_MAX_SCREEN] = {NULL, NULL, NULL, NULL};$/;"	v	typeref:class:cGrScreen
grSelectBoard	src/modules/graphic/ssggraph/grmain.cpp	/^grSelectBoard(void *vp)$/;"	f	file:
grSelectCamera	src/modules/graphic/ssggraph/grmain.cpp	/^grSelectCamera(void *vp)$/;"	f	file:
grSelectTrackMap	src/modules/graphic/ssggraph/grmain.cpp	/^grSelectTrackMap(void * \/* vp *\/)$/;"	f	file:
grSetZoom	src/modules/graphic/ssggraph/grmain.cpp	/^grSetZoom(void *vp)$/;"	f	file:
grSetupState	src/modules/graphic/ssggraph/grutil.cpp	/^static void grSetupState(grManagedState *st, char *buf)$/;"	f	file:
grShudownCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^void grShudownCarlight(void)$/;"	f
grShutdownBoardCar	src/modules/graphic/ssggraph/grboard.cpp	/^void grShutdownBoardCar(void)$/;"	f
grShutdownScene	src/modules/graphic/ssggraph/grscene.cpp	/^void grShutdownScene(void)$/;"	f
grShutdownSkidmarks	src/modules/graphic/ssggraph/grskidmarks.cpp	/^void grShutdownSkidmarks (void)$/;"	f
grShutdownSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^void grShutdownSmoke ()$/;"	f
grShutdownSound	src/modules/graphic/ssggraph/grsound.cpp	/^grShutdownSound(int ncars)$/;"	f
grShutdownState	src/modules/graphic/ssggraph/grutil.cpp	/^void grShutdownState(void)$/;"	f
grSkidDeltaT	src/modules/graphic/ssggraph/grskidmarks.cpp	/^double grSkidDeltaT;$/;"	v
grSkidMaxPointByStrip	src/modules/graphic/ssggraph/grskidmarks.cpp	/^int grSkidMaxPointByStrip;$/;"	v
grSkidMaxStripByWheel	src/modules/graphic/ssggraph/grskidmarks.cpp	/^int grSkidMaxStripByWheel;$/;"	v
grSmokeDeltaT	src/modules/graphic/ssggraph/grsmoke.cpp	/^double grSmokeDeltaT;$/;"	v
grSmokeLife	src/modules/graphic/ssggraph/grsmoke.cpp	/^double grSmokeLife;$/;"	v
grSmokeMaxNumber	src/modules/graphic/ssggraph/grsmoke.cpp	/^int grSmokeMaxNumber;$/;"	v
grSplitScreen	src/modules/graphic/ssggraph/grmain.cpp	/^grSplitScreen(void *vp)$/;"	f	file:
grSsgEnvTexState	src/modules/graphic/ssggraph/grutil.cpp	/^ssgState * grSsgEnvTexState(char *img)$/;"	f
grSsgLoadTexState	src/modules/graphic/ssggraph/grutil.cpp	/^ssgState * grSsgLoadTexState(char *img)$/;"	f
grSsgLoadTexStateEx	src/modules/graphic/ssggraph/grutil.cpp	/^grSsgLoadTexStateEx(char *img, char *filepath, int wrap, int mipmap)$/;"	f
grStateFactory	src/modules/graphic/ssggraph/grtexture.h	/^inline grManagedState* grStateFactory(void) { return new grManagedState(); }$/;"	f
grSwitchMirror	src/modules/graphic/ssggraph/grmain.cpp	/^grSwitchMirror(void * \/* dummy *\/)$/;"	f	file:
grTexturePath	src/modules/graphic/ssggraph/grutil.cpp	/^char *grTexturePath = NULL;	\/\/ Default ssg path.$/;"	v
grTrack	src/modules/graphic/ssggraph/grscene.cpp	/^tTrack 	 *grTrack;$/;"	v
grTrackHandle	src/modules/graphic/ssggraph/grmain.cpp	/^void *grTrackHandle = NULL;$/;"	v
grUpdateCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^void grUpdateCarlight(tCarElt *car,class cGrPerspCamera *curCam, int disp)$/;"	f
grUpdateSkidmarks	src/modules/graphic/ssggraph/grskidmarks.cpp	/^void grUpdateSkidmarks(tCarElt *car, double t)$/;"	f
grUpdateSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^void grUpdateSmoke(double t)$/;"	f
grVtxTable	src/modules/graphic/ssggraph/grvtxtable.cpp	/^grVtxTable::grVtxTable (GLenum ty, ssgVertexArray   *vl,$/;"	f	class:grVtxTable
grVtxTable	src/modules/graphic/ssggraph/grvtxtable.cpp	/^grVtxTable::grVtxTable (int _numMapLevel,int _mapLevel)$/;"	f	class:grVtxTable
grVtxTable	src/modules/graphic/ssggraph/grvtxtable.h	/^class grVtxTable : public ssgVtxTable$/;"	c
grWhite	src/modules/graphic/ssggraph/grboard.cpp	/^static float grWhite[4] = {1.0, 1.0, 1.0, 1.0};$/;"	v	file:
grWinh	src/modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWinw	src/modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWinx	src/modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWiny	src/modules/graphic/ssggraph/grmain.cpp	/^int grWinx, grWiny, grWinw, grWinh;$/;"	v
grWriteTime	src/modules/graphic/ssggraph/grutil.cpp	/^void  grWriteTime(float *color, int font, int x, int y, tdble sec, int sgn)$/;"	f
grWrldMaxSize	src/modules/graphic/ssggraph/grscene.cpp	/^int grWrldMaxSize;$/;"	v
grWrldX	src/modules/graphic/ssggraph/grscene.cpp	/^int grWrldX;$/;"	v
grWrldY	src/modules/graphic/ssggraph/grscene.cpp	/^int grWrldY;$/;"	v
grWrldZ	src/modules/graphic/ssggraph/grscene.cpp	/^int grWrldZ;$/;"	v
gradTable	src/windows/include/plib/sg.h	/^  SGfloat gradTable [ SG_PERLIN_NOISE_WRAP_INDEX * 2 + 2 ] ;$/;"	m	class:sgPerlinNoise_1D
gradTable	src/windows/include/plib/sg.h	/^  sgVec2 gradTable [ SG_PERLIN_NOISE_WRAP_INDEX * 2 + 2 ] ;$/;"	m	class:sgPerlinNoise_2D
gradTable	src/windows/include/plib/sg.h	/^  sgVec3 gradTable [ SG_PERLIN_NOISE_WRAP_INDEX * 2 + 2 ] ;$/;"	m	class:sgPerlinNoise_3D
graphInit	src/modules/graphic/ssggraph/ssggraph.cpp	/^graphInit(int \/* idx *\/, void *pt)$/;"	f	file:
graphic	export/include/track.h	/^    tTrackGraphicInfo	graphic;$/;"	m	struct:__anon186
graphic	src/interfaces/track.h	/^    tTrackGraphicInfo	graphic;$/;"	m	struct:__anon153
graphicItf	export/include/raceman.h	/^    tGraphicItf	graphicItf;$/;"	m	struct:__anon207
graphicItf	src/interfaces/raceman.h	/^    tGraphicItf	graphicItf;$/;"	m	struct:__anon166
grass	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar grass;$/;"	m	class:CarSoundData
grass	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap grass; $/;"	m	class:SoundInterface
grass_ride_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* grass_ride_sound; \/\/\/< rolling on dirt\/grass$/;"	m	class:SoundInterface
grass_skid	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar grass_skid;$/;"	m	class:CarSoundData
grass_skid	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap grass_skid;$/;"	m	class:SoundInterface
grass_skid_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* grass_skid_sound; \/\/\/< skidding on dirt\/grass$/;"	m	class:SoundInterface
gravityOnly	src/windows/include/plib/sg.h	/^  void gravityOnly ()           { sgScaleVec3  ( force, sgGetGravityVec3 (), ooMass ) ; }$/;"	f	class:sgParticle
gray	src/windows/include/png.h	/^   png_byte gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_8_struct
gray	src/windows/include/png.h	/^   png_uint_16 gray;  \/* for use in grayscale files *\/$/;"	m	struct:png_color_16_struct
grbutton	src/libs/tgfclient/gui.h	/^	tGfuiGrButton	grbutton;$/;"	m	union:GfuiObject::__anon67
green	src/windows/include/png.h	/^   png_byte green;$/;"	m	struct:png_color_8_struct
green	src/windows/include/png.h	/^   png_byte green;$/;"	m	struct:png_color_struct
green	src/windows/include/png.h	/^   png_uint_16 green;$/;"	m	struct:png_color_16_struct
green	src/windows/include/png.h	/^   png_uint_16 green;$/;"	m	struct:png_sPLT_entry_struct
gridGetter	src/windows/include/plib/ssgaWaveSystem.h	/^  ssgaWSDepthCallback gridGetter ;$/;"	m	class:ssgaWaveSystem
group	src/tools/trackgen/easymesh.cpp	/^struct group$/;"	s	file:
group	src/tools/trackgen/objects.cpp	/^struct group$/;"	s	file:
group	src/tools/trackgen/track.cpp	/^typedef struct group$/;"	s	file:
groupConnector	src/libs/txml/xmlparse.c	/^  char *groupConnector;$/;"	m	struct:__anon82	file:
groupConnector	src/libs/txml/xmlparse.c	307;"	d	file:
groupSize	src/libs/txml/xmlparse.c	/^  unsigned groupSize;$/;"	m	struct:__anon82	file:
groupSize	src/libs/txml/xmlparse.c	308;"	d	file:
groups	src/tools/trackgen/easymesh.cpp	/^groups(void)$/;"	f	file:
grssgCarLoadAC3D	src/modules/graphic/ssggraph/grloadac.cpp	/^ssgEntity *grssgCarLoadAC3D ( const char *fname, const ssgLoaderOptions* options,int index )$/;"	f
grssgLoadAC3D	src/modules/graphic/ssggraph/grloadac.cpp	/^ssgEntity *grssgLoadAC3D ( const char *fname, const ssgLoaderOptions* options )$/;"	f
gzFile	src/windows/include/zlib.h	/^typedef voidp gzFile;$/;"	t
h	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
h	src/drivers/berniw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon125
h	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
h	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon100
h	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
h	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon116
h	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
h	src/drivers/inferno/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon141
h	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
h	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon134
h	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
h	src/drivers/tita/spline.h	/^	double a, b, c, d, h;$/;"	m	struct:__anon107
h	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int h;$/;"	m	struct:__anon32	file:
hSpace	export/include/track.h	/^    tdble	hSpace;$/;"	m	struct:__anon184
hSpace	src/interfaces/track.h	/^    tdble	hSpace;$/;"	m	struct:__anon151
hWaveOut	src/windows/include/plib/sl.h	/^   HWAVEOUT       hWaveOut;      \/\/ device handle $/;"	m	class:slDSP
hadExternalDoctype	src/libs/txml/xmlparse.c	/^  int hadExternalDoctype;$/;"	m	struct:__anon82	file:
hadExternalDoctype	src/libs/txml/xmlparse.c	309;"	d	file:
halfHeight	src/modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Scalar halfHeight;$/;"	m	class:Cone
halfHeight	src/modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^  Scalar halfHeight;$/;"	m	class:Cylinder
handle	export/include/tgf.h	/^    HMODULE		handle;			\/**< handle of loaded module *\/$/;"	m	struct:ModList
handle	export/include/tgf.h	/^    void		*handle;		\/**< handle of loaded module *\/$/;"	m	struct:ModList
handle	src/libs/tgf/tgf.h	/^    HMODULE		handle;			\/**< handle of loaded module *\/$/;"	m	struct:ModList
handle	src/libs/tgf/tgf.h	/^    void		*handle;		\/**< handle of loaded module *\/$/;"	m	struct:ModList
handle	src/windows/include/plib/ssg.h	/^  GLuint handle ;$/;"	m	class:ssgTexture
handle	src/windows/include/plib/ul.h	/^  HMODULE handle ;$/;"	m	class:ulDynamicLibrary
handle	src/windows/include/plib/ul.h	/^  image_id *handle ;$/;"	m	class:ulDynamicLibrary
handle	src/windows/include/plib/ul.h	/^  void *handle ;$/;"	m	class:ulDynamicLibrary
handle	src/windows/include/ul.h	/^  HMODULE handle ;$/;"	m	class:ulDynamicLibrary
handle	src/windows/include/ul.h	/^  image_id *handle ;$/;"	m	class:ulDynamicLibrary
handle	src/windows/include/ul.h	/^  void *handle ;$/;"	m	class:ulDynamicLibrary
handleEntities	src/libs/tgf/params.cpp	/^static char* handleEntities(char *s, const char* val)$/;"	f	file:
handleUnknownEncoding	src/libs/txml/xmlparse.c	/^handleUnknownEncoding(XML_Parser parser, const XML_Char *encodingName)$/;"	f	file:
handler	src/libs/txml/xmlrole.h	/^  int (*handler)(struct prolog_state *state,$/;"	m	struct:prolog_state
handlerArg	src/libs/txml/xmlparse.c	/^  void *handlerArg;$/;"	m	struct:__anon82	file:
handlerArg	src/libs/txml/xmlparse.c	260;"	d	file:
hasAlpha	src/windows/include/plib/ssg.h	/^  bool hasAlpha () const { return has_alpha ; }$/;"	f	class:ssgTexture
hasFocus	src/libs/tgfclient/gui.h	/^    tGfuiObject		*hasFocus;	\/* in order to speed up focus management *\/$/;"	m	struct:__anon68
hasState	src/windows/include/plib/ssg.h	/^  int       hasState () { return state != NULL ; }$/;"	f	class:ssgLeaf
has_alpha	src/windows/include/plib/ssg.h	/^  bool has_alpha ;$/;"	m	class:ssgTexture
hash	src/libs/txml/hashtable.c	/^unsigned long hash(KEY s)$/;"	f	file:
hashHead	src/libs/tgf/hash.cpp	/^    tHashHead	*hashHead;$/;"	m	struct:HashHeader	file:
hashMapElement	src/modules/graphic/ssggraph/grscene.h	/^typedef struct hashMapElement $/;"	s
hashMapElement_t	src/modules/graphic/ssggraph/grscene.h	/^} hashMapElement_t;$/;"	t	typeref:struct:hashMapElement
hashTableDestroy	src/libs/txml/hashtable.c	/^void hashTableDestroy(HASH_TABLE *table)$/;"	f
hashTableInit	src/libs/txml/hashtable.c	/^void hashTableInit(HASH_TABLE *p)$/;"	f
hashTableIterInit	src/libs/txml/hashtable.c	/^void hashTableIterInit(HASH_TABLE_ITER *iter, const HASH_TABLE *table)$/;"	f
hashTableIterNext	src/libs/txml/hashtable.c	/^NAMED *hashTableIterNext(HASH_TABLE_ITER *iter)$/;"	f
hash_buf	src/libs/tgf/hash.cpp	/^hash_buf (tHashHeader *hash, char *sdata, int len)$/;"	f	file:
hash_str	src/libs/tgf/hash.cpp	/^hash_str (tHashHeader *hash, const char *sstr)$/;"	f	file:
head	export/include/learning/List.h	/^	LISTITEM* head; \/\/\/< head item$/;"	m	struct:List
head	src/libs/learning/List.h	/^	LISTITEM* head; \/\/\/< head item$/;"	m	struct:List
head	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^  Endpoint head;$/;"	m	class:EndpointList	file:
head	src/windows/include/plib/ul.h	/^  ulListNode *head ;$/;"	m	class:ulLinkedList
head	src/windows/include/ul.h	/^  ulListNode *head ;$/;"	m	class:ulLinkedList
header	src/libs/tgf/params.cpp	/^    char				*header;	\/**< Optional header (comment, xsl...) *\/$/;"	m	struct:parmHeader	file:
heading	src/windows/include/plib/ssgaWaveSystem.h	/^  float heading;$/;"	m	class:ssgaWaveTrain
height	export/include/track.h	/^    tdble		height;	\/**< Barrier height *\/$/;"	m	struct:trackBarrier
height	export/include/track.h	/^    tdble	height;		\/**< Max height for curbs *\/$/;"	m	struct:trackSeg
height	export/include/track.h	/^    tdble	height;$/;"	m	struct:__anon184
height	src/interfaces/track.h	/^    tdble		height;	\/**< Barrier height *\/$/;"	m	struct:trackBarrier
height	src/interfaces/track.h	/^    tdble	height;		\/**< Max height for curbs *\/$/;"	m	struct:trackSeg
height	src/interfaces/track.h	/^    tdble	height;$/;"	m	struct:__anon151
height	src/libs/tgfclient/gui.h	/^    float		width, height;$/;"	m	struct:__anon68
height	src/libs/tgfclient/gui.h	/^    int			width, height;$/;"	m	struct:__anon62
height	src/modules/graphic/ssggraph/grcam.cpp	/^    float height;$/;"	m	class:cGrCarCamBehind	file:
height	src/tools/texmapper/maintexmapper.cpp	/^    int			height;		\/* Scaled height *\/$/;"	m	struct:__anon30	file:
height	src/tools/trackgen/elevation.cpp	/^static int	width, height;$/;"	v	file:
height	src/windows/include/plib/ssg.h	/^	unsigned int height ;$/;"	m	struct:ssgTextureInfo
height	src/windows/include/plib/ssgaWaveSystem.h	/^  float height ;$/;"	m	class:ssgaWaveTrain
height	src/windows/include/png.h	/^   png_uint_32 height;        \/* height of image in pixels *\/$/;"	m	struct:png_struct_def
height	src/windows/include/png.h	/^   png_uint_32 height;      \/* height of image in pixels (from IHDR) *\/$/;"	m	struct:png_info_struct
heuristic_method	src/windows/include/png.h	/^   png_byte heuristic_method;        \/* heuristic for row filter selection *\/$/;"	m	struct:png_struct_def
hfov	src/windows/include/plib/sg.h	/^  SGDfloat hfov ;    \/* Horizontal Field of View  -or-  Orthographic Width  *\/$/;"	m	class:sgdFrustum
hfov	src/windows/include/plib/sg.h	/^  SGfloat hfov ;    \/* Horizontal Field of View  -or-  Orthographic Width  *\/$/;"	m	class:sgFrustum
hist	src/windows/include/png.h	/^   png_uint_16p hist;                \/* histogram *\/$/;"	m	struct:png_struct_def
hist	src/windows/include/png.h	/^   png_uint_16p hist;$/;"	m	struct:png_info_struct
hold	src/drivers/inferno2/inferno2.cpp	/^tdble	hold[10] = {0};$/;"	v
hookNode	src/tools/texmapper/maintexmapper.cpp	/^hookNode(char *s)$/;"	f	file:
hookNode	src/tools/trackgen/relief.cpp	/^hookNode(char *s)$/;"	f	file:
hot_colour	src/windows/include/plib/ssgaFire.h	/^  sgVec4 hot_colour  ;$/;"	m	class:ssgaFire
hour	src/windows/include/png.h	/^   png_byte hour;    \/* hour of day, 0 - 23 *\/$/;"	m	struct:png_time_struct
hpr	src/windows/include/plib/sg.h	/^  sgVec3 hpr ;$/;"	m	struct:sgCoord
hpr	src/windows/include/plib/sg.h	/^  sgdVec3 hpr ;$/;"	m	struct:sgdCoord
htan	src/libs/learning/ANN.cpp	/^real htan(real x)$/;"	f
htan_d	src/libs/learning/ANN.cpp	/^real htan_d(real x)$/;"	f
human	src/drivers/human/human.cpp	/^human(tModInfo *modInfo)$/;"	f
human	src/libs/racescreens/driverselect.cpp	/^    int		human;$/;"	m	struct:DrvElt	file:
i	src/tools/trackgen/easymesh.cpp	/^    int i,  j,  k;$/;"	m	struct:ele	file:
ic	src/drivers/berniw/pathfinder.h	/^	double ic;$/;"	m	struct:__anon118
ic	src/drivers/berniw2/pathfinder.h	/^	double ic;$/;"	m	struct:__anon93
ic	src/drivers/berniw3/pathfinder.h	/^	double ic;$/;"	m	struct:__anon109
iccp_compression	src/windows/include/png.h	/^   png_byte iccp_compression; \/* Always zero *\/$/;"	m	struct:png_info_struct
iccp_name	src/windows/include/png.h	/^   png_charp iccp_name;     \/* profile name *\/$/;"	m	struct:png_info_struct
iccp_profile	src/windows/include/png.h	/^   png_charp iccp_profile;  \/* International Color Consortium profile data *\/$/;"	m	struct:png_info_struct
iccp_proflen	src/windows/include/png.h	/^   png_uint_32 iccp_proflen;  \/* ICC profile data length *\/$/;"	m	struct:png_info_struct
iconColor	export/include/car.h	/^    tdble	iconColor[3];		\/**< Car color in leaders board *\/$/;"	m	struct:__anon197
iconColor	src/interfaces/car.h	/^    tdble	iconColor[3];		\/**< Car color in leaders board *\/$/;"	m	struct:__anon157
iconColor	src/modules/graphic/ssggraph/grcar.h	/^    float		iconColor[4];$/;"	m	struct:__anon5
id	export/include/js.h	/^  int          id ;$/;"	m	class:jsJoystick
id	export/include/track.h	/^    int	id;			\/**< Segment number *\/$/;"	m	struct:trackSeg
id	src/interfaces/js.h	/^  int          id ;$/;"	m	class:jsJoystick
id	src/interfaces/track.h	/^    int	id;			\/**< Segment number *\/$/;"	m	struct:trackSeg
id	src/libs/tgfclient/gui.h	/^    int		id;$/;"	m	struct:GfuiObject
id	src/libs/txml/xmlparse.c	/^  const ATTRIBUTE_ID *id;$/;"	m	struct:__anon79	file:
id	src/modules/graphic/ssggraph/SoundInterface.h	/^	int id; \/\/\/< The id of the car producing the sound, used for retrieving doppler effects etc$/;"	m	struct:QueueSoundMap_
id	src/modules/graphic/ssggraph/SoundInterface.h	/^	int id; \/\/\/< car ID.$/;"	m	struct:SoundPri_
id	src/modules/graphic/ssggraph/grboard.h	/^    int	id;		\/* Board Id *\/$/;"	m	class:cGrBoard
id	src/modules/graphic/ssggraph/grcam.h	/^    int			id;		\/* Camera Id *\/$/;"	m	class:cGrCamera
id	src/modules/graphic/ssggraph/grscreen.h	/^		int id;$/;"	m	class:cGrScreen
id	src/tools/trackgen/track.cpp	/^    int			id;$/;"	m	struct:dispElt	file:
id	src/windows/include/plib/ssg.h	/^  int id ;$/;"	m	class:ssgLight
idat_size	src/windows/include/png.h	/^   png_uint_32 idat_size;     \/* current IDAT size for read *\/$/;"	m	struct:png_struct_def
ideal_radius	src/drivers/olethros/driver.h	/^	float *ideal_radius; \/\/\/< ideal radius (according to circle fit)$/;"	m	class:olethros::Driver
iface	src/modules/graphic/ssggraph/TorcsSound.h	/^	class SoundInterface* iface; \/\/\/< Handler to the interface$/;"	m	class:TorcsSound	typeref:class:TorcsSound::SoundInterface
image	src/libs/tgfclient/gui.h	/^	tGfuiImage	image;$/;"	m	union:GfuiObject::__anon67
image_fd	src/modules/graphic/ssggraph/grloadsgi.h	/^		FILE          *image_fd;$/;"	m	class:ssgSGIHeader
image_fname	src/modules/graphic/ssggraph/grloadsgi.h	/^		char          image_fname [ 512 ];$/;"	m	class:ssgSGIHeader
imgchange	doc/tutorials/robot/js/utilities.js	/^function imgchange(inr, iobjekt)$/;"	f
in	src/modules/simu/simuv2/differential.h	/^    tDynAxis	in;$/;"	m	struct:__anon20
in	src/modules/simu/simuv2/wheel.h	/^    tDynAxis	in;$/;"	m	struct:__anon21
in	src/tools/texmapper/maintexmapper.cpp	/^FILE	*in, *out;$/;"	v
inAxis	src/modules/simu/simuv2/differential.h	/^    tDynAxis	*inAxis[2];$/;"	m	struct:__anon20
inGroup	src/modules/graphic/ssggraph/grloadac.cpp	/^int inGroup=0;$/;"	v
inPit	src/drivers/berniw/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	src/drivers/berniw2/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	src/drivers/berniw3/pathfinder.h	/^		bool inPit;				\/* internal pit state *\/$/;"	m	class:Pathfinder
inPit	src/drivers/inferno/pathfinder.h	/^		bool inPit;				\/\/ internal pit state.$/;"	m	class:Pathfinder
inPit	src/drivers/lliaw/pathfinder.h	/^		bool inPit;				\/\/ internal pit state.$/;"	m	class:Pathfinder
inPit	src/drivers/tita/pathfinder.h	/^		bool inPit;				\/\/ internal pit state.$/;"	m	class:Pathfinder
in_elem	src/tools/trackgen/easymesh.cpp	/^int in_elem(struct nod *n)$/;"	f
in_use	src/modules/graphic/ssggraph/SoundInterface.h	/^	bool in_use;$/;"	m	struct:sharedSource
include	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void include (const BBox& b) { enclose(*this, b); }$/;"	f	class:BBox
include	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void include (const Point& p) {$/;"	f	class:BBox
indent	src/libs/tgf/params.cpp	/^    char		*indent;$/;"	m	struct:parmOutput	file:
index	export/include/car.h	/^    int			index;	\/**< car index *\/$/;"	m	struct:CarElt
index	export/include/robot.h	/^    int		 index;		\/**< Index used if multiple interfaces *\/$/;"	m	struct:RobotItf
index	export/include/tgf.h	/^    int			index;		\/**< index if multiple interface in one dll *\/$/;"	m	struct:ModInfo
index	export/include/tgfclient.h	/^    int		index;$/;"	m	struct:__anon212
index	src/interfaces/car.h	/^    int			index;	\/**< car index *\/$/;"	m	struct:CarElt
index	src/interfaces/robot.h	/^    int		 index;		\/**< Index used if multiple interfaces *\/$/;"	m	struct:RobotItf
index	src/libs/raceengineclient/raceinit.cpp	/^	int index;$/;"	m	struct:__anon86	file:
index	src/libs/racescreens/driverselect.cpp	/^    int		index;$/;"	m	struct:DrvElt	file:
index	src/libs/tgf/tgf.h	/^    int			index;		\/**< index if multiple interface in one dll *\/$/;"	m	struct:ModInfo
index	src/libs/tgfclient/gui.h	/^    int				index;$/;"	m	struct:GfuiListElement
index	src/libs/tgfclient/tgfclient.h	/^    int		index;$/;"	m	struct:__anon56
index	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  IndexArray index;$/;"	m	class:Polytope
index	src/windows/include/png.h	/^   png_byte index;    \/* used for palette files *\/$/;"	m	struct:png_color_16_struct
indexBuf	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^IndexBuf indexBuf;$/;"	v
indexCar	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              indexCar;$/;"	v	file:
indexCar	src/modules/graphic/ssggraph/grvtxtable.h	/^  int indexCar;$/;"	m	class:grVtxTable
indexed	src/windows/include/plib/ssg.h	/^  int indexed ;$/;"	m	class:ssgVTable
indice	src/tools/accc/accc.h	/^  int indice;$/;"	m	struct:tcoord
indices	src/drivers/olethros/Trajectory.h	/^    std::vector<int> indices; \/\/\/< data indices$/;"	m	class:Trajectory
indices	src/modules/graphic/ssggraph/grvertexarray.h	/^  ssgIndexArray      *indices;$/;"	m	class:ssgGrVtxArray
indices	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgIndexArray      *indices;$/;"	m	class:grVtxTable
indices	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  unsigned int *indices;$/;"	m	class:IndexArray
indices	src/windows/include/plib/ssg.h	/^  ssgIndexArray      *indices;$/;"	m	class:ssgVtxArray
inf	export/include/3D/Point.h	/^inline Point inf(const Point& p1, const Point& p2) { $/;"	f
inf	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point inf(const Point& p1, const Point& p2) { $/;"	f
inferno	src/drivers/inferno/inferno.cpp	/^extern "C" int inferno(tModInfo *modInfo)$/;"	f
inferno2	src/drivers/inferno2/inferno2.cpp	/^inferno2(tModInfo *modInfo)$/;"	f
infile	src/misc/png2jpg/png2jpg.c	/^static char 	*infile;$/;"	v	file:
infile	src/tools/nfsperf/mainnfsperf.cpp	/^char	*infile = "carp.txt";$/;"	v
inflate	src/windows/include/zconf.h	20;"	d
inflateEnd	src/windows/include/zconf.h	21;"	d
inflateInit	src/windows/include/zlib.h	872;"	d
inflateInit2	src/windows/include/zlib.h	877;"	d
inflateInit2_	src/windows/include/zconf.h	27;"	d
inflateInit_	src/windows/include/zconf.h	19;"	d
inflateReset	src/windows/include/zconf.h	31;"	d
inflateSetDictionary	src/windows/include/zconf.h	28;"	d
inflateSync	src/windows/include/zconf.h	29;"	d
inflateSyncPoint	src/windows/include/zconf.h	30;"	d
info	export/include/car.h	/^    tInitCar		info;	\/**< public *\/$/;"	m	struct:CarElt
info	src/drivers/berniw/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	src/drivers/berniw2/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	src/drivers/berniw3/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	src/drivers/inferno/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	src/drivers/lliaw/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	src/drivers/tita/mycar.cpp	/^void MyCar::info(void)$/;"	f	class:MyCar
info	src/interfaces/car.h	/^    tInitCar		info;	\/**< public *\/$/;"	m	struct:CarElt
info	src/libs/confscreens/driverconfig.cpp	/^    tInfo		info;$/;"	m	struct:tCarInfo	file:
info	src/libs/confscreens/driverconfig.cpp	/^    tInfo		info;$/;"	m	struct:tCatInfo	file:
info	src/libs/confscreens/driverconfig.cpp	/^    tInfo	info;$/;"	m	struct:PlayerInfo	file:
info	src/libs/racescreens/miscscreens.cpp	/^    tRmInfo	*info;$/;"	m	struct:__anon39	file:
info	src/libs/racescreens/results.cpp	/^    tRmInfo	*info;$/;"	m	struct:__anon38	file:
info	src/libs/tgfclient/gui.h	/^    tScrollBarInfo	info;$/;"	m	struct:__anon64
info_fn	src/windows/include/png.h	/^   png_progressive_info_ptr info_fn; \/* called after header data fully read *\/$/;"	m	struct:png_struct_def
init	export/include/simu.h	/^    tfSimInit	  init;$/;"	m	struct:__anon204
init	export/include/telemetry.h	/^    tftlmInit			init;			\/* Init the telemetry *\/$/;"	m	struct:__anon215
init	src/drivers/berniw/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	src/drivers/berniw/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	src/drivers/berniw2/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	src/drivers/berniw2/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	src/drivers/berniw3/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	src/drivers/berniw3/trackdesc.cpp	/^void TrackSegment::init(int id, const tTrackSeg* s, const v3d* lp, const v3d* mp, const v3d* rp)$/;"	f	class:TrackSegment
init	src/drivers/bt/cardata.h	/^		inline void init(CarElt *car) { this->car = car; \/*teammate = false; teammatedamage = 0; *\/}$/;"	f	class:SingleCardata
init	src/drivers/damned/cardata.h	/^		inline void init(CarElt *car) { this->car = car; \/*teammate = false; teammatedamage = 0; *\/}$/;"	f	class:SingleCardata
init	src/drivers/inferno/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	src/drivers/inferno/trackdesc.cpp	/^void TrackSegment2D::init(const TrackSegment* s)$/;"	f	class:TrackSegment2D
init	src/drivers/inferno/trackdesc.cpp	/^void TrackSegment::init(const tTrackSeg* s, const vec3d* lp, const vec3d* mp, const vec3d* rp)$/;"	f	class:TrackSegment
init	src/drivers/lliaw/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	src/drivers/lliaw/trackdesc.cpp	/^void TrackSegment2D::init(const TrackSegment* s)$/;"	f	class:TrackSegment2D
init	src/drivers/lliaw/trackdesc.cpp	/^void TrackSegment::init(const tTrackSeg* s, const vec3d* lp, const vec3d* mp, const vec3d* rp)$/;"	f	class:TrackSegment
init	src/drivers/olethros/cardata.h	/^	inline void init(CarElt *car) { this->car = car; }$/;"	f	class:olethros::SingleCardata
init	src/drivers/tita/mycar.cpp	/^void OtherCar::init(TrackDesc* itrack, tCarElt* car, tSituation *situation)$/;"	f	class:OtherCar
init	src/drivers/tita/trackdesc.cpp	/^void TrackSegment2D::init(const TrackSegment* s)$/;"	f	class:TrackSegment2D
init	src/drivers/tita/trackdesc.cpp	/^void TrackSegment::init(const tTrackSeg* s, const vec3d* lp, const vec3d* mp, const vec3d* rp)$/;"	f	class:TrackSegment
init	src/interfaces/simu.h	/^    tfSimInit	  init;$/;"	m	struct:__anon164
init	src/interfaces/telemetry.h	/^    tftlmInit			init;			\/* Init the telemetry *\/$/;"	m	struct:__anon170
init	src/windows/include/plib/sl.h	/^  void init ()$/;"	f	class:slSample
init	src/windows/include/plib/ssg.h	/^  void init () { num_entries = 0 ; }$/;"	f	class:ssgHit
initBackground	src/modules/graphic/ssggraph/grscene.cpp	/^initBackground(void)$/;"	f	file:
initBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::initBoard(void)$/;"	f	class:cGrBoard
initBoard	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::initBoard(void)$/;"	f	class:cGrScreen
initCGh	src/drivers/berniw/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	src/drivers/berniw2/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	src/drivers/berniw3/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	src/drivers/inferno/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	src/drivers/lliaw/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCGh	src/drivers/tita/mycar.h	/^		inline void initCGh() { cgh = GfParmGetNum(me->_carHandle, SECT_CAR, PRM_GCHEIGHT, NULL, 0.0); }$/;"	f	class:AbstractCar
initCa	src/drivers/bt/driver.cpp	/^void Driver::initCa()$/;"	f	class:Driver
initCa	src/drivers/damned/driver.cpp	/^void Driver::initCa()$/;"	f	class:Driver
initCa	src/drivers/olethros/driver.cpp	/^    void Driver::initCa()$/;"	f	class:olethros::Driver
initCa	src/drivers/sparkle/driver.cpp	/^void Driver::initCa()$/;"	f	class:Driver
initCams	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::initCams(tSituation *s)$/;"	f	class:cGrScreen
initCarGeometry	src/drivers/berniw/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	src/drivers/berniw2/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	src/drivers/berniw3/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	src/drivers/inferno/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	src/drivers/lliaw/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCarGeometry	src/drivers/tita/mycar.cpp	/^void MyCar::initCarGeometry()$/;"	f	class:MyCar
initCars	src/modules/graphic/ssggraph/grmain.cpp	/^initCars(tSituation *s)$/;"	f
initColors	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::initColors()$/;"	f	class:cGrTrackMap
initCw	src/drivers/bt/driver.cpp	/^void Driver::initCw()$/;"	f	class:Driver
initCw	src/drivers/damned/driver.cpp	/^void Driver::initCw()$/;"	f	class:Driver
initCw	src/drivers/olethros/driver.cpp	/^    void Driver::initCw()$/;"	f	class:olethros::Driver
initCw	src/drivers/sparkle/driver.cpp	/^void Driver::initCw()$/;"	f	class:Driver
initDamper	src/modules/simu/simuv2/susp.cpp	/^static void initDamper(tSuspension *susp)$/;"	f	file:
initEnc	src/libs/txml/xmltok.h	/^  ENCODING initEnc;$/;"	m	struct:__anon70
initEncoding	src/libs/txml/xmlparse.c	/^  INIT_ENCODING initEncoding;$/;"	m	struct:__anon82	file:
initEncoding	src/libs/txml/xmlparse.c	271;"	d	file:
initFromConf	src/libs/tgfclient/screen.cpp	/^initFromConf(void)$/;"	f	file:
initLeft	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initLeft	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initLeft	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::initLeft(int id, double w)$/;"	f	class:Pathfinder
initPit	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPit	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::initPit(tCarElt* car) {$/;"	f	class:Pathfinder
initPitStopPath	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPitStopPath	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::initPitStopPath(void)$/;"	f	class:Pathfinder
initPits	src/libs/raceengineclient/raceinit.cpp	/^initPits(void)$/;"	f	file:
initPits	src/tools/trackgen/track.cpp	/^initPits(tTrackPitInfo *pits)$/;"	f	file:
initRight	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initRight	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initRight	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::initRight(int id, double w)$/;"	f	class:Pathfinder
initScan	src/libs/txml/xmltok.c	/^int initScan(const ENCODING *enc, int state, const char *ptr, const char *end,$/;"	f	file:
initScanContent	src/libs/txml/xmltok.c	/^int initScanContent(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
initScanProlog	src/libs/txml/xmltok.c	/^int initScanProlog(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
initSharedSourcePool	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::initSharedSourcePool(void)$/;"	f	class:OpenalSoundInterface
initSharedSourcePool	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual void initSharedSourcePool() {}$/;"	f	class:SoundInterface
initStartingGrid	src/libs/raceengineclient/raceinit.cpp	/^initStartingGrid(void)$/;"	f	file:
initStraight	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initStraight	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initStraight	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::initStraight(int id, double w)$/;"	f	class:Pathfinder
initTCLfilter	src/drivers/bt/driver.cpp	/^void Driver::initTCLfilter()$/;"	f	class:Driver
initTCLfilter	src/drivers/damned/driver.cpp	/^void Driver::initTCLfilter()$/;"	f	class:Driver
initTCLfilter	src/drivers/olethros/driver.cpp	/^    void Driver::initTCLfilter()$/;"	f	class:olethros::Driver
initTCLfilter	src/drivers/sparkle/driver.cpp	/^void Driver::initTCLfilter()$/;"	f	class:Driver
initTireMu	src/drivers/bt/driver.cpp	/^void Driver::initTireMu()$/;"	f	class:Driver
initTireMu	src/drivers/damned/driver.cpp	/^void Driver::initTireMu()$/;"	f	class:Driver
initTireMu	src/drivers/olethros/driver.cpp	/^    void Driver::initTireMu()$/;"	f	class:olethros::Driver
initTireMu	src/drivers/sparkle/driver.cpp	/^void Driver::initTireMu()$/;"	f	class:Driver
initTrack	src/drivers/berniw/berniw.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	src/drivers/berniw2/berniw2.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	src/drivers/berniw3/berniw3.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	src/drivers/bt/bt.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	src/drivers/bt/driver.cpp	/^void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:Driver
initTrack	src/drivers/damned/damned.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	src/drivers/damned/driver.cpp	/^void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:Driver
initTrack	src/drivers/human/human.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	src/drivers/inferno/inferno.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	src/drivers/inferno2/inferno2.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	src/drivers/lliaw/lliaw.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	src/drivers/olethros/driver.cpp	/^    void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:olethros::Driver
initTrack	src/drivers/olethros/olethros.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	namespace:olethros
initTrack	src/drivers/sparkle/driver.cpp	/^void Driver::initTrack(tTrack* t, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	class:Driver
initTrack	src/drivers/sparkle/sparkle.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation *s)$/;"	f	file:
initTrack	src/drivers/tita/tita.cpp	/^static void initTrack(int index, tTrack* track, void *carHandle, void **carParmHandle, tSituation * situation)$/;"	f	file:
initTrack	src/modules/graphic/ssggraph/grmain.cpp	/^initTrack(tTrack *track)$/;"	f
initUpdatePosition	src/libs/txml/xmltok.c	/^void initUpdatePosition(const ENCODING *enc, const char *ptr,$/;"	f	file:
initView	src/modules/graphic/ssggraph/grmain.cpp	/^initView(int x, int y, int width, int height, int \/* flag *\/, void *screen)$/;"	f
initWheel	src/modules/graphic/ssggraph/grcar.cpp	/^initWheel(tCarElt *car, int wheel_index)$/;"	f	file:
init_alpha	src/modules/graphic/ssggraph/grsmoke.h	/^  float init_alpha;$/;"	m	class:ssgVtxTableSmoke
init_args	src/linux/main.cpp	/^init_args(int argc, char **argv)$/;"	f	file:
init_args	src/misc/png2jpg/png2jpg.c	/^static void init_args(int argc, char **argv)$/;"	f	file:
init_args	src/tools/accc/mainaccc.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	src/tools/nfsperf/mainnfsperf.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	src/tools/texmapper/maintexmapper.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	src/tools/trackgen/maintrackgen.cpp	/^void init_args(int argc, char **argv)$/;"	f
init_args	src/windows/main.cpp	/^init_args(int argc, char **argv)$/;"	f	file:
init_graphics	src/tools/texmapper/maintexmapper.cpp	/^void init_graphics ()$/;"	f
init_shared_mem	src/linux/main.cpp	/^void init_shared_mem()$/;"	f
initcars	export/include/graphic.h	/^    tfGraphicInitCars	    initcars;	    \/* Graphic init function *\/$/;"	m	struct:__anon211
initcars	src/interfaces/graphic.h	/^    tfGraphicInitCars	    initcars;	    \/* Graphic init function *\/$/;"	m	struct:__anon169
initializeEncoding	src/libs/txml/xmlparse.c	/^initializeEncoding(XML_Parser parser)$/;"	f	file:
inittrack	export/include/graphic.h	/^    tfGraphicInitTrack	    inittrack;	    \/* Graphic init function *\/$/;"	m	struct:__anon211
inittrack	src/interfaces/graphic.h	/^    tfGraphicInitTrack	    inittrack;	    \/* Graphic init function *\/$/;"	m	struct:__anon169
initview	export/include/graphic.h	/^    tfGraphicInitView       initview;       \/* Graphic init function *\/$/;"	m	struct:__anon211
initview	src/interfaces/graphic.h	/^    tfGraphicInitView       initview;       \/* Graphic init function *\/$/;"	m	struct:__anon169
inkids_o	src/tools/accc/accc.h	/^  int inkids_o;$/;"	m	struct:ob
inpitlane	src/drivers/bt/pit.h	/^		bool inpitlane;					\/\/ We are still in the pit lane.$/;"	m	class:Pit
inpitlane	src/drivers/damned/pit.h	/^		bool inpitlane;					\/\/ We are still in the pit lane.$/;"	m	class:Pit
inpitlane	src/drivers/olethros/pit.h	/^		bool inpitlane;					\/\/ We are still in the pit lane.$/;"	m	class:olethros::Pit
inpitlane	src/drivers/sparkle/pit.h	/^		bool inpitlane;         \/* we are still in the pit lane *\/$/;"	m	class:Pit
insert	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^inline void Endpoint::insert(Endpoint *p) {$/;"	f	class:Endpoint
insertParam	src/libs/tgf/params.cpp	/^insertParam (struct parmHandle *parmHandle, char *path, struct param *param)$/;"	f	file:
insertParamMerge	src/libs/tgf/params.cpp	/^insertParamMerge (struct parmHandle *parmHandle, char *path, struct param *paramRef, struct param *param)$/;"	f	file:
insert_elem_in_group	src/tools/trackgen/easymesh.cpp	/^insert_elem_in_group(struct ele *elem, struct nod *nods)$/;"	f	file:
insert_node	src/tools/trackgen/easymesh.cpp	/^int insert_node(double x, double y, double z, int spac,$/;"	f
insert_node_in_group	src/tools/trackgen/easymesh.cpp	/^insert_node_in_group(struct nod *nod, struct group *group)$/;"	f	file:
inserted	src/tools/trackgen/easymesh.h	/^    int inserted;$/;"	m	struct:nod
instanceLess	src/libs/tgf/profiler.cpp	/^bool instanceLess(const ProfileInstance * p1, const ProfileInstance * p2) {$/;"	f
instrument	src/modules/graphic/ssggraph/grcar.h	/^    tgrCarInstrument	instrument[2];$/;"	m	struct:__anon5
int	src/libs/txml/xmldef.h	31;"	d
int_gamma	src/windows/include/png.h	/^   png_fixed_point int_gamma; \/* gamma of image, if (valid & PNG_INFO_gAMA) *\/$/;"	m	struct:png_info_struct
int_gamma	src/windows/include/png.h	/^   png_fixed_point int_gamma;$/;"	m	struct:png_struct_def
int_p_NULL	src/windows/include/png.h	330;"	d
int_p_NULL	src/windows/include/png.h	346;"	d
int_x_blue	src/windows/include/png.h	/^   png_fixed_point int_x_blue;$/;"	m	struct:png_info_struct
int_x_green	src/windows/include/png.h	/^   png_fixed_point int_x_green;$/;"	m	struct:png_info_struct
int_x_red	src/windows/include/png.h	/^   png_fixed_point int_x_red;$/;"	m	struct:png_info_struct
int_x_white	src/windows/include/png.h	/^   png_fixed_point int_x_white;$/;"	m	struct:png_info_struct
int_y_blue	src/windows/include/png.h	/^   png_fixed_point int_y_blue;$/;"	m	struct:png_info_struct
int_y_green	src/windows/include/png.h	/^   png_fixed_point int_y_green;$/;"	m	struct:png_info_struct
int_y_red	src/windows/include/png.h	/^   png_fixed_point int_y_red;$/;"	m	struct:png_info_struct
int_y_white	src/windows/include/png.h	/^   png_fixed_point int_y_white;$/;"	m	struct:png_info_struct
intcossqr	src/drivers/berniw/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
intcossqr	src/drivers/berniw2/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
intcossqr	src/drivers/berniw3/pathfinder.cpp	/^double Pathfinder::intcossqr(double alpha)$/;"	f	class:Pathfinder
interlace_type	src/windows/include/png.h	/^   png_byte interlace_type; \/* One of PNG_INTERLACE_NONE, PNG_INTERLACE_ADAM7 *\/$/;"	m	struct:png_info_struct
interlaced	src/windows/include/png.h	/^   png_byte interlaced;       \/* PNG_INTERLACE_NONE, PNG_INTERLACE_ADAM7 *\/$/;"	m	struct:png_struct_def
internalSubset	src/libs/txml/xmlrole.c	/^  internalSubset,$/;"	v	file:
internalSubset	src/libs/txml/xmlrole.c	/^int internalSubset(PROLOG_STATE *state,$/;"	f	file:
internalType	src/modules/graphic/ssggraph/grvtxtable.h	/^  int internalType;$/;"	m	class:grVtxTable
internal_big2_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding internal_big2_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
internal_little2_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding internal_little2_encoding = { $/;"	v	typeref:struct:normal_encoding	file:
internal_state	src/windows/include/zlib.h	/^    struct internal_state {int dummy;}; \/* hack for buggy compilers *\/$/;"	s
internal_utf8_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding internal_utf8_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
internalname	export/include/track.h	/^    char	  *internalname; \/**< Internal name of the track *\/$/;"	m	struct:__anon186
internalname	src/interfaces/track.h	/^    char	  *internalname; \/**< Internal name of the track *\/$/;"	m	struct:__anon153
interpolate	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
interpolate	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::interpolate(int step)$/;"	f	class:Pathfinder
intersect	export/include/tmath/straight2_t.h	/^template<class T> inline v2t<T> straight2t<T>::intersect(const straight2t<T> &s) const$/;"	f	class:straight2t
intersect	src/drivers/olethros/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	src/drivers/sparkle/linalg.h	/^inline v2d Straight::intersect(const Straight &s) const$/;"	f	class:Straight
intersect	src/libs/math/straight2_t.h	/^template<class T> inline v2t<T> straight2t<T>::intersect(const straight2t<T> &s) const$/;"	f	class:straight2t
intersect	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^inline bool intersect(const BBox& a, const BBox& b) {$/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool intersect(const BBoxNode *a, const BBoxNode *b,$/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^bool intersect(const BBoxNode *tree, const Convex& c, const BBox& bb, $/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^inline bool intersect(const BBox& a, const BBox& b, $/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool intersect(const Complex& a, const Complex& b, $/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^bool intersect(const Complex& a, const Convex& b, $/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool intersect(const Convex& a, const Convex& b, const Transform& b2a, $/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^bool intersect(const Convex& a, const Convex& b,$/;"	f
intersect	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersect(const Object& a, const Object& b, Vector& v) {$/;"	f
intersectComplexComplex	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersectComplexComplex(const Shape& a, const Shape& b, $/;"	f
intersectComplexConvex	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersectComplexConvex(const Shape& a, const Shape& b, $/;"	f
intersectConvexConvex	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool intersectConvexConvex(const Shape& a, const Shape& b, $/;"	f
intersectInitialize	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^IntersectTable *intersectInitialize() {$/;"	f
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgBox *b ) const $/;"	f	class:sgBox
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgSphere *s ) const $/;"	f	class:sgBox
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgSphere *s ) const $/;"	f	class:sgSphere
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgVec4 plane ) const $/;"	f	class:sgSphere
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgdBox *b ) const $/;"	f	class:sgdBox
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgdSphere *s ) const $/;"	f	class:sgdBox
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgdSphere *s ) const $/;"	f	class:sgdSphere
intersects	src/windows/include/plib/sg.h	/^  int intersects ( const sgdVec4 plane ) const $/;"	f	class:sgdSphere
intf	src/windows/include/zconf.h	/^typedef int   FAR intf;$/;"	t
intf	src/windows/include/zconf.h	44;"	d
intsinsqr	src/drivers/berniw/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
intsinsqr	src/drivers/berniw2/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
intsinsqr	src/drivers/berniw3/pathfinder.cpp	/^double Pathfinder::intsinsqr(double alpha)$/;"	f	class:Pathfinder
inv_filter_costs	src/windows/include/png.h	/^   png_uint_16p inv_filter_costs;    \/* 1\/relative filter calculation cost *\/$/;"	m	struct:png_struct_def
inv_filter_weights	src/windows/include/png.h	/^   png_uint_16p inv_filter_weights;  \/* 1\/weight(s) for previous line(s) *\/$/;"	m	struct:png_struct_def
inverse	export/include/3D/Matrix.h	/^inline Matrix Matrix::inverse() const {$/;"	f	class:Matrix
inverse	export/include/3D/Matrix.h	/^inline Matrix inverse(const Matrix& m) { return m.inverse(); }$/;"	f
inverse	export/include/3D/Quaternion.h	/^inline Quaternion Quaternion::inverse() const {$/;"	f	class:Quaternion
inverse	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::inverse() const {$/;"	f	class:Matrix
inverse	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix inverse(const Matrix& m) { return m.inverse(); }$/;"	f
inverse	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::inverse() const {$/;"	f	class:Quaternion
invert	export/include/3D/Quaternion.h	/^inline void Quaternion::invert() {$/;"	f	class:Quaternion
invert	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline void Quaternion::invert() {$/;"	f	class:Quaternion
invert	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::invert(const Transform& t) {$/;"	f	class:Transform
io_ptr	src/windows/include/png.h	/^   png_voidp io_ptr;          \/* ptr to application struct for I\/O functions*\/$/;"	m	struct:png_struct_def
ioctl	src/windows/include/plib/sl.h	/^  int ioctl ( int cmd, int param = 0 )$/;"	f	class:slDSP
ioctl	src/windows/include/plib/sm.h	/^  int ioctl ( int cmd, int param = 0 )$/;"	f	class:smMixer
irowbytes	src/windows/include/png.h	/^   png_uint_32 irowbytes;     \/* size of current interlaced row in bytes *\/$/;"	m	struct:png_struct_def
is	src/drivers/berniw/pathfinder.h	/^	double is;$/;"	m	struct:__anon118
is	src/drivers/berniw2/pathfinder.h	/^	double is;$/;"	m	struct:__anon93
is	src/drivers/berniw3/pathfinder.h	/^	double is;$/;"	m	struct:__anon109
isA	src/windows/include/plib/ssg.h	/^  int   isA        ( int ty ) { return getType() == ty ; }$/;"	f	class:ssgBase
isAKindOf	src/windows/include/plib/ssg.h	/^  int   isAKindOf  ( int ty ) { return ( getType() & ty ) == ty ; }$/;"	f	class:ssgBase
isActive	src/modules/graphic/ssggraph/grscreen.h	/^		int isActive(void) { return active; }$/;"	f	class:cGrScreen
isAdditive	src/windows/include/plib/ssg.h	/^  int  isAdditive  () { return additive ; }$/;"	f	class:ssgRangeSelector
isAlone	src/drivers/bt/driver.cpp	/^int Driver::isAlone()$/;"	f	class:Driver
isAlone	src/drivers/damned/driver.cpp	/^int Driver::isAlone()$/;"	f	class:Driver
isAlone	src/drivers/olethros/driver.cpp	/^    int Driver::isAlone()$/;"	f	class:olethros::Driver
isBetween	src/drivers/berniw/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	src/drivers/berniw2/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	src/drivers/berniw3/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	src/drivers/bt/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:Pit
isBetween	src/drivers/damned/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:Pit
isBetween	src/drivers/inferno/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	src/drivers/inferno2/common.cpp	/^isBetween(tdble lgfs, tdble start, tdble end)$/;"	f	file:
isBetween	src/drivers/lliaw/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isBetween	src/drivers/olethros/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:olethros::Pit
isBetween	src/drivers/sparkle/pit.cpp	/^bool Pit::isBetween(float fromstart)$/;"	f	class:Pit
isBetween	src/drivers/tita/trackdesc.h	/^inline bool TrackDesc::isBetween(int start, int end, int id) {$/;"	f	class:TrackDesc
isCapped	src/windows/include/plib/ssgaShapes.h	/^  int  isCapped   ()        { return capped ; }$/;"	f	class:ssgaCylinder
isCdata	src/libs/txml/xmlparse.c	/^  char isCdata;$/;"	m	struct:__anon79	file:
isCompressARBAvailable	src/libs/tgfclient/glfeatures.cpp	/^bool isCompressARBAvailable(void)$/;"	f
isCompressARBEnabled	src/libs/tgfclient/glfeatures.cpp	/^bool isCompressARBEnabled(void) {$/;"	f
isCorrupt	src/windows/include/plib/ssgaShapes.h	/^  int  isCorrupt    () { return corrupted  ; }$/;"	f	class:ssgaShape
isDirtyBSphere	src/windows/include/plib/ssg.h	/^  int  isDirtyBSphere (void) { return bsphere_is_invalid ; }$/;"	f	class:ssgEntity
isDone	src/windows/include/plib/sl.h	/^  int isDone    () const { return status == SL_SAMPLE_DONE    ; }$/;"	f	class:slPlayer
isEmpty	src/windows/include/plib/sg.h	/^  int isEmpty (void) const { return radius <  SGD_ZERO ; }$/;"	f	class:sgdSphere
isEmpty	src/windows/include/plib/sg.h	/^  int isEmpty (void) const { return radius <  SG_ZERO ; }$/;"	f	class:sgSphere
isEmpty	src/windows/include/plib/sg.h	/^  int isEmpty(void) const $/;"	f	class:sgBox
isEmpty	src/windows/include/plib/sg.h	/^  int isEmpty(void) const $/;"	f	class:sgdBox
isHeadlight	src/windows/include/plib/ssg.h	/^  int  isHeadlight () { return is_headlight ; }$/;"	f	class:ssgLight
isInScreen	src/modules/graphic/ssggraph/grscreen.cpp	/^int cGrScreen::isInScreen(int x, int y)$/;"	f	class:cGrScreen
isIndexed	src/windows/include/plib/ssg.h	/^  int isIndexed () { return indexed ; }$/;"	f	class:ssgVTable
isInvalid2	src/libs/txml/xmltok.c	/^  int (*isInvalid2)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isInvalid3	src/libs/txml/xmltok.c	/^  int (*isInvalid3)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isInvalid4	src/libs/txml/xmltok.c	/^  int (*isInvalid4)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isLatLongStyle	src/windows/include/plib/ssgaShapes.h	/^  int  isLatLongStyle  ()         { return latlong_style ; }$/;"	f	class:ssgaSphere
isMirrorAllowed	src/modules/graphic/ssggraph/grcam.h	/^    int isMirrorAllowed(void)	{ return mirrorAllowed; }$/;"	f	class:cGrCamera
isName2	src/libs/txml/xmltok.c	/^  int (*isName2)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isName3	src/libs/txml/xmltok.c	/^  int (*isName3)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isName4	src/libs/txml/xmltok.c	/^  int (*isName4)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isNever	src/libs/txml/xmltok.c	/^int isNever(const ENCODING *enc, const char *p)$/;"	f	file:
isNmstrt2	src/libs/txml/xmltok.c	/^  int (*isNmstrt2)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isNmstrt3	src/libs/txml/xmltok.c	/^  int (*isNmstrt3)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isNmstrt4	src/libs/txml/xmltok.c	/^  int (*isNmstrt4)(const ENCODING *, const char *);$/;"	m	struct:normal_encoding	file:
isOn	src/windows/include/plib/ssg.h	/^  int  isOn () { return is_turned_on  ; }$/;"	f	class:ssgLight
isOnOff	src/modules/graphic/ssggraph/grcarlight.h	/^  int isOnOff () { return(on) ; }$/;"	f	class:ssgVtxTableCarlight
isOrtho	src/windows/include/plib/sg.h	/^  int  isOrtho (void) const { return ortho ; }$/;"	f	class:sgFrustum
isOrtho	src/windows/include/plib/sg.h	/^  int  isOrtho (void) const { return ortho ; }$/;"	f	class:sgdFrustum
isOrtho	src/windows/include/plib/ssg.h	/^  int  isOrtho () { return frustum -> isOrtho () ; } \/\/ is orthographic$/;"	f	class:ssgContext
isPaused	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPaused() $/;"	f	class:OpenalTorcsSound
isPaused	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPaused() $/;"	f	class:PlibTorcsSound
isPaused	src/windows/include/plib/sl.h	/^  int isPaused  () const { return status == SL_SAMPLE_PAUSED  ; } $/;"	f	class:slPlayer
isPitAvailable	src/drivers/berniw/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	src/drivers/berniw2/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	src/drivers/berniw3/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	src/drivers/inferno/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	src/drivers/lliaw/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitAvailable	src/drivers/tita/pathfinder.h	/^		inline bool isPitAvailable() { return pit; }$/;"	f	class:Pathfinder
isPitFree	src/drivers/bt/strategy.cpp	/^bool SimpleStrategy::isPitFree(tCarElt* car)$/;"	f	class:SimpleStrategy
isPitFree	src/drivers/damned/strategy.cpp	/^bool SimpleStrategy::isPitFree(tCarElt* car)$/;"	f	class:SimpleStrategy
isPitSeg	src/drivers/inferno/pathfinder.h	/^		inline bool isPitSeg(int id) {$/;"	f	class:PathSegPit
isPitSeg	src/drivers/lliaw/pathfinder.h	/^		inline bool isPitSeg(int id) {$/;"	f	class:PathSegPit
isPitSeg	src/drivers/tita/pathfinder.h	/^		inline bool isPitSeg(int id) {$/;"	f	class:PathSegPit
isPlaying	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPlaying()$/;"	f	class:OpenalTorcsSound
isPlaying	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual bool isPlaying()$/;"	f	class:PlibTorcsSound
isPointRotate	src/windows/include/plib/ssg.h	/^  int isPointRotate (void) { return point_rotate ; }$/;"	f	class:ssgCutout
isPresent	src/tools/texmapper/maintexmapper.cpp	/^    bool	isPresent;$/;"	m	struct:Face	file:
isPublicId	src/libs/txml/xmltok.h	/^  int (*isPublicId)(const ENCODING *enc, const char *ptr, const char *end,$/;"	m	struct:encoding
isPublicId	src/libs/txml/xmltok_impl.c	/^int PREFIX(isPublicId)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
isRunning	src/windows/include/plib/sl.h	/^  int isRunning () const { return status == SL_SAMPLE_RUNNING ; } $/;"	f	class:slPlayer
isSelected	src/windows/include/plib/ssg.h	/^  int isSelected ( unsigned int i ) const$/;"	f	class:ssgSelector
isSetClipPlane	src/windows/include/plib/ssg.h	/^  int  isSetClipPlane ( int i ) { return enabledClipPlanes & (1<<i) ; }$/;"	f	class:ssgContext
isSorted	src/windows/include/plib/ul.h	/^  bool isSorted    ( void ) const { return sorted ; }$/;"	f	class:ulLinkedList
isSorted	src/windows/include/ul.h	/^  bool isSorted    ( void ) const { return sorted ; }$/;"	f	class:ulLinkedList
isSourceActive	src/modules/graphic/ssggraph/SoundInterface.h	/^		bool isSourceActive(TorcsSound* sound, int* index) {$/;"	f	class:SharedSourcePool
isSpace	src/libs/txml/xmltok.c	/^int isSpace(int c)$/;"	f	file:
isSpotlight	src/windows/include/plib/ssg.h	/^  int  isSpotlight () { return position[3] != 0.0f; }$/;"	f	class:ssgLight
isStuck	src/drivers/bt/driver.cpp	/^bool Driver::isStuck()$/;"	f	class:Driver
isStuck	src/drivers/damned/driver.cpp	/^bool Driver::isStuck()$/;"	f	class:Driver
isStuck	src/drivers/olethros/driver.cpp	/^    bool Driver::isStuck()$/;"	f	class:olethros::Driver
isStuck	src/drivers/sparkle/driver.cpp	/^bool Driver::isStuck()$/;"	f	class:Driver
isSwapped	src/modules/graphic/ssggraph/grloadsgi.h	/^		int           isSwapped;$/;"	m	class:ssgSGIHeader
isTeamMate	src/drivers/bt/opponent.h	/^		bool isTeamMate() { return teammate; }$/;"	f	class:Opponent
isTeamMate	src/drivers/damned/opponent.h	/^		bool isTeamMate() { return teammate; }$/;"	f	class:Opponent
isTimeout	src/drivers/bt/pit.cpp	/^bool Pit::isTimeout(float distance)$/;"	f	class:Pit
isTimeout	src/drivers/damned/pit.cpp	/^bool Pit::isTimeout(float distance)$/;"	f	class:Pit
isTimeout	src/drivers/olethros/pit.cpp	/^bool Pit::isTimeout(float distance)$/;"	f	class:olethros::Pit
isTranslucent	src/windows/include/plib/ssg.h	/^  int  isTranslucent () { return state ? state->isTranslucent() : FALSE ; }$/;"	f	class:ssgLeaf
isTranslucent	src/windows/include/plib/ssg.h	/^  virtual int  isTranslucent (void)  { return translucent ;  }$/;"	f	class:ssgState
isUtf16	src/libs/txml/xmltok.h	/^  char isUtf16;$/;"	m	struct:encoding
isUtf8	src/libs/txml/xmltok.h	/^  char isUtf8;$/;"	m	struct:encoding
isValidPosition	src/windows/include/plib/ul.h	/^  bool isValidPosition ( int pos ) const$/;"	f	class:ulLinkedList
isValidPosition	src/windows/include/ul.h	/^  bool isValidPosition ( int pos ) const$/;"	f	class:ulLinkedList
isWaiting	src/windows/include/plib/sl.h	/^  int isWaiting () const { return status == SL_SAMPLE_WAITING ; } $/;"	f	class:slPlayer
is_enabled	src/modules/graphic/ssggraph/TorcsSound.h	/^	bool is_enabled;	\/\/\/< is it available at all?$/;"	m	class:OpenalTorcsSound
is_headlight	src/windows/include/plib/ssg.h	/^  int is_headlight ;$/;"	m	class:ssgLight
is_turned_on	src/windows/include/plib/ssg.h	/^  int is_turned_on ;$/;"	m	class:ssgLight
isaWindow	src/modules/graphic/ssggraph/grloadac.cpp	/^static int		isaWindow;$/;"	v	file:
isacar	src/modules/graphic/ssggraph/grloadac.cpp	/^static int		isacar = TRUE;$/;"	v	file:
isinitalized	src/modules/graphic/ssggraph/grtrackmap.cpp	/^bool cGrTrackMap::isinitalized = false;$/;"	m	class:cGrTrackMap	file:
isinitalized	src/modules/graphic/ssggraph/grtrackmap.h	/^		static bool isinitalized;$/;"	m	class:cGrTrackMap
isnan	src/drivers/human/human.cpp	29;"	d	file:
isnan	src/drivers/olethros/driver.cpp	43;"	d	file:
isnan	src/drivers/olethros/geometry.cpp	29;"	d	file:
isnan	src/libs/learning/policy.cpp	20;"	d	file:
isnan	src/modules/simu/simuv2/sim.h	28;"	d
isnan	src/modules/simu/simuv2/simu.cpp	27;"	d	file:
isnan	src/tools/accc/accc.h	178;"	d
isobjectacar	src/tools/accc/mainaccc.cpp	/^int isobjectacar=0;$/;"	v
isp_elem	export/include/js.h	/^   ISpElementReference     isp_elem[isp_num_needs];$/;"	m	class:jsJoystick
isp_elem	src/interfaces/js.h	/^   ISpElementReference     isp_elem[isp_num_needs];$/;"	m	class:jsJoystick
isp_needs	export/include/js.h	/^   ISpNeed isp_needs       [isp_num_needs];$/;"	m	class:jsJoystick
isp_needs	src/interfaces/js.h	/^   ISpNeed isp_needs       [isp_num_needs];$/;"	m	class:jsJoystick
isp_num_axis	export/include/js.h	132;"	d
isp_num_axis	src/interfaces/js.h	132;"	d
isp_num_needs	export/include/js.h	133;"	d
isp_num_needs	src/interfaces/js.h	133;"	d
itf	export/include/raceman.h	/^    tRaceModIft		itf;$/;"	m	struct:__anon209
itf	src/interfaces/raceman.h	/^    tRaceModIft		itf;$/;"	m	struct:__anon168
itf	src/modules/graphic/ssggraph/TorcsSound.h	/^	OpenalSoundInterface* itf; \/\/\/< Handle to the interface$/;"	m	class:OpenalTorcsSound
itxt_length	src/windows/include/png.h	/^   png_size_t itxt_length; \/* length of the itxt string *\/$/;"	m	struct:png_text_struct
iwidth	src/windows/include/png.h	/^   png_uint_32 iwidth;        \/* width of current interlaced row in pixels *\/$/;"	m	struct:png_struct_def
j	src/tools/trackgen/easymesh.cpp	/^    int i,  j,  k;$/;"	m	struct:ele	file:
jmpbuf	src/windows/include/png.h	/^   jmp_buf jmpbuf;            \/* used in png_error *\/$/;"	m	struct:png_struct_def
joyInfo	src/drivers/human/human.cpp	/^static tCtrlJoyInfo	*joyInfo = NULL;$/;"	v	file:
joyPresent	src/drivers/human/human.cpp	/^int joyPresent = 0;$/;"	v
js	export/include/js.h	/^  JOYINFOEX    js       ;$/;"	m	class:jsJoystick
js	export/include/js.h	/^  JS_DATA_TYPE js ;$/;"	m	class:jsJoystick
js	export/include/js.h	/^  js_event     js          ;$/;"	m	class:jsJoystick
js	src/interfaces/js.h	/^  JOYINFOEX    js       ;$/;"	m	class:jsJoystick
js	src/interfaces/js.h	/^  JS_DATA_TYPE js ;$/;"	m	class:jsJoystick
js	src/interfaces/js.h	/^  js_event     js          ;$/;"	m	class:jsJoystick
js	src/libs/confscreens/controlconfig.cpp	/^static jsJoystick	*js[NUM_JOY] = {NULL};$/;"	v	file:
js	src/libs/confscreens/joystickconfig.cpp	/^static jsJoystick *js[NUM_JOY] = {NULL};$/;"	v	file:
js	src/libs/tgfclient/control.cpp	/^static jsJoystick *js[NUM_JOY] = {NULL};$/;"	v	file:
jsJoystick	export/include/js.h	/^  jsJoystick ( int ident = 0 )$/;"	f	class:jsJoystick
jsJoystick	export/include/js.h	/^class jsJoystick$/;"	c
jsJoystick	src/interfaces/js.h	/^  jsJoystick ( int ident = 0 )$/;"	f	class:jsJoystick
jsJoystick	src/interfaces/js.h	/^class jsJoystick$/;"	c
js_id	export/include/js.h	/^  UINT         js_id    ;$/;"	m	class:jsJoystick
js_id	src/interfaces/js.h	/^  UINT         js_id    ;$/;"	m	class:jsJoystick
k	src/drivers/olethros/learn.h	/^		int k; \/\/\/< number of measurements$/;"	m	class:olethros::SegLearn::Averages
k	src/tools/trackgen/easymesh.cpp	/^    int i,  j,  k;$/;"	m	struct:ele	file:
kDammage	export/include/track.h	/^    tdble kDammage;		\/**< Dammages in case of collision *\/$/;"	m	struct:trackSurface
kDammage	src/interfaces/track.h	/^    tdble kDammage;		\/**< Dammages in case of collision *\/$/;"	m	struct:trackSurface
kFriction	export/include/track.h	/^    tdble kFriction;		\/**< Coefficient of friction *\/$/;"	m	struct:trackSurface
kFriction	src/interfaces/track.h	/^    tdble kFriction;		\/**< Coefficient of friction *\/$/;"	m	struct:trackSurface
kRebound	export/include/track.h	/^    tdble kRebound;		\/**< Coefficient of energy restitution *\/$/;"	m	struct:trackSurface
kRebound	src/interfaces/track.h	/^    tdble kRebound;		\/**< Coefficient of energy restitution *\/$/;"	m	struct:trackSurface
kRollRes	export/include/track.h	/^    tdble kRollRes;		\/**< Rolling resistance *\/$/;"	m	struct:trackSurface
kRollRes	src/interfaces/track.h	/^    tdble kRollRes;		\/**< Rolling resistance *\/$/;"	m	struct:trackSurface
kRoughWaveLen	export/include/track.h	/^    tdble kRoughWaveLen;	\/**< Wave length in m of the surface *\/$/;"	m	struct:trackSurface
kRoughWaveLen	src/interfaces/track.h	/^    tdble kRoughWaveLen;	\/**< Wave length in m of the surface *\/$/;"	m	struct:trackSurface
kRoughness	export/include/track.h	/^    tdble kRoughness;		\/**< Roughtness in m of the surface (wave height) *\/$/;"	m	struct:trackSurface
kRoughness	src/interfaces/track.h	/^    tdble kRoughness;		\/**< Roughtness in m of the surface (wave height) *\/$/;"	m	struct:trackSurface
kX	src/tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
kY	src/tools/trackgen/elevation.cpp	/^static tdble	kX, kY, dX, dY;$/;"	v	file:
kZ	src/tools/trackgen/elevation.cpp	/^static tdble	kZ, dZ;$/;"	v	file:
kalpha	src/drivers/berniw/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	src/drivers/berniw2/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	src/drivers/berniw3/trackdesc.h	/^		tdble kalpha;			\/* (roll)factor for the angle (like michigan) *\/$/;"	m	class:TrackSegment
kalpha	src/drivers/inferno/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment
kalpha	src/drivers/inferno/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment2D
kalpha	src/drivers/lliaw/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment
kalpha	src/drivers/lliaw/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment2D
kalpha	src/drivers/tita/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment
kalpha	src/drivers/tita/trackdesc.h	/^		tdble kalpha;			\/\/ (roll) factor for the angle (like michigan).$/;"	m	class:TrackSegment2D
kbeta	src/drivers/berniw/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	src/drivers/berniw2/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	src/drivers/berniw3/trackdesc.h	/^		tdble kbeta;			\/* (curvature)factor for bumps (e-track-3) *\/$/;"	m	class:TrackSegment
kbeta	src/drivers/inferno/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment
kbeta	src/drivers/inferno/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment2D
kbeta	src/drivers/lliaw/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment
kbeta	src/drivers/lliaw/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment2D
kbeta	src/drivers/tita/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment
kbeta	src/drivers/tita/trackdesc.h	/^		tdble kbeta;			\/\/ (curvature)factor for bumps (e-track-3).$/;"	m	class:TrackSegment2D
key	src/libs/tgf/hash.cpp	/^    char				*key;$/;"	m	struct:HashElem	file:
key	src/libs/tgfclient/gui.h	/^    unsigned char	key;$/;"	m	struct:GfuiKey
key	src/windows/include/png.h	/^   png_charp key;          \/* keyword, 1-79 character description of "text" *\/$/;"	m	struct:png_text_struct
keyInfo	src/drivers/human/human.cpp	/^static tKeyInfo keyInfo[256];$/;"	v	file:
keySize	src/libs/tgfclient/guifont.cpp	/^char *keySize[4] = { "size big", "size large", "size medium", "size small" };$/;"	v
keyboard	src/tools/accc/mainaccc.cpp	/^void keyboard ( unsigned char, int, int )$/;"	f
keyboardPossible	export/include/controlconfig.h	/^    int		keyboardPossible;$/;"	m	struct:__anon205
keyboardPossible	src/libs/confscreens/controlconfig.h	/^    int		keyboardPossible;$/;"	m	struct:__anon44
keycmp	src/libs/txml/hashtable.c	29;"	d	file:
keycmp	src/libs/txml/hashtable.c	31;"	d	file:
kgamma	src/drivers/berniw/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	src/drivers/berniw2/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	src/drivers/berniw3/trackdesc.h	/^		tdble kgamma;			\/* (pitch)factor of road *\/$/;"	m	class:TrackSegment
kgamma	src/drivers/inferno/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment
kgamma	src/drivers/inferno/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment2D
kgamma	src/drivers/lliaw/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment
kgamma	src/drivers/lliaw/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment2D
kgamma	src/drivers/tita/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment
kgamma	src/drivers/tita/trackdesc.h	/^		tdble kgamma;			\/\/ (pitch) factor of road.$/;"	m	class:TrackSegment2D
kidPostDrawCB	src/windows/include/plib/ssgaShapes.h	/^  ssgCallback kidPostDrawCB ;$/;"	m	class:ssgaShape
kidPreDrawCB	src/windows/include/plib/ssgaShapes.h	/^  ssgCallback kidPreDrawCB  ;$/;"	m	class:ssgaShape
kidState	src/windows/include/plib/ssgaShapes.h	/^  ssgState   *kidState      ;$/;"	m	class:ssgaShape
kids	src/tools/accc/accc.h	/^  int kids;$/;"	m	struct:ob
kids	src/tools/accc/accc.h	/^  struct ob * kids;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids	src/windows/include/plib/ssg.h	/^  ssgKidList kids ;$/;"	m	class:ssgBranch
kids0	src/tools/accc/accc.h	/^  struct ob * kids0;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids1	src/tools/accc/accc.h	/^  struct ob * kids1;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids2	src/tools/accc/accc.h	/^  struct ob * kids2;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids3	src/tools/accc/accc.h	/^  struct ob * kids3;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
kids_o	src/tools/accc/accc.h	/^  int kids_o;$/;"	m	struct:ob
l	export/include/learning/Distribution.h	/^	real l; \/\/\/< lambda$/;"	m	class:ExponentialDistribution
l	export/include/learning/Distribution.h	/^	real l; \/\/\/< lambda$/;"	m	class:LaplacianDistribution
l	src/drivers/berniw/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	src/drivers/berniw/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	src/drivers/berniw2/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	src/drivers/berniw2/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	src/drivers/berniw3/pathfinder.h	/^		v3d* l;			\/* trajectory for pit lane *\/$/;"	m	class:PathSeg
l	src/drivers/berniw3/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
l	src/drivers/inferno/pathfinder.h	/^		vec2d* l;			\/\/ Trajectory for pit lane (per car, constant).$/;"	m	class:PathSegPit
l	src/drivers/inferno/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
l	src/drivers/inferno/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
l	src/drivers/lliaw/pathfinder.h	/^		vec2d* l;			\/\/ Trajectory for pit lane (per car, constant).$/;"	m	class:PathSegPit
l	src/drivers/lliaw/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
l	src/drivers/lliaw/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
l	src/drivers/tita/pathfinder.h	/^		vec2d* l;			\/\/ Trajectory for pit lane (per car, constant).$/;"	m	class:PathSegPit
l	src/drivers/tita/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
l	src/drivers/tita/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
l	src/libs/learning/Distribution.h	/^	real l; \/\/\/< lambda$/;"	m	class:ExponentialDistribution
l	src/libs/learning/Distribution.h	/^	real l; \/\/\/< lambda$/;"	m	class:LaplacianDistribution
label	src/libs/tgfclient/gui.h	/^	tGfuiLabel	label;$/;"	m	union:GfuiObject::__anon67
label	src/libs/tgfclient/gui.h	/^    char			*label;$/;"	m	struct:GfuiListElement
label	src/libs/tgfclient/gui.h	/^    tGfuiLabel		label;$/;"	m	struct:__anon61
label	src/libs/tgfclient/gui.h	/^    tGfuiLabel		label;$/;"	m	struct:__anon65
labelId	src/libs/tgfclient/guimenu.h	/^    int		labelId;$/;"	m	struct:__anon53
lambda	export/include/learning/ANN.h	/^	real lambda; \/\/\/< eligibility decay$/;"	m	struct:Layer_
lambda	export/include/learning/ANN.h	/^	real lambda; \/\/\/< eligibility trace decay$/;"	m	struct:ANN_
lambda	export/include/learning/policy.h	/^	real lambda; \/\/\/< Eligibility trace decay$/;"	m	class:DiscretePolicy
lambda	src/libs/learning/ANN.h	/^	real lambda; \/\/\/< eligibility decay$/;"	m	struct:Layer_
lambda	src/libs/learning/ANN.h	/^	real lambda; \/\/\/< eligibility trace decay$/;"	m	struct:ANN_
lambda	src/libs/learning/policy.h	/^	real lambda; \/\/\/< Eligibility trace decay$/;"	m	class:DiscretePolicy
lambda	src/windows/include/plib/ssgaWaveSystem.h	/^  float lambda ;$/;"	m	class:ssgaWaveTrain
lang	src/windows/include/png.h	/^   png_charp lang;         \/* language code, 0-79 characters$/;"	m	struct:png_text_struct
lang_key	src/windows/include/png.h	/^   png_charp lang_key;     \/* keyword translated UTF-8 string, 0 or more$/;"	m	struct:png_text_struct
lap	src/drivers/human/human.h	/^	int		lap;$/;"	m	struct:HumanContext
lap	src/drivers/olethros/learn.h	/^    int lap; \/\/\/< current lap$/;"	m	class:olethros::SegLearn
lapFlag	export/include/raceman.h	/^    int		lapFlag;$/;"	m	struct:__anon208
lapFlag	src/interfaces/raceman.h	/^    int		lapFlag;$/;"	m	struct:__anon167
lapToClear	export/include/car.h	/^    int lapToClear;	\/**< the lap before the penalty has to be cleared *\/$/;"	m	struct:CarPenalty
lapToClear	src/interfaces/car.h	/^    int lapToClear;	\/**< the lap before the penalty has to be cleared *\/$/;"	m	struct:CarPenalty
laps	export/include/car.h	/^    int			laps;$/;"	m	struct:__anon198
laps	src/interfaces/car.h	/^    int			laps;$/;"	m	struct:__anon158
lapsBehindLeader	export/include/car.h	/^    int			lapsBehindLeader;$/;"	m	struct:__anon198
lapsBehindLeader	src/interfaces/car.h	/^    int			lapsBehindLeader;$/;"	m	struct:__anon158
last	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int last;      \/\/ identifies last found support point$/;"	v	file:
lastAccel	src/drivers/inferno2/common.cpp	/^static tdble lastAccel[10] = {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0};$/;"	v	file:
lastBrkCmd	src/drivers/inferno2/common.cpp	/^static tdble lastBrkCmd[10] = {0};$/;"	v	file:
lastDv	src/drivers/inferno2/common.cpp	/^static tdble lastDv[10] = {0};$/;"	v	file:
lastEventTime	src/modules/graphic/ssggraph/grcam.cpp	/^    double lastEventTime;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
lastFrame	export/include/raceman.h	/^    double	lastFrame;$/;"	m	struct:RmMovieCapture
lastFrame	src/interfaces/raceman.h	/^    double	lastFrame;$/;"	m	struct:RmMovieCapture
lastId	src/drivers/berniw/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	src/drivers/berniw2/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	src/drivers/berniw3/pathfinder.h	/^		int lastId;				\/* segment id of the last call *\/$/;"	m	class:Pathfinder
lastId	src/drivers/inferno/pathfinder.h	/^		int lastId;				\/\/ segment id of the last call.$/;"	m	class:Pathfinder
lastId	src/drivers/lliaw/pathfinder.h	/^		int lastId;				\/\/ segment id of the last call.$/;"	m	class:Pathfinder
lastId	src/drivers/tita/pathfinder.h	/^		int lastId;				\/\/ segment id of the last call.$/;"	m	class:Pathfinder
lastKeyUpdate	src/drivers/human/human.cpp	/^static tdble lastKeyUpdate = -10.0;$/;"	v	file:
lastLapTime	export/include/car.h	/^    double		lastLapTime;$/;"	m	struct:__anon198
lastLapTime	src/interfaces/car.h	/^    double		lastLapTime;$/;"	m	struct:__anon158
lastPlan	src/drivers/berniw/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	src/drivers/berniw2/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	src/drivers/berniw3/pathfinder.h	/^		int lastPlan;			\/* start of the last plan *\/$/;"	m	class:Pathfinder
lastPlan	src/drivers/inferno/pathfinder.h	/^		int lastPlan;			\/\/ start of the last plan.$/;"	m	class:Pathfinder
lastPlan	src/drivers/lliaw/pathfinder.h	/^		int lastPlan;			\/\/ start of the last plan.$/;"	m	class:Pathfinder
lastPlan	src/drivers/tita/pathfinder.h	/^		int lastPlan;			\/\/ start of the last plan.$/;"	m	class:Pathfinder
lastPlanRange	src/drivers/berniw/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	src/drivers/berniw2/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	src/drivers/berniw3/pathfinder.h	/^		int lastPlanRange;		\/* range of the last plan *\/$/;"	m	class:Pathfinder
lastPlanRange	src/drivers/inferno/pathfinder.h	/^		int lastPlanRange;		\/\/ range of the last plan.$/;"	m	class:Pathfinder
lastPlanRange	src/drivers/lliaw/pathfinder.h	/^		int lastPlanRange;		\/\/ range of the last plan.$/;"	m	class:Pathfinder
lastPlanRange	src/drivers/tita/pathfinder.h	/^		int lastPlanRange;		\/\/ range of the last plan.$/;"	m	class:Pathfinder
lastTime	export/include/raceman.h	/^    double		lastTime;$/;"	m	struct:__anon209
lastTime	src/interfaces/raceman.h	/^    double		lastTime;$/;"	m	struct:__anon168
lastTime	src/modules/graphic/ssggraph/grsmoke.h	/^  double lastTime;$/;"	m	class:ssgVtxTableSmoke
lastTime	src/windows/include/plib/sl.h	/^  UnsignedWide   lastTime ;       \/\/ used for timing in secondsUsed()$/;"	m	class:slDSP
lastUpdated	src/modules/graphic/ssggraph/grsound.cpp	/^static double lastUpdated;$/;"	v	file:
lastViewTime	src/modules/graphic/ssggraph/grcam.cpp	/^    double lastViewTime;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
last_bit	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static int last_bit;  \/\/ last_bit = 1<<last$/;"	v	file:
last_num_kids	src/modules/graphic/ssggraph/grloadac.cpp	/^static int last_num_kids    = -1 ;$/;"	v	file:
last_state_of_skid	src/modules/graphic/ssggraph/grskidmarks.h	/^  int			last_state_of_skid;$/;"	m	struct:__anon2
last_time	src/windows/include/plib/ul.h	/^  double last_time ;$/;"	m	class:ulClock
last_time	src/windows/include/ul.h	/^  double last_time ;$/;"	m	class:ulClock
last_transform	src/windows/include/plib/ssg.h	/^  sgMat4 last_transform ;$/;"	m	class:ssgBaseTransform
last_updated	src/windows/include/plib/ssg.h	/^  int    last_updated ;$/;"	m	class:ssgBaseTransform
lastfuel	src/drivers/berniw/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	src/drivers/berniw2/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	src/drivers/berniw3/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	src/drivers/inferno/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	src/drivers/lliaw/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastfuel	src/drivers/olethros/strategy.h	/^	float lastfuel;					\/\/ the fuel available when we cross the start lane.$/;"	m	class:olethros::SimpleStrategy
lastfuel	src/drivers/sparkle/pit.h	/^		float lastfuel;         \/* the fuel available when we cross the start lane *\/$/;"	m	class:Pit
lastfuel	src/drivers/tita/mycar.h	/^		double lastfuel;$/;"	m	class:MyCar
lastpitfuel	src/drivers/berniw/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	src/drivers/berniw2/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	src/drivers/berniw3/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	src/drivers/inferno/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	src/drivers/lliaw/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastpitfuel	src/drivers/olethros/strategy.h	/^	float lastpitfuel;				\/\/ Amount refueled, special case when we refuel.$/;"	m	class:olethros::SimpleStrategy
lastpitfuel	src/drivers/sparkle/pit.h	/^		float lastpitfuel;      \/* amount refueled, special case when we refuel *\/$/;"	m	class:Pit
lastpitfuel	src/drivers/tita/mycar.h	/^		double lastpitfuel;$/;"	m	class:MyCar
lastsegtype	src/drivers/sparkle/driver.h	/^		int lastsegtype;		\/* the segment type for which lastturnarc is valid *\/$/;"	m	class:Driver
lastturn	src/drivers/bt/learn.h	/^		int lastturn;$/;"	m	class:SegLearn
lastturn	src/drivers/damned/learn.h	/^		int lastturn;$/;"	m	class:SegLearn
lastturn	src/drivers/olethros/learn.h	/^	int lastturn; \/\/\/< type of last turn entered$/;"	m	class:olethros::SegLearn
lastturnarc	src/drivers/sparkle/driver.h	/^		float lastturnarc;		\/* the arc of the current turn segments of the same type *\/$/;"	m	class:Driver
latin1_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding latin1_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
latin1_toUtf16	src/libs/txml/xmltok.c	/^void latin1_toUtf16(const ENCODING *enc,$/;"	f	file:
latin1_toUtf8	src/libs/txml/xmltok.c	/^void latin1_toUtf8(const ENCODING *enc,$/;"	f	file:
latlong_style	src/windows/include/plib/ssgaShapes.h	/^  int latlong_style ;$/;"	m	class:ssgaSphere
lbbmax	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	lbbmax;$/;"	m	struct:Face	file:
lbbmin	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	lbbmin;		\/* Bounding (unscaled) box *\/$/;"	m	struct:Face	file:
leaderFlag	src/modules/graphic/ssggraph/grboard.h	/^    int leaderFlag;$/;"	m	class:cGrBoard
leaderNb	src/modules/graphic/ssggraph/grboard.h	/^    int leaderNb;$/;"	m	class:cGrBoard
leaf	src/windows/include/plib/ssg.h	/^  ssgLeaf *leaf ;$/;"	m	class:ssgHit
leaf_count	src/windows/include/plib/ssg.h	/^  int leaf_count   ;$/;"	m	class:ssgStatistics
learn	src/drivers/bt/driver.h	/^		SegLearn *learn;$/;"	m	class:Driver
learn	src/drivers/damned/driver.h	/^		SegLearn *learn;$/;"	m	class:Driver
learn	src/drivers/olethros/driver.h	/^	SegLearn *learn; \/\/\/< handle to learning module$/;"	m	class:olethros::Driver
learning_method	export/include/learning/policy.h	/^	enum LearningMethod learning_method; \/\/\/< learning method to use;$/;"	m	class:DiscretePolicy	typeref:enum:DiscretePolicy::LearningMethod
learning_method	src/libs/learning/policy.h	/^	enum LearningMethod learning_method; \/\/\/< learning method to use;$/;"	m	class:DiscretePolicy	typeref:enum:DiscretePolicy::LearningMethod
leaves	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  BBoxLeaf *leaves;$/;"	m	class:Complex
left	src/drivers/olethros/TrackData.h	/^    Point left;$/;"	m	class:Segment
left	src/modules/graphic/ssggraph/grcam.h	/^    float left;$/;"	m	class:cGrOrthoCamera
left	src/windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
left	src/windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
len	export/include/tmath/v2_t.h	/^template<class T> inline T v2t<T>::len(void) const$/;"	f	class:v2t
len	export/include/tmath/v3_t.h	/^template<class T> inline T v3t<T>::len(void)$/;"	f	class:v3t
len	export/include/tmath/v4_t.h	/^template<class T> inline T v4t<T>::len(void) const$/;"	f	class:v4t
len	export/include/track.h	/^	tdble len;					\/**< Lenght of each pit stop *\/$/;"	m	struct:__anon183
len	src/drivers/berniw/linalg.h	/^inline double v3d::len(void)$/;"	f	class:v3d
len	src/drivers/berniw2/linalg.h	/^inline double v3d::len(void)$/;"	f	class:v3d
len	src/drivers/berniw3/linalg.h	/^inline double v3d::len(void)$/;"	f	class:v3d
len	src/drivers/olethros/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	src/drivers/sparkle/linalg.h	/^inline float v2d::len(void) const$/;"	f	class:v2d
len	src/interfaces/track.h	/^	tdble len;					\/**< Lenght of each pit stop *\/$/;"	m	struct:__anon150
len	src/libs/math/v2_t.h	/^template<class T> inline T v2t<T>::len(void) const$/;"	f	class:v2t
len	src/libs/math/v3_t.h	/^template<class T> inline T v3t<T>::len(void)$/;"	f	class:v3t
len	src/libs/math/v4_t.h	/^template<class T> inline T v4t<T>::len(void) const$/;"	f	class:v4t
len	src/libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon64
leng	src/modules/graphic/ssggraph/grloadsgi.h	/^		int           *leng ;$/;"	m	class:ssgSGIHeader
length	export/include/3D/Quaternion.h	/^inline Scalar Quaternion::length() const { return sqrt(length2()); }$/;"	f	class:Quaternion
length	export/include/3D/Quaternion.h	/^inline Scalar length(const Quaternion& q) { return q.length(); }$/;"	f
length	export/include/3D/Vector.h	/^inline Scalar Vector::length() const { return sqrt(length2()); }$/;"	f	class:Vector
length	export/include/3D/Vector.h	/^inline Scalar length(const Vector& v) { return v.length(); }$/;"	f
length	export/include/learning/string_utils.h	/^     unsigned int length; \/\/\/<This is the buffer length$/;"	m	struct:StringBuffer_
length	export/include/track.h	/^    tdble	  length;	\/**< main track length *\/$/;"	m	struct:__anon186
length	export/include/track.h	/^    tdble length;		\/**< Length in meters of the middle of the track *\/$/;"	m	struct:trackSeg
length	src/drivers/berniw/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	src/drivers/berniw/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	src/drivers/berniw2/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	src/drivers/berniw2/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	src/drivers/berniw3/pathfinder.h	/^		tdble length;	\/* dist to the next pathseg *\/$/;"	m	class:PathSeg
length	src/drivers/berniw3/trackdesc.h	/^		tdble length;			\/* distance to the next segment (2-D, not 3-D!) *\/$/;"	m	class:TrackSegment
length	src/drivers/inferno/pathfinder.h	/^				tdble length;	\/\/ Dist to the next pathseg.$/;"	m	class:PathSeg::pseg
length	src/drivers/inferno/pathfinder.h	/^		float* length;			\/\/ dist to next pathseg.$/;"	m	class:PathSegOpt
length	src/drivers/inferno/trackdesc.h	/^		tdble length;			\/\/ Distance to the next segment (2-D, not 3-D!).$/;"	m	class:TrackSegment
length	src/drivers/lliaw/pathfinder.h	/^				tdble length;	\/\/ Dist to the next pathseg.$/;"	m	class:PathSeg::pseg
length	src/drivers/lliaw/pathfinder.h	/^		float* length;			\/\/ dist to next pathseg.$/;"	m	class:PathSegOpt
length	src/drivers/lliaw/trackdesc.h	/^		tdble length;			\/\/ Distance to the next segment (2-D, not 3-D!).$/;"	m	class:TrackSegment
length	src/drivers/tita/pathfinder.h	/^				tdble length;	\/\/ Dist to the next pathseg.$/;"	m	class:PathSeg::pseg
length	src/drivers/tita/pathfinder.h	/^		float* length;			\/\/ dist to next pathseg.$/;"	m	class:PathSegOpt
length	src/drivers/tita/trackdesc.h	/^		tdble length;			\/\/ Distance to the next segment (2-D, not 3-D!).$/;"	m	class:TrackSegment
length	src/interfaces/track.h	/^    tdble	  length;	\/**< main track length *\/$/;"	m	struct:__anon153
length	src/interfaces/track.h	/^    tdble length;		\/**< Length in meters of the middle of the track *\/$/;"	m	struct:trackSeg
length	src/libs/learning/string_utils.h	/^     unsigned int length; \/\/\/<This is the buffer length$/;"	m	struct:StringBuffer_
length	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar Quaternion::length() const { return sqrt(length2()); }$/;"	f	class:Quaternion
length	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar length(const Quaternion& q) { return q.length(); }$/;"	f
length	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar Vector::length() const { return sqrt(length2()); }$/;"	f	class:Vector
length	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar length(const Vector& v) { return v.length(); }$/;"	f
length	src/windows/include/plib/sl.h	/^  int    length ;$/;"	m	class:slSample
length	src/windows/include/plib/ssgaWaveSystem.h	/^  float length ;$/;"	m	class:ssgaWaveTrain
length2	export/include/3D/Quaternion.h	/^inline Scalar Quaternion::length2() const { return dot(*this, *this); }$/;"	f	class:Quaternion
length2	export/include/3D/Quaternion.h	/^inline Scalar length2(const Quaternion& q) { return q.length2(); }$/;"	f
length2	export/include/3D/Vector.h	/^inline Scalar Vector::length2() const { return dot(*this, *this); }$/;"	f	class:Vector
length2	export/include/3D/Vector.h	/^inline Scalar length2(const Vector& v) { return v.length2(); }$/;"	f
length2	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar Quaternion::length2() const { return dot(*this, *this); }$/;"	f	class:Quaternion
length2	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Scalar length2(const Quaternion& q) { return q.length2(); }$/;"	f
length2	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar Vector::length2() const { return dot(*this, *this); }$/;"	f	class:Vector
length2	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar length2(const Vector& v) { return v.length2(); }$/;"	f
lengthRemaining	src/windows/include/plib/sl.h	/^  int            lengthRemaining ;  \/* Sample frames remaining until repeat *\/$/;"	m	class:slSamplePlayer
letoverlap	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	src/drivers/inferno/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	src/drivers/lliaw/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
letoverlap	src/drivers/tita/pathfinder.cpp	/^int Pathfinder::letoverlap(int trackSegId, tSituation *situation, MyCar* myc, OtherCar* ocar, tOverlapTimer* ov)$/;"	f	class:Pathfinder
level	export/include/xml.h	/^    int			level;		\/* nested level *\/$/;"	m	struct:xmlElement
level	src/libs/txml/xml.h	/^    int			level;		\/* nested level *\/$/;"	m	struct:xmlElement
level	src/libs/txml/xmlrole.h	/^  unsigned level;$/;"	m	struct:prolog_state
level_str	src/libs/confscreens/driverconfig.cpp	/^static char *level_str[] = { ROB_VAL_ROOKIE, ROB_VAL_AMATEUR, ROB_VAL_SEMI_PRO, ROB_VAL_PRO };$/;"	v	file:
level_str	src/libs/raceengineclient/raceinit.cpp	/^static char *level_str[] = { ROB_VAL_ROOKIE, ROB_VAL_AMATEUR, ROB_VAL_SEMI_PRO, ROB_VAL_PRO };$/;"	v	file:
levels	src/windows/include/plib/ssgaShapes.h	/^  int   levels ;$/;"	m	class:ssgaPatch
levelup	export/include/tgfclient.h	/^    int		levelup[GFCTRL_JOY_MAXBUTTON * NUM_JOY];\/**< Button state (1 = up) *\/$/;"	m	struct:__anon213
levelup	src/libs/tgfclient/tgfclient.h	/^    int		levelup[GFCTRL_JOY_MAXBUTTON * NUM_JOY];\/**< Button state (1 = up) *\/$/;"	m	struct:__anon57
lfK	src/modules/simu/simuv2/wheel.h	/^    tdble	lfK;		\/* Load factor *\/$/;"	m	struct:__anon21
lfMax	src/modules/simu/simuv2/wheel.h	/^    tdble	lfMax;		\/* Load factor *\/$/;"	m	struct:__anon21
lfMin	src/modules/simu/simuv2/wheel.h	/^    tdble	lfMin;		\/* Load factor *\/$/;"	m	struct:__anon21
lgfromstart	export/include/track.h	/^    tdble lgfromstart;		\/**< Length of begining of segment from starting line *\/$/;"	m	struct:trackSeg
lgfromstart	src/interfaces/track.h	/^    tdble lgfromstart;		\/**< Length of begining of segment from starting line *\/$/;"	m	struct:trackSeg
lheight	src/tools/texmapper/maintexmapper.cpp	/^    float		lheight;$/;"	m	struct:__anon30	file:
lheight	src/tools/texmapper/maintexmapper.cpp	/^    float	lheight;$/;"	m	struct:Face	file:
libDir	src/libs/tgf/tgf.cpp	/^static char *libDir = "";$/;"	v	file:
lift	src/modules/simu/simuv2/aero.h	/^    tdble	lift[2];	\/* front & rear lift force along car z axis *\/$/;"	m	struct:__anon13
lightAnchor	src/modules/graphic/ssggraph/grcarlight.h	/^  ssgBranch *lightAnchor;$/;"	m	struct:tgrCarlight_t
lightArray	src/modules/graphic/ssggraph/grcarlight.h	/^  ssgVtxTableCarlight * lightArray[MAX_NUMBER_LIGHT];$/;"	m	struct:tgrCarlight_t
lightCmd	export/include/car.h	/^    int		lightCmd;    \/**< Lights command *\/$/;"	m	struct:__anon202
lightCmd	src/drivers/human/human.h	/^	int		lightCmd;$/;"	m	struct:HumanContext
lightCmd	src/interfaces/car.h	/^    int		lightCmd;    \/**< Lights command *\/$/;"	m	struct:__anon162
lightCurr	src/modules/graphic/ssggraph/grcarlight.h	/^  ssgVtxTableCarlight * lightCurr[MAX_NUMBER_LIGHT];$/;"	m	struct:tgrCarlight_t
lightType	src/modules/graphic/ssggraph/grcarlight.h	/^  int                  lightType[MAX_NUMBER_LIGHT];$/;"	m	struct:tgrCarlight_t
limit	src/windows/include/plib/ssg.h	/^  unsigned int limit   ;  \/* The current limit on number of things  *\/$/;"	m	class:ssgSimpleList
limit	src/windows/include/plib/ssg.h	/^  unsigned int limit ;  \/* The current limit on number of entities  *\/$/;"	m	class:ssgList
limit	src/windows/include/plib/ul.h	/^  unsigned int limit ;  \/* The current limit on number of entities  *\/$/;"	m	class:ulList
limit	src/windows/include/ul.h	/^  unsigned int limit ;  \/* The current limit on number of entities  *\/$/;"	m	class:ulList
limitFov	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::limitFov(void) {$/;"	f	class:cGrCarCamMirror
limitFov	src/modules/graphic/ssggraph/grcam.h	/^    void limitFov(void) { }$/;"	f	class:cGrBackgroundCam
limitFov	src/modules/graphic/ssggraph/grcam.h	/^   void limitFov(void)  {}$/;"	f	class:cGrPerspCamera
limit_high	src/windows/include/plib/ssg.h	/^  float  limit_high ;$/;"	m	class:ssgAxisTransform
limit_low	src/windows/include/plib/ssg.h	/^  float  limit_low  ;$/;"	m	class:ssgAxisTransform
lineNumber	src/libs/txml/xmltok.h	/^  unsigned long lineNumber;$/;"	m	struct:position
linear	src/libs/learning/ANN.cpp	/^real linear(real x)$/;"	f
linear_d	src/libs/learning/ANN.cpp	/^real linear_d(real x)$/;"	f
link	export/include/car.h	/^    GF_TAILQ_ENTRY(struct CarPenalty) link;$/;"	m	struct:CarPenalty
link	src/interfaces/car.h	/^    GF_TAILQ_ENTRY(struct CarPenalty) link;$/;"	m	struct:CarPenalty
link	src/libs/confscreens/driverconfig.cpp	/^    GF_TAILQ_ENTRY(struct tCarInfo) link;$/;"	m	struct:tCarInfo	file:
link	src/libs/confscreens/driverconfig.cpp	/^    GF_TAILQ_ENTRY(struct tCatInfo) link;$/;"	m	struct:tCatInfo	file:
link	src/libs/racescreens/driverselect.cpp	/^    GF_TAILQ_ENTRY(struct DrvElt)	link;$/;"	m	struct:DrvElt	file:
link	src/libs/tgf/hash.cpp	/^    GF_TAILQ_ENTRY(struct HashElem) 	link;$/;"	m	struct:HashElem	file:
link	src/modules/graphic/ssggraph/grcam.h	/^    GF_TAILQ_ENTRY(cGrCamera) link;$/;"	m	class:cGrCamera
link	src/tools/texmapper/maintexmapper.cpp	/^    GF_TAILQ_ENTRY(struct Face) link;$/;"	m	struct:Face	file:
link	src/tools/trackgen/objects.cpp	/^    GF_TAILQ_ENTRY(objdef)	link;$/;"	m	struct:objdef	file:
link	src/tools/trackgen/relief.cpp	/^    GF_TAILQ_ENTRY(struct Line) link;$/;"	m	struct:Line	file:
linkHandle	src/libs/tgf/params.cpp	/^	GF_TAILQ_ENTRY (struct parmHandle)	linkHandle;	\/**< Next configuration handle *\/$/;"	m	struct:parmHandle	file:
linkParam	src/libs/tgf/params.cpp	/^    GF_TAILQ_ENTRY (struct param)	linkParam;	\/**< Next parameter in the same section *\/$/;"	m	struct:param	file:
linkSection	src/libs/tgf/params.cpp	/^    GF_TAILQ_ENTRY (struct section)	linkSection;	\/**< Next section at the same level *\/$/;"	m	struct:section	file:
linkWithin	src/libs/tgf/params.cpp	/^    GF_TAILQ_ENTRY (struct within)	linkWithin;$/;"	m	struct:within	file:
linux-cvs	doc/website/download_and_install.html	/^    <h2><a name="linux-cvs"><\/a>Linux From Sources CVS<\/h2>$/;"	a
linux-lokiinstaller	doc/website/download_and_install.html	/^    <h2><a name="linux-lokiinstaller"><\/a>Linux Binary with Installer<\/h2>$/;"	a
linux-src	doc/website/download_and_install.html	/^	<h2><a name="linux-src"><\/a>For Linux From Separated Source Packages<\/h2>$/;"	a
linux-src-all	doc/website/download_and_install.html	/^	<h2><a name="linux-src-all"><\/a>For Linux and FreeBSD from "all-in-one" Source Package<\/h2>$/;"	a
linux-src-all-win	doc/website/download_and_install.html	/^	<h2><a name="linux-src-all-win"><\/a>For Windows From "all-in-one" Source Package<\/h2>$/;"	a
linux-vendor	doc/website/download_and_install.html	/^	<h2><a name="linux-vendor"><\/a>TORCS for your Linux distribution<\/h2>$/;"	a
linuxDirGetList	src/linux/linuxspec.cpp	/^linuxDirGetList(char *dir)$/;"	f	file:
linuxDirGetListFiltered	src/linux/linuxspec.cpp	/^linuxDirGetListFiltered(char *dir, char *suffix)$/;"	f	file:
linuxModFreeInfoList	src/linux/linuxspec.cpp	/^linuxModFreeInfoList(tModList **modlist)$/;"	f	file:
linuxModInfo	src/linux/linuxspec.cpp	/^linuxModInfo(unsigned int \/* gfid *\/, char *sopath, tModList **modlist)$/;"	f	file:
linuxModInfoDir	src/linux/linuxspec.cpp	/^linuxModInfoDir(unsigned int \/* gfid *\/, char *dir, int level, tModList **modlist)$/;"	f	file:
linuxModLoad	src/linux/linuxspec.cpp	/^linuxModLoad(unsigned int \/* gfid *\/, char *sopath, tModList **modlist)$/;"	f	file:
linuxModLoadDir	src/linux/linuxspec.cpp	/^linuxModLoadDir(unsigned int gfid, char *dir, tModList **modlist)$/;"	f	file:
linuxModUnloadList	src/linux/linuxspec.cpp	/^linuxModUnloadList(tModList **modlist)$/;"	f	file:
linuxTimeClock	src/linux/linuxspec.cpp	/^linuxTimeClock(void)$/;"	f	file:
list	src/windows/include/plib/ssg.h	/^  char         *list   ;  \/* The list. *\/$/;"	m	class:ssgSimpleList
listener_position	src/modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 listener_position;$/;"	m	class:CarSoundData
literalScanners	src/libs/txml/xmltok.h	/^  int (*literalScanners[XML_N_LITERAL_TYPES])(const ENCODING *,$/;"	m	struct:encoding
little2_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding little2_encoding = { $/;"	v	typeref:struct:normal_encoding	file:
lliaw	src/drivers/lliaw/lliaw.cpp	/^extern "C" int lliaw(tModInfo *modInfo)$/;"	f
lmax	export/include/track.h	/^	tdble lmax;	\/**< Pitting area length max *\/$/;"	m	struct:TrackOwnPit
lmax	src/interfaces/track.h	/^	tdble lmax;	\/**< Pitting area length max *\/$/;"	m	struct:TrackOwnPit
lmin	export/include/track.h	/^	tdble lmin;	\/**< Pitting area length min *\/$/;"	m	struct:TrackOwnPit
lmin	src/interfaces/track.h	/^	tdble lmin;	\/**< Pitting area length min *\/$/;"	m	struct:TrackOwnPit
load	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:ssgVtxTableCarlight
load	src/modules/graphic/ssggraph/grshadow.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:ssgVtxTableShadow
load	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:ssgVtxTableSmoke
load	src/modules/graphic/ssggraph/grvertexarray.h	/^  virtual int load ( FILE *fd ) {return  ssgVtxArray::load(fd);}$/;"	f	class:ssgGrVtxArray
load	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual int load ( FILE *fd )  {return  ssgVtxTable::load(fd);}$/;"	f	class:grVtxTable
load	src/tools/trackgen/easymesh.cpp	/^int load(void)$/;"	f
loadAC	src/tools/accc/ac3dload.cpp	/^int loadAC( char * inputFilename, char * outputFilename, int saveIn)$/;"	f
loadACo	src/tools/accc/ac3dload.cpp	/^int loadACo( char * inputFilename, char * outputFilename, int saveIn)$/;"	f
loadAndGroup	src/tools/accc/ac3dgroup.cpp	/^void loadAndGroup( char *OutputFileName)$/;"	f
loadBehaviour	src/drivers/berniw/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	src/drivers/berniw2/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	src/drivers/berniw3/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	src/drivers/inferno/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	src/drivers/lliaw/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadBehaviour	src/drivers/tita/mycar.cpp	/^void MyCar::loadBehaviour(int id) {$/;"	f	class:MyCar
loadClothoidParams	src/drivers/berniw/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadClothoidParams	src/drivers/berniw2/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadClothoidParams	src/drivers/berniw3/pathfinder.cpp	/^bool Pathfinder::loadClothoidParams(tParam* p)$/;"	f	class:Pathfinder
loadDefaults	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::loadDefaults(tCarElt *curCar)$/;"	f	class:cGrBoard
loadDefaults	src/modules/graphic/ssggraph/grcam.cpp	/^    void loadDefaults(char *attr) {$/;"	f	class:cGrCarCamCenter
loadDefaults	src/modules/graphic/ssggraph/grcam.cpp	/^    void loadDefaults(char *attr) {$/;"	f	class:cGrCarCamRoadZoom
loadDefaults	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::loadDefaults(char *attr)$/;"	f	class:cGrPerspCamera
loadDefaults	src/modules/graphic/ssggraph/grcam.h	/^    void loadDefaults(char *attr) { }$/;"	f	class:cGrOrthoCamera
loadFile	src/libs/learning/policy.cpp	/^void DiscretePolicy::loadFile (char* f)$/;"	f	class:DiscretePolicy
loadParameters	src/drivers/olethros/learn.cpp	/^void SegLearn::loadParameters (char* fname)$/;"	f	class:SegLearn
loadParams	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::loadParams(tSituation *s)$/;"	f	class:cGrScreen
loadSGI_bool	src/modules/graphic/ssggraph/grloadsgi.h	/^		bool          loadSGI_bool;$/;"	m	class:ssgSGIHeader
load_database	src/tools/texmapper/maintexmapper.cpp	/^void load_database(void)$/;"	f
load_params	src/tools/texmapper/maintexmapper.cpp	/^void load_params(void)$/;"	f
loader_fd	src/modules/graphic/ssggraph/grloadac.cpp	/^static gzFile loader_fd ;$/;"	v	file:
loc	src/tools/accc/accc.h	/^  point_t loc;$/;"	m	struct:ob
localDir	src/libs/tgf/tgf.cpp	/^static char *localDir = "";$/;"	v	file:
location	src/windows/include/png.h	/^    png_byte location; \/* mode of operation at read time *\/$/;"	m	struct:png_unknown_chunk_t
locfar	src/modules/graphic/ssggraph/grcam.cpp	/^    float locfar;$/;"	m	class:cGrCarCamCenter	file:
locfar	src/modules/graphic/ssggraph/grcam.cpp	/^    float locfar;$/;"	m	class:cGrCarCamRoadZoom	file:
locfovy	src/modules/graphic/ssggraph/grcam.cpp	/^    float locfovy;$/;"	m	class:cGrCarCamCenter	file:
locfovy	src/modules/graphic/ssggraph/grcam.cpp	/^    float locfovy;$/;"	m	class:cGrCarCamRoadZoom	file:
lockInputTq	src/modules/simu/simuv2/differential.h	/^    tdble	lockInputTq;$/;"	m	struct:__anon20
logmsg	export/include/learning/learn_debug.h	17;"	d
logmsg	src/libs/learning/learn_debug.h	17;"	d
logmsg	src/libs/learning/policy.cpp	26;"	d	file:
logmsg	src/libs/learning/policy.cpp	27;"	d	file:
logmsg	src/modules/graphic/ssggraph/SoundInterface.h	29;"	d
logmsg	src/modules/graphic/ssggraph/SoundInterface.h	31;"	d
longestAxis	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  int longestAxis() const { return extent.closestAxis(); }$/;"	f	class:BBox
lookup	src/libs/txml/hashtable.c	/^NAMED *lookup(HASH_TABLE *table, KEY name, size_t createSize)$/;"	f
lookup	src/modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^  Function lookup(ShapeType type1, ShapeType type2) const {$/;"	f	class:AlgoTable
loop	src/modules/graphic/ssggraph/TorcsSound.h	/^	bool loop; \/\/\/< Whether it's a looping sound$/;"	m	class:TorcsSound
loop_time	src/windows/include/plib/ssg.h	/^  double  loop_time  ;$/;"	m	class:ssgTimedSelector
lower	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Endpoint lower[3];$/;"	m	class:Object
lowpass	src/modules/graphic/ssggraph/TorcsSound.h	/^	float lowpass; \/\/\/< Current low pass filter$/;"	m	class:TorcsSound
lowpass_env	src/modules/graphic/ssggraph/TorcsSound.h	/^	slEnvelope* lowpass_env; \/\/\/< low pass filter envelope$/;"	m	class:PlibTorcsSound
lp	src/modules/graphic/ssggraph/QSoundChar.h	/^	float lp;$/;"	m	struct:QSoundChar_
lp	src/modules/graphic/ssggraph/TorcsSound.h	/^    float lp; \/\/\/< Environmental filtering$/;"	m	class:SoundSource
lscale	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	lscale;		\/* object scale *\/$/;"	m	struct:Face	file:
lside	export/include/track.h	/^		struct { struct trackSeg *rside, *lside; };$/;"	m	struct:trackSeg::__anon180::__anon181	typeref:struct:trackSeg::__anon180::__anon181::
lside	src/interfaces/track.h	/^		struct { struct trackSeg *rside, *lside; };$/;"	m	struct:trackSeg::__anon147::__anon148	typeref:struct:trackSeg::__anon147::__anon148::
lson	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxNode *lson;$/;"	m	class:BBoxInternal
lwidth	src/tools/texmapper/maintexmapper.cpp	/^    float		lwidth;		\/* logical (unscaled) values *\/$/;"	m	struct:__anon30	file:
lwidth	src/tools/texmapper/maintexmapper.cpp	/^    float	lwidth;		\/* logical (unscaled) values *\/$/;"	m	struct:Face	file:
m	export/include/learning/ANN.h	/^	real m; \/\/\/< mean$/;"	m	struct:RBFConnection_
m	export/include/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:ExponentialDistribution
m	export/include/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:LaplacianDistribution
m	export/include/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:NormalDistribution
m	export/include/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:UniformDistribution
m	src/drivers/berniw/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	src/drivers/berniw2/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	src/drivers/berniw3/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
m	src/drivers/inferno/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
m	src/drivers/inferno/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
m	src/drivers/lliaw/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
m	src/drivers/lliaw/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
m	src/drivers/tita/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
m	src/drivers/tita/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
m	src/libs/learning/ANN.h	/^	real m; \/\/\/< mean$/;"	m	struct:RBFConnection_
m	src/libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:ExponentialDistribution
m	src/libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:LaplacianDistribution
m	src/libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:NormalDistribution
m	src/libs/learning/Distribution.h	/^	real m; \/\/\/< mean$/;"	m	class:UniformDistribution
m_bestlap	src/drivers/bt/strategy.h	/^		float m_bestlap;				\/\/ Best possible lap, empty tank and alone.$/;"	m	class:SimpleStrategy2
m_bestlap	src/drivers/damned/strategy.h	/^		float m_bestlap;				\/\/ Best possible lap, empty tank and alone.$/;"	m	class:SimpleStrategy2
m_expectedfuelperlap	src/drivers/bt/strategy.h	/^		float m_expectedfuelperlap;		\/\/ Expected fuel per lap (may be very inaccurate).$/;"	m	class:SimpleStrategy
m_expectedfuelperlap	src/drivers/damned/strategy.h	/^		float m_expectedfuelperlap;		\/\/ Expected fuel per lap (may be very inaccurate).$/;"	m	class:SimpleStrategy
m_fuelchecked	src/drivers/bt/strategy.h	/^		bool m_fuelchecked;				\/\/ Fuel statistics updated.$/;"	m	class:SimpleStrategy
m_fuelchecked	src/drivers/damned/strategy.h	/^		bool m_fuelchecked;				\/\/ Fuel statistics updated.$/;"	m	class:SimpleStrategy
m_fuelperlap	src/drivers/bt/strategy.h	/^		float m_fuelperlap;				\/\/ The maximum amount of fuel we needed for a lap.$/;"	m	class:SimpleStrategy
m_fuelperlap	src/drivers/damned/strategy.h	/^		float m_fuelperlap;				\/\/ The maximum amount of fuel we needed for a lap.$/;"	m	class:SimpleStrategy
m_fuelperstint	src/drivers/bt/strategy.h	/^		float m_fuelperstint;$/;"	m	class:SimpleStrategy2
m_fuelperstint	src/drivers/damned/strategy.h	/^		float m_fuelperstint;$/;"	m	class:SimpleStrategy2
m_fuelsum	src/drivers/bt/strategy.h	/^		float m_fuelsum;				\/\/ all the fuel used.$/;"	m	class:SimpleStrategy
m_fuelsum	src/drivers/damned/strategy.h	/^		float m_fuelsum;				\/\/ all the fuel used.$/;"	m	class:SimpleStrategy
m_lastfuel	src/drivers/bt/strategy.h	/^		float m_lastfuel;				\/\/ the fuel available when we cross the start lane.$/;"	m	class:SimpleStrategy
m_lastfuel	src/drivers/damned/strategy.h	/^		float m_lastfuel;				\/\/ the fuel available when we cross the start lane.$/;"	m	class:SimpleStrategy
m_lastpitfuel	src/drivers/bt/strategy.h	/^		float m_lastpitfuel;			\/\/ Amount refueled, special case when we refuel.$/;"	m	class:SimpleStrategy
m_lastpitfuel	src/drivers/damned/strategy.h	/^		float m_lastpitfuel;			\/\/ Amount refueled, special case when we refuel.$/;"	m	class:SimpleStrategy
m_pittime	src/drivers/bt/strategy.h	/^		float m_pittime;				\/\/ Expected additional time for pit stop.$/;"	m	class:SimpleStrategy2
m_pittime	src/drivers/damned/strategy.h	/^		float m_pittime;				\/\/ Expected additional time for pit stop.$/;"	m	class:SimpleStrategy2
m_remainingstops	src/drivers/bt/strategy.h	/^		int m_remainingstops;$/;"	m	class:SimpleStrategy2
m_remainingstops	src/drivers/damned/strategy.h	/^		int m_remainingstops;$/;"	m	class:SimpleStrategy2
m_worstlap	src/drivers/bt/strategy.h	/^		float m_worstlap;				\/\/ Worst possible lap, full tank and alone.$/;"	m	class:SimpleStrategy2
m_worstlap	src/drivers/damned/strategy.h	/^		float m_worstlap;				\/\/ Worst possible lap, full tank and alone.$/;"	m	class:SimpleStrategy2
mac	doc/website/download_and_install.html	/^	<h2><a name="mac"><\/a>MacOS X Package (1.2.4)<\/h2>$/;"	a
magic	export/include/tgf.h	/^    int			magic;		\/**< magic number for integrity check *\/$/;"	m	struct:ModInfo
magic	src/libs/tgf/params.cpp	/^	int magic;$/;"	m	struct:parmHandle	file:
magic	src/libs/tgf/tgf.h	/^    int			magic;		\/**< magic number for integrity check *\/$/;"	m	struct:ModInfo
magic	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short magic ;$/;"	m	class:ssgSGIHeader
magic	src/windows/include/plib/sl.h	/^  int            magic ;$/;"	m	class:slPlayer
magic	src/windows/include/plib/sl.h	/^  int        magic    ;$/;"	m	struct:slPendingCallBack
main	src/libs/txml/gennmtab.c	/^int main()$/;"	f
main	src/libs/txml/gennmtab/gennmtab.c	/^int main()$/;"	f
main	src/linux/main.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/misc/png2jpg/png2jpg.c	/^int main (int argc, char **argv)$/;"	f
main	src/tools/accc/mainaccc.cpp	/^main(int argc, char **argv)$/;"	f
main	src/tools/nfs2ac/mainnfs2ac.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/tools/nfsperf/mainnfsperf.cpp	/^int main (int argc, char **argv)$/;"	f
main	src/tools/texmapper/maintexmapper.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/tools/trackgen/maintrackgen.cpp	/^main(int argc, char **argv)$/;"	f
main	src/windows/main.cpp	/^main(int argc, char *argv[])$/;"	f
mainMenu	src/libs/raceengineclient/racestate.cpp	/^static void *mainMenu;$/;"	v	file:
makeCapped	src/windows/include/plib/ssgaShapes.h	/^  void makeCapped ( int c ) { capped = c ; regenerate () ; }$/;"	f	class:ssgaCylinder
makeCorrupt	src/windows/include/plib/ssgaShapes.h	/^  void makeCorrupt  () { corrupted = TRUE  ; }$/;"	f	class:ssgaShape
makeModelPath	src/modules/graphic/ssggraph/grboard.cpp	/^  virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeModelPath	src/modules/graphic/ssggraph/grcar.cpp	/^	virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeModelPath	src/modules/graphic/ssggraph/grssgext.h	/^		virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
makeModelPath	src/tools/trackgen/objects.cpp	/^  virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeModelPath	src/tools/trackgen/util.h	/^    virtual void makeModelPath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
makeTexturePath	src/modules/graphic/ssggraph/grboard.cpp	/^  virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeTexturePath	src/modules/graphic/ssggraph/grcar.cpp	/^	virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeTexturePath	src/modules/graphic/ssggraph/grssgext.h	/^		virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
makeTexturePath	src/tools/trackgen/objects.cpp	/^  virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:myLoaderOptions
makeTexturePath	src/tools/trackgen/util.h	/^    virtual void makeTexturePath ( char* path, const char *fname ) const$/;"	f	class:ssgLoaderOptionsEx
make_ObjPair	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^inline ObjPair make_ObjPair(DtObjectRef x, DtObjectRef y) {$/;"	f
malloc	export/include/tgf.h	160;"	d
malloc	src/libs/tgf/tgf.h	160;"	d
malloc	src/libs/txml/xmldef.h	28;"	d
malloc_fn	src/windows/include/png.h	/^   png_malloc_ptr malloc_fn;         \/* function for allocating memory *\/$/;"	m	struct:png_struct_def
manual	src/drivers/human/human.h	/^	int		manual;$/;"	m	struct:HumanContext
map	export/include/xmlparse.h	/^  int map[256];$/;"	m	struct:__anon222
map	src/libs/txml/xmlparse.h	/^  int map[256];$/;"	m	struct:__anon83
mapChildren	export/include/tgf.h	/^  std::map<ProfileInstance *, void *> mapChildren;$/;"	m	class:ProfileInstance
mapChildren	src/libs/tgf/tgf.h	/^  std::map<ProfileInstance *, void *> mapChildren;$/;"	m	class:ProfileInstance
mapLevel	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              mapLevel;$/;"	v	file:
mapLevelBitmap	src/modules/graphic/ssggraph/grvtxtable.h	/^  int mapLevelBitmap;$/;"	m	class:grVtxTable
mapNormalToSphere	src/tools/accc/ac3dload.cpp	/^void mapNormalToSphere(ob_t *object)$/;"	f
mapNormalToSphere2	src/tools/accc/ac3dload.cpp	/^void mapNormalToSphere2(ob_t *object)$/;"	f
mapTexture	src/modules/graphic/ssggraph/grtrackmap.cpp	/^GLuint cGrTrackMap::mapTexture;$/;"	m	class:cGrTrackMap	file:
mapTexture	src/modules/graphic/ssggraph/grtrackmap.h	/^		static GLuint mapTexture;$/;"	m	class:cGrTrackMap
mapTextureEnv	src/tools/accc/ac3dload.cpp	/^void mapTextureEnv(ob_t *object)$/;"	f
mapTextureEnvOld	src/tools/accc/ac3dload.cpp	/^void mapTextureEnvOld(ob_t *object)$/;"	f
mapWarning	export/include/tgf.h	/^  std::map<ProfileInstance *, void *> mapWarning;$/;"	m	class:Profiler
mapWarning	src/libs/tgf/tgf.h	/^  std::map<ProfileInstance *, void *> mapWarning;$/;"	m	class:Profiler
map_size	src/modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::map_size;$/;"	m	class:cGrTrackMap	file:
map_size	src/modules/graphic/ssggraph/grtrackmap.h	/^		static int map_size;$/;"	m	class:cGrTrackMap
map_x	src/modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::map_x;$/;"	m	class:cGrTrackMap	file:
map_x	src/modules/graphic/ssggraph/grtrackmap.h	/^		static int map_x;$/;"	m	class:cGrTrackMap
map_y	src/modules/graphic/ssggraph/grtrackmap.cpp	/^int cGrTrackMap::map_y;$/;"	m	class:cGrTrackMap	file:
map_y	src/modules/graphic/ssggraph/grtrackmap.h	/^		static int map_y;$/;"	m	class:cGrTrackMap
mark	src/tools/trackgen/easymesh.cpp	/^    int mark;             \/* is it off (ON or OFF) *\/$/;"	m	struct:ele	file:
mark	src/tools/trackgen/easymesh.cpp	/^    int mark;             \/* is it off, is on the boundary *\/$/;"	m	struct:sid	file:
mark	src/tools/trackgen/easymesh.h	/^    int mark;             \/* is it off *\/$/;"	m	struct:nod
mark	src/tools/trackgen/easymesh.h	/^    int mark;$/;"	m	struct:seg
markAsTeamMate	src/drivers/bt/opponent.h	/^		void markAsTeamMate() { teammate = true; }$/;"	f	class:Opponent
markAsTeamMate	src/drivers/damned/opponent.h	/^		void markAsTeamMate() { teammate = true; }$/;"	f	class:Opponent
marks	export/include/track.h	/^    int		*marks;		\/**< marks array *\/$/;"	m	struct:SegExt
marks	src/interfaces/track.h	/^    int		*marks;		\/**< marks array *\/$/;"	m	struct:SegExt
mass	src/drivers/berniw/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	src/drivers/berniw2/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	src/drivers/berniw3/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	src/drivers/bt/driver.h	/^		float mass;				\/\/ Mass of car + fuel.$/;"	m	class:Driver
mass	src/drivers/damned/driver.h	/^		float mass;				\/\/ Mass of car + fuel.$/;"	m	class:Driver
mass	src/drivers/inferno/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	src/drivers/lliaw/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	src/drivers/olethros/driver.h	/^	float mass;				\/\/\/< Mass of car + fuel.$/;"	m	class:olethros::Driver
mass	src/drivers/olethros/learn.h	/^	float mass; \/\/\/< mass$/;"	m	class:olethros::SegLearn
mass	src/drivers/sparkle/driver.h	/^		float mass;				\/* mass of car + fuel *\/$/;"	m	class:Driver
mass	src/drivers/tita/mycar.h	/^		double mass;$/;"	m	class:MyCar
mass	src/modules/simu/simuv2/carstruct.h	/^    tdble	mass;		\/* mass with pilot (without fuel) *\/$/;"	m	struct:__anon18
mass	src/modules/simu/simuv2/wheel.h	/^    tdble	mass;		\/* total wheel mass (incl. brake) (unsprung mass) *\/$/;"	m	struct:__anon21
masterPlayer	src/drivers/human/human.cpp	/^static int		masterPlayer = -1;$/;"	v	file:
mat	src/tools/accc/accc.h	/^typedef struct mat {$/;"	s
mat	src/tools/texmapper/maintexmapper.cpp	/^    sgMat4	mat;$/;"	m	struct:Face	file:
mat	src/windows/include/plib/sg.h	/^  sgMat4 mat ;$/;"	m	class:sgFrustum
mat	src/windows/include/plib/sg.h	/^  sgdMat4 mat ;$/;"	m	class:sgdFrustum
mat_t	src/tools/accc/accc.h	/^} mat_t;$/;"	t	typeref:struct:mat
material	export/include/track.h	/^    char *material;		\/**< Type of material used *\/$/;"	m	struct:trackSurface
material	src/interfaces/track.h	/^    char *material;		\/**< Type of material used *\/$/;"	m	struct:trackSurface
material	src/tools/trackgen/easymesh.cpp	/^    int material;$/;"	m	struct:ele	file:
materials	src/tools/trackgen/easymesh.cpp	/^void materials()$/;"	f
matrix	src/windows/include/plib/ssg.h	/^  sgMat4   matrix ;$/;"	m	class:ssgHit
max	export/include/3D/Basic.h	/^inline Scalar max(Scalar x, Scalar y) { return x < y ? y : x; }$/;"	f
max	export/include/controlconfig.h	/^    float	max;$/;"	m	struct:__anon205
max	export/include/js.h	/^  float max       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
max	export/include/track.h	/^    t3Dd		max;$/;"	m	struct:__anon186
max	src/drivers/human/pref.h	/^    float	max;		\/* max value for analog control *\/$/;"	m	struct:__anon144
max	src/interfaces/js.h	/^  float max       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
max	src/interfaces/track.h	/^    t3Dd		max;$/;"	m	struct:__anon153
max	src/libs/confscreens/controlconfig.h	/^    float	max;$/;"	m	struct:__anon44
max	src/libs/tgf/params.cpp	/^    tdble				max;$/;"	m	struct:param	file:
max	src/libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon64
max	src/modules/graphic/ssggraph/grloadsgi.h	/^		int            max ;$/;"	m	class:ssgSGIHeader
max	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar max(Scalar x, Scalar y) { return x < y ? y : x; }$/;"	f
max	src/tools/trackgen/easymesh.cpp	40;"	d	file:
max	src/windows/include/plib/sg.h	/^  sgVec3 max ;$/;"	m	class:sgBox
max	src/windows/include/plib/sg.h	/^  sgdVec3 max ;$/;"	m	class:sgdBox
maxAngle	src/modules/graphic/ssggraph/grcar.h	/^    tdble		minAngle, maxAngle;$/;"	m	struct:__anon4
maxCmd	src/libs/confscreens/controlconfig.cpp	/^static int maxCmd = sizeof(Cmd) \/ sizeof(Cmd[0]);$/;"	v	file:
maxCmd	src/libs/confscreens/joystickconfig.cpp	/^static int maxCmd;$/;"	v	file:
maxCmd	src/libs/confscreens/mouseconfig.cpp	/^static int maxCmd;$/;"	v	file:
maxDammage	export/include/raceman.h	/^    int                 maxDammage;$/;"	m	struct:__anon206
maxDammage	src/interfaces/raceman.h	/^    int                 maxDammage;$/;"	m	struct:__anon165
maxN	src/drivers/olethros/geometry.h	/^	int maxN;$/;"	m	class:Vector
maxName	export/include/controlconfig.h	/^    char	*maxName;$/;"	m	struct:__anon205
maxName	src/drivers/human/pref.h	/^    char	*maxName;	\/* Name of the max attribute *\/$/;"	m	struct:__anon144
maxName	src/libs/confscreens/controlconfig.h	/^    char	*maxName;$/;"	m	struct:__anon44
maxPw	src/modules/simu/simuv2/engine.h	/^	tdble       maxPw;$/;"	m	struct:__anon11
maxSpeed	src/modules/simu/simuv2/steer.h	/^    tdble	maxSpeed;	\/* in rad\/s *\/$/;"	m	struct:__anon25
maxTextureUnits	src/modules/graphic/ssggraph/grmain.cpp	/^int maxTextureUnits = 0;$/;"	v
maxTq	src/modules/simu/simuv2/engine.h	/^    tdble		maxTq;$/;"	m	struct:__anon11
maxValue	src/modules/graphic/ssggraph/grcar.h	/^    tdble		minValue, maxValue;$/;"	m	struct:__anon4
max_delta	src/windows/include/plib/ul.h	/^  double max_delta ;$/;"	m	class:ulClock
max_delta	src/windows/include/ul.h	/^  double max_delta ;$/;"	m	class:ulClock
max_el_state	export/include/learning/policy.h	/^	int max_el_state; \/\/\/< max state ID to search for eligibility \\deprecated$/;"	m	class:DiscretePolicy
max_el_state	src/libs/learning/policy.h	/^	int max_el_state; \/\/\/< max state ID to search for eligibility \\deprecated$/;"	m	class:DiscretePolicy
max_kids	src/windows/include/plib/ssg.h	/^  int max_kids ;$/;"	m	class:ssgSelector
max_life	src/modules/graphic/ssggraph/grsmoke.h	/^  double max_life;$/;"	m	class:ssgVtxTableSmoke
max_speed_list	src/drivers/olethros/driver.h	/^	float* max_speed_list;$/;"	m	class:olethros::Driver
max_text	src/windows/include/png.h	/^   int max_text; \/* current size of text array *\/$/;"	m	struct:png_info_struct
max_ttl	src/windows/include/plib/ssgaFire.h	/^  float max_ttl      ;$/;"	m	class:ssgaFire
max_vol	src/modules/graphic/ssggraph/SoundInterface.h	/^	float max_vol; \/\/\/< Max.$/;"	m	struct:QueueSoundMap_
maxlen	src/libs/tgfclient/gui.h	/^    int		maxlen;$/;"	m	struct:__anon60
maxsurf	src/tools/trackgen/easymesh.cpp	/^    int		maxsurf;$/;"	m	struct:group	file:
maxvtx	src/tools/trackgen/easymesh.cpp	/^    int		maxvtx;$/;"	m	struct:group	file:
maybeTokenized	src/libs/txml/xmlparse.c	/^  char maybeTokenized;$/;"	m	struct:__anon78	file:
me	src/drivers/berniw/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	src/drivers/berniw2/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	src/drivers/berniw3/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	src/drivers/inferno/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	src/drivers/lliaw/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
me	src/drivers/tita/mycar.h	/^		tCarElt* me;$/;"	m	class:AbstractCar
mem	src/tools/nfs2ac/mainnfs2ac.cpp	/^char  * mem;$/;"	v
mem_ptr	src/windows/include/png.h	/^   png_voidp mem_ptr;                \/* user supplied struct for mem functions *\/$/;"	m	struct:png_struct_def
menuHandle	src/libs/client/mainmenu.cpp	/^void *menuHandle = NULL;$/;"	v
menuHandle	src/libs/racescreens/loadingscreen.cpp	/^static void		*menuHandle = NULL;$/;"	v	file:
menuHandle	src/libs/racescreens/pitmenu.cpp	/^static void		*menuHandle = NULL;$/;"	v	file:
menuScreen	export/include/raceman.h	/^    void		*menuScreen;$/;"	m	struct:__anon209
menuScreen	src/interfaces/raceman.h	/^    void		*menuScreen;$/;"	m	struct:__anon168
mergeObject	src/tools/accc/ac3dload.cpp	/^ob_t * mergeObject (ob_t *ob1,ob_t * ob2, char * nameS)$/;"	f
mergeSplitted	src/tools/accc/ac3dload.cpp	/^int mergeSplitted (ob_t **object)$/;"	f
message	src/libs/learning/string_utils.cpp	/^void message(const char* msg, ...)$/;"	f
metal_skid	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap metal_skid;$/;"	m	class:SoundInterface
metal_skid_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* metal_skid_sound; \/\/\/< metal skidding on metal $/;"	m	class:SoundInterface
mf	src/windows/include/plib/sl.h	/^  MODfile *mf ;$/;"	m	class:slMODPlayer
mfB	src/modules/simu/simuv2/wheel.h	/^    tdble	mfB;		\/* Magic Formula B coeff *\/$/;"	m	struct:__anon21
mfC	src/modules/simu/simuv2/wheel.h	/^    tdble	mfC;		\/* Magic Formula C coeff *\/$/;"	m	struct:__anon21
mfE	src/modules/simu/simuv2/wheel.h	/^    tdble	mfE;		\/* Magic Formula E coeff *\/$/;"	m	struct:__anon21
mh	src/modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
mid	src/drivers/olethros/TrackData.h	/^    Point mid;$/;"	m	class:TrackData
min	export/include/3D/Basic.h	/^inline Scalar min(Scalar x, Scalar y) { return x > y ? y : x; }$/;"	f
min	export/include/controlconfig.h	/^    float	min;$/;"	m	struct:__anon205
min	export/include/js.h	/^  float min       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
min	export/include/track.h	/^    t3Dd		min;$/;"	m	struct:__anon186
min	src/drivers/human/pref.h	/^    float	min;		\/* min value for analog control *\/$/;"	m	struct:__anon144
min	src/interfaces/js.h	/^  float min       [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
min	src/interfaces/track.h	/^    t3Dd		min;$/;"	m	struct:__anon153
min	src/libs/confscreens/controlconfig.h	/^    float	min;$/;"	m	struct:__anon44
min	src/libs/tgf/params.cpp	/^    tdble				min;$/;"	m	struct:param	file:
min	src/libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon64
min	src/modules/graphic/ssggraph/grloadsgi.h	/^		int            min ;$/;"	m	class:ssgSGIHeader
min	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar min(Scalar x, Scalar y) { return x > y ? y : x; }$/;"	f
min	src/tools/trackgen/easymesh.cpp	43;"	d	file:
min	src/windows/include/plib/sg.h	/^  sgVec3 min ;$/;"	m	class:sgBox
min	src/windows/include/plib/sg.h	/^  sgdVec3 min ;$/;"	m	class:sgdBox
minAngle	src/modules/graphic/ssggraph/grcar.h	/^    tdble		minAngle, maxAngle;$/;"	m	struct:__anon4
minBytesPerChar	src/libs/txml/xmltok.h	/^  int minBytesPerChar;$/;"	m	struct:encoding
minName	export/include/controlconfig.h	/^    char	*minName;$/;"	m	struct:__anon205
minName	src/drivers/human/pref.h	/^    char	*minName;	\/* Name of the min attribute *\/$/;"	m	struct:__anon144
minName	src/libs/confscreens/controlconfig.h	/^    char	*minName;$/;"	m	struct:__anon44
minVal	src/drivers/human/pref.h	/^    float	minVal;		\/* another min value for analog control*\/$/;"	m	struct:__anon144
minValue	src/modules/graphic/ssggraph/grcar.h	/^    tdble		minValue, maxValue;$/;"	m	struct:__anon4
min_el_state	export/include/learning/policy.h	/^	int min_el_state; \/\/\/< min state ID to search for eligibility \\deprecated$/;"	m	class:DiscretePolicy
min_el_state	src/libs/learning/policy.h	/^	int min_el_state; \/\/\/< min state ID to search for eligibility \\deprecated$/;"	m	class:DiscretePolicy
mincorner	src/drivers/berniw/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon119
mincorner	src/drivers/berniw2/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon94
mincorner	src/drivers/berniw3/pathfinder.h	/^	double mincorner;		\/* corner nearest to my car *\/$/;"	m	struct:__anon110
mincorner	src/drivers/inferno/pathfinder.h	/^	double mincorner;		\/\/ corner nearest to my car.$/;"	m	struct:__anon136
mincorner	src/drivers/lliaw/pathfinder.h	/^	double mincorner;		\/\/ corner nearest to my car.$/;"	m	struct:__anon129
mincorner	src/drivers/tita/pathfinder.h	/^	double mincorner;		\/\/ corner nearest to my car.$/;"	m	struct:__anon102
minorthdist	src/drivers/berniw/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon119
minorthdist	src/drivers/berniw2/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon94
minorthdist	src/drivers/berniw3/pathfinder.h	/^	double minorthdist;		\/* minimal distance relative to my car *\/$/;"	m	struct:__anon110
minorthdist	src/drivers/inferno/pathfinder.h	/^	double minorthdist;		\/\/ minimal distance relative to my car.$/;"	m	struct:__anon136
minorthdist	src/drivers/lliaw/pathfinder.h	/^	double minorthdist;		\/\/ minimal distance relative to my car.$/;"	m	struct:__anon129
minorthdist	src/drivers/tita/pathfinder.h	/^	double minorthdist;		\/\/ minimal distance relative to my car.$/;"	m	struct:__anon102
minute	src/windows/include/png.h	/^   png_byte minute;  \/* minute of hour, 0 - 59 *\/$/;"	m	struct:png_time_struct
mipmap	src/windows/include/plib/ssg.h	/^	int wrapu, wrapv, mipmap ;$/;"	m	class:ssgTexture
mipmap	src/windows/include/plib/ssg.h	/^  int    mipmap;$/;"	m	class:ssgSimpleState
mirrorAllowed	src/modules/graphic/ssggraph/grcam.h	/^    int			mirrorAllowed;	\/* flag to allox the display of mirror *\/$/;"	m	class:cGrCamera
mirrorCam	src/modules/graphic/ssggraph/grscreen.h	/^		class cGrCarCamMirror *mirrorCam;		\/\/ The mirror camera.$/;"	m	class:cGrScreen	typeref:class:cGrScreen::cGrCarCamMirror
mirrorFlag	src/modules/graphic/ssggraph/grscreen.h	/^		int mirrorFlag;$/;"	m	class:cGrScreen
mixer	src/windows/include/plib/sl.h	/^  Uchar *mixer ;$/;"	m	class:slScheduler
mixer_buffer	src/windows/include/plib/sl.h	/^  Uchar *mixer_buffer  ;$/;"	m	class:slScheduler
mixer_buffer_size	src/windows/include/plib/sl.h	/^  int mixer_buffer_size, mixer_gain ;$/;"	m	class:slScheduler
mixer_gain	src/windows/include/plib/sl.h	/^  int mixer_buffer_size, mixer_gain ;$/;"	m	class:slScheduler
mixer_inputs	src/windows/include/plib/sl.h	/^  Uchar *mixer_inputs [ SL_MAX_MIXERINPUTS + 1 ] ;$/;"	m	class:slScheduler
mkdir	src/libs/tgf/tgf.cpp	334;"	d	file:
mlist	src/modules/graphic/ssggraph/grloadac.cpp	/^static _ssgMaterial   *mlist    [ MAX_MATERIALS ] ;$/;"	v	file:
mmt	src/windows/include/plib/sl.h	/^   MMTIME         mmt;	         \/\/ timing $/;"	m	class:slDSP
mmx_bitdepth_threshold	src/windows/include/png.h	/^   png_byte     mmx_bitdepth_threshold;$/;"	m	struct:png_struct_def
mmx_rowbytes_threshold	src/windows/include/png.h	/^   png_uint_32  mmx_rowbytes_threshold;$/;"	m	struct:png_struct_def
mng_features_permitted	src/windows/include/png.h	/^   png_uint_32 mng_features_permitted;$/;"	m	struct:png_struct_def
modFreeInfoList	export/include/os.h	/^    tfModFreeInfoList		modFreeInfoList;$/;"	m	struct:__anon171
modFreeInfoList	src/libs/tgf/os.h	/^    tfModFreeInfoList		modFreeInfoList;$/;"	m	struct:__anon45
modInfo	export/include/os.h	/^    tfModGetInfo		modInfo;$/;"	m	struct:__anon171
modInfo	export/include/tgf.h	/^    tModInfo		modInfo[MAX_MOD_ITF];	\/**< module info list for this dll *\/$/;"	m	struct:ModList
modInfo	src/libs/tgf/os.h	/^    tfModGetInfo		modInfo;$/;"	m	struct:__anon45
modInfo	src/libs/tgf/tgf.h	/^    tModInfo		modInfo[MAX_MOD_ITF];	\/**< module info list for this dll *\/$/;"	m	struct:ModList
modInfoDir	export/include/os.h	/^    tfModGetInfoDir		modInfoDir;$/;"	m	struct:__anon171
modInfoDir	src/libs/tgf/os.h	/^    tfModGetInfoDir		modInfoDir;$/;"	m	struct:__anon45
modList	export/include/raceman.h	/^    tModList		**modList;	\/**< drivers loaded *\/$/;"	m	struct:RmInfo
modList	src/interfaces/raceman.h	/^    tModList		**modList;	\/**< drivers loaded *\/$/;"	m	struct:RmInfo
modLoad	export/include/os.h	/^    tfModLoad			modLoad;$/;"	m	struct:__anon171
modLoad	src/libs/tgf/os.h	/^    tfModLoad			modLoad;$/;"	m	struct:__anon45
modLoadDir	export/include/os.h	/^    tfModLoadDir		modLoadDir;$/;"	m	struct:__anon171
modLoadDir	src/libs/tgf/os.h	/^    tfModLoadDir		modLoadDir;$/;"	m	struct:__anon45
modName	export/include/car.h	/^    char	modName[MAX_NAME_LEN];	\/**< dll name *\/$/;"	m	struct:__anon201
modName	src/interfaces/car.h	/^    char	modName[MAX_NAME_LEN];	\/**< dll name *\/$/;"	m	struct:__anon161
modName	src/libs/raceengineclient/raceresults.cpp	/^	char	*modName;$/;"	m	struct:__anon85	file:
modUnloadList	export/include/os.h	/^    tfModUnloadList		modUnloadList;$/;"	m	struct:__anon171
modUnloadList	src/libs/tgf/os.h	/^    tfModUnloadList		modUnloadList;$/;"	m	struct:__anon45
mod_time	src/windows/include/png.h	/^   png_time mod_time;$/;"	m	struct:png_info_struct
mode	src/modules/simu/simuv2/transmission.h	/^    int		mode;$/;"	m	struct:__anon27
mode	src/windows/include/plib/ssg.h	/^  int   mode ;  \/* STOP_AT_END or REPEAT *\/$/;"	m	class:ssgTweenController
mode	src/windows/include/plib/ssg.h	/^  ssgAnimDirection mode    ;$/;"	m	class:ssgTimedSelector
mode	src/windows/include/png.h	/^   png_uint_32 mode;          \/* tells us where we are in the PNG file *\/$/;"	m	struct:png_struct_def
model_dir	src/windows/include/plib/ssg.h	/^  char* model_dir ;$/;"	m	class:ssgLoaderOptions
modifier	src/libs/tgfclient/gui.h	/^    int			modifier;$/;"	m	struct:GfuiKey
modlist	src/tools/trackgen/maintrackgen.cpp	/^tModList	*modlist = NULL;$/;"	v
monitored	src/modules/graphic/ssggraph/grcar.h	/^    tdble		*monitored;$/;"	m	struct:__anon4
month	src/windows/include/png.h	/^   png_byte month;   \/* month of year, 1 - 12 *\/$/;"	m	struct:png_time_struct
mouse	src/libs/tgfclient/gui.h	/^    int			mouse;$/;"	m	struct:__anon68
mouseAllowed	src/libs/tgfclient/gui.h	/^    int			mouseAllowed;$/;"	m	struct:__anon68
mouseBehaviour	src/libs/tgfclient/gui.h	/^    int			mouseBehaviour;$/;"	m	struct:__anon61
mouseBehaviour	src/libs/tgfclient/gui.h	/^    int			mouseBehaviour;$/;"	m	struct:__anon62
mouseColor	src/libs/tgfclient/gui.h	/^    float		*mouseColor[2];$/;"	m	struct:__anon68
mouseInfo	src/drivers/human/human.cpp	/^static tCtrlMouseInfo	*mouseInfo = NULL;$/;"	v	file:
mouseInfo	src/libs/confscreens/controlconfig.cpp	/^static tCtrlMouseInfo	mouseInfo;$/;"	v	file:
mouseInfo	src/libs/confscreens/mouseconfig.cpp	/^static tCtrlMouseInfo	mouseInfo;$/;"	v	file:
move	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^inline void move() { if (caching && currentObject) currentObject->move(); }$/;"	f
move	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^void Endpoint::move(Scalar x) {$/;"	f	class:Endpoint
move	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^void Object::move() {$/;"	f	class:Object
movieCapture	export/include/raceman.h	/^    tRmMovieCapture	movieCapture;$/;"	m	struct:RmInfo
movieCapture	src/interfaces/raceman.h	/^    tRmMovieCapture	movieCapture;$/;"	m	struct:RmInfo
msg	export/include/car.h	/^    char	msg[4][32];     \/**< 4 lines of 31 characters 0-1 from car 2-3 from race engine *\/$/;"	m	struct:__anon202
msg	src/interfaces/car.h	/^    char	msg[4][32];     \/**< 4 lines of 31 characters 0-1 from car 2-3 from race engine *\/$/;"	m	struct:__anon162
msg	src/windows/include/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
msgColor	export/include/car.h	/^    float	msgColor[4]; \/**< RGBA of text *\/$/;"	m	struct:__anon202
msgColor	src/interfaces/car.h	/^    float	msgColor[4]; \/**< RGBA of text *\/$/;"	m	struct:__anon162
msgDisp	src/libs/raceengineclient/raceengine.cpp	/^static double	msgDisp;$/;"	v	file:
msgbuf	src/libs/learning/string_utils.cpp	/^static char msgbuf[10000];$/;"	v	file:
msgport	src/libs/learning/string_utils.cpp	/^static FILE* msgport = stderr;$/;"	v	file:
mst	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgSimpleState *mst = NULL;$/;"	v
mstf0	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgSimpleState *mstf0 = NULL;$/;"	v
mstf1	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgSimpleState *mstf1 = NULL;$/;"	v
mu	src/drivers/olethros/learn.h	/^	float mu; \/\/\/< friction constant$/;"	m	class:olethros::SegLearn
mu	src/modules/simu/simuv2/wheel.h	/^    tdble  	mu;$/;"	m	struct:__anon21
mult	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::mult(const Transform& t1, const Transform& t2) {$/;"	f	class:Transform
multInverseLeft	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::multInverseLeft(const Transform& t1, const Transform& t2) {$/;"	f	class:Transform
multMatrix	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void multMatrix(const double v[16]) { curr *= Transform(v); }$/;"	f	class:Object
multMatrix	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void multMatrix(const float v[16]) { curr *= Transform(v); }$/;"	f	class:Object
multTransposeLeft	export/include/3D/Matrix.h	/^inline Matrix multTransposeLeft(const Matrix& m1, const Matrix& m2) {$/;"	f
multTransposeLeft	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix multTransposeLeft(const Matrix& m1, const Matrix& m2) {$/;"	f
music	src/windows/include/plib/sl.h	/^  slPlayer *music ;$/;"	m	class:slScheduler
mw	src/modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
mx	src/modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
my	src/modules/graphic/ssggraph/grcam.h	/^    int		mx, my, mw, mh;		\/* drawing area *\/$/;"	m	class:cGrCarCamMirror
myLoaderOptions	src/modules/graphic/ssggraph/grboard.cpp	/^class myLoaderOptions : public ssgLoaderOptions$/;"	c	file:
myLoaderOptions	src/modules/graphic/ssggraph/grcar.cpp	/^class myLoaderOptions : public ssgLoaderOptions$/;"	c	file:
myLoaderOptions	src/tools/trackgen/objects.cpp	/^class myLoaderOptions : public ssgLoaderOptions$/;"	c	file:
myStrcmp	src/libs/tgf/params.cpp	/^myStrcmp(const void *s1, const void * s2)$/;"	f	file:
myTrackDesc	src/drivers/berniw/berniw.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	src/drivers/berniw2/berniw2.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	src/drivers/berniw3/berniw3.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	src/drivers/inferno/inferno.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	src/drivers/lliaw/lliaw.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
myTrackDesc	src/drivers/tita/tita.cpp	/^static TrackDesc* myTrackDesc = NULL;$/;"	v	file:
my_pitch	src/drivers/olethros/driver.h	/^	float my_pitch;$/;"	m	class:olethros::Driver
mycar	src/drivers/berniw/berniw.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	src/drivers/berniw2/berniw2.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	src/drivers/berniw3/berniw3.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	src/drivers/inferno/inferno.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	src/drivers/lliaw/lliaw.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycar	src/drivers/tita/tita.cpp	/^static MyCar* mycar[BOTS] = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };$/;"	v	file:
mycardata	src/drivers/bt/driver.h	/^		SingleCardata *mycardata;		\/\/ Pointer to "global" data about my car.$/;"	m	class:Driver
mycardata	src/drivers/damned/driver.h	/^		SingleCardata *mycardata;		\/\/ Pointer to "global" data about my car.$/;"	m	class:Driver
mycardata	src/drivers/olethros/driver.h	/^	SingleCardata *mycardata;		\/\/\/< Pointer to "global" data about my car.$/;"	m	class:olethros::Driver
myoffset	src/drivers/bt/driver.h	/^		float myoffset;			\/\/ Offset to the track middle.$/;"	m	class:Driver
myoffset	src/drivers/damned/driver.h	/^		float myoffset;			\/\/ Offset to the track middle.$/;"	m	class:Driver
myoffset	src/drivers/olethros/driver.h	/^	float myoffset;			\/\/\/< Offset to the track middle.$/;"	m	class:olethros::Driver
myoffset	src/drivers/sparkle/driver.h	/^		float myoffset;			\/* offset to the track middle *\/$/;"	m	class:Driver
mypit	src/drivers/bt/pit.h	/^		tTrackOwnPit *mypit;			\/\/ Pointer to my pit.$/;"	m	class:Pit
mypit	src/drivers/damned/pit.h	/^		tTrackOwnPit *mypit;			\/\/ Pointer to my pit.$/;"	m	class:Pit
mypit	src/drivers/olethros/pit.h	/^		tTrackOwnPit *mypit;			\/\/ Pointer to my pit.$/;"	m	class:olethros::Pit
mypit	src/drivers/sparkle/pit.h	/^		tTrackOwnPit *mypit;    \/* pointer to my pit *\/$/;"	m	class:Pit
myssgFlatten	src/modules/graphic/ssggraph/grloadac.cpp	/^void myssgFlatten(ssgEntity *obj)$/;"	f
myssgLoadAC	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgEntity *myssgLoadAC ( const char *fname, const ssgLoaderOptions* options )$/;"	f	file:
myssgSaveAC	src/tools/texmapper/ssgSaveAC.cpp	/^int myssgSaveAC ( const char *filename, ssgEntity *ent, const char *skinfilename )$/;"	f
n	export/include/learning/List.h	/^	int n; \/\/\/< number of items$/;"	m	struct:List
n	src/drivers/olethros/geometry.h	/^	int n;$/;"	m	class:Vector
n	src/libs/learning/List.h	/^	int n; \/\/\/< number of items$/;"	m	struct:List
n0	src/tools/trackgen/easymesh.h	/^    int n0, n1;$/;"	m	struct:seg
n0	src/windows/include/plib/ssgaLensFlare.h	/^  ssgNormalArray   *n0 ;$/;"	m	class:ssgaLensFlare
n1	src/tools/trackgen/easymesh.h	/^    int n0, n1;$/;"	m	struct:seg
nDefaultAtts	src/libs/txml/xmlparse.c	/^  int nDefaultAtts;$/;"	m	struct:__anon80	file:
nFrame	src/modules/graphic/ssggraph/grmain.cpp	/^static int nFrame;$/;"	v	file:
nMaxPits	export/include/track.h	/^	int nMaxPits;	\/**< number max of pits *\/$/;"	m	struct:__anon183
nMaxPits	src/interfaces/track.h	/^	int nMaxPits;	\/**< number max of pits *\/$/;"	m	struct:__anon150
nPathSeg	src/drivers/berniw/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	src/drivers/berniw2/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	src/drivers/berniw3/pathfinder.h	/^		int nPathSeg;			\/* # of PathSeg's *\/$/;"	m	class:Pathfinder
nPathSeg	src/drivers/inferno/pathfinder.h	/^		int nPathSeg;			\/\/ # of PathSeg's.$/;"	m	class:Pathfinder
nPathSeg	src/drivers/lliaw/pathfinder.h	/^		int nPathSeg;			\/\/ # of PathSeg's.$/;"	m	class:Pathfinder
nPathSeg	src/drivers/tita/pathfinder.h	/^		int nPathSeg;			\/\/ # of PathSeg's.$/;"	m	class:Pathfinder
nPitEntryStart	src/drivers/berniw/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	src/drivers/berniw2/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	src/drivers/berniw3/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	src/drivers/inferno/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	src/drivers/lliaw/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitEntryStart	src/drivers/tita/trackdesc.h	/^		int nPitEntryStart;$/;"	m	class:TrackDesc
nPitExitEnd	src/drivers/berniw/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	src/drivers/berniw2/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	src/drivers/berniw3/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	src/drivers/inferno/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	src/drivers/lliaw/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitExitEnd	src/drivers/tita/trackdesc.h	/^		int nPitExitEnd;$/;"	m	class:TrackDesc
nPitSeg	export/include/track.h	/^	int nPitSeg;	\/**< actual number of pits *\/$/;"	m	struct:__anon183
nPitSeg	src/interfaces/track.h	/^	int nPitSeg;	\/**< actual number of pits *\/$/;"	m	struct:__anon150
nTrackSegments	src/drivers/berniw/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	src/drivers/berniw2/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	src/drivers/berniw3/trackdesc.h	/^		int nTrackSegments;		\/* # of track segments *\/$/;"	m	class:TrackDesc
nTrackSegments	src/drivers/inferno/trackdesc.h	/^		int nTrackSegments;		\/\/ # of track segments$/;"	m	class:TrackDesc
nTrackSegments	src/drivers/lliaw/trackdesc.h	/^		int nTrackSegments;		\/\/ # of track segments$/;"	m	class:TrackDesc
nTrackSegments	src/drivers/tita/trackdesc.h	/^		int nTrackSegments;		\/\/ # of track segments$/;"	m	class:TrackDesc
n_actions	export/include/learning/policy.h	/^	int n_actions; \/\/\/< number of actions$/;"	m	class:DiscretePolicy
n_actions	src/libs/learning/policy.h	/^	int n_actions; \/\/\/< number of actions$/;"	m	class:DiscretePolicy
n_channels	src/modules/graphic/ssggraph/SoundInterface.h	/^	int n_channels; \/\/\/< number of channels$/;"	m	class:SoundInterface
n_engine_sounds	src/modules/graphic/ssggraph/SoundInterface.h	/^	int n_engine_sounds; \/\/\/< number of simultaneous engines$/;"	m	class:SoundInterface
n_index	src/windows/include/plib/ssg.h	/^  sgVec3 *normals   ; int num_normals   ; unsigned short *n_index ;$/;"	m	class:ssgVTable
n_inputs	export/include/learning/ANN.h	/^	int n_inputs; \/\/\/< number of inputs$/;"	m	struct:ANN_
n_inputs	export/include/learning/ANN.h	/^	int n_inputs; \/\/\/< number of inputs$/;"	m	struct:Layer_
n_inputs	src/libs/learning/ANN.h	/^	int n_inputs; \/\/\/< number of inputs$/;"	m	struct:ANN_
n_inputs	src/libs/learning/ANN.h	/^	int n_inputs; \/\/\/< number of inputs$/;"	m	struct:Layer_
n_outcomes	export/include/learning/Distribution.h	/^	int n_outcomes; \/\/\/< number of possible outcomes$/;"	m	class:DiscreteDistribution
n_outcomes	src/libs/learning/Distribution.h	/^	int n_outcomes; \/\/\/< number of possible outcomes$/;"	m	class:DiscreteDistribution
n_outputs	export/include/learning/ANN.h	/^	int n_outputs; \/\/\/< number of outputs$/;"	m	struct:ANN_
n_outputs	export/include/learning/ANN.h	/^	int n_outputs; \/\/\/< number of outputs$/;"	m	struct:Layer_
n_outputs	src/libs/learning/ANN.h	/^	int n_outputs; \/\/\/< number of outputs$/;"	m	struct:ANN_
n_outputs	src/libs/learning/ANN.h	/^	int n_outputs; \/\/\/< number of outputs$/;"	m	struct:Layer_
n_quantums	src/drivers/olethros/learn.h	/^	int n_quantums; \/\/\/< number of quantums the track is split for learning$/;"	m	class:olethros::SegLearn
n_samples	export/include/learning/policy.h	/^	int n_samples; \/\/\/< number of samples for above expected r and V$/;"	m	class:DiscretePolicy
n_samples	src/libs/learning/policy.h	/^	int n_samples; \/\/\/< number of samples for above expected r and V$/;"	m	class:DiscretePolicy
n_seg	src/drivers/olethros/learn.h	/^	int n_seg; \/\/\/< total number of track segments$/;"	m	class:olethros::SegLearn
n_states	export/include/learning/policy.h	/^	int n_states; \/\/\/< number of states$/;"	m	class:DiscretePolicy
n_states	src/libs/learning/policy.h	/^	int n_states; \/\/\/< number of states$/;"	m	class:DiscretePolicy
n_static_sources_in_use	src/modules/graphic/ssggraph/SoundInterface.h	/^	int n_static_sources_in_use;$/;"	m	class:OpenalSoundInterface
name	export/include/car.h	/^    char	name[MAX_NAME_LEN];	\/**< Driver's name *\/$/;"	m	struct:__anon197
name	export/include/controlconfig.h	/^    char	*name;$/;"	m	struct:__anon205
name	export/include/js.h	/^   char name [ NAME_LENGTH ] ;$/;"	m	class:jsJoystick
name	export/include/raceman.h	/^    char		*name;$/;"	m	struct:__anon209
name	export/include/tgf.h	/^    char		*name;		\/**< File name *\/$/;"	m	struct:FList
name	export/include/tgf.h	/^    char		*name;		\/**< name of the module (short) (NULL if no module) *\/$/;"	m	struct:ModInfo
name	export/include/tgf.h	/^  char name[256];$/;"	m	class:ProfileInstance
name	export/include/track.h	/^    char		*name;$/;"	m	struct:RoadCam
name	export/include/track.h	/^    char	  *name;	\/**< Name of the track *\/$/;"	m	struct:__anon186
name	export/include/track.h	/^    char *name;			\/**< Segment name *\/$/;"	m	struct:trackSeg
name	export/include/xml.h	/^    char		*name;		\/* element name *\/$/;"	m	struct:xmlElement
name	export/include/xml.h	/^    char		*name;$/;"	m	struct:xmlAttribute
name	src/drivers/human/pref.h	/^    char	*name;		\/* Name of the control *\/$/;"	m	struct:__anon144
name	src/interfaces/car.h	/^    char	name[MAX_NAME_LEN];	\/**< Driver's name *\/$/;"	m	struct:__anon157
name	src/interfaces/js.h	/^   char name [ NAME_LENGTH ] ;$/;"	m	class:jsJoystick
name	src/interfaces/raceman.h	/^    char		*name;$/;"	m	struct:__anon168
name	src/interfaces/track.h	/^    char		*name;$/;"	m	struct:RoadCam
name	src/interfaces/track.h	/^    char	  *name;	\/**< Name of the track *\/$/;"	m	struct:__anon153
name	src/interfaces/track.h	/^    char *name;			\/**< Segment name *\/$/;"	m	struct:trackSeg
name	src/libs/confscreens/controlconfig.h	/^    char	*name;$/;"	m	struct:__anon44
name	src/libs/confscreens/driverconfig.cpp	/^    char	*name;$/;"	m	struct:tInfo	file:
name	src/libs/racescreens/driverselect.cpp	/^    char	*name;$/;"	m	struct:DrvElt	file:
name	src/libs/tgf/params.cpp	/^    char				*name;		\/**< Name of the data *\/$/;"	m	struct:parmHeader	file:
name	src/libs/tgf/params.cpp	/^    char				*name;		\/**< Name of the parameter  *\/$/;"	m	struct:param	file:
name	src/libs/tgf/tgf.h	/^    char		*name;		\/**< File name *\/$/;"	m	struct:FList
name	src/libs/tgf/tgf.h	/^    char		*name;		\/**< name of the module (short) (NULL if no module) *\/$/;"	m	struct:ModInfo
name	src/libs/tgf/tgf.h	/^  char name[256];$/;"	m	class:ProfileInstance
name	src/libs/tgfclient/gui.h	/^    char			*name;$/;"	m	struct:GfuiListElement
name	src/libs/tgfclient/gui.h	/^    char		*name;$/;"	m	struct:GfuiKey
name	src/libs/txml/gennmtab.c	/^struct range name[] = {$/;"	v	typeref:struct:range
name	src/libs/txml/gennmtab/gennmtab.c	/^struct range name[] = {$/;"	v	typeref:struct:range
name	src/libs/txml/hashtable.h	/^  KEY name;$/;"	m	struct:__anon72
name	src/libs/txml/xml.h	/^    char		*name;		\/* element name *\/$/;"	m	struct:xmlElement
name	src/libs/txml/xml.h	/^    char		*name;$/;"	m	struct:xmlAttribute
name	src/libs/txml/xmlparse.c	/^  XML_Char *name;$/;"	m	struct:__anon78	file:
name	src/libs/txml/xmlparse.c	/^  const XML_Char *name;$/;"	m	struct:__anon76	file:
name	src/libs/txml/xmlparse.c	/^  const XML_Char *name;$/;"	m	struct:__anon80	file:
name	src/libs/txml/xmlparse.c	/^  const XML_Char *name;$/;"	m	struct:tag	file:
name	src/libs/txml/xmltok.h	/^  const char *name;$/;"	m	struct:__anon69
name	src/modules/graphic/ssggraph/grscene.h	/^  char * name;                 \/* segment name *\/$/;"	m	struct:DistanceOfViewHashing
name	src/modules/graphic/ssggraph/grscene.h	/^  char * name;$/;"	m	struct:hashMapElement
name	src/modules/graphic/ssggraph/grutil.cpp	/^    char		*name;$/;"	m	struct:stlist	file:
name	src/modules/telemetry/telemetry.cpp	/^    const char		*name;	\/* channel name *\/$/;"	m	struct:Channel	file:
name	src/tools/accc/accc.h	/^  char * name ;$/;"	m	struct:ob
name	src/tools/accc/accc.h	/^  char * name;$/;"	m	struct:mat
name	src/tools/accc/accc.h	/^  char * name;$/;"	m	struct:ob_groups
name	src/tools/trackgen/track.cpp	/^    char		*name;$/;"	m	struct:dispElt	file:
name	src/tools/trackgen/track.cpp	/^    char		*name;$/;"	m	struct:texElt	file:
name	src/windows/include/plib/ssg.h	/^  char    *name ;$/;"	m	class:ssgBase
name	src/windows/include/png.h	/^    png_byte name[5];$/;"	m	struct:png_unknown_chunk_t
name	src/windows/include/png.h	/^   png_charp name;           \/* palette name *\/$/;"	m	struct:png_sPLT_struct
nameLength	src/libs/txml/xmltok.h	/^  int (*nameLength)(const ENCODING *, const char *);$/;"	m	struct:encoding
nameLength	src/libs/txml/xmltok_impl.c	/^int PREFIX(nameLength)(const ENCODING *enc, const char *ptr)$/;"	f	file:
nameMatchesAscii	src/libs/txml/xmltok.h	/^  int (*nameMatchesAscii)(const ENCODING *,$/;"	m	struct:encoding
nameMatchesAscii	src/libs/txml/xmltok_impl.c	/^int PREFIX(nameMatchesAscii)(const ENCODING *enc, const char *ptr1, const char *ptr2)$/;"	f	file:
nameOrPath	src/windows/include/plib/ssg.h	/^  char       *nameOrPath ;$/;"	m	struct:ssgEntityBinding
namePages	src/libs/txml/nametab.h	/^static const unsigned char namePages[] = {$/;"	v
namebump	src/tools/trackgen/track.cpp	/^    char		*namebump;$/;"	m	struct:texElt	file:
names	src/drivers/human/human.cpp	/^static char names[10][MAXNAMELEN];$/;"	v	file:
namingBitmap	src/libs/txml/nametab.h	/^static const unsigned namingBitmap[] = {$/;"	v
nb	src/tools/trackgen/track.cpp	/^    int			nb;$/;"	m	struct:dispElt	file:
nb	src/tools/trackgen/track.cpp	/^    int		nb;$/;"	m	struct:group	file:
nbCmdControl	src/drivers/human/pref.cpp	/^const int nbCmdControl = sizeof(CmdControlRef) \/ sizeof(CmdControlRef[0]);$/;"	v
nbControl	src/drivers/human/pref.cpp	/^static const int nbControl = sizeof(controlList) \/ sizeof(controlList[0]);$/;"	v	file:
nbDepth	src/libs/tgfclient/screen.cpp	/^static const int nbDepth = sizeof(Depthlist) \/ sizeof(Depthlist[0]);$/;"	v	file:
nbElem	src/libs/tgf/hash.cpp	/^    int		nbElem;$/;"	m	struct:HashHeader	file:
nbElts	src/libs/tgfclient/gui.h	/^    int			nbElts;$/;"	m	struct:__anon63
nbItems	src/libs/tgfclient/gui.h	/^    int			nbItems;$/;"	m	struct:__anon68
nbLevels	src/libs/confscreens/driverconfig.cpp	/^static const int nbLevels = sizeof(level_str) \/ sizeof(level_str[0]);$/;"	v	file:
nbMarks	export/include/track.h	/^    int		nbMarks;	\/**< turn marks *\/$/;"	m	struct:SegExt
nbMarks	src/interfaces/track.h	/^    int		nbMarks;	\/**< turn marks *\/$/;"	m	struct:SegExt
nbMaxSelectedDrivers	src/libs/racescreens/driverselect.cpp	/^static int		nbMaxSelectedDrivers;$/;"	v	file:
nbMode	src/libs/tgfclient/screen.cpp	/^static const int nbMode = sizeof(Mode) \/ sizeof(Mode[0]);$/;"	v	file:
nbOptions	src/libs/confscreens/soundconfig.cpp	/^static const int nbOptions = sizeof(soundOptionList) \/ sizeof(soundOptionList[0]);$/;"	v	file:
nbOptionsTextComp	src/libs/confscreens/openglconfig.cpp	/^static const int nbOptionsTextComp = sizeof(textureCompressOptionList) \/ sizeof(textureCompressOptionList[0]);$/;"	v	file:
nbOptionsTextSize	src/libs/confscreens/openglconfig.cpp	/^static int nbOptionsTextSize = sizeof(textureSizeOptionList) \/ sizeof(textureSizeOptionList[0]);$/;"	v	file:
nbPitStops	export/include/car.h	/^    int			nbPitStops;$/;"	m	struct:__anon198
nbPitStops	src/interfaces/car.h	/^    int			nbPitStops;$/;"	m	struct:__anon158
nbPlayers	export/include/raceman.h	/^    int			nbPlayers;	\/**< number of human player in local (splitted screen) *\/$/;"	m	struct:Situation
nbPlayers	src/interfaces/raceman.h	/^    int			nbPlayers;	\/**< number of human player in local (splitted screen) *\/$/;"	m	struct:Situation
nbPts	src/modules/simu/simuv2/engine.h	/^    int			nbPts;$/;"	m	struct:__anon11
nbRes	src/libs/tgfclient/screen.cpp	/^static const int nbRes = sizeof(Res) \/ sizeof(Res[0]);$/;"	v	file:
nbRes	src/libs/tgfclient/screen.cpp	/^static int nbRes = 0;$/;"	v	file:
nbSelectedDrivers	src/libs/racescreens/driverselect.cpp	/^static int		nbSelectedDrivers;$/;"	v	file:
nbVInit	src/libs/tgfclient/screen.cpp	/^static const int nbVInit = sizeof(VInit) \/ sizeof(VInit[0]);$/;"	v	file:
nbVersions	src/libs/confscreens/simuconfig.cpp	/^static const int nbVersions = sizeof(simuVersionList) \/ sizeof(simuVersionList[0]);$/;"	v	file:
nbVisible	src/libs/tgfclient/gui.h	/^    int			nbVisible;$/;"	m	struct:__anon63
nbpitstops	src/libs/confscreens/driverconfig.cpp	/^    int		nbpitstops;$/;"	m	struct:PlayerInfo	file:
nbsources	src/modules/graphic/ssggraph/SoundInterface.h	/^		int nbsources;$/;"	m	class:SharedSourcePool
nbsurf	src/tools/trackgen/easymesh.cpp	/^    int		nbsurf;$/;"	m	struct:group	file:
nbvtx	src/tools/trackgen/easymesh.cpp	/^    int		nbvtx;$/;"	m	struct:group	file:
ncars	export/include/raceman.h	/^    int			ncars;		\/**< number of cars *\/$/;"	m	struct:__anon206
ncars	src/drivers/bt/cardata.h	/^		int ncars;				\/\/ # of elements in data.$/;"	m	class:Cardata
ncars	src/drivers/damned/cardata.h	/^		int ncars;				\/\/ # of elements in data.$/;"	m	class:Cardata
ncars	src/drivers/olethros/cardata.h	/^	int ncars;				\/\/ # of elements in data.$/;"	m	class:olethros::Cardata
ncars	src/interfaces/raceman.h	/^    int			ncars;		\/**< number of cars *\/$/;"	m	struct:__anon165
needPitstop	src/drivers/bt/strategy.cpp	/^bool SimpleStrategy::needPitstop(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
needPitstop	src/drivers/damned/strategy.cpp	/^bool SimpleStrategy::needPitstop(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
needPitstop	src/drivers/olethros/strategy.cpp	/^bool ManagedStrategy::needPitstop(tCarElt* car, tSituation *s, Opponents* opponents)$/;"	f	class:olethros::ManagedStrategy
needPitstop	src/drivers/olethros/strategy.cpp	/^bool SimpleStrategy::needPitstop(tCarElt* car, tSituation *s, Opponents* opponents)$/;"	f	class:olethros::SimpleStrategy
needleList	src/modules/graphic/ssggraph/grcar.h	/^    GLuint		needleList;$/;"	m	struct:__anon4
needleXCenter	src/modules/graphic/ssggraph/grcar.h	/^    tdble		needleXCenter, needleYCenter;$/;"	m	struct:__anon4
needleYCenter	src/modules/graphic/ssggraph/grcar.h	/^    tdble		needleXCenter, needleYCenter;$/;"	m	struct:__anon4
neighbours	src/tools/trackgen/easymesh.cpp	/^void neighbours() $/;"	f
nentries	src/windows/include/png.h	/^   png_int_32 nentries;      \/* number of palette entries *\/$/;"	m	struct:png_sPLT_struct
newChannel	export/include/telemetry.h	/^    tftlmNewChannel		newChannel;		\/* Create a new channel *\/$/;"	m	struct:__anon215
newChannel	src/interfaces/telemetry.h	/^    tftlmNewChannel		newChannel;		\/* Create a new channel *\/$/;"	m	struct:__anon170
newRace	src/drivers/berniw/berniw.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	src/drivers/berniw2/berniw2.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	src/drivers/berniw3/berniw3.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	src/drivers/bt/bt.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	file:
newRace	src/drivers/bt/driver.cpp	/^void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:Driver
newRace	src/drivers/damned/damned.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	file:
newRace	src/drivers/damned/driver.cpp	/^void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:Driver
newRace	src/drivers/inferno/inferno.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	src/drivers/lliaw/lliaw.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newRace	src/drivers/olethros/driver.cpp	/^    void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:olethros::Driver
newRace	src/drivers/olethros/olethros.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	namespace:olethros
newRace	src/drivers/sparkle/driver.cpp	/^void Driver::newRace(tCarElt* car, tSituation *s)$/;"	f	class:Driver
newRace	src/drivers/sparkle/sparkle.cpp	/^static void newRace(int index, tCarElt* car, tSituation *s)$/;"	f	file:
newRace	src/drivers/tita/tita.cpp	/^static void newRace(int index, tCarElt* car, tSituation *situation)$/;"	f	file:
newTrackMenuHdle	src/libs/raceengineclient/racemanmenu.cpp	/^static void		*newTrackMenuHdle = NULL;$/;"	v	file:
new_lap	src/drivers/olethros/learn.h	/^	bool new_lap; \/\/\/< we made a new lap$/;"	m	class:olethros::SegLearn
new_node	src/tools/trackgen/easymesh.cpp	/^void new_node()$/;"	f
new_numb	src/tools/trackgen/easymesh.cpp	/^    int new_numb;         \/* used for renumeration *\/$/;"	m	struct:ele	file:
new_numb	src/tools/trackgen/easymesh.cpp	/^    int new_numb;         \/* used for renumeration *\/$/;"	m	struct:sid	file:
new_numb	src/tools/trackgen/easymesh.h	/^    int new_numb;         \/* used for renumeration *\/$/;"	m	struct:nod
newrace	src/drivers/human/human.cpp	/^void newrace(int index, tCarElt* car, tSituation *s)$/;"	f
newrace	src/drivers/inferno2/inferno2.cpp	/^void newrace(int index, tCarElt* car, tSituation *s)$/;"	f
next	export/include/car.h	/^    struct CarElt	*next;$/;"	m	struct:CarElt	typeref:struct:CarElt::CarElt
next	export/include/learning/List.h	/^	struct ListItem* next; \/\/\/< next item$/;"	m	struct:ListItem	typeref:struct:ListItem::ListItem
next	export/include/tgf.h	/^    struct FList	*next;		\/**< Next entry *\/$/;"	m	struct:FList	typeref:struct:FList::FList
next	export/include/tgf.h	/^    struct ModList	*next;			\/**< next module in list *\/$/;"	m	struct:ModList	typeref:struct:ModList::ModList
next	export/include/track.h	/^    struct RoadCam	*next;$/;"	m	struct:RoadCam	typeref:struct:RoadCam::RoadCam
next	export/include/track.h	/^    struct trackSeg *next;	\/**< Next segment *\/$/;"	m	struct:trackSeg	typeref:struct:trackSeg::trackSeg
next	export/include/track.h	/^    struct trackSurface *next;	\/**< Next surface in list *\/$/;"	m	struct:trackSurface	typeref:struct:trackSurface::trackSurface
next	export/include/xml.h	/^    struct xmlAttribute	*next;$/;"	m	struct:xmlAttribute	typeref:struct:xmlAttribute::xmlAttribute
next	export/include/xml.h	/^    struct xmlElement	*next;		\/* next element at the same level *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
next	src/interfaces/car.h	/^    struct CarElt	*next;$/;"	m	struct:CarElt	typeref:struct:CarElt::CarElt
next	src/interfaces/track.h	/^    struct RoadCam	*next;$/;"	m	struct:RoadCam	typeref:struct:RoadCam::RoadCam
next	src/interfaces/track.h	/^    struct trackSeg *next;	\/**< Next segment *\/$/;"	m	struct:trackSeg	typeref:struct:trackSeg::trackSeg
next	src/interfaces/track.h	/^    struct trackSurface *next;	\/**< Next surface in list *\/$/;"	m	struct:trackSurface	typeref:struct:trackSurface::trackSurface
next	src/libs/confscreens/driverconfig.cpp	/^    struct tCarInfo	*next;$/;"	m	struct:tCarInfo	typeref:struct:tCarInfo::tCarInfo	file:
next	src/libs/confscreens/driverconfig.cpp	/^    struct tCatInfo	*next;$/;"	m	struct:tCatInfo	typeref:struct:tCatInfo::tCatInfo	file:
next	src/libs/learning/List.h	/^	struct ListItem* next; \/\/\/< next item$/;"	m	struct:ListItem	typeref:struct:ListItem::ListItem
next	src/libs/tgf/tgf.h	/^    struct FList	*next;		\/**< Next entry *\/$/;"	m	struct:FList	typeref:struct:FList::FList
next	src/libs/tgf/tgf.h	/^    struct ModList	*next;			\/**< next module in list *\/$/;"	m	struct:ModList	typeref:struct:ModList::ModList
next	src/libs/tgfclient/gui.h	/^    struct GfuiKey	*next;$/;"	m	struct:GfuiKey	typeref:struct:GfuiKey::GfuiKey
next	src/libs/tgfclient/gui.h	/^    struct GfuiListElement	*next;$/;"	m	struct:GfuiListElement	typeref:struct:GfuiListElement::GfuiListElement
next	src/libs/tgfclient/gui.h	/^    struct GfuiObject	*next;$/;"	m	struct:GfuiObject	typeref:struct:GfuiObject::GfuiObject
next	src/libs/txml/xml.h	/^    struct xmlAttribute	*next;$/;"	m	struct:xmlAttribute	typeref:struct:xmlAttribute::xmlAttribute
next	src/libs/txml/xml.h	/^    struct xmlElement	*next;		\/* next element at the same level *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
next	src/libs/txml/xmlparse.c	/^  struct block *next;$/;"	m	struct:block	typeref:struct:block::block	file:
next	src/modules/graphic/ssggraph/grcam.h	/^    cGrCamera *next(void) {$/;"	f	class:cGrCamera
next	src/modules/graphic/ssggraph/grcam.h	/^    cGrPerspCamera *next(void) {$/;"	f	class:cGrPerspCamera
next	src/modules/graphic/ssggraph/grsmoke.h	/^  tgrSmoke_st * next ;$/;"	m	struct:tgrSmoke_st
next	src/modules/graphic/ssggraph/grutil.cpp	/^    struct stlist	*next;$/;"	m	struct:stlist	typeref:struct:stlist::stlist	file:
next	src/modules/telemetry/telemetry.cpp	/^    struct Channel	*next;$/;"	m	struct:Channel	typeref:struct:Channel::Channel	file:
next	src/tools/accc/accc.h	/^  struct mat * next;$/;"	m	struct:mat	typeref:struct:mat::mat
next	src/tools/accc/accc.h	/^  struct ob * next;$/;"	m	struct:ob	typeref:struct:ob::ob
next	src/tools/trackgen/easymesh.h	/^    int next;             \/* next node in the boundary chain *\/$/;"	m	struct:nod
next	src/tools/trackgen/track.cpp	/^    struct dispElt	*next;$/;"	m	struct:dispElt	typeref:struct:dispElt::dispElt	file:
next	src/tools/trackgen/track.cpp	/^    struct texElt	*next;$/;"	m	struct:texElt	typeref:struct:texElt::texElt	file:
next	src/windows/include/plib/ssg.h	/^  unsigned int next  ;  \/* The next entity when we are doing getNext ops *\/$/;"	m	class:ssgList
next	src/windows/include/plib/ul.h	/^  unsigned int next  ;  \/* The next entity when we are doing getNext ops *\/$/;"	m	class:ulList
next	src/windows/include/ul.h	/^  unsigned int next  ;  \/* The next entity when we are doing getNext ops *\/$/;"	m	class:ulList
nextScreen	export/include/confscreens.h	/^    void        	*nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon178
nextScreen	export/include/confscreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon176
nextScreen	export/include/confscreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon177
nextScreen	export/include/racescreens.h	/^    void        	*nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon174
nextScreen	export/include/racescreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon172
nextScreen	export/include/racescreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon173
nextScreen	src/libs/confscreens/confscreens.h	/^    void        	*nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon42
nextScreen	src/libs/confscreens/confscreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon40
nextScreen	src/libs/confscreens/confscreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon41
nextScreen	src/libs/racescreens/racescreens.h	/^    void        	*nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon36
nextScreen	src/libs/racescreens/racescreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon34
nextScreen	src/libs/racescreens/racescreens.h	/^    void        *nextScreen;	\/* Race manager screen to go after select *\/$/;"	m	struct:__anon35
nextStartRace	src/libs/racescreens/miscscreens.cpp	/^static tStartRaceCall	nextStartRace, prevStartRace;$/;"	v	file:
next_in	src/windows/include/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_out	src/windows/include/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_skid	src/modules/graphic/ssggraph/grskidmarks.h	/^  int			next_skid;$/;"	m	struct:__anon2
nextborderseg	src/drivers/inferno/pathfinder.h	/^		int* nextborderseg;		\/\/ Index of the next segment right on the border.$/;"	m	class:PathSegOpt
nextborderseg	src/drivers/lliaw/pathfinder.h	/^		int* nextborderseg;		\/\/ Index of the next segment right on the border.$/;"	m	class:PathSegOpt
nextborderseg	src/drivers/tita/pathfinder.h	/^		int* nextborderseg;		\/\/ Index of the next segment right on the border.$/;"	m	class:PathSegOpt
nmstrt	src/libs/txml/gennmtab.c	/^struct range nmstrt[] = {$/;"	v	typeref:struct:range
nmstrt	src/libs/txml/gennmtab/gennmtab.c	/^struct range nmstrt[] = {$/;"	v	typeref:struct:range
nmstrtPages	src/libs/txml/nametab.h	/^static const unsigned char nmstrtPages[] = {$/;"	v
nnear	src/windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
nnear	src/windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
nnodes	src/windows/include/plib/ul.h	/^  int nnodes ;$/;"	m	class:ulLinkedList
nnodes	src/windows/include/ul.h	/^  int nnodes ;$/;"	m	class:ulLinkedList
nod	src/tools/trackgen/easymesh.h	/^struct nod$/;"	s
node	src/tools/trackgen/easymesh.cpp	/^struct nod node[MAX_NODES], *point;$/;"	v	typeref:struct:nod
nopponents	src/drivers/bt/opponent.h	/^		int nopponents;$/;"	m	class:Opponents
nopponents	src/drivers/damned/opponent.h	/^		int nopponents;$/;"	m	class:Opponents
nopponents	src/drivers/olethros/opponent.h	/^		int nopponents;$/;"	m	class:olethros::Opponents
nopponents	src/drivers/sparkle/opponent.h	/^		int nopponents;$/;"	m	class:Opponents
nopponents_behind	src/drivers/olethros/opponent.h	/^		int nopponents_behind;$/;"	m	class:olethros::Opponents
nopponents_infront	src/drivers/olethros/opponent.h	/^		int nopponents_infront;$/;"	m	class:olethros::Opponents
norm	src/tools/accc/accc.h	/^  point_t  * norm;$/;"	m	struct:ob
normSeg	src/modules/track/track1.cpp	/^normSeg(tTrackSeg *curSeg)$/;"	f	file:
normSeg	src/modules/track/track2.cpp	/^normSeg(tTrackSeg *curSeg)$/;"	f	file:
normSeg	src/modules/track/track3.cpp	/^normSeg(tTrackSeg *curSeg)$/;"	f	file:
normSeg	src/modules/track/track4.cpp	/^normSeg(tTrackSeg *curSeg)$/;"	f	file:
normal	export/include/SOLID/solid.h	/^  DtVector normal;$/;"	m	struct:DtCollData
normal	export/include/car.h	/^    t3Dd	normal;$/;"	m	struct:__anon201
normal	export/include/track.h	/^	vec2f normal;	\/\/ Normal on the vertical track inside pointing towards the track middle.$/;"	m	struct:trackBarrier
normal	src/interfaces/car.h	/^    t3Dd	normal;$/;"	m	struct:__anon161
normal	src/interfaces/track.h	/^	vec2f normal;	\/\/ Normal on the vertical track inside pointing towards the track middle.$/;"	m	struct:trackBarrier
normal	src/libs/txml/xmltok.c	/^  struct normal_encoding normal;$/;"	m	struct:unknown_encoding	typeref:struct:unknown_encoding::normal_encoding	file:
normal	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DtVector normal;$/;"	m	struct:DtCollData
normal	src/modules/simu/simuv2/carstruct.h	/^    t3Dd	normal;$/;"	m	struct:__anon18
normal	src/windows/include/plib/ssg.h	/^  sgVec3 normal ;$/;"	m	struct:ssgInterleavedArrayElement
normalMap	src/tools/accc/ac3dload.cpp	/^void normalMap( ob_t * object)$/;"	f
normalMap01	src/tools/accc/ac3dload.cpp	/^void normalMap01( ob_t * object)$/;"	f
normalMapping	src/tools/accc/mainaccc.cpp	/^int normalMapping=0;$/;"	v
normal_encoding	src/libs/txml/xmltok.c	/^struct normal_encoding {$/;"	s	file:
normal_rho	export/include/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_rho	src/libs/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_x	export/include/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_x	src/libs/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_y	export/include/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normal_y	src/libs/learning/Distribution.h	/^	real normal_x, normal_y, normal_rho;$/;"	m	class:NormalDistribution
normalize	export/include/3D/Quaternion.h	/^inline void Quaternion::normalize() { *this \/= length(); }$/;"	f	class:Quaternion
normalize	export/include/3D/Vector.h	/^inline void Vector::normalize() { *this \/= length(); }$/;"	f	class:Vector
normalize	export/include/tmath/v2_t.h	/^template<class T> inline void v2t<T>::normalize(void)$/;"	f	class:v2t
normalize	export/include/tmath/v3_t.h	/^template<class T> inline void v3t<T>::normalize(void)$/;"	f	class:v3t
normalize	export/include/tmath/v4_t.h	/^template<class T> inline void v4t<T>::normalize(void)$/;"	f	class:v4t
normalize	src/drivers/berniw/linalg.h	/^inline void v3d::normalize(void)$/;"	f	class:v3d
normalize	src/drivers/berniw2/linalg.h	/^inline void v3d::normalize(void)$/;"	f	class:v3d
normalize	src/drivers/berniw3/linalg.h	/^inline void v3d::normalize(void)$/;"	f	class:v3d
normalize	src/drivers/olethros/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	src/drivers/sparkle/linalg.h	/^inline void v2d::normalize(void)$/;"	f	class:v2d
normalize	src/libs/math/v2_t.h	/^template<class T> inline void v2t<T>::normalize(void)$/;"	f	class:v2t
normalize	src/libs/math/v3_t.h	/^template<class T> inline void v3t<T>::normalize(void)$/;"	f	class:v3t
normalize	src/libs/math/v4_t.h	/^template<class T> inline void v4t<T>::normalize(void)$/;"	f	class:v4t
normalize	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline void Quaternion::normalize() { *this \/= length(); }$/;"	f	class:Quaternion
normalize	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline void Vector::normalize() { *this \/= length(); }$/;"	f	class:Vector
normalize	src/tools/accc/ac3dload.cpp	/^void normalize(point_t *t )$/;"	f
normalizeLines	src/libs/txml/xmlparse.c	/^normalizeLines(XML_Char *s)$/;"	f	file:
normalizePublicId	src/libs/txml/xmlparse.c	/^void normalizePublicId(XML_Char *publicId)$/;"	f	file:
normalized	export/include/3D/Quaternion.h	/^inline Quaternion Quaternion::normalized() const { return *this \/ length(); }$/;"	f	class:Quaternion
normalized	export/include/3D/Vector.h	/^inline Vector Vector::normalized() const { return *this \/ length(); }$/;"	f	class:Vector
normalized	src/libs/txml/xmltok.h	/^  char normalized;$/;"	m	struct:__anon69
normalized	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::normalized() const { return *this \/ length(); }$/;"	f	class:Quaternion
normalized	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector Vector::normalized() const { return *this \/ length(); }$/;"	f	class:Vector
normals	src/windows/include/plib/ssg.h	/^  sgVec3 *normals   ; int num_normals   ; unsigned short *n_index ;$/;"	m	class:ssgVTable
normals	src/windows/include/plib/ssg.h	/^  ssgNormalArray   *normals   ;$/;"	m	class:ssgVtxTable
normals	src/windows/include/plib/ssgaWaveSystem.h	/^  sgVec3 *normals   ;$/;"	m	class:ssgaWaveSystem
notWorking	export/include/js.h	/^  int   notWorking    () const { return error ;    }$/;"	f	class:jsJoystick
notWorking	src/interfaces/js.h	/^  int   notWorking    () const { return error ;    }$/;"	f	class:jsJoystick
notWorking	src/windows/include/plib/sl.h	/^  int notWorking () const { return error ; }$/;"	f	class:slDSP
not_working	src/windows/include/plib/sl.h	/^  int not_working() const { return error ; }$/;"	f	class:slDSP
not_working	src/windows/include/plib/sm.h	/^  int not_working () const { return notWorking () ; }  \/* Originally a typo! *\/$/;"	f	class:smMixer
notation	src/libs/txml/xmlparse.c	/^  const XML_Char *notation;$/;"	m	struct:__anon76	file:
notation0	src/libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation0	src/libs/txml/xmlrole.c	/^int notation0(PROLOG_STATE *state,$/;"	f	file:
notation1	src/libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation1	src/libs/txml/xmlrole.c	/^int notation1(PROLOG_STATE *state,$/;"	f	file:
notation2	src/libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation2	src/libs/txml/xmlrole.c	/^int notation2(PROLOG_STATE *state,$/;"	f	file:
notation3	src/libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation3	src/libs/txml/xmlrole.c	/^int notation3(PROLOG_STATE *state,$/;"	f	file:
notation4	src/libs/txml/xmlrole.c	/^  notation0, notation1, notation2, notation3, notation4,$/;"	v	file:
notation4	src/libs/txml/xmlrole.c	/^int notation4(PROLOG_STATE *state,$/;"	f	file:
notationDeclHandler	src/libs/txml/xmlparse.c	/^  XML_NotationDeclHandler notationDeclHandler;$/;"	m	struct:__anon82	file:
notationDeclHandler	src/libs/txml/xmlparse.c	267;"	d	file:
notexturesplit	src/tools/accc/mainaccc.cpp	/^int notexturesplit=0;$/;"	v
now	src/windows/include/plib/sl.h	/^  int now ;$/;"	m	class:slScheduler
now	src/windows/include/plib/ul.h	/^  double now   ;$/;"	m	class:ulClock
now	src/windows/include/ul.h	/^  double now   ;$/;"	m	class:ulClock
npitsegments	src/drivers/inferno/pathfinder.h	/^		int npitsegments;	\/\/ Number of pit segments.$/;"	m	class:PathSegPit
npitsegments	src/drivers/lliaw/pathfinder.h	/^		int npitsegments;	\/\/ Number of pit segments.$/;"	m	class:PathSegPit
npitsegments	src/drivers/tita/pathfinder.h	/^		int npitsegments;	\/\/ Number of pit segments.$/;"	m	class:PathSegPit
nseg	export/include/track.h	/^    int		  nseg;		\/**< Number of segments *\/$/;"	m	struct:__anon186
nseg	src/drivers/bt/learn.h	/^		int nseg;$/;"	m	class:SegLearn
nseg	src/drivers/damned/learn.h	/^		int nseg;$/;"	m	class:SegLearn
nseg	src/drivers/inferno/pathfinder.h	/^		int nseg;				\/\/ Number of track segments.$/;"	m	class:PathSeg
nseg	src/drivers/lliaw/pathfinder.h	/^		int nseg;				\/\/ Number of track segments.$/;"	m	class:PathSeg
nseg	src/drivers/tita/pathfinder.h	/^		int nseg;				\/\/ Number of track segments.$/;"	m	class:PathSeg
nseg	src/interfaces/track.h	/^    int		  nseg;		\/**< Number of segments *\/$/;"	m	struct:__anon153
nsegments	src/drivers/inferno/pathfinder.h	/^		int nsegments;		\/\/ # of all track segments (NOT pit segments!).$/;"	m	class:PathSegPit
nsegments	src/drivers/lliaw/pathfinder.h	/^		int nsegments;		\/\/ # of all track segments (NOT pit segments!).$/;"	m	class:PathSegPit
nsegments	src/drivers/tita/pathfinder.h	/^		int nsegments;		\/\/ # of all track segments (NOT pit segments!).$/;"	m	class:PathSegPit
nstacks	src/windows/include/plib/ssgaWaveSystem.h	/^  int nstacks ;$/;"	m	class:ssgaWaveSystem
nstate	src/modules/graphic/ssggraph/grboard.cpp	/^static int nstate = 0;$/;"	v	file:
nstates	src/windows/include/plib/ssg.h	/^  int              nstates   ;$/;"	m	class:ssgStateSelector
nsteps	src/windows/include/plib/sl.h	/^  int           nsteps         ;$/;"	m	class:slEnvelope
nstrips	src/windows/include/plib/ssgaWaveSystem.h	/^  int nstrips ;$/;"	m	class:ssgaWaveSystem
ntab	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec3		*ntab  = NULL ;$/;"	v	file:
ntriangles	src/windows/include/plib/ssgaShapes.h	/^  int ntriangles ;$/;"	m	class:ssgaShape
numMapLevel	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              numMapLevel;$/;"	v	file:
numMapLevel	src/modules/graphic/ssggraph/grvtxtable.h	/^  int numMapLevel;$/;"	m	class:grVtxTable
numStripes	src/modules/graphic/ssggraph/grvtxtable.h	/^  int                 numStripes;$/;"	m	class:grVtxTable
numVerts	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  int numVerts() const { return index.size(); }$/;"	f	class:Polytope
num_active	src/windows/include/plib/ssgaParticleSystem.h	/^  int num_active     ;$/;"	m	class:ssgaParticleSystem
num_axes	export/include/js.h	/^  int          num_axes ;$/;"	m	class:jsJoystick
num_axes	src/interfaces/js.h	/^  int          num_axes ;$/;"	m	class:jsJoystick
num_box_tests	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^int num_box_tests = 0;$/;"	v
num_buttons	export/include/js.h	/^  int          num_buttons ;$/;"	m	class:jsJoystick
num_buttons	src/interfaces/js.h	/^  int          num_buttons ;$/;"	m	class:jsJoystick
num_chunk_list	src/windows/include/png.h	/^   int num_chunk_list;$/;"	m	struct:png_struct_def
num_colours	src/windows/include/plib/ssg.h	/^  sgVec4 *colours   ; int num_colours   ; unsigned short *c_index ;$/;"	m	class:ssgVTable
num_entries	src/windows/include/plib/ssg.h	/^  int num_entries ;$/;"	m	class:ssgHit
num_irregularities	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^int num_irregularities = 0;$/;"	v
num_iterations	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^int num_iterations = 0;$/;"	v
num_materials	src/modules/graphic/ssggraph/grloadac.cpp	/^static int		num_materials = 0 ;$/;"	v	file:
num_normals	src/windows/include/plib/ssg.h	/^  sgVec3 *normals   ; int num_normals   ; unsigned short *n_index ;$/;"	m	class:ssgVTable
num_palette	src/windows/include/png.h	/^   png_uint_16 num_palette;   \/* number of color entries in palette *\/$/;"	m	struct:png_struct_def
num_palette	src/windows/include/png.h	/^   png_uint_16 num_palette; \/* number of color entries in "palette" (PLTE) *\/$/;"	m	struct:png_info_struct
num_particles	src/windows/include/plib/ssgaParticleSystem.h	/^  int num_particles  ;$/;"	m	class:ssgaParticleSystem
num_pending_callbacks	src/windows/include/plib/sl.h	/^  int num_pending_callbacks ;$/;"	m	class:slScheduler
num_prev_filters	src/windows/include/png.h	/^   png_byte num_prev_filters;        \/* number of weights for previous rows *\/$/;"	m	struct:png_struct_def
num_rows	src/windows/include/png.h	/^   png_uint_32 num_rows;      \/* number of rows in current pass *\/$/;"	m	struct:png_struct_def
num_texcoords	src/windows/include/plib/ssg.h	/^  sgVec2 *texcoords ; int num_texcoords ; unsigned short *t_index ;$/;"	m	class:ssgVTable
num_text	src/windows/include/png.h	/^   int num_text; \/* number of comments read\/to write *\/$/;"	m	struct:png_info_struct
num_trans	src/windows/include/png.h	/^   png_uint_16 num_trans;     \/* number of transparency values *\/$/;"	m	struct:png_struct_def
num_trans	src/windows/include/png.h	/^   png_uint_16 num_trans;   \/* number of transparent palette color (tRNS) *\/$/;"	m	struct:png_info_struct
num_vertices	src/windows/include/plib/ssg.h	/^  sgVec3 *vertices  ; int num_vertices  ; unsigned short *v_index ;$/;"	m	class:ssgVTable
num_verts	src/windows/include/plib/ssgaParticleSystem.h	/^  int num_verts      ;$/;"	m	class:ssgaParticleSystem
number	src/modules/graphic/ssggraph/grsmoke.h	/^  int number;$/;"	m	struct:__anon1
numberCarlight	src/modules/graphic/ssggraph/grcarlight.h	/^  int numberCarlight;$/;"	m	struct:tgrCarlight_t
numberOfMapToApply	src/modules/graphic/ssggraph/grscene.h	/^  int    numberOfMapToApply;$/;"	m	struct:hashMapElement
numkids	src/tools/accc/accc.h	/^  int numkids;$/;"	m	struct:ob_groups
numkids0	src/tools/accc/accc.h	/^  int numkids0;$/;"	m	struct:ob_groups
numkids1	src/tools/accc/accc.h	/^  int numkids1;$/;"	m	struct:ob_groups
numkids2	src/tools/accc/accc.h	/^  int numkids2;$/;"	m	struct:ob_groups
numkids3	src/tools/accc/accc.h	/^  int numkids3;$/;"	m	struct:ob_groups
nummaterial	src/tools/accc/ac3dload.cpp	/^int nummaterial=0;$/;"	v
numob	src/tools/accc/ac3dload.cpp	/^int numob=0;$/;"	v
numrefs	src/tools/accc/ac3dload.cpp	/^int numrefs=0;$/;"	v
numrefsFound	src/tools/accc/ac3dload.cpp	/^int numrefsFound=0;$/;"	v
numrefstotal	src/tools/accc/ac3dload.cpp	/^int numrefstotal=0;$/;"	v
numsurf	src/tools/accc/accc.h	/^  int    numsurf;$/;"	m	struct:ob
numvert	src/tools/accc/accc.h	/^  int    numvert;$/;"	m	struct:ob
numvertFound	src/tools/accc/ac3dload.cpp	/^int numvertFound=0;$/;"	v
numvertex	src/tools/accc/ac3dload.cpp	/^int numvertex=0;$/;"	v
numvertice	src/tools/accc/ac3dload.cpp	/^int numvertice=0;$/;"	v
numvertice	src/tools/accc/accc.h	/^  int numvertice ; \/* the real number of textcoord *\/$/;"	m	struct:ob
nv	src/modules/graphic/ssggraph/grloadac.cpp	/^static int		nv;$/;"	v	file:
o	src/drivers/berniw/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	src/drivers/berniw/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	src/drivers/berniw2/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	src/drivers/berniw2/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	src/drivers/berniw3/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	src/drivers/berniw3/pathfinder.h	/^		v3d o;			\/* position in space, static trajectory *\/$/;"	m	class:PathSeg
o	src/drivers/inferno/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	src/drivers/inferno/pathfinder.h	/^		vec2d* o;				\/\/ Position in space, static trajectory.$/;"	m	class:PathSegOpt
o	src/drivers/lliaw/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	src/drivers/lliaw/pathfinder.h	/^		vec2d* o;				\/\/ Position in space, static trajectory.$/;"	m	class:PathSegOpt
o	src/drivers/tita/pathfinder.h	/^		tOCar* o;$/;"	m	class:Pathfinder
o	src/drivers/tita/pathfinder.h	/^		vec2d* o;				\/\/ Position in space, static trajectory.$/;"	m	class:PathSegOpt
ob	src/tools/accc/ac3dload.cpp	/^ob_t   ob[10000];$/;"	v
ob	src/tools/accc/accc.h	/^typedef struct ob {$/;"	s
ob1	src/tools/accc/accc.h	/^  struct ob* ob1;$/;"	m	struct:ob	typeref:struct:ob::ob
ob2	src/tools/accc/accc.h	/^  struct ob* ob2;$/;"	m	struct:ob	typeref:struct:ob::ob
ob3	src/tools/accc/accc.h	/^  struct ob* ob3;$/;"	m	struct:ob	typeref:struct:ob::ob
ob_groups	src/tools/accc/accc.h	/^typedef struct ob_groups$/;"	s
ob_groups_t	src/tools/accc/accc.h	/^}ob_groups_t;$/;"	t	typeref:struct:ob_groups
ob_t	src/tools/accc/accc.h	/^} ob_t;$/;"	t	typeref:struct:ob
obj	export/include/learning/List.h	/^	void* obj; \/\/\/< data$/;"	m	struct:ListItem
obj	src/libs/learning/List.h	/^	void* obj; \/\/\/< data$/;"	m	struct:ListItem
obj	src/tools/trackgen/objects.cpp	/^    ssgEntity		*obj;$/;"	m	struct:objdef	file:
obj1	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  ObjectPtr obj1;$/;"	m	class:Encounter
obj2	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  ObjectPtr obj2;$/;"	m	class:Encounter
objPtr	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  const Object *objPtr;$/;"	m	class:Endpoint
obj_type_tags	src/modules/graphic/ssggraph/grloadac.cpp	/^static Tag obj_type_tags [] = $/;"	v	file:
objdef	src/tools/trackgen/objects.cpp	/^typedef struct objdef$/;"	s	file:
objectList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^ObjectList objectList;$/;"	v
object_tags	src/modules/graphic/ssggraph/grloadac.cpp	/^static Tag object_tags [] =$/;"	v	file:
object_test	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^bool object_test(Encounter& e) {$/;"	f
objects	src/libs/tgfclient/gui.h	/^    tGfuiObject		*objects;$/;"	m	struct:__anon68
objhead	src/tools/trackgen/objects.cpp	/^tobjlist objhead;$/;"	v
ocar	src/drivers/berniw/berniw.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	src/drivers/berniw2/berniw2.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	src/drivers/berniw3/berniw3.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	src/drivers/inferno/inferno.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	src/drivers/lliaw/lliaw.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
ocar	src/drivers/tita/tita.cpp	/^static OtherCar* ocar = NULL;$/;"	v	file:
off	src/windows/include/plib/ssg.h	/^  void off () { is_turned_on = FALSE ; }$/;"	f	class:ssgLight
offset	src/modules/graphic/ssggraph/grcam.cpp	/^    float offset[3];$/;"	m	class:cGrCarCamRoadFly	file:
offset	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	offset;$/;"	m	struct:Face	file:
offset	src/windows/include/plib/ssgaWaveSystem.h	/^  sgVec2  offset    ;$/;"	m	class:ssgaWaveSystem
offset_table	src/windows/include/png.h	/^   png_bytep offset_table;$/;"	m	struct:png_struct_def
offset_table_count	src/windows/include/png.h	/^   png_uint_16 offset_table_count;$/;"	m	struct:png_struct_def
offset_table_count_free	src/windows/include/png.h	/^   png_uint_16 offset_table_count_free;$/;"	m	struct:png_struct_def
offset_table_number	src/windows/include/png.h	/^   png_uint_16 offset_table_number;$/;"	m	struct:png_struct_def
offset_table_ptr	src/windows/include/png.h	/^   png_bytepp offset_table_ptr;$/;"	m	struct:png_struct_def
offset_unit_type	src/windows/include/png.h	/^   png_byte offset_unit_type; \/* offset units type *\/$/;"	m	struct:png_info_struct
ofile	src/tools/accc/ac3dload.cpp	/^FILE * ofile;$/;"	v
oldb	export/include/tgfclient.h	/^    int		oldb[NUM_JOY];$/;"	m	struct:__anon213
oldb	src/libs/tgfclient/tgfclient.h	/^    int		oldb[NUM_JOY];$/;"	m	struct:__anon57
oldlookahead	src/drivers/bt/driver.h	/^		float oldlookahead;		\/\/ Lookahead for steering in the previous step.$/;"	m	class:Driver
oldlookahead	src/drivers/damned/driver.h	/^		float oldlookahead;		\/\/ Lookahead for steering in the previous step.$/;"	m	class:Driver
oldlookahead	src/drivers/olethros/driver.h	/^	float oldlookahead;		\/\/\/< Lookahead for steering in the previous step.$/;"	m	class:olethros::Driver
olethros	src/drivers/olethros/cardata.cpp	/^namespace olethros {$/;"	n	file:
olethros	src/drivers/olethros/cardata.h	/^namespace olethros$/;"	n
olethros	src/drivers/olethros/driver.cpp	/^namespace olethros {$/;"	n	file:
olethros	src/drivers/olethros/driver.h	/^namespace olethros$/;"	n
olethros	src/drivers/olethros/learn.h	/^namespace olethros$/;"	n
olethros	src/drivers/olethros/olethros.cpp	/^extern "C" int olethros(tModInfo *modInfo)$/;"	f	namespace:olethros
olethros	src/drivers/olethros/olethros.cpp	/^namespace olethros$/;"	n	file:
olethros	src/drivers/olethros/opponent.cpp	/^namespace olethros {$/;"	n	file:
olethros	src/drivers/olethros/opponent.h	/^namespace olethros$/;"	n
olethros	src/drivers/olethros/pit.cpp	/^namespace olethros$/;"	n	file:
olethros	src/drivers/olethros/pit.h	/^namespace olethros$/;"	n
olethros	src/drivers/olethros/strategy.cpp	/^namespace olethros$/;"	n	file:
olethros	src/drivers/olethros/strategy.h	/^namespace olethros$/;"	n
on	src/modules/graphic/ssggraph/grcarlight.h	/^  int on ;$/;"	m	class:ssgVtxTableCarlight
on	src/windows/include/plib/ssg.h	/^  void on  () { is_turned_on = TRUE  ; }$/;"	f	class:ssgLight
onActivate	src/libs/confscreens/controlconfig.cpp	/^onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	src/libs/confscreens/joystickconfig.cpp	/^onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	src/libs/confscreens/openglconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	src/libs/confscreens/simuconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	src/libs/confscreens/soundconfig.cpp	/^static void onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate	src/libs/tgfclient/gui.h	/^    tfuiCallback	onActivate;$/;"	m	struct:__anon68
onActivate	src/libs/tgfclient/screen.cpp	/^onActivate(void * \/* dummy *\/)$/;"	f	file:
onActivate2	src/libs/confscreens/mouseconfig.cpp	/^onActivate2(void * \/* dummy *\/)$/;"	f	file:
onBack	src/libs/confscreens/joystickconfig.cpp	/^onBack(void *prevMenu)$/;"	f	file:
onDeactivate	src/libs/tgfclient/gui.h	/^    tfuiCallback	onDeactivate;$/;"	m	struct:__anon68
onDeadZoneChange	src/libs/confscreens/controlconfig.cpp	/^onDeadZoneChange(void * \/* dummy *\/)$/;"	f	file:
onFocus	src/libs/tgfclient/gui.h	/^    tfuiCallback	onFocus;$/;"	m	struct:__anon61
onFocus	src/libs/tgfclient/gui.h	/^    tfuiCallback	onFocus;$/;"	m	struct:__anon62
onFocus	src/libs/tgfclient/gui.h	/^    tfuiCallback	onFocus;$/;"	m	struct:__anon65
onFocusLost	src/libs/confscreens/controlconfig.cpp	/^onFocusLost(void * \/* dummy *\/)$/;"	f	file:
onFocusLost	src/libs/tgfclient/gui.h	/^    tfuiCallback	onFocusLost;    $/;"	m	struct:__anon65
onFocusLost	src/libs/tgfclient/gui.h	/^    tfuiCallback	onFocusLost;$/;"	m	struct:__anon61
onFocusLost	src/libs/tgfclient/gui.h	/^    tfuiCallback	onFocusLost;$/;"	m	struct:__anon62
onKeyAction	src/drivers/human/human.cpp	/^onKeyAction(unsigned char key, int modifier, int state)$/;"	f	file:
onKeyAction	src/libs/confscreens/controlconfig.cpp	/^onKeyAction(unsigned char key, int \/* modifier *\/, int state)$/;"	f	file:
onKeyAction	src/libs/tgfclient/gui.h	/^    tfuiKeyCallback	onKeyAction;$/;"	m	struct:__anon68
onPress	src/libs/tgfclient/gui.h	/^    tfuiCallback	onPress;$/;"	m	struct:GfuiKey
onPush	src/libs/confscreens/controlconfig.cpp	/^onPush(void *vi)$/;"	f	file:
onPush	src/libs/tgfclient/gui.h	/^    tfuiCallback	onPush;$/;"	m	struct:__anon61
onPush	src/libs/tgfclient/gui.h	/^    tfuiCallback	onPush;$/;"	m	struct:__anon62
onRelease	src/libs/tgfclient/gui.h	/^    tfuiCallback	onRelease;$/;"	m	struct:GfuiKey
onSKeyAction	src/drivers/human/human.cpp	/^onSKeyAction(int key, int modifier, int state)$/;"	f	file:
onSKeyAction	src/libs/confscreens/controlconfig.cpp	/^onSKeyAction(int key, int \/* modifier *\/, int state)$/;"	f	file:
onSKeyAction	src/libs/tgfclient/gui.h	/^    tfuiSKeyCallback	onSKeyAction;$/;"	m	struct:__anon68
onSave	src/libs/confscreens/controlconfig.cpp	/^onSave(void * \/* dummy *\/)$/;"	f	file:
onScroll	src/libs/tgfclient/gui.h	/^    tfuiSBCallback	onScroll;$/;"	m	struct:__anon64
onSelect	src/libs/confscreens/driverconfig.cpp	/^onSelect(void * \/* Dummy *\/)$/;"	f	file:
onSelect	src/libs/tgfclient/gui.h	/^    tfuiCallback	onSelect;$/;"	m	struct:__anon63
onSelect	src/modules/graphic/ssggraph/grcam.cpp	/^    void onSelect(tCarElt *car, tSituation *s)$/;"	f	class:cGrCarCamRoadFly
onSelect	src/modules/graphic/ssggraph/grcam.h	/^    void onSelect(tCarElt *car, tSituation *s) {}$/;"	f	class:cGrOrthoCamera
onSelect	src/modules/graphic/ssggraph/grcam.h	/^   void onSelect(tCarElt *car, tSituation *s) {}$/;"	f	class:cGrPerspCamera
onSteerSensChange	src/libs/confscreens/controlconfig.cpp	/^onSteerSensChange(void * \/* dummy *\/)$/;"	f	file:
onlyCallback	src/libs/tgfclient/gui.h	/^    int			onlyCallback;$/;"	m	struct:__anon68
ooMass	src/windows/include/plib/sg.h	/^  float ooMass ;  \/* One-over-mass *\/$/;"	m	class:sgParticle
opLoad	src/modules/simu/simuv2/wheel.h	/^    tdble	opLoad;		\/* Operating load *\/$/;"	m	struct:__anon21
opaque	src/windows/include/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open	export/include/js.h	/^  void open ()$/;"	f	class:jsJoystick
open	src/interfaces/js.h	/^  void open ()$/;"	f	class:jsJoystick
open	src/libs/txml/xmlparse.c	/^  char open;$/;"	m	struct:__anon76	file:
openCalls	export/include/tgf.h	/^  int openCalls;$/;"	m	class:ProfileInstance
openCalls	src/libs/tgf/tgf.h	/^  int openCalls;$/;"	m	class:ProfileInstance
operator !=	export/include/tmath/v2_t.h	/^template<class T> inline int v2t<T>::operator!=(const v2t<T> &s) const$/;"	f	class:v2t
operator !=	export/include/tmath/v3_t.h	/^template<class T> inline int v3t<T>::operator!=(const v3t<T> &s) const$/;"	f	class:v3t
operator !=	export/include/tmath/v4_t.h	/^template<class T> inline int v4t<T>::operator!=(const v4t<T> &s) const$/;"	f	class:v4t
operator !=	src/libs/math/v2_t.h	/^template<class T> inline int v2t<T>::operator!=(const v2t<T> &s) const$/;"	f	class:v2t
operator !=	src/libs/math/v3_t.h	/^template<class T> inline int v3t<T>::operator!=(const v3t<T> &s) const$/;"	f	class:v3t
operator !=	src/libs/math/v4_t.h	/^template<class T> inline int v4t<T>::operator!=(const v4t<T> &s) const$/;"	f	class:v4t
operator ()	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^  bool operator()(const BBoxNode& p1, const BBoxNode& p2) const {$/;"	f	class:BBoxCompAxis
operator ()	src/modules/simu/simuv2/SOLID-2.0/src/Response.cpp	/^void Response::operator()(DtObjectRef a, DtObjectRef b) const {  $/;"	f	class:Response
operator ()	src/modules/simu/simuv2/SOLID-2.0/src/Response.cpp	/^void Response::operator()(DtObjectRef a, DtObjectRef b, $/;"	f	class:Response
operator ()	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Point operator()(const Point& p) const {$/;"	f	class:Transform
operator *	export/include/3D/Matrix.h	/^inline Matrix operator*(const Matrix& m1, const Matrix& m2) {$/;"	f
operator *	export/include/3D/Matrix.h	/^inline Vector operator*(const Matrix& m, const Vector& v) {$/;"	f
operator *	export/include/3D/Matrix.h	/^inline Vector operator*(const Vector& v, const Matrix& m) {$/;"	f
operator *	export/include/3D/Quaternion.h	/^inline Quaternion operator*(Scalar s, const Quaternion& q) { return q * s; }$/;"	f
operator *	export/include/3D/Quaternion.h	/^inline Quaternion operator*(const Quaternion& q, Scalar s) {$/;"	f
operator *	export/include/3D/Quaternion.h	/^inline Quaternion operator*(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator *	export/include/3D/Vector.h	/^inline Vector operator*(Scalar s, const Vector& v) { return v * s; }$/;"	f
operator *	export/include/3D/Vector.h	/^inline Vector operator*(const Vector& v, Scalar s) {$/;"	f
operator *	export/include/tmath/v2_t.h	/^template<class T> inline T v2t<T>::operator*(const v2t<T> &src) const$/;"	f	class:v2t
operator *	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> operator*(const T s, const v2t<T> & src)$/;"	f
operator *	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator*(const T s) const$/;"	f	class:v2t
operator *	export/include/tmath/v3_t.h	/^template<class T> inline T v3t<T>::operator*(const v3t<T> &src) const$/;"	f	class:v3t
operator *	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> operator*(const T s, const v3t<T> & src)$/;"	f
operator *	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator*(const T s) const$/;"	f	class:v3t
operator *	export/include/tmath/v4_t.h	/^template<class T> inline T v4t<T>::operator*(const v4t<T> &src) const$/;"	f	class:v4t
operator *	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T> operator*(const T s, const v4t<T> & src)$/;"	f
operator *	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator*(const T s) const$/;"	f	class:v4t
operator *	src/drivers/berniw/linalg.h	/^inline double v3d::operator*(const v3d &src)$/;"	f	class:v3d
operator *	src/drivers/berniw/linalg.h	/^inline v3d operator*(const double s, const v3d & src)$/;"	f
operator *	src/drivers/berniw/linalg.h	/^inline v3d v3d::operator*(const double s)$/;"	f	class:v3d
operator *	src/drivers/berniw2/linalg.h	/^inline double v3d::operator*(const v3d &src)$/;"	f	class:v3d
operator *	src/drivers/berniw2/linalg.h	/^inline v3d operator*(const double s, const v3d & src)$/;"	f
operator *	src/drivers/berniw2/linalg.h	/^inline v3d v3d::operator*(const double s)$/;"	f	class:v3d
operator *	src/drivers/berniw3/linalg.h	/^inline double v3d::operator*(const v3d &src)$/;"	f	class:v3d
operator *	src/drivers/berniw3/linalg.h	/^inline v3d operator*(const double s, const v3d & src)$/;"	f
operator *	src/drivers/berniw3/linalg.h	/^inline v3d v3d::operator*(const double s)$/;"	f	class:v3d
operator *	src/drivers/olethros/TrackData.h	/^    Point operator* (const float& rhs)$/;"	f	class:Point
operator *	src/drivers/olethros/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	src/drivers/olethros/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	src/drivers/olethros/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	src/drivers/sparkle/linalg.h	/^inline float v2d::operator*(const v2d &src) const$/;"	f	class:v2d
operator *	src/drivers/sparkle/linalg.h	/^inline v2d operator*(const float s, const v2d & src)$/;"	f
operator *	src/drivers/sparkle/linalg.h	/^inline v2d v2d::operator*(const float s) const$/;"	f	class:v2d
operator *	src/libs/math/v2_t.h	/^template<class T> inline T v2t<T>::operator*(const v2t<T> &src) const$/;"	f	class:v2t
operator *	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> operator*(const T s, const v2t<T> & src)$/;"	f
operator *	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator*(const T s) const$/;"	f	class:v2t
operator *	src/libs/math/v3_t.h	/^template<class T> inline T v3t<T>::operator*(const v3t<T> &src) const$/;"	f	class:v3t
operator *	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> operator*(const T s, const v3t<T> & src)$/;"	f
operator *	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator*(const T s) const$/;"	f	class:v3t
operator *	src/libs/math/v4_t.h	/^template<class T> inline T v4t<T>::operator*(const v4t<T> &src) const$/;"	f	class:v4t
operator *	src/libs/math/v4_t.h	/^template<class T> inline v4t<T> operator*(const T s, const v4t<T> & src)$/;"	f
operator *	src/libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator*(const T s) const$/;"	f	class:v4t
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix operator*(const Matrix& m1, const Matrix& m2) {$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Vector operator*(const Matrix& m, const Vector& v) {$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Vector operator*(const Vector& v, const Matrix& m) {$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator*(Scalar s, const Quaternion& q) { return q * s; }$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator*(const Quaternion& q, Scalar s) {$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator*(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator*(Scalar s, const Vector& v) { return v * s; }$/;"	f
operator *	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator*(const Vector& v, Scalar s) {$/;"	f
operator *=	export/include/3D/Matrix.h	/^inline Matrix& Matrix::operator*=(const Matrix& m) {$/;"	f	class:Matrix
operator *=	export/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator*=(Scalar s) {$/;"	f	class:Quaternion
operator *=	export/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator*=(const Quaternion& q) {$/;"	f	class:Quaternion
operator *=	export/include/3D/Vector.h	/^inline Vector& Vector::operator*=(Scalar s) {$/;"	f	class:Vector
operator *=	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator*=(const T s)$/;"	f	class:v2t
operator *=	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator*=(const T s)$/;"	f	class:v3t
operator *=	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator*=(const T s)$/;"	f	class:v4t
operator *=	src/drivers/olethros/TrackData.h	/^    Point& operator*= (const float& rhs)$/;"	f	class:Point
operator *=	src/libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator*=(const T s)$/;"	f	class:v2t
operator *=	src/libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator*=(const T s)$/;"	f	class:v3t
operator *=	src/libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator*=(const T s)$/;"	f	class:v4t
operator *=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix& Matrix::operator*=(const Matrix& m) {$/;"	f	class:Matrix
operator *=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator*=(Scalar s) {$/;"	f	class:Quaternion
operator *=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator*=(const Quaternion& q) {$/;"	f	class:Quaternion
operator *=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator*=(Scalar s) {$/;"	f	class:Vector
operator *=	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^Transform& Transform::operator*=(const Transform& t) {$/;"	f	class:Transform
operator +	export/include/3D/Point.h	/^inline Point operator+(const Point& p, const Vector& v) {$/;"	f
operator +	export/include/3D/Quaternion.h	/^inline Quaternion operator+(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator +	export/include/3D/Vector.h	/^inline Vector operator+(const Vector& v1, const Vector& v2) {$/;"	f
operator +	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator+(const v2t<T> &src) const$/;"	f	class:v2t
operator +	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator+(const v3t<T> &src) const$/;"	f	class:v3t
operator +	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator+(const v4t<T> &src) const$/;"	f	class:v4t
operator +	src/drivers/berniw/linalg.h	/^inline v3d v3d::operator+(const v3d &src)$/;"	f	class:v3d
operator +	src/drivers/berniw2/linalg.h	/^inline v3d v3d::operator+(const v3d &src)$/;"	f	class:v3d
operator +	src/drivers/berniw3/linalg.h	/^inline v3d v3d::operator+(const v3d &src)$/;"	f	class:v3d
operator +	src/drivers/olethros/TrackData.h	/^    Point operator+ (const Point& rhs)$/;"	f	class:Point
operator +	src/drivers/olethros/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	src/drivers/sparkle/linalg.h	/^inline v2d v2d::operator+(const v2d &src) const$/;"	f	class:v2d
operator +	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator+(const v2t<T> &src) const$/;"	f	class:v2t
operator +	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator+(const v3t<T> &src) const$/;"	f	class:v3t
operator +	src/libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator+(const v4t<T> &src) const$/;"	f	class:v4t
operator +	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point operator+(const Point& p, const Vector& v) {$/;"	f
operator +	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator+(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator +	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator+(const Vector& v1, const Vector& v2) {$/;"	f
operator +=	export/include/3D/Point.h	/^inline Point& Point::operator+=(const Vector& v) {$/;"	f	class:Point
operator +=	export/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator+=(const Quaternion& q) {$/;"	f	class:Quaternion
operator +=	export/include/3D/Vector.h	/^inline Vector& Vector::operator+=(const Vector& v) {$/;"	f	class:Vector
operator +=	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator+=(const v2t<T> &src)$/;"	f	class:v2t
operator +=	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator+=(const v3t<T> &src)$/;"	f	class:v3t
operator +=	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator+=(const v4t<T> &src)$/;"	f	class:v4t
operator +=	src/drivers/olethros/TrackData.h	/^    Point& operator+= (const Point& rhs)$/;"	f	class:Point
operator +=	src/libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator+=(const v2t<T> &src)$/;"	f	class:v2t
operator +=	src/libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator+=(const v3t<T> &src)$/;"	f	class:v3t
operator +=	src/libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator+=(const v4t<T> &src)$/;"	f	class:v4t
operator +=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point& Point::operator+=(const Vector& v) {$/;"	f	class:Point
operator +=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator+=(const Quaternion& q) {$/;"	f	class:Quaternion
operator +=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator+=(const Vector& v) {$/;"	f	class:Vector
operator -	export/include/3D/Point.h	/^inline Point operator-(const Point& p, const Vector& v) {$/;"	f
operator -	export/include/3D/Point.h	/^inline Vector operator-(const Point& p1, const Point& p2) {$/;"	f
operator -	export/include/3D/Quaternion.h	/^inline Quaternion operator-(const Quaternion& q) {$/;"	f
operator -	export/include/3D/Quaternion.h	/^inline Quaternion operator-(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator -	export/include/3D/Vector.h	/^inline Vector operator-(const Vector& v) {$/;"	f
operator -	export/include/3D/Vector.h	/^inline Vector operator-(const Vector& v1, const Vector& v2) {$/;"	f
operator -	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator-(const v2t<T> &src) const$/;"	f	class:v2t
operator -	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator-(void) const$/;"	f	class:v2t
operator -	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator-(const v3t<T> &src) const$/;"	f	class:v3t
operator -	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator-(void) const$/;"	f	class:v3t
operator -	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator-(const v4t<T> &src) const$/;"	f	class:v4t
operator -	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator-(void) const$/;"	f	class:v4t
operator -	src/drivers/berniw/linalg.h	/^inline v3d v3d::operator-(const v3d &src)$/;"	f	class:v3d
operator -	src/drivers/berniw/linalg.h	/^inline v3d v3d::operator-(void)$/;"	f	class:v3d
operator -	src/drivers/berniw2/linalg.h	/^inline v3d v3d::operator-(const v3d &src)$/;"	f	class:v3d
operator -	src/drivers/berniw2/linalg.h	/^inline v3d v3d::operator-(void)$/;"	f	class:v3d
operator -	src/drivers/berniw3/linalg.h	/^inline v3d v3d::operator-(const v3d &src)$/;"	f	class:v3d
operator -	src/drivers/berniw3/linalg.h	/^inline v3d v3d::operator-(void)$/;"	f	class:v3d
operator -	src/drivers/olethros/TrackData.h	/^    Point operator- (const Point& rhs)$/;"	f	class:Point
operator -	src/drivers/olethros/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	src/drivers/olethros/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	src/drivers/sparkle/linalg.h	/^inline v2d v2d::operator-(const v2d &src) const$/;"	f	class:v2d
operator -	src/drivers/sparkle/linalg.h	/^inline v2d v2d::operator-(void) const$/;"	f	class:v2d
operator -	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator-(const v2t<T> &src) const$/;"	f	class:v2t
operator -	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator-(void) const$/;"	f	class:v2t
operator -	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator-(const v3t<T> &src) const$/;"	f	class:v3t
operator -	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator-(void) const$/;"	f	class:v3t
operator -	src/libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator-(const v4t<T> &src) const$/;"	f	class:v4t
operator -	src/libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator-(void) const$/;"	f	class:v4t
operator -	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point operator-(const Point& p, const Vector& v) {$/;"	f
operator -	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Vector operator-(const Point& p1, const Point& p2) {$/;"	f
operator -	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator-(const Quaternion& q) {$/;"	f
operator -	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator-(const Quaternion& q1, const Quaternion& q2) {$/;"	f
operator -	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator-(const Vector& v) {$/;"	f
operator -	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator-(const Vector& v1, const Vector& v2) {$/;"	f
operator -=	export/include/3D/Point.h	/^inline Point& Point::operator-=(const Vector& v) {$/;"	f	class:Point
operator -=	export/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator-=(const Quaternion& q) {$/;"	f	class:Quaternion
operator -=	export/include/3D/Vector.h	/^inline Vector& Vector::operator-=(const Vector& v) {$/;"	f	class:Vector
operator -=	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator-=(const v2t<T> &src)$/;"	f	class:v2t
operator -=	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator-=(const v3t<T> &src)$/;"	f	class:v3t
operator -=	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator-=(const v4t<T> &src)$/;"	f	class:v4t
operator -=	src/drivers/olethros/TrackData.h	/^    Point& operator-= (const Point& rhs)$/;"	f	class:Point
operator -=	src/libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator-=(const v2t<T> &src)$/;"	f	class:v2t
operator -=	src/libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator-=(const v3t<T> &src)$/;"	f	class:v3t
operator -=	src/libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator-=(const v4t<T> &src)$/;"	f	class:v4t
operator -=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point& Point::operator-=(const Vector& v) {$/;"	f	class:Point
operator -=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator-=(const Quaternion& q) {$/;"	f	class:Quaternion
operator -=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator-=(const Vector& v) {$/;"	f	class:Vector
operator /	export/include/3D/Quaternion.h	/^inline Quaternion operator\/(const Quaternion& q, Scalar s) {$/;"	f
operator /	export/include/3D/Vector.h	/^inline Vector operator\/(const Vector& v, Scalar s) {$/;"	f
operator /	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator\/(const T s) const$/;"	f	class:v2t
operator /	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator\/(const T s) const$/;"	f	class:v3t
operator /	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator\/(const T s) const$/;"	f	class:v4t
operator /	src/drivers/berniw/linalg.h	/^inline v3d v3d::operator\/(const double s)$/;"	f	class:v3d
operator /	src/drivers/berniw2/linalg.h	/^inline v3d v3d::operator\/(const double s)$/;"	f	class:v3d
operator /	src/drivers/berniw3/linalg.h	/^inline v3d v3d::operator\/(const double s)$/;"	f	class:v3d
operator /	src/drivers/olethros/TrackData.h	/^    Point operator\/ (const float& rhs)$/;"	f	class:Point
operator /	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::operator\/(const T s) const$/;"	f	class:v2t
operator /	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> v3t<T>::operator\/(const T s) const$/;"	f	class:v3t
operator /	src/libs/math/v4_t.h	/^template<class T> inline v4t<T> v4t<T>::operator\/(const T s) const$/;"	f	class:v4t
operator /	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion operator\/(const Quaternion& q, Scalar s) {$/;"	f
operator /	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector operator\/(const Vector& v, Scalar s) {$/;"	f
operator /=	export/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator\/=(Scalar s) {$/;"	f	class:Quaternion
operator /=	export/include/3D/Vector.h	/^inline Vector& Vector::operator\/=(Scalar s) {$/;"	f	class:Vector
operator /=	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator\/=(const T s)$/;"	f	class:v2t
operator /=	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator\/=(const T s)$/;"	f	class:v3t
operator /=	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator\/=(const T s)$/;"	f	class:v4t
operator /=	src/drivers/olethros/TrackData.h	/^    Point& operator\/= (const float& rhs)$/;"	f	class:Point
operator /=	src/libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator\/=(const T s)$/;"	f	class:v2t
operator /=	src/libs/math/v3_t.h	/^template<class T> inline v3t<T>& v3t<T>::operator\/=(const T s)$/;"	f	class:v3t
operator /=	src/libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator\/=(const T s)$/;"	f	class:v4t
operator /=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion& Quaternion::operator\/=(Scalar s) {$/;"	f	class:Quaternion
operator /=	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector& Vector::operator\/=(Scalar s) {$/;"	f	class:Vector
operator <	export/include/3D/Point.h	/^inline bool operator<(const Point& p1, const Point& p2) {$/;"	f
operator <	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline bool operator<(const Point& p1, const Point& p2) {$/;"	f
operator <	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^inline bool operator<(const Encounter& x, const Encounter& y) { $/;"	f
operator <	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^inline bool operator<(const Endpoint& a, const Endpoint& b) {$/;"	f
operator <<	export/include/3D/Matrix.h	/^inline ostream& operator<<(ostream& os, const Matrix& m) {$/;"	f
operator <<	export/include/3D/Tuple3.h	/^inline ostream& operator<<(ostream& os, const Tuple3& t) {$/;"	f
operator <<	export/include/3D/Tuple4.h	/^inline ostream& operator<<(ostream& os, const Tuple4& t) {$/;"	f
operator <<	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline ostream& operator<<(ostream& os, const Matrix& m) {$/;"	f
operator <<	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^inline ostream& operator<<(ostream& os, const Tuple3& t) {$/;"	f
operator <<	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^inline ostream& operator<<(ostream& os, const Tuple4& t) {$/;"	f
operator =	export/include/3D/Point.h	/^inline Point& Point::operator=(const Vector& v) {$/;"	f	class:Point
operator =	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator=(const v2t<T> &src)$/;"	f	class:v2t
operator =	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator=(const v3t<T> &src)$/;"	f	class:v2t
operator =	export/include/tmath/v3_t.h	/^template<class T> inline v3t<T> & v3t<T>::operator=(const v3t<T> &src)$/;"	f	class:v3t
operator =	export/include/tmath/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator=(const v4t<T> &src)$/;"	f	class:v4t
operator =	src/drivers/berniw/linalg.h	/^inline v3d & v3d::operator=(const v3d &src)$/;"	f	class:v3d
operator =	src/drivers/berniw2/linalg.h	/^inline v3d & v3d::operator=(const v3d &src)$/;"	f	class:v3d
operator =	src/drivers/berniw3/linalg.h	/^inline v3d & v3d::operator=(const v3d &src)$/;"	f	class:v3d
operator =	src/drivers/olethros/TrackData.h	/^    Point& operator= (const Point& rhs)$/;"	f	class:Point
operator =	src/drivers/olethros/geometry.cpp	/^Vector& Vector::operator= (const Vector& rhs)$/;"	f	class:Vector
operator =	src/drivers/olethros/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	src/drivers/sparkle/linalg.h	/^inline v2d& v2d::operator=(const v2d &src)$/;"	f	class:v2d
operator =	src/libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator=(const v2t<T> &src)$/;"	f	class:v2t
operator =	src/libs/math/v2_t.h	/^template<class T> inline v2t<T>& v2t<T>::operator=(const v3t<T> &src)$/;"	f	class:v2t
operator =	src/libs/math/v3_t.h	/^template<class T> inline v3t<T> & v3t<T>::operator=(const v3t<T> &src)$/;"	f	class:v3t
operator =	src/libs/math/v4_t.h	/^template<class T> inline v4t<T>& v4t<T>::operator=(const v4t<T> &src)$/;"	f	class:v4t
operator =	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point& Point::operator=(const Vector& v) {$/;"	f	class:Point
operator ==	export/include/3D/Tuple3.h	/^inline bool operator==(const Tuple3& t1, const Tuple3& t2) {$/;"	f
operator ==	export/include/3D/Tuple4.h	/^inline bool operator==(const Tuple4& t1, const Tuple4& t2) {$/;"	f
operator ==	export/include/tmath/v2_t.h	/^template<class T> inline int v2t<T>::operator==(const v2t<T> &s) const$/;"	f	class:v2t
operator ==	export/include/tmath/v3_t.h	/^template<class T> inline int v3t<T>::operator==(const v3t<T> &s) const$/;"	f	class:v3t
operator ==	export/include/tmath/v4_t.h	/^template<class T> inline int v4t<T>::operator==(const v4t<T> &s) const$/;"	f	class:v4t
operator ==	src/libs/math/v2_t.h	/^template<class T> inline int v2t<T>::operator==(const v2t<T> &s) const$/;"	f	class:v2t
operator ==	src/libs/math/v3_t.h	/^template<class T> inline int v3t<T>::operator==(const v3t<T> &s) const$/;"	f	class:v3t
operator ==	src/libs/math/v4_t.h	/^template<class T> inline int v4t<T>::operator==(const v4t<T> &s) const$/;"	f	class:v4t
operator ==	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^inline bool operator==(const Tuple3& t1, const Tuple3& t2) {$/;"	f
operator ==	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^inline bool operator==(const Tuple4& t1, const Tuple4& t2) {$/;"	f
operator []	export/include/3D/Matrix.h	/^  Vector&       operator[](int i)       { return *(Vector *)elem[i]; }$/;"	f	class:Matrix
operator []	export/include/3D/Matrix.h	/^  const Vector& operator[](int i) const { return *(Vector *)elem[i]; }$/;"	f	class:Matrix
operator []	export/include/3D/Tuple3.h	/^  Scalar&       operator[](int i)       { return comp[i]; }$/;"	f	class:Tuple3
operator []	export/include/3D/Tuple3.h	/^  const Scalar& operator[](int i) const { return comp[i]; }$/;"	f	class:Tuple3
operator []	export/include/3D/Tuple4.h	/^  Scalar&       operator[](int i)       { return comp[i]; }$/;"	f	class:Tuple4
operator []	export/include/3D/Tuple4.h	/^  const Scalar& operator[](int i) const { return comp[i]; }$/;"	f	class:Tuple4
operator []	src/drivers/olethros/TrackData.h	/^    Segment& operator[](int i)$/;"	f	class:SegmentList
operator []	src/drivers/olethros/geometry.cpp	/^const float& Vector::operator[] (int index) const$/;"	f	class:Vector
operator []	src/drivers/olethros/geometry.cpp	/^float& Vector::operator[] (int index)$/;"	f	class:Vector
operator []	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Vector&       operator[](int i)       { return *(Vector *)elem[i]; }$/;"	f	class:Matrix
operator []	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  const Vector& operator[](int i) const { return *(Vector *)elem[i]; }$/;"	f	class:Matrix
operator []	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  Scalar&       operator[](int i)       { return comp[i]; }$/;"	f	class:Tuple3
operator []	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  const Scalar& operator[](int i) const { return comp[i]; }$/;"	f	class:Tuple3
operator []	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  Scalar&       operator[](int i)       { return comp[i]; }$/;"	f	class:Tuple4
operator []	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  const Scalar& operator[](int i) const { return comp[i]; }$/;"	f	class:Tuple4
operator []	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  int operator[](int i) const { return indices[i]; }$/;"	f	class:IndexArray
operator []	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  const Point& operator[](int i) const { return base[index[i]]; }$/;"	f	class:Polytope
operator []	src/modules/simu/simuv2/SOLID-2.0/src/VertexBase.h	/^  const Point& operator[](int i) const { return ((const Point *)base)[i]; }$/;"	f	class:VertexBase
opponent	src/drivers/bt/driver.h	/^		Opponent *opponent;		\/\/ The array of opponents.$/;"	m	class:Driver
opponent	src/drivers/bt/opponent.h	/^		Opponent *opponent;$/;"	m	class:Opponents
opponent	src/drivers/damned/driver.h	/^		Opponent *opponent;		\/\/ The array of opponents.$/;"	m	class:Driver
opponent	src/drivers/damned/opponent.h	/^		Opponent *opponent;$/;"	m	class:Opponents
opponent	src/drivers/olethros/driver.h	/^	Opponent *opponent;		\/\/\/< The array of opponents.$/;"	m	class:olethros::Driver
opponent	src/drivers/olethros/opponent.h	/^		Opponent *opponent;$/;"	m	class:olethros::Opponents
opponent	src/drivers/sparkle/driver.h	/^		Opponent *opponent;		\/* the array of opponents *\/$/;"	m	class:Driver
opponent	src/drivers/sparkle/opponent.h	/^		Opponent *opponent;$/;"	m	class:Opponents
opponents	src/drivers/bt/driver.h	/^		Opponents *opponents;	\/\/ The container for opponents.$/;"	m	class:Driver
opponents	src/drivers/damned/driver.h	/^		Opponents *opponents;	\/\/ The container for opponents.$/;"	m	class:Driver
opponents	src/drivers/olethros/driver.h	/^	Opponents *opponents;	\/\/\/< The container for opponents.$/;"	m	class:olethros::Driver
opponents	src/drivers/sparkle/driver.h	/^		Opponents *opponents;	\/* the container for opponents *\/$/;"	m	class:Driver
optimize	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::optimize(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize2	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::optimize2(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optimize3	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::optimize3(int start, int range, double w)$/;"	f	class:Pathfinder
optionHandle	src/libs/client/optionmenu.cpp	/^static void *optionHandle = NULL;$/;"	v	file:
options	src/modules/graphic/ssggraph/grscene.cpp	/^static ssgLoaderOptionsEx	options;$/;"	v	file:
optpathinitialized	src/drivers/inferno/pathfinder.cpp	/^bool Pathfinder::optpathinitialized = false;$/;"	m	class:Pathfinder	file:
optpathinitialized	src/drivers/inferno/pathfinder.h	/^		static bool optpathinitialized;	\/\/ Precomuted path is shared between instances, is it initialized?$/;"	m	class:Pathfinder
optpathinitialized	src/drivers/lliaw/pathfinder.cpp	/^bool Pathfinder::optpathinitialized = false;$/;"	m	class:Pathfinder	file:
optpathinitialized	src/drivers/lliaw/pathfinder.h	/^		static bool optpathinitialized;	\/\/ Precomuted path is shared between instances, is it initialized?$/;"	m	class:Pathfinder
optpathinitialized	src/drivers/tita/pathfinder.cpp	/^bool Pathfinder::optpathinitialized = false;$/;"	m	class:Pathfinder	file:
optpathinitialized	src/drivers/tita/pathfinder.h	/^		static bool optpathinitialized;	\/\/ Precomuted path is shared between instances, is it initialized?$/;"	m	class:Pathfinder
orientation	src/libs/tgfclient/gui.h	/^    int			orientation;$/;"	m	struct:__anon64
orig_vertices	src/windows/include/plib/ssgaWaveSystem.h	/^  sgVec3 *orig_vertices  ;$/;"	m	class:ssgaWaveSystem
origin	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  Point origin;$/;"	m	class:Transform
ortho	src/windows/include/plib/sg.h	/^  int ortho ;$/;"	m	class:sgFrustum
ortho	src/windows/include/plib/sg.h	/^  int ortho ;$/;"	m	class:sgdFrustum
orthoXform	src/windows/include/plib/sg.h	/^  void orthoXform ( const sgMat4 m )$/;"	f	class:sgSphere
orthoXform	src/windows/include/plib/sg.h	/^  void orthoXform ( const sgdMat4 m )$/;"	f	class:sgdSphere
osErr	src/windows/include/plib/sl.h	/^  OSErr          osErr ;$/;"	m	class:slDSP
out	src/tools/texmapper/maintexmapper.cpp	/^FILE	*in, *out;$/;"	v
outAxis	src/modules/simu/simuv2/differential.h	/^    tDynAxis	*outAxis[2];$/;"	m	struct:__anon20
outCtrl	src/libs/tgf/params.cpp	/^	struct parmOutput outCtrl;$/;"	m	struct:parmHandle	typeref:struct:parmHandle::parmOutput	file:
outfile	src/misc/png2jpg/png2jpg.c	/^static char 	*outfile;$/;"	v	file:
outfile	src/tools/nfsperf/mainnfsperf.cpp	/^char	*outfile = "carp.xml";$/;"	v
output	src/libs/tgfclient/guifont.cpp	/^void GfuiFontClass::output(int X, int Y, const char* text)$/;"	f	class:GfuiFontClass
outputBase	export/include/raceman.h	/^    char	*outputBase;$/;"	m	struct:RmMovieCapture
outputBase	src/interfaces/raceman.h	/^    char	*outputBase;$/;"	m	struct:RmMovieCapture
output_flush_fn	src/windows/include/png.h	/^   png_flush_ptr output_flush_fn;\/* Function for flushing output *\/$/;"	m	struct:png_struct_def
ovCullface	src/windows/include/plib/ssg.h	/^  int       ovCullface         ;$/;"	m	class:ssgContext
ovState	src/windows/include/plib/ssg.h	/^  ssgState *ovState            ;$/;"	m	class:ssgContext
ovTexture	src/windows/include/plib/ssg.h	/^  int       ovTexture          ;$/;"	m	class:ssgContext
overallRatio	src/modules/simu/simuv2/transmission.h	/^    tdble	overallRatio[MAX_GEARS];	\/* including final drive ratio *\/$/;"	m	struct:__anon28
overlaptimer	src/drivers/berniw/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	src/drivers/berniw2/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	src/drivers/berniw3/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	src/drivers/bt/opponent.h	/^		float overlaptimer;$/;"	m	class:Opponent
overlaptimer	src/drivers/damned/opponent.h	/^		float overlaptimer;$/;"	m	class:Opponent
overlaptimer	src/drivers/inferno/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	src/drivers/lliaw/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overlaptimer	src/drivers/olethros/opponent.h	/^		float overlaptimer;$/;"	m	class:olethros::Opponent
overlaptimer	src/drivers/tita/pathfinder.h	/^		tOverlapTimer* overlaptimer;$/;"	m	class:Pathfinder
overriddenState	src/windows/include/plib/ssg.h	/^  ssgState *overriddenState () { return ovState ; }$/;"	f	class:ssgContext
overtake	src/drivers/berniw/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	src/drivers/berniw2/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	src/drivers/berniw3/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	src/drivers/inferno/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	src/drivers/lliaw/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtake	src/drivers/tita/pathfinder.cpp	/^int Pathfinder::overtake(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
overtakee	src/drivers/berniw/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon119
overtakee	src/drivers/berniw2/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon94
overtakee	src/drivers/berniw3/pathfinder.h	/^	bool overtakee;			\/* is this the guy to overtake? *\/$/;"	m	struct:__anon110
overtakee	src/drivers/inferno/pathfinder.h	/^	bool overtakee;			\/\/ is this the guy to overtake?$/;"	m	struct:__anon136
overtakee	src/drivers/lliaw/pathfinder.h	/^	bool overtakee;			\/\/ is this the guy to overtake?$/;"	m	struct:__anon129
overtakee	src/drivers/tita/pathfinder.h	/^	bool overtakee;			\/\/ is this the guy to overtake?$/;"	m	struct:__anon102
overtaking	src/drivers/olethros/driver.h	/^	bool overtaking; \/\/\/< are we overtaking?$/;"	m	class:olethros::Driver
own_handle	src/windows/include/plib/ssg.h	/^  int own_handle ;$/;"	m	class:ssgTexture
own_mem	src/windows/include/plib/ssg.h	/^  bool         own_mem ;  \/* Do we own the list memory ? *\/$/;"	m	class:ssgSimpleList
p	export/include/learning/Distribution.h	/^	real* p; \/\/\/< probabilities of outcomes$/;"	m	class:DiscreteDistribution
p	export/include/tmath/straight2_t.h	/^		v2t<T> p;	\/\/ Point on the straight.$/;"	m	class:straight2t
p	src/drivers/berniw/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	src/drivers/berniw2/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	src/drivers/berniw3/pathfinder.h	/^		v3d p;			\/* position in space, dynamic trajectory *\/$/;"	m	class:PathSeg
p	src/drivers/bt/pit.h	/^		SplinePoint p[NPOINTS];			\/\/ Spline points.$/;"	m	class:Pit
p	src/drivers/damned/pit.h	/^		SplinePoint p[NPOINTS];			\/\/ Spline points.$/;"	m	class:Pit
p	src/drivers/inferno/pathfinder.h	/^				vec2d p;		\/\/ Position in space, dynamic trajectory.$/;"	m	class:PathSeg::pseg
p	src/drivers/lliaw/pathfinder.h	/^				vec2d p;		\/\/ Position in space, dynamic trajectory.$/;"	m	class:PathSeg::pseg
p	src/drivers/olethros/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	src/drivers/olethros/pit.h	/^		SplinePoint p[NPOINTS];			\/\/ Spline points.$/;"	m	class:olethros::Pit
p	src/drivers/sparkle/linalg.h	/^        v2d p;          \/* point on the straight *\/$/;"	m	class:Straight
p	src/drivers/sparkle/pit.h	/^		SplinePoint p[NPOINTS]; \/* spline points *\/$/;"	m	class:Pit
p	src/drivers/tita/pathfinder.h	/^				vec2d p;		\/\/ Position in space, dynamic trajectory.$/;"	m	class:PathSeg::pseg
p	src/libs/learning/Distribution.h	/^	real* p; \/\/\/< probabilities of outcomes$/;"	m	class:DiscreteDistribution
p	src/libs/math/straight2_t.h	/^		v2t<T> p;	\/\/ Point on the straight.$/;"	m	class:straight2t
p	src/libs/txml/hashtable.h	/^  NAMED **p;$/;"	m	struct:__anon74
p	src/modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 p; \/\/\/< position$/;"	m	struct:WheelSoundData_
p	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Point p[4];    \/\/ support points of object A in local coordinates $/;"	v	file:
p0	src/windows/include/plib/sg.h	/^  sgParticle *p0 ;$/;"	m	class:sgSpringDamper
p1	src/windows/include/plib/sg.h	/^  sgParticle *p1 ;$/;"	m	class:sgSpringDamper
pQ	export/include/learning/policy.h	/^	real pQ; \/\/\/< previous Q$/;"	m	class:DiscretePolicy
pQ	src/libs/learning/policy.h	/^	real pQ; \/\/\/< previous Q$/;"	m	class:DiscretePolicy
pTrackSeg	src/drivers/berniw/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	src/drivers/berniw2/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	src/drivers/berniw3/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/* id of the corresponding segment *\/$/;"	m	class:TrackSegment
pTrackSeg	src/drivers/inferno/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment
pTrackSeg	src/drivers/inferno/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment2D
pTrackSeg	src/drivers/lliaw/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment
pTrackSeg	src/drivers/lliaw/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment2D
pTrackSeg	src/drivers/tita/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment
pTrackSeg	src/drivers/tita/trackdesc.h	/^		tTrackSeg* pTrackSeg;	\/\/ Id of the corresponding segment.$/;"	m	class:TrackSegment2D
p_lis	src/modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 p_lis; \/\/\/< listener position for this source$/;"	m	class:SoundSource
p_src	src/modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 p_src; \/\/\/< source position$/;"	m	class:SoundSource
pa	export/include/learning/policy.h	/^	int pa; \/\/\/< previous action$/;"	m	class:DiscretePolicy
pa	src/libs/learning/policy.h	/^	int pa; \/\/\/< previous action$/;"	m	class:DiscretePolicy
paccel	src/drivers/human/human.h	/^	tdble	paccel;$/;"	m	struct:HumanContext
packers	src/modules/simu/simuv2/susp.h	/^    tdble packers;     \/* packer size (min susp. travel) *\/$/;"	m	struct:__anon17
paeth_row	src/windows/include/png.h	/^   png_bytep paeth_row;       \/* buffer to save "Paeth" row when filtering *\/$/;"	m	struct:png_struct_def
pairList	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  PairList pairList;$/;"	m	class:RespTable
palette	src/windows/include/png.h	/^   png_colorp palette;        \/* palette from the input file *\/$/;"	m	struct:png_struct_def
palette	src/windows/include/png.h	/^   png_colorp palette;      \/* array of color values (valid & PNG_INFO_PLTE) *\/$/;"	m	struct:png_info_struct
palette_lookup	src/windows/include/png.h	/^   png_bytep palette_lookup;         \/* lookup table for dithering *\/$/;"	m	struct:png_struct_def
param	export/include/confscreens.h	/^    void        	*param;$/;"	m	struct:__anon178
param	export/include/confscreens.h	/^    void        *param;		\/* Race manager parameters where to set the selected track *\/$/;"	m	struct:__anon176
param	export/include/confscreens.h	/^    void        *param;$/;"	m	struct:__anon177
param	export/include/raceman.h	/^    void		*param;$/;"	m	struct:__anon209
param	export/include/racescreens.h	/^    void        	*param;$/;"	m	struct:__anon174
param	export/include/racescreens.h	/^    void        *param;		\/* Race manager parameters where to set the selected track *\/$/;"	m	struct:__anon172
param	export/include/racescreens.h	/^    void        *param;$/;"	m	struct:__anon173
param	src/interfaces/raceman.h	/^    void		*param;$/;"	m	struct:__anon168
param	src/libs/confscreens/confscreens.h	/^    void        	*param;$/;"	m	struct:__anon42
param	src/libs/confscreens/confscreens.h	/^    void        *param;		\/* Race manager parameters where to set the selected track *\/$/;"	m	struct:__anon40
param	src/libs/confscreens/confscreens.h	/^    void        *param;$/;"	m	struct:__anon41
param	src/libs/racescreens/racescreens.h	/^    void        	*param;$/;"	m	struct:__anon36
param	src/libs/racescreens/racescreens.h	/^    void        *param;		\/* Race manager parameters where to set the selected track *\/$/;"	m	struct:__anon34
param	src/libs/racescreens/racescreens.h	/^    void        *param;$/;"	m	struct:__anon35
param	src/libs/tgf/params.cpp	/^struct param$/;"	s	file:
paramHash	src/libs/tgf/params.cpp	/^    void				*paramHash;	\/**< Hash table for parameter access *\/$/;"	m	struct:parmHeader	file:
paramHdle	src/libs/tgfclient/screen.cpp	/^static void	*paramHdle;$/;"	v	file:
paramList	src/libs/tgf/params.cpp	/^    struct paramHead			paramList;	\/**< List of the parameters of this section *\/$/;"	m	struct:section	typeref:struct:section::paramHead	file:
parametricslopesn	src/drivers/berniw/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	src/drivers/berniw2/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	src/drivers/berniw3/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	src/drivers/inferno/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	src/drivers/lliaw/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesn	src/drivers/tita/spline.cpp	/^void parametricslopesn($/;"	f
parametricslopesp	src/drivers/berniw/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	src/drivers/berniw2/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	src/drivers/berniw3/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	src/drivers/inferno/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	src/drivers/lliaw/spline.cpp	/^void parametricslopesp($/;"	f
parametricslopesp	src/drivers/tita/spline.cpp	/^void parametricslopesp($/;"	f
params	export/include/raceman.h	/^    void		*params;	\/**< Raceman parameters *\/$/;"	m	struct:RmInfo
params	export/include/track.h	/^    void	  *params;	\/**< Parameters handle *\/$/;"	m	struct:__anon186
params	src/interfaces/raceman.h	/^    void		*params;	\/**< Raceman parameters *\/$/;"	m	struct:RmInfo
params	src/interfaces/track.h	/^    void	  *params;	\/**< Parameters handle *\/$/;"	m	struct:__anon153
params	src/modules/simu/simuv2/carstruct.h	/^    void	*params;$/;"	m	struct:__anon18
paramsHandle	export/include/car.h	/^    void	*paramsHandle;	\/**< accessible parameters for modules *\/$/;"	m	struct:__anon201
paramsHandle	src/interfaces/car.h	/^    void	*paramsHandle;	\/**< accessible parameters for modules *\/$/;"	m	struct:__anon161
parent	src/libs/tgf/params.cpp	/^    struct section			*parent;	\/**< Upper section *\/$/;"	m	struct:section	typeref:struct:section::section	file:
parent	src/libs/txml/xmlparse.c	/^  struct tag *parent;$/;"	m	struct:tag	typeref:struct:tag::tag	file:
parents	src/windows/include/plib/ssg.h	/^  ssgList parents ;$/;"	m	class:ssgEntity
parmClean	src/libs/tgf/params.cpp	/^static void parmClean (struct parmHeader *conf)$/;"	f	file:
parmHandle	src/libs/tgf/params.cpp	/^struct parmHandle$/;"	s	file:
parmHandleList	src/libs/tgf/params.cpp	/^static struct parmHead	parmHandleList;$/;"	v	typeref:struct:parmHead	file:
parmHeader	src/libs/tgf/params.cpp	/^struct parmHeader$/;"	s	file:
parmName	src/drivers/human/pref.cpp	/^    char	*parmName;$/;"	m	struct:__anon145	file:
parmOutput	src/libs/tgf/params.cpp	/^struct parmOutput$/;"	s	file:
parmReleaseHandle	src/libs/tgf/params.cpp	/^static void parmReleaseHandle (struct parmHandle *parmHandle)$/;"	f	file:
parmReleaseHeader	src/libs/tgf/params.cpp	/^static void parmReleaseHeader(struct parmHeader *conf)$/;"	f	file:
parseEndByteIndex	src/libs/txml/xmlparse.c	/^  long parseEndByteIndex;$/;"	m	struct:__anon82	file:
parseEndByteIndex	src/libs/txml/xmlparse.c	289;"	d	file:
parseEndPtr	src/libs/txml/xmlparse.c	/^  const char *parseEndPtr;$/;"	m	struct:__anon82	file:
parseEndPtr	src/libs/txml/xmlparse.c	290;"	d	file:
parsePseudoAttribute	src/libs/txml/xmltok.c	/^int parsePseudoAttribute(const ENCODING *enc,$/;"	f	file:
parseXml	src/libs/tgf/params.cpp	/^parseXml (struct parmHandle *parmHandle, char *buf, int len, int done)$/;"	f	file:
parser	src/libs/tgf/params.cpp	/^	XML_Parser parser;$/;"	m	struct:parmHandle	file:
parserXmlInit	src/libs/tgf/params.cpp	/^parserXmlInit (struct parmHandle *parmHandle)$/;"	f	file:
particle	src/windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticle *particle ;$/;"	m	class:ssgaParticleSystem
particle_create	src/windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticleCreateFunc particle_create ;$/;"	m	class:ssgaParticleSystem
particle_delete	src/windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticleDeleteFunc particle_delete ;$/;"	m	class:ssgaParticleSystem
particle_update	src/windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticleUpdateFunc particle_update ;$/;"	m	class:ssgaParticleSystem
partnerList	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.cpp	/^PartnerList partnerList;$/;"	v
pass	src/windows/include/png.h	/^   png_byte pass;             \/* current interlace pass (0 - 6) *\/$/;"	m	struct:png_struct_def
path	export/include/confscreens.h	/^    char		*path;$/;"	m	struct:__anon179
path	export/include/racescreens.h	/^    char		*path;$/;"	m	struct:__anon175
path	src/drivers/inferno/pathfinder.h	/^		PathSegOpt* path;	\/\/ Optimal trajectory (TODO: static).$/;"	m	class:PathSegPit
path	src/drivers/lliaw/pathfinder.h	/^		PathSegOpt* path;	\/\/ Optimal trajectory (TODO: static).$/;"	m	class:PathSegPit
path	src/drivers/tita/pathfinder.h	/^		PathSegOpt* path;	\/\/ Optimal trajectory (TODO: static).$/;"	m	class:PathSegPit
path	src/libs/confscreens/confscreens.h	/^    char		*path;$/;"	m	struct:__anon43
path	src/libs/raceengineclient/raceinit.cpp	/^static char path[1024];$/;"	v	file:
path	src/libs/raceengineclient/racemain.cpp	/^static char path[1024];$/;"	v	file:
path	src/libs/raceengineclient/racemanmenu.cpp	/^static char		path[1024];$/;"	v	file:
path	src/libs/raceengineclient/raceresults.cpp	/^static char path[1024];$/;"	v	file:
path	src/libs/racescreens/driverselect.cpp	/^static char		path[256];    $/;"	v	file:
path	src/libs/racescreens/racescreens.h	/^    char		*path;$/;"	m	struct:__anon37
path	src/libs/racescreens/trackselect.cpp	/^static char path[1024];$/;"	v	file:
path	src/modules/graphic/ssggraph/grboard.cpp	/^static char	path[1024];$/;"	v	file:
path	src/modules/graphic/ssggraph/grcam.cpp	/^static char path[1024];$/;"	v	file:
path	src/modules/graphic/ssggraph/grscreen.cpp	/^static char path[1024];$/;"	v	file:
path	src/modules/track/track3.cpp	/^static char	path[256];$/;"	v	file:
path	src/modules/track/track4.cpp	/^static char	path[256];$/;"	v	file:
path	src/tools/trackgen/objects.cpp	/^static char		path[1024];$/;"	v	file:
path	src/windows/include/plib/ssg.h	/^  ssgEntity *path [ SSG_MAXPATH ] ;$/;"	m	class:ssgHit
path2	src/libs/raceengineclient/racemain.cpp	/^static char path2[1024];$/;"	v	file:
path2	src/libs/raceengineclient/raceresults.cpp	/^static char path2[1024];$/;"	v	file:
path2	src/modules/graphic/ssggraph/grscreen.cpp	/^static char path2[1024];$/;"	v	file:
pathDynSlope	src/drivers/inferno/pathfinder.h	/^inline double Pathfinder::pathDynSlope(int id) {$/;"	f	class:Pathfinder
pathDynSlope	src/drivers/lliaw/pathfinder.h	/^inline double Pathfinder::pathDynSlope(int id) {$/;"	f	class:Pathfinder
pathDynSlope	src/drivers/tita/pathfinder.h	/^inline double Pathfinder::pathDynSlope(int id) {$/;"	f	class:Pathfinder
pathOptSlope	src/drivers/inferno/pathfinder.h	/^inline double Pathfinder::pathOptSlope(int id) {$/;"	f	class:Pathfinder
pathOptSlope	src/drivers/lliaw/pathfinder.h	/^inline double Pathfinder::pathOptSlope(int id) {$/;"	f	class:Pathfinder
pathOptSlope	src/drivers/tita/pathfinder.h	/^inline double Pathfinder::pathOptSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	src/drivers/berniw/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	src/drivers/berniw2/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pathSlope	src/drivers/berniw3/pathfinder.h	/^inline double Pathfinder::pathSlope(int id) {$/;"	f	class:Pathfinder
pause	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::pause()$/;"	f	class:OpenalTorcsSound
pause	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::pause()$/;"	f	class:PlibTorcsSound
pause	src/windows/include/plib/sl.h	/^  virtual void pause ()$/;"	f	class:slPlayer
pause_time	src/windows/include/plib/ssg.h	/^  double  pause_time ;$/;"	m	class:ssgTimedSelector
paused	src/modules/graphic/ssggraph/TorcsSound.h	/^	bool playing, paused;$/;"	m	class:OpenalTorcsSound
paused	src/modules/graphic/ssggraph/TorcsSound.h	/^    bool paused; \/\/\/< sound is paused$/;"	m	class:PlibTorcsSound
pbrake	src/drivers/human/human.h	/^	tdble	pbrake;$/;"	m	struct:HumanContext
pcal_X0	src/windows/include/png.h	/^   png_int_32 pcal_X0;      \/* minimum value *\/$/;"	m	struct:png_info_struct
pcal_X1	src/windows/include/png.h	/^   png_int_32 pcal_X1;      \/* maximum value *\/$/;"	m	struct:png_info_struct
pcal_nparams	src/windows/include/png.h	/^   png_byte pcal_nparams;   \/* number of parameters given in pcal_params *\/$/;"	m	struct:png_info_struct
pcal_params	src/windows/include/png.h	/^   png_charpp pcal_params;  \/* ASCII strings containing parameter values *\/$/;"	m	struct:png_info_struct
pcal_purpose	src/windows/include/png.h	/^   png_charp pcal_purpose;  \/* pCAL chunk description string *\/$/;"	m	struct:png_info_struct
pcal_type	src/windows/include/png.h	/^   png_byte pcal_type;      \/* equation type (see PNG_EQUATION_ below) *\/$/;"	m	struct:png_info_struct
pcal_units	src/windows/include/png.h	/^   png_charp pcal_units;    \/* Latin-1 string giving physical units *\/$/;"	m	struct:png_info_struct
pcdata	export/include/xml.h	/^    char		*pcdata;	\/* string associated with this element *\/$/;"	m	struct:xmlElement
pcdata	src/libs/txml/xml.h	/^    char		*pcdata;	\/* string associated with this element *\/$/;"	m	struct:xmlElement
pd	src/drivers/berniw/pathfinder.h	/^	double pd;$/;"	m	struct:__anon118
pd	src/drivers/berniw2/pathfinder.h	/^	double pd;$/;"	m	struct:__anon93
pd	src/drivers/berniw3/pathfinder.h	/^	double pd;$/;"	m	struct:__anon109
pdf	src/libs/learning/Distribution.cpp	/^real DiscreteDistribution::pdf(real x)$/;"	f	class:DiscreteDistribution
pdf	src/libs/learning/Distribution.cpp	/^real ExponentialDistribution::pdf(real x)$/;"	f	class:ExponentialDistribution
pdf	src/libs/learning/Distribution.cpp	/^real LaplacianDistribution::pdf(real x)$/;"	f	class:LaplacianDistribution
pdf	src/libs/learning/Distribution.cpp	/^real NormalDistribution::pdf(real x)$/;"	f	class:NormalDistribution
pdf	src/libs/learning/Distribution.cpp	/^real UniformDistribution::pdf(real x)$/;"	f	class:UniformDistribution
penalty	export/include/car.h	/^    int penalty;	\/**< penalty type *\/$/;"	m	struct:CarPenalty
penalty	src/interfaces/car.h	/^    int penalty;	\/**< penalty type *\/$/;"	m	struct:CarPenalty
penaltyList	export/include/car.h	/^    tCarPenaltyHead	penaltyList;	\/**< List of current penalties *\/$/;"	m	struct:__anon198
penaltyList	src/interfaces/car.h	/^    tCarPenaltyHead	penaltyList;	\/**< List of current penalties *\/$/;"	m	struct:__anon158
pending_callback	src/windows/include/plib/sl.h	/^  slPendingCallBack pending_callback [ SL_MAX_CALLBACKS ] ;$/;"	m	class:slScheduler
perf_timer	src/windows/include/plib/ul.h	/^  static int perf_timer ;$/;"	m	class:ulClock
perf_timer	src/windows/include/ul.h	/^  static int perf_timer ;$/;"	m	class:ulClock
pf	src/drivers/berniw/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	src/drivers/berniw2/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	src/drivers/berniw3/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	src/drivers/inferno/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	src/drivers/lliaw/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
pf	src/drivers/tita/mycar.h	/^		Pathfinder* pf;$/;"	m	class:MyCar
phys_unit_type	src/windows/include/png.h	/^   png_byte phys_unit_type; \/* resolution type (see PNG_RESOLUTION_ below) *\/$/;"	m	struct:png_info_struct
pick	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:ssgVtxTableCarlight
pick	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:ssgVtxTableShadow
pick	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:ssgVtxTableSmoke
pick	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void pick ( int baseName )  { ssgVtxTable::pick(baseName);}$/;"	f	class:grVtxTable
pit	export/include/car.h	/^    tTrackOwnPit 	*pit;$/;"	m	struct:__anon198
pit	src/drivers/berniw/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	src/drivers/berniw2/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	src/drivers/berniw3/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	src/drivers/bt/driver.h	/^		Pit *pit;						\/\/ Pointer to the pit instance.$/;"	m	class:Driver
pit	src/drivers/damned/driver.h	/^		Pit *pit;						\/\/ Pointer to the pit instance.$/;"	m	class:Driver
pit	src/drivers/inferno/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	src/drivers/lliaw/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	src/drivers/olethros/driver.h	/^	Pit *pit;						\/\/\/< Pointer to the pit instance.$/;"	m	class:olethros::Driver
pit	src/drivers/sparkle/driver.h	/^		Pit *pit;				\/* pointer to the pit instance *\/$/;"	m	class:Driver
pit	src/drivers/tita/pathfinder.h	/^		bool pit;$/;"	m	class:Pathfinder
pit	src/interfaces/car.h	/^    tTrackOwnPit 	*pit;$/;"	m	struct:__anon158
pitCarIndex	export/include/track.h	/^	int pitCarIndex;	\/**< Index of the car in the car array below which occupies the pit. If the pit is free the value is TR_PIT_STATE_FREE *\/$/;"	m	struct:TrackOwnPit
pitCarIndex	src/interfaces/track.h	/^	int pitCarIndex;	\/**< Index of the car in the car array below which occupies the pit. If the pit is free the value is TR_PIT_STATE_FREE *\/$/;"	m	struct:TrackOwnPit
pitCmd	src/drivers/inferno2/inferno2.cpp	/^pitCmd(int index, tCarElt *car, tSituation *s)$/;"	f	file:
pitCommand	src/drivers/bt/driver.cpp	/^int Driver::pitCommand(tSituation *s)$/;"	f	class:Driver
pitCommand	src/drivers/damned/driver.cpp	/^int Driver::pitCommand(tSituation *s)$/;"	f	class:Driver
pitCommand	src/drivers/olethros/driver.cpp	/^    int Driver::pitCommand(tSituation *s)$/;"	f	class:olethros::Driver
pitCommand	src/drivers/sparkle/driver.cpp	/^int Driver::pitCommand(tSituation *s)$/;"	f	class:Driver
pitEnd	export/include/track.h	/^	tTrackSeg *pitEnd;			\/**< Pit lane segment *\/$/;"	m	struct:__anon183
pitEnd	src/interfaces/track.h	/^	tTrackSeg *pitEnd;			\/**< Pit lane segment *\/$/;"	m	struct:__anon150
pitEntry	export/include/track.h	/^	tTrackSeg *pitEntry;		\/**< Pit lane segment *\/$/;"	m	struct:__anon183
pitEntry	src/interfaces/track.h	/^	tTrackSeg *pitEntry;		\/**< Pit lane segment *\/$/;"	m	struct:__anon150
pitExit	export/include/track.h	/^	tTrackSeg *pitExit;			\/**< Pit lane segment *\/$/;"	m	struct:__anon183
pitExit	src/interfaces/track.h	/^	tTrackSeg *pitExit;			\/**< Pit lane segment *\/$/;"	m	struct:__anon150
pitLoc	src/drivers/berniw/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	src/drivers/berniw2/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	src/drivers/berniw3/pathfinder.h	/^		v3d pitLoc;				\/* location of pit *\/$/;"	m	class:Pathfinder
pitLoc	src/drivers/inferno/pathfinder.h	/^		vec2d pitLoc;			\/\/ location of pit.$/;"	m	class:Pathfinder
pitLoc	src/drivers/lliaw/pathfinder.h	/^		vec2d pitLoc;			\/\/ location of pit.$/;"	m	class:Pathfinder
pitLoc	src/drivers/tita/pathfinder.h	/^		vec2d pitLoc;			\/\/ location of pit.$/;"	m	class:Pathfinder
pitRefuel	src/drivers/bt/strategy.cpp	/^float SimpleStrategy2::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
pitRefuel	src/drivers/bt/strategy.cpp	/^float SimpleStrategy::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRefuel	src/drivers/damned/strategy.cpp	/^float SimpleStrategy2::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
pitRefuel	src/drivers/damned/strategy.cpp	/^float SimpleStrategy::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRefuel	src/drivers/olethros/strategy.cpp	/^float SimpleStrategy::pitRefuel(tCarElt* car, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
pitRepair	src/drivers/bt/strategy.cpp	/^int SimpleStrategy::pitRepair(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRepair	src/drivers/damned/strategy.cpp	/^int SimpleStrategy::pitRepair(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
pitRepair	src/drivers/olethros/strategy.cpp	/^int SimpleStrategy::pitRepair(tCarElt* car, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
pitSegId	src/drivers/berniw/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	src/drivers/berniw2/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	src/drivers/berniw3/pathfinder.h	/^		int pitSegId;			\/* segment id of pit *\/$/;"	m	class:Pathfinder
pitSegId	src/drivers/inferno/pathfinder.h	/^		int pitSegId;			\/\/ segment id of pit.$/;"	m	class:Pathfinder
pitSegId	src/drivers/lliaw/pathfinder.h	/^		int pitSegId;			\/\/ segment id of pit.$/;"	m	class:Pathfinder
pitSegId	src/drivers/tita/pathfinder.h	/^		int pitSegId;			\/\/ segment id of pit.$/;"	m	class:Pathfinder
pitStart	export/include/track.h	/^	tTrackSeg *pitStart;		\/**< Pit lane segment *\/$/;"	m	struct:__anon183
pitStart	src/interfaces/track.h	/^	tTrackSeg *pitStart;		\/**< Pit lane segment *\/$/;"	m	struct:__anon150
pitStop	src/drivers/berniw/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	src/drivers/berniw2/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	src/drivers/berniw3/pathfinder.h	/^		bool pitStop;			\/* pitstop ? *\/$/;"	m	class:Pathfinder
pitStop	src/drivers/inferno/pathfinder.h	/^		bool pitStop;			\/\/ pitstop ?$/;"	m	class:Pathfinder
pitStop	src/drivers/lliaw/pathfinder.h	/^		bool pitStop;			\/\/ pitstop ?$/;"	m	class:Pathfinder
pitStop	src/drivers/tita/pathfinder.h	/^		bool pitStop;			\/\/ pitstop ?$/;"	m	class:Pathfinder
pit_exit_timer	src/drivers/olethros/driver.h	/^	float pit_exit_timer;$/;"	m	class:olethros::Driver
pit_state	src/drivers/olethros/pit.h	/^		enum PitState pit_state;$/;"	m	class:olethros::Pit	typeref:enum:olethros::Pit::PitState
pitch	src/modules/graphic/ssggraph/TorcsSound.h	/^	float pitch; \/\/\/< Current pitch$/;"	m	class:TorcsSound
pitch_env	src/modules/graphic/ssggraph/TorcsSound.h	/^	slEnvelope* pitch_env; \/\/\/< pitch envelope$/;"	m	class:PlibTorcsSound
pitcmd	export/include/car.h	/^    tCarPitCmd		pitcmd;	\/**< private *\/$/;"	m	struct:CarElt
pitcmd	src/drivers/berniw/berniw.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/berniw2/berniw2.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/berniw3/berniw3.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/bt/bt.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/damned/damned.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/human/human.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/inferno/inferno.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/lliaw/lliaw.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/olethros/olethros.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	namespace:olethros
pitcmd	src/drivers/sparkle/sparkle.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/drivers/tita/tita.cpp	/^static int pitcmd(int index, tCarElt* car, tSituation *s)$/;"	f	file:
pitcmd	src/interfaces/car.h	/^    tCarPitCmd		pitcmd;	\/**< private *\/$/;"	m	struct:CarElt
pitcord	src/drivers/berniw/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitcord	src/drivers/berniw2/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitcord	src/drivers/berniw3/pathfinder.h	/^		v3d* pitcord;$/;"	m	class:Pathfinder
pitentry	src/drivers/bt/pit.h	/^		float pitentry;					\/\/ Distance to start line of the pit entry.$/;"	m	class:Pit
pitentry	src/drivers/damned/pit.h	/^		float pitentry;					\/\/ Distance to start line of the pit entry.$/;"	m	class:Pit
pitentry	src/drivers/olethros/pit.h	/^		float pitentry;					\/\/ Distance to start line of the pit entry.$/;"	m	class:olethros::Pit
pitentry	src/drivers/sparkle/pit.h	/^		float pitentry;         \/* distance to start line of the pit entry *\/$/;"	m	class:Pit
pitexit	src/drivers/bt/pit.h	/^		float pitexit;					\/\/ Distance to the start line of the pit exit.$/;"	m	class:Pit
pitexit	src/drivers/damned/pit.h	/^		float pitexit;					\/\/ Distance to the start line of the pit exit.$/;"	m	class:Pit
pitexit	src/drivers/olethros/pit.h	/^		float pitexit;					\/\/ Distance to the start line of the pit exit.$/;"	m	class:olethros::Pit
pitexit	src/drivers/sparkle/pit.h	/^		float pitexit;          \/* distance to the start line of the pit exit *\/$/;"	m	class:Pit
pitinfo	src/drivers/bt/pit.h	/^		tTrackPitInfo *pitinfo;			\/\/ General pit info.$/;"	m	class:Pit
pitinfo	src/drivers/damned/pit.h	/^		tTrackPitInfo *pitinfo;			\/\/ General pit info.$/;"	m	class:Pit
pitinfo	src/drivers/olethros/pit.h	/^		tTrackPitInfo *pitinfo;			\/\/ General pit info.$/;"	m	class:olethros::Pit
pitinfo	src/drivers/sparkle/pit.h	/^		tTrackPitInfo *pitinfo; \/* general pit info *\/$/;"	m	class:Pit
pits	export/include/track.h	/^    tTrackPitInfo pits;		\/**< Pits information *\/$/;"	m	struct:__anon186
pits	src/interfaces/track.h	/^    tTrackPitInfo pits;		\/**< Pits information *\/$/;"	m	struct:__anon153
pitspeedlimitsqr	src/drivers/bt/pit.h	/^		float pitspeedlimitsqr;			\/\/ The original speedlimit squared.$/;"	m	class:Pit
pitspeedlimitsqr	src/drivers/damned/pit.h	/^		float pitspeedlimitsqr;			\/\/ The original speedlimit squared.$/;"	m	class:Pit
pitspeedlimitsqr	src/drivers/olethros/pit.h	/^		float pitspeedlimitsqr;			\/\/ The original speedlimit squared.$/;"	m	class:olethros::Pit
pitspeedlimitsqr	src/drivers/sparkle/pit.h	/^		float pitspeedlimitsqr;	\/* the original speedlimit squared *\/$/;"	m	class:Pit
pitspeedsqrlimit	src/drivers/berniw/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	src/drivers/berniw2/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	src/drivers/berniw3/pathfinder.h	/^		double pitspeedsqrlimit;	\/* speed limit for pit lane squared *\/$/;"	m	class:Pathfinder
pitspeedsqrlimit	src/drivers/inferno/pathfinder.h	/^		double pitspeedsqrlimit;		\/\/ speed limit for pit lane squared.$/;"	m	class:Pathfinder
pitspeedsqrlimit	src/drivers/lliaw/pathfinder.h	/^		double pitspeedsqrlimit;		\/\/ speed limit for pit lane squared.$/;"	m	class:Pathfinder
pitspeedsqrlimit	src/drivers/tita/pathfinder.h	/^		double pitspeedsqrlimit;		\/\/ speed limit for pit lane squared.$/;"	m	class:Pathfinder
pitstop	src/drivers/bt/pit.h	/^		bool pitstop;					\/\/ Pitstop planned.$/;"	m	class:Pit
pitstop	src/drivers/damned/pit.h	/^		bool pitstop;					\/\/ Pitstop planned.$/;"	m	class:Pit
pitstop	src/drivers/olethros/pit.h	/^		bool pitstop;					\/\/ Pitstop planned.$/;"	m	class:olethros::Pit
pitstop	src/drivers/sparkle/pit.h	/^		bool pitstop;           \/* pitstop planned *\/$/;"	m	class:Pit
pittimer	src/drivers/bt/pit.h	/^		float pittimer;					\/\/ Timer for pit timeouts.$/;"	m	class:Pit
pittimer	src/drivers/damned/pit.h	/^		float pittimer;					\/\/ Timer for pit timeouts.$/;"	m	class:Pit
pittimer	src/drivers/olethros/pit.h	/^		float pittimer;					\/\/ Timer for pit timeouts.$/;"	m	class:olethros::Pit
pixel_depth	src/windows/include/png.h	/^   png_byte pixel_depth;      \/* number of bits per pixel *\/$/;"	m	struct:png_struct_def
pixel_depth	src/windows/include/png.h	/^   png_byte pixel_depth;    \/* number of bits per pixel *\/$/;"	m	struct:png_info_struct
pixel_depth	src/windows/include/png.h	/^   png_byte pixel_depth; \/* bits per pixel (depth * channels) *\/$/;"	m	struct:png_row_info_struct
plan	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc)$/;"	f	class:Pathfinder
plan	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc, int currentsegid)$/;"	f	class:Pathfinder
plan	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc, int currentsegid)$/;"	f	class:Pathfinder
plan	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plan	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::plan(MyCar* myc, int currentsegid)$/;"	f	class:Pathfinder
plan	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::plan(int trackSegId, tCarElt* car, tSituation *situation, MyCar* myc, OtherCar* ocar)$/;"	f	class:Pathfinder
plane	src/windows/include/plib/sg.h	/^  sgVec4 plane [ 6 ] ;$/;"	m	class:sgFrustum
plane	src/windows/include/plib/sg.h	/^  sgdVec4 plane [ 6 ] ;$/;"	m	class:sgdFrustum
plane	src/windows/include/plib/ssg.h	/^  sgVec4   plane ;$/;"	m	class:ssgHit
play	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::play()$/;"	f	class:OpenalTorcsSound
play	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::play()$/;"	f	class:PlibTorcsSound
play	src/windows/include/plib/sl.h	/^  void play ( void *buffer, size_t length ) { write ( buffer, length ) ; } $/;"	f	class:slDSP
player	src/windows/include/plib/sl.h	/^  slPlayer *player [ SL_MAX_SAMPLES ] ;$/;"	m	class:slScheduler
playing	src/modules/graphic/ssggraph/TorcsSound.h	/^	bool playing, paused;$/;"	m	class:OpenalTorcsSound
playing	src/modules/graphic/ssggraph/TorcsSound.h	/^	bool playing; \/\/\/< Sound is playing$/;"	m	class:PlibTorcsSound
plot	src/drivers/berniw/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	src/drivers/berniw2/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	src/drivers/berniw3/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	src/drivers/inferno/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	src/drivers/lliaw/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plot	src/drivers/tita/trackdesc.cpp	/^void TrackDesc::plot(char* filename)$/;"	f	class:TrackDesc
plotPath	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPath	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::plotPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
plotPitStopPath	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::plotPitStopPath(char* filename)$/;"	f	class:Pathfinder
png_FILE_p	src/windows/include/pngconf.h	/^typedef FILE                * png_FILE_p;$/;"	t
png_FILE_p	src/windows/include/pngconf.h	/^typedef HANDLE                png_FILE_p;$/;"	t
png_byte	src/windows/include/pngconf.h	/^typedef unsigned char png_byte;$/;"	t
png_bytep	src/windows/include/pngconf.h	/^typedef png_byte        FAR * png_bytep;$/;"	t
png_bytep_NULL	src/windows/include/png.h	331;"	d
png_bytep_NULL	src/windows/include/png.h	347;"	d
png_bytepp	src/windows/include/pngconf.h	/^typedef png_byte        FAR * FAR * png_bytepp;$/;"	t
png_bytepp_NULL	src/windows/include/png.h	332;"	d
png_bytepp_NULL	src/windows/include/png.h	348;"	d
png_charp	src/windows/include/pngconf.h	/^typedef char            FAR * png_charp;$/;"	t
png_charpp	src/windows/include/pngconf.h	/^typedef char            FAR * FAR * png_charpp;$/;"	t
png_charppp	src/windows/include/pngconf.h	/^typedef char            FAR * FAR * FAR * png_charppp;$/;"	t
png_color	src/windows/include/png.h	/^} png_color;$/;"	t	typeref:struct:png_color_struct
png_color_16	src/windows/include/png.h	/^} png_color_16;$/;"	t	typeref:struct:png_color_16_struct
png_color_16_struct	src/windows/include/png.h	/^typedef struct png_color_16_struct$/;"	s
png_color_16p	src/windows/include/png.h	/^typedef png_color_16 FAR * png_color_16p;$/;"	t
png_color_16pp	src/windows/include/png.h	/^typedef png_color_16 FAR * FAR * png_color_16pp;$/;"	t
png_color_8	src/windows/include/png.h	/^} png_color_8;$/;"	t	typeref:struct:png_color_8_struct
png_color_8_struct	src/windows/include/png.h	/^typedef struct png_color_8_struct$/;"	s
png_color_8p	src/windows/include/png.h	/^typedef png_color_8 FAR * png_color_8p;$/;"	t
png_color_8pp	src/windows/include/png.h	/^typedef png_color_8 FAR * FAR * png_color_8pp;$/;"	t
png_color_struct	src/windows/include/png.h	/^typedef struct png_color_struct$/;"	s
png_colorp	src/windows/include/png.h	/^typedef png_color FAR * png_colorp;$/;"	t
png_colorpp	src/windows/include/png.h	/^typedef png_color FAR * FAR * png_colorpp;$/;"	t
png_composite	src/windows/include/png.h	2393;"	d
png_composite	src/windows/include/png.h	2407;"	d
png_composite_16	src/windows/include/png.h	2399;"	d
png_composite_16	src/windows/include/png.h	2412;"	d
png_const_charp	src/windows/include/pngconf.h	/^typedef PNG_CONST char  FAR * png_const_charp;$/;"	t
png_const_charpp	src/windows/include/pngconf.h	/^typedef PNG_CONST char  FAR * FAR * png_const_charpp;$/;"	t
png_debug	src/windows/include/png.h	2250;"	d
png_debug	src/windows/include/png.h	2259;"	d
png_debug	src/windows/include/png.h	2282;"	d
png_debug1	src/windows/include/png.h	2251;"	d
png_debug1	src/windows/include/png.h	2265;"	d
png_debug1	src/windows/include/png.h	2285;"	d
png_debug2	src/windows/include/png.h	2252;"	d
png_debug2	src/windows/include/png.h	2271;"	d
png_debug2	src/windows/include/png.h	2288;"	d
png_doublep	src/windows/include/pngconf.h	/^typedef double          FAR * png_doublep;$/;"	t
png_doublep_NULL	src/windows/include/png.h	333;"	d
png_doublep_NULL	src/windows/include/png.h	349;"	d
png_doublepp	src/windows/include/pngconf.h	/^typedef double          FAR * FAR * png_doublepp;$/;"	t
png_error_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_error_ptr) PNGARG((png_structp, png_const_charp));$/;"	t
png_error_ptr_NULL	src/windows/include/png.h	334;"	d
png_error_ptr_NULL	src/windows/include/png.h	350;"	d
png_fixed_point	src/windows/include/pngconf.h	/^typedef png_int_32 png_fixed_point;$/;"	t
png_fixed_point_p	src/windows/include/pngconf.h	/^typedef png_fixed_point FAR * png_fixed_point_p;$/;"	t
png_fixed_point_pp	src/windows/include/pngconf.h	/^typedef png_fixed_point FAR * FAR * png_fixed_point_pp;$/;"	t
png_flush_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_flush_ptr) PNGARG((png_structp));$/;"	t
png_flush_ptr_NULL	src/windows/include/png.h	335;"	d
png_flush_ptr_NULL	src/windows/include/png.h	351;"	d
png_free_ptr	src/windows/include/png.h	/^typedef void (*png_free_ptr) PNGARG((png_structp, png_voidp));$/;"	t
png_free_ptr_NULL	src/windows/include/png.h	336;"	d
png_free_ptr_NULL	src/windows/include/png.h	352;"	d
png_get_int_32	src/windows/include/png.h	2594;"	d
png_get_uint_16	src/windows/include/png.h	2597;"	d
png_get_uint_32	src/windows/include/png.h	2596;"	d
png_info	src/windows/include/png.h	/^} png_info;$/;"	t	typeref:struct:png_info_struct
png_info_init	src/windows/include/png.h	1343;"	d
png_info_struct	src/windows/include/png.h	/^typedef struct png_info_struct$/;"	s
png_infop	src/windows/include/png.h	/^typedef png_info FAR * png_infop;$/;"	t
png_infopp	src/windows/include/png.h	/^typedef png_info FAR * FAR * png_infopp;$/;"	t
png_infopp_NULL	src/windows/include/png.h	337;"	d
png_infopp_NULL	src/windows/include/png.h	353;"	d
png_int_16	src/windows/include/pngconf.h	/^typedef short png_int_16;$/;"	t
png_int_16p	src/windows/include/pngconf.h	/^typedef png_int_16      FAR * png_int_16p;$/;"	t
png_int_16pp	src/windows/include/pngconf.h	/^typedef png_int_16      FAR * FAR * png_int_16pp;$/;"	t
png_int_32	src/windows/include/pngconf.h	/^typedef long png_int_32;$/;"	t
png_int_32p	src/windows/include/pngconf.h	/^typedef png_int_32      FAR * png_int_32p;$/;"	t
png_int_32pp	src/windows/include/pngconf.h	/^typedef png_int_32      FAR * FAR * png_int_32pp;$/;"	t
png_jmpbuf	src/windows/include/pngconf.h	1253;"	d
png_jmpbuf	src/windows/include/pngconf.h	1255;"	d
png_libpng_ver	src/windows/include/png.h	372;"	d
png_malloc_ptr	src/windows/include/png.h	/^typedef png_voidp (*png_malloc_ptr) PNGARG((png_structp, png_size_t));$/;"	t
png_malloc_ptr_NULL	src/windows/include/png.h	338;"	d
png_malloc_ptr_NULL	src/windows/include/png.h	354;"	d
png_memcmp	src/windows/include/pngconf.h	1267;"	d
png_memcmp	src/windows/include/pngconf.h	1275;"	d
png_memcpy	src/windows/include/pngconf.h	1268;"	d
png_memcpy	src/windows/include/pngconf.h	1276;"	d
png_memset	src/windows/include/pngconf.h	1269;"	d
png_memset	src/windows/include/pngconf.h	1277;"	d
png_progressive_end_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_progressive_end_ptr) PNGARG((png_structp, png_infop));$/;"	t
png_progressive_info_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_progressive_info_ptr) PNGARG((png_structp, png_infop));$/;"	t
png_progressive_row_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_progressive_row_ptr) PNGARG((png_structp, png_bytep,$/;"	t
png_read_init	src/windows/include/png.h	2610;"	d
png_read_status_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_read_status_ptr) PNGARG((png_structp, png_uint_32,$/;"	t
png_read_status_ptr_NULL	src/windows/include/png.h	339;"	d
png_read_status_ptr_NULL	src/windows/include/png.h	355;"	d
png_row_info	src/windows/include/png.h	/^} png_row_info;$/;"	t	typeref:struct:png_row_info_struct
png_row_info_struct	src/windows/include/png.h	/^typedef struct png_row_info_struct$/;"	s
png_row_infop	src/windows/include/png.h	/^typedef png_row_info FAR * png_row_infop;$/;"	t
png_row_infopp	src/windows/include/png.h	/^typedef png_row_info FAR * FAR * png_row_infopp;$/;"	t
png_rw_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_rw_ptr) PNGARG((png_structp, png_bytep, png_size_t));$/;"	t
png_rw_ptr_NULL	src/windows/include/png.h	340;"	d
png_rw_ptr_NULL	src/windows/include/png.h	356;"	d
png_sPLT_entry	src/windows/include/png.h	/^} png_sPLT_entry;$/;"	t	typeref:struct:png_sPLT_entry_struct
png_sPLT_entry_struct	src/windows/include/png.h	/^typedef struct png_sPLT_entry_struct$/;"	s
png_sPLT_entryp	src/windows/include/png.h	/^typedef png_sPLT_entry FAR * png_sPLT_entryp;$/;"	t
png_sPLT_entrypp	src/windows/include/png.h	/^typedef png_sPLT_entry FAR * FAR * png_sPLT_entrypp;$/;"	t
png_sPLT_struct	src/windows/include/png.h	/^typedef struct png_sPLT_struct$/;"	s
png_sPLT_t	src/windows/include/png.h	/^} png_sPLT_t;$/;"	t	typeref:struct:png_sPLT_struct
png_sPLT_tp	src/windows/include/png.h	/^typedef png_sPLT_t FAR * png_sPLT_tp;$/;"	t
png_sPLT_tpp	src/windows/include/png.h	/^typedef png_sPLT_t FAR * FAR * png_sPLT_tpp;$/;"	t
png_sig	src/windows/include/png.h	2529;"	d
png_size_t	src/windows/include/pngconf.h	/^typedef size_t png_size_t;$/;"	t
png_strcpy	src/windows/include/pngconf.h	1265;"	d
png_strcpy	src/windows/include/pngconf.h	1273;"	d
png_strlen	src/windows/include/pngconf.h	1266;"	d
png_strlen	src/windows/include/pngconf.h	1274;"	d
png_struct	src/windows/include/png.h	/^typedef struct png_struct_def png_struct;$/;"	t	typeref:struct:png_struct_def
png_struct_def	src/windows/include/png.h	/^struct png_struct_def$/;"	s
png_structp	src/windows/include/png.h	/^typedef png_struct FAR * png_structp;$/;"	t
png_structp_NULL	src/windows/include/png.h	341;"	d
png_structp_NULL	src/windows/include/png.h	357;"	d
png_structpp	src/windows/include/png.h	/^typedef png_struct FAR * FAR * png_structpp;$/;"	t
png_text	src/windows/include/png.h	/^} png_text;$/;"	t	typeref:struct:png_text_struct
png_text_struct	src/windows/include/png.h	/^typedef struct png_text_struct$/;"	s
png_textp	src/windows/include/png.h	/^typedef png_text FAR * png_textp;$/;"	t
png_textpp	src/windows/include/png.h	/^typedef png_text FAR * FAR * png_textpp;$/;"	t
png_time	src/windows/include/png.h	/^} png_time;$/;"	t	typeref:struct:png_time_struct
png_time_struct	src/windows/include/png.h	/^typedef struct png_time_struct$/;"	s
png_timep	src/windows/include/png.h	/^typedef png_time FAR * png_timep;$/;"	t
png_timepp	src/windows/include/png.h	/^typedef png_time FAR * FAR * png_timepp;$/;"	t
png_uint_16	src/windows/include/pngconf.h	/^typedef unsigned short png_uint_16;$/;"	t
png_uint_16p	src/windows/include/pngconf.h	/^typedef png_uint_16     FAR * png_uint_16p;$/;"	t
png_uint_16p_NULL	src/windows/include/png.h	342;"	d
png_uint_16p_NULL	src/windows/include/png.h	358;"	d
png_uint_16pp	src/windows/include/pngconf.h	/^typedef png_uint_16     FAR * FAR * png_uint_16pp;$/;"	t
png_uint_32	src/windows/include/pngconf.h	/^typedef unsigned long png_uint_32;$/;"	t
png_uint_32p	src/windows/include/pngconf.h	/^typedef png_uint_32     FAR * png_uint_32p;$/;"	t
png_uint_32pp	src/windows/include/pngconf.h	/^typedef png_uint_32     FAR * FAR * png_uint_32pp;$/;"	t
png_unknown_chunk	src/windows/include/png.h	/^png_unknown_chunk;$/;"	t	typeref:struct:png_unknown_chunk_t
png_unknown_chunk_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_unknown_chunk_ptr) PNGARG((png_structp));$/;"	t
png_unknown_chunk_t	src/windows/include/png.h	/^typedef struct png_unknown_chunk_t$/;"	s
png_unknown_chunkp	src/windows/include/png.h	/^typedef png_unknown_chunk FAR * png_unknown_chunkp;$/;"	t
png_unknown_chunkpp	src/windows/include/png.h	/^typedef png_unknown_chunk FAR * FAR * png_unknown_chunkpp;$/;"	t
png_user_chunk_ptr	src/windows/include/png.h	/^typedef int (PNGAPI *png_user_chunk_ptr) PNGARG((png_structp, png_unknown_chunkp));$/;"	t
png_user_transform_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_user_transform_ptr) PNGARG((png_structp,$/;"	t
png_voidp	src/windows/include/pngconf.h	/^typedef void            FAR * png_voidp;$/;"	t
png_voidp_NULL	src/windows/include/png.h	343;"	d
png_voidp_NULL	src/windows/include/png.h	359;"	d
png_write_init	src/windows/include/png.h	2622;"	d
png_write_status_ptr	src/windows/include/png.h	/^typedef void (PNGAPI *png_write_status_ptr) PNGARG((png_structp, png_uint_32,$/;"	t
png_write_status_ptr_NULL	src/windows/include/png.h	344;"	d
png_write_status_ptr_NULL	src/windows/include/png.h	360;"	d
png_zcharp	src/windows/include/pngconf.h	/^typedef charf *         png_zcharp;$/;"	t
png_zcharpp	src/windows/include/pngconf.h	/^typedef charf * FAR *   png_zcharpp;$/;"	t
png_zstreamp	src/windows/include/pngconf.h	/^typedef z_stream FAR *  png_zstreamp;$/;"	t
point	src/tools/accc/accc.h	/^typedef struct point {$/;"	s
point	src/tools/trackgen/easymesh.cpp	/^struct nod node[MAX_NODES], *point;$/;"	v	typeref:struct:
point1	export/include/SOLID/solid.h	/^  DtVector point1;$/;"	m	struct:DtCollData
point1	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DtVector point1;$/;"	m	struct:DtCollData
point2	export/include/SOLID/solid.h	/^  DtVector point2;$/;"	m	struct:DtCollData
point2	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/solid.h	/^  DtVector point2;$/;"	m	struct:DtCollData
pointBuf	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^PointBuf pointBuf;$/;"	v
point_on_line	src/windows/include/plib/sg.h	/^  sgVec3 point_on_line ;$/;"	m	struct:sgLine3
point_on_line	src/windows/include/plib/sg.h	/^  sgdVec3 point_on_line ;$/;"	m	struct:sgdLine3
point_rotate	src/windows/include/plib/ssg.h	/^  int point_rotate ;$/;"	m	class:ssgCutout
point_t	src/tools/accc/accc.h	/^} point_t;$/;"	t	typeref:struct:point
points	src/libs/raceengineclient/raceresults.cpp	/^	int		points;$/;"	m	struct:__anon85	file:
poly	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  const Polytope *poly;$/;"	m	class:BBoxLeaf
polyList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^PolyList polyList; $/;"	v
pool	src/libs/txml/xmlparse.c	/^  STRING_POOL pool;$/;"	m	struct:__anon81	file:
pool	src/modules/graphic/ssggraph/SoundInterface.h	/^		sharedSource *pool;$/;"	m	class:SharedSourcePool
poolAppend	src/libs/txml/xmlparse.c	/^XML_Char *poolAppend(STRING_POOL *pool, const ENCODING *enc,$/;"	f	file:
poolAppendChar	src/libs/txml/xmlparse.c	197;"	d	file:
poolChop	src/libs/txml/xmlparse.c	193;"	d	file:
poolClear	src/libs/txml/xmlparse.c	/^void poolClear(STRING_POOL *pool)$/;"	f	file:
poolCopyString	src/libs/txml/xmlparse.c	/^static const XML_Char *poolCopyString(STRING_POOL *pool, const XML_Char *s)$/;"	f	file:
poolCopyStringN	src/libs/txml/xmlparse.c	/^static const XML_Char *poolCopyStringN(STRING_POOL *pool, const XML_Char *s, int n)$/;"	f	file:
poolDestroy	src/libs/txml/xmlparse.c	/^void poolDestroy(STRING_POOL *pool)$/;"	f	file:
poolDiscard	src/libs/txml/xmlparse.c	195;"	d	file:
poolEnd	src/libs/txml/xmlparse.c	191;"	d	file:
poolFinish	src/libs/txml/xmlparse.c	196;"	d	file:
poolGrow	src/libs/txml/xmlparse.c	/^int poolGrow(STRING_POOL *pool)$/;"	f	file:
poolInit	src/libs/txml/xmlparse.c	/^void poolInit(STRING_POOL *pool)$/;"	f	file:
poolLastChar	src/libs/txml/xmlparse.c	194;"	d	file:
poolLength	src/libs/txml/xmlparse.c	192;"	d	file:
poolStart	src/libs/txml/xmlparse.c	190;"	d	file:
poolStoreString	src/libs/txml/xmlparse.c	/^XML_Char *poolStoreString(STRING_POOL *pool, const ENCODING *enc,$/;"	f	file:
poolindex	src/modules/graphic/ssggraph/TorcsSound.h	/^	int poolindex; \/\/\/< which pool the sound is assigned to$/;"	m	class:OpenalTorcsSound
port	src/windows/include/plib/sl.h	/^  ALport          port;         \/\/ .. we are here $/;"	m	class:slDSP
pos	export/include/car.h	/^	sgVec3 pos;$/;"	m	struct:tCollisionState_
pos	export/include/car.h	/^    int			pos;$/;"	m	struct:__anon198
pos	export/include/tgf.h	/^    tPosd pos; \/**< position *\/$/;"	m	struct:__anon192
pos	export/include/tgfclient.h	/^    int		pos;		\/**< Current scroll bar position *\/$/;"	m	struct:ScrollBarInfo
pos	export/include/track.h	/^	tTrkLocPos pos;	\/**< Center of the pit position *\/$/;"	m	struct:TrackOwnPit
pos	export/include/track.h	/^    t3Dd		pos;$/;"	m	struct:RoadCam
pos	src/interfaces/car.h	/^	sgVec3 pos;$/;"	m	struct:tCollisionState_
pos	src/interfaces/car.h	/^    int			pos;$/;"	m	struct:__anon158
pos	src/interfaces/track.h	/^	tTrkLocPos pos;	\/**< Center of the pit position *\/$/;"	m	struct:TrackOwnPit
pos	src/interfaces/track.h	/^    t3Dd		pos;$/;"	m	struct:RoadCam
pos	src/libs/tgf/tgf.h	/^    tPosd pos; \/**< position *\/$/;"	m	struct:__anon50
pos	src/libs/tgfclient/gui.h	/^    int			min, max, len, pos;$/;"	m	struct:__anon64
pos	src/libs/tgfclient/tgfclient.h	/^    int		pos;		\/**< Current scroll bar position *\/$/;"	m	struct:ScrollBarInfo
pos	src/modules/graphic/ssggraph/grcarlight.h	/^  sgVec3 pos;$/;"	m	class:ssgVtxTableCarlight
pos	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Scalar pos;$/;"	m	class:Endpoint
pos	src/modules/simu/simuv2/wheel.h	/^    t3Dd   	pos;	   	\/* world related *\/$/;"	m	struct:__anon21
pos	src/windows/include/plib/sg.h	/^  sgVec3 pos   ;$/;"	m	class:sgParticle
pos	src/windows/include/plib/ssgaParticleSystem.h	/^  sgVec3 pos ;$/;"	m	class:ssgaParticle
posMat	export/include/car.h	/^    sgMat4	posMat;		\/**< position matrix *\/$/;"	m	struct:__anon199
posMat	src/interfaces/car.h	/^    sgMat4	posMat;		\/**< position matrix *\/$/;"	m	struct:__anon159
posMat	src/modules/simu/simuv2/carstruct.h	/^    sgMat4	posMat;$/;"	m	struct:__anon18
position	src/libs/txml/xmlparse.c	/^  POSITION position;$/;"	m	struct:__anon82	file:
position	src/libs/txml/xmlparse.c	284;"	d	file:
position	src/libs/txml/xmltok.h	/^typedef struct position {$/;"	s
position	src/modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 position;$/;"	m	class:CarSoundData
position	src/windows/include/plib/ssg.h	/^  sgVec4 position ;$/;"	m	class:ssgLight
positionPtr	src/libs/txml/xmlparse.c	/^  const char *positionPtr;$/;"	m	struct:__anon82	file:
positionPtr	src/libs/txml/xmlparse.c	283;"	d	file:
postDrawCB	src/modules/graphic/ssggraph/grssgext.h	/^  ssgCallback postDrawCB;$/;"	m	class:ssgBranchCb
postDrawCB	src/windows/include/plib/ssg.h	/^  ssgCallback postDrawCB ;$/;"	m	class:ssgLeaf
postDrawCB	src/windows/include/plib/ssg.h	/^  ssgStateCallback postDrawCB ;$/;"	m	class:ssgState
postTravCB	src/windows/include/plib/ssg.h	/^  ssgTravCallback postTravCB ;$/;"	m	class:ssgEntity
pow	export/include/controlconfig.h	/^    float	pow;$/;"	m	struct:__anon205
pow	src/drivers/human/pref.h	/^    float	pow;		\/* power of curve command = pow(control, power) *\/$/;"	m	struct:__anon144
pow	src/libs/confscreens/controlconfig.h	/^    float	pow;$/;"	m	struct:__anon44
powName	export/include/controlconfig.h	/^    char	*powName;$/;"	m	struct:__anon205
powName	src/drivers/human/pref.h	/^    char	*powName;	\/* Name of the pow attribute *\/$/;"	m	struct:__anon144
powName	src/libs/confscreens/controlconfig.h	/^    char	*powName;$/;"	m	struct:__anon44
preApplyCB	src/windows/include/plib/ssg.h	/^  ssgStateCallback preApplyCB ;$/;"	m	class:ssgState
preCtrl	src/modules/simu/simuv2/carstruct.h	/^    tCarCtrl	preCtrl;$/;"	m	struct:__anon18
preDrawCB	src/modules/graphic/ssggraph/grssgext.h	/^  ssgCallback  preDrawCB;$/;"	m	class:ssgBranchCb
preDrawCB	src/windows/include/plib/ssg.h	/^  ssgCallback  preDrawCB ;$/;"	m	class:ssgLeaf
preDrawCB	src/windows/include/plib/ssg.h	/^  ssgStateCallback preDrawCB  ;$/;"	m	class:ssgState
preDy	src/drivers/inferno2/inferno2.cpp	/^static tdble preDy[10]     = {0.0f};$/;"	v	file:
preDynGC	src/modules/simu/simuv2/carstruct.h	/^    tDynPt	preDynGC;	\/* previous one *\/$/;"	m	struct:__anon18
preFn	src/modules/simu/simuv2/wheel.h	/^    tdble	preFn, preFt;$/;"	m	struct:__anon21
preFt	src/modules/simu/simuv2/wheel.h	/^    tdble	preFn, preFt;$/;"	m	struct:__anon21
preScene	src/modules/graphic/ssggraph/grscene.cpp	/^int preScene(ssgEntity *e)$/;"	f
preTravCB	src/windows/include/plib/ssg.h	/^  ssgTravCallback  preTravCB ;$/;"	m	class:ssgEntity
pre_axle	src/modules/graphic/ssggraph/CarSoundData.h	/^	float pre_axle; \/\/\/< axle related$/;"	m	class:CarSoundData
pred	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Endpoint *pred;$/;"	m	class:Endpoint
predefinedEntityName	src/libs/txml/xmltok.h	/^  int (*predefinedEntityName)(const ENCODING *, const char *, const char *);$/;"	m	struct:encoding
predefinedEntityName	src/libs/txml/xmltok_impl.c	/^int PREFIX(predefinedEntityName)(const ENCODING *enc, const char *ptr, const char *end)$/;"	f	file:
predictedAccel	src/drivers/olethros/learn.cpp	/^float SegLearn::predictedAccel (tTrackSeg* seg)$/;"	f	class:SegLearn
predictedError	src/drivers/olethros/learn.cpp	/^float SegLearn::predictedError (tCarElt* car)$/;"	f	class:SegLearn
preempt_mode	src/windows/include/plib/sl.h	/^  slPreemptMode  preempt_mode    ;$/;"	m	class:slPlayer
prepareTrack	src/drivers/olethros/driver.cpp	/^    void Driver::prepareTrack()$/;"	f	class:olethros::Driver
prependNode	src/windows/include/plib/ul.h	/^  void prependNode ( void *data ) { insertNode ( data, 0 ) ; }$/;"	f	class:ulLinkedList
prependNode	src/windows/include/ul.h	/^  void prependNode ( void *data ) { insertNode ( data, 0 ) ; }$/;"	f	class:ulLinkedList
prespinVel	src/modules/simu/simuv2/wheel.h	/^    tdble  	prespinVel;   	\/* spin velocity *\/$/;"	m	struct:__anon21
pressure	src/modules/simu/simuv2/brake.h	/^    tdble	pressure;$/;"	m	struct:__anon23
pressure	src/modules/simu/simuv2/engine.h	/^	tdble       pressure;$/;"	m	struct:__anon12
pressure	src/modules/simu/simuv2/wheel.h	/^    tdble	pressure;	\/* tire pressure *\/$/;"	m	struct:__anon21
prev	export/include/learning/List.h	/^	struct ListItem* prev; \/\/\/< previous item$/;"	m	struct:ListItem	typeref:struct:ListItem::ListItem
prev	export/include/tgf.h	/^    struct FList	*prev;		\/**< Previous entry *\/$/;"	m	struct:FList	typeref:struct:FList::FList
prev	export/include/track.h	/^    struct trackSeg *prev;	\/**< Previous segment *\/$/;"	m	struct:trackSeg	typeref:struct:trackSeg::trackSeg
prev	src/interfaces/track.h	/^    struct trackSeg *prev;	\/**< Previous segment *\/$/;"	m	struct:trackSeg	typeref:struct:trackSeg::trackSeg
prev	src/libs/confscreens/driverconfig.cpp	/^    struct tCarInfo	*prev;$/;"	m	struct:tCarInfo	typeref:struct:tCarInfo::tCarInfo	file:
prev	src/libs/confscreens/driverconfig.cpp	/^    struct tCatInfo	*prev;$/;"	m	struct:tCatInfo	typeref:struct:tCatInfo::tCatInfo	file:
prev	src/libs/learning/List.h	/^	struct ListItem* prev; \/\/\/< previous item$/;"	m	struct:ListItem	typeref:struct:ListItem::ListItem
prev	src/libs/tgf/tgf.h	/^    struct FList	*prev;		\/**< Previous entry *\/$/;"	m	struct:FList	typeref:struct:FList::FList
prev	src/libs/tgfclient/gui.h	/^    struct GfuiListElement	*prev;$/;"	m	struct:GfuiListElement	typeref:struct:GfuiListElement::GfuiListElement
prev	src/libs/tgfclient/gui.h	/^    struct GfuiObject	*prev;$/;"	m	struct:GfuiObject	typeref:struct:GfuiObject::GfuiObject
prev	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Transform prev;$/;"	m	class:Object
prevHandle	src/libs/confscreens/controlconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	src/libs/confscreens/driverconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	src/libs/confscreens/openglconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	src/libs/confscreens/simuconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHandle	src/libs/confscreens/soundconfig.cpp	/^static void	*prevHandle = NULL;$/;"	v	file:
prevHdle	src/libs/racescreens/results.cpp	/^    void	*prevHdle;$/;"	m	struct:__anon38	file:
prevLeftSteer	src/drivers/human/human.h	/^	tdble	prevLeftSteer;$/;"	m	struct:HumanContext
prevRightSteer	src/drivers/human/human.h	/^	tdble	prevRightSteer;$/;"	m	struct:HumanContext
prevScreen	export/include/confscreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon178
prevScreen	export/include/confscreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon179
prevScreen	export/include/confscreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon176
prevScreen	export/include/confscreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon177
prevScreen	export/include/racescreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon174
prevScreen	export/include/racescreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon175
prevScreen	export/include/racescreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon172
prevScreen	export/include/racescreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon173
prevScreen	src/libs/confscreens/confscreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon42
prevScreen	src/libs/confscreens/confscreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon43
prevScreen	src/libs/confscreens/confscreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon40
prevScreen	src/libs/confscreens/confscreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon41
prevScreen	src/libs/racescreens/racescreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon36
prevScreen	src/libs/racescreens/racescreens.h	/^    void        	*prevScreen;$/;"	m	struct:__anon37
prevScreen	src/libs/racescreens/racescreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon34
prevScreen	src/libs/racescreens/racescreens.h	/^    void        *prevScreen;	\/* Race manager screen to go back *\/$/;"	m	struct:__anon35
prevStartRace	src/libs/racescreens/miscscreens.cpp	/^static tStartRaceCall	nextStartRace, prevStartRace;$/;"	v	file:
prevTrkPos	export/include/raceman.h	/^    tTrkLocPos	prevTrkPos;$/;"	m	struct:__anon208
prevTrkPos	src/interfaces/raceman.h	/^    tTrkLocPos	prevTrkPos;$/;"	m	struct:__anon167
prevVal	src/modules/graphic/ssggraph/grcar.h	/^    tdble		prevVal;$/;"	m	struct:__anon4
prev_accel	src/drivers/olethros/learn.h	/^	float prev_accel; \/\/\/< previous acceleration$/;"	m	class:olethros::SegLearn
prev_base	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  VertexBase prev_base;$/;"	m	class:Complex
prev_closest_points	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^bool prev_closest_points(const Object& a, const Object& b, $/;"	f
prev_filters	src/windows/include/png.h	/^   png_bytep prev_filters;           \/* filter type(s) of previous row(s) *\/$/;"	m	struct:png_struct_def
prev_gear	src/modules/graphic/ssggraph/CarSoundData.h	/^	int prev_gear;$/;"	m	class:CarSoundData
prev_pitchenv	src/windows/include/plib/sl.h	/^  unsigned char prev_pitchenv  ;$/;"	m	class:slEnvelope
prev_quantum	src/drivers/olethros/learn.h	/^	int prev_quantum; \/\/\/< id of the previous quantum$/;"	m	class:olethros::SegLearn
prev_row	src/windows/include/png.h	/^   png_bytep prev_row;        \/* buffer to save previous (unfiltered) row *\/$/;"	m	struct:png_struct_def
prev_steer	src/drivers/olethros/driver.h	/^	float prev_steer; \/\/\/< for steering filter$/;"	m	class:olethros::Driver
prev_time	src/drivers/olethros/learn.h	/^	double prev_time; \/\/\/< time of previous friction estimate$/;"	m	class:olethros::SegLearn
prev_toleft	src/drivers/olethros/driver.h	/^	float prev_toleft; \/\/\/< previous left margin$/;"	m	class:olethros::Driver
prev_toright	src/drivers/olethros/driver.h	/^	float prev_toright; \/\/\/< previous right margin$/;"	m	class:olethros::Driver
previous_time	src/drivers/olethros/learn.h	/^	double previous_time; \/\/\/< previous time$/;"	m	class:olethros::SegLearn
previous_value	src/windows/include/plib/sl.h	/^  float         previous_value ;$/;"	m	class:slEnvelope
prevsegid	src/drivers/olethros/learn.h	/^	int prevsegid; \/\/\/< id of previous segment$/;"	m	class:olethros::SegLearn
prevtype	src/drivers/bt/learn.h	/^		int prevtype;$/;"	m	class:SegLearn
prevtype	src/drivers/damned/learn.h	/^		int prevtype;$/;"	m	class:SegLearn
prevtype	src/drivers/olethros/learn.h	/^	int prevtype;  \/\/\/< type of previous segment$/;"	m	class:olethros::SegLearn
print	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void print ( FILE *fd = stderr, char *indent = "", int how_much = 2) { ssgVtxTable::print(fd,indent,how_much);}$/;"	f	class:ssgVtxTableCarlight
print	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void print ( FILE *fd = stderr, char *indent = "", int how_much = 2) { ssgVtxTable::print(fd,indent,how_much);}$/;"	f	class:ssgVtxTableShadow
print	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void print ( FILE *fd = stderr, char *indent = "", int how_much = 2) { ssgVtxTable::print(fd,indent,how_much);}$/;"	f	class:ssgVtxTableSmoke
print	src/modules/graphic/ssggraph/grvertexarray.h	/^  virtual void print ( FILE *fd = stderr, char *indent = "", int how_much = 2 ) { ssgVtxArray::print(fd,indent,how_much);}$/;"	f	class:ssgGrVtxArray
print	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void print ( FILE *fd = stderr, char *indent = "", int how_much = 2) { ssgVtxTable::print(fd,indent,how_much);}$/;"	f	class:grVtxTable
print	src/windows/include/plib/sl.h	/^  void print ( FILE *fd ) const$/;"	f	class:slSample
printOb	src/tools/accc/ac3dload.cpp	/^int printOb(ob_t * ob)$/;"	f
printProfile	src/libs/tgf/profiler.cpp	/^void Profiler::printProfile() {$/;"	f	class:Profiler
printTabs	src/libs/txml/gennmtab.c	/^void printTabs(char *tab)$/;"	f
printTabs	src/libs/txml/gennmtab/gennmtab.c	/^void printTabs(char *tab)$/;"	f
print_mat4	src/tools/texmapper/maintexmapper.cpp	/^void print_mat4(char *title, sgMat4 m)$/;"	f
prio	export/include/tgf.h	/^    int			prio;		\/**< priority if needed *\/$/;"	m	struct:ModInfo
prio	src/libs/tgf/tgf.h	/^    int			prio;		\/**< priority if needed *\/$/;"	m	struct:ModInfo
prio	src/modules/graphic/ssggraph/grcam.cpp	/^    double	prio;$/;"	m	struct:__anon6	file:
priority	src/windows/include/plib/sl.h	/^  int            priority        ;$/;"	m	class:slPlayer
priv	export/include/car.h	/^    tPrivCar		priv;	\/**< private *\/$/;"	m	struct:CarElt
priv	src/interfaces/car.h	/^    tPrivCar		priv;	\/**< private *\/$/;"	m	struct:CarElt
proceed	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  void proceed() { prev_base = base; }$/;"	f	class:Complex
proceed	src/modules/simu/simuv2/SOLID-2.0/src/Object.cpp	/^void Object::proceed() {$/;"	f	class:Object
processXmlDecl	src/libs/txml/xmlparse.c	/^processXmlDecl(XML_Parser parser, int isGeneralTextEntity,$/;"	f	file:
process_mode	src/windows/include/png.h	/^   int process_mode;                 \/* what push library is currently doing *\/$/;"	m	struct:png_struct_def
processingInstructionHandler	src/libs/txml/xmlparse.c	/^  XML_ProcessingInstructionHandler processingInstructionHandler;$/;"	m	struct:__anon82	file:
processingInstructionHandler	src/libs/txml/xmlparse.c	264;"	d	file:
processor	src/libs/txml/xmlparse.c	/^  Processor *processor;$/;"	m	struct:__anon82	file:
processor	src/libs/txml/xmlparse.c	279;"	d	file:
profiler	export/include/tgf.h	/^  static Profiler * profiler;$/;"	m	class:Profiler
profiler	src/libs/tgf/profiler.cpp	/^Profiler * Profiler::profiler = NULL;$/;"	m	class:Profiler	file:
profiler	src/libs/tgf/tgf.h	/^  static Profiler * profiler;$/;"	m	class:Profiler
prolog0	src/libs/txml/xmlrole.c	/^  prolog0, prolog1, prolog2,$/;"	v	file:
prolog0	src/libs/txml/xmlrole.c	/^int prolog0(PROLOG_STATE *state,$/;"	f	file:
prolog1	src/libs/txml/xmlrole.c	/^  prolog0, prolog1, prolog2,$/;"	v	file:
prolog1	src/libs/txml/xmlrole.c	/^int prolog1(PROLOG_STATE *state,$/;"	f	file:
prolog2	src/libs/txml/xmlrole.c	/^  prolog0, prolog1, prolog2,$/;"	v	file:
prolog2	src/libs/txml/xmlrole.c	/^int prolog2(PROLOG_STATE *state,$/;"	f	file:
prologInitProcessor	src/libs/txml/xmlparse.c	/^prologInitProcessor(XML_Parser parser,$/;"	f	file:
prologInitProcessor	src/libs/txml/xmlparse.c	/^static Processor prologInitProcessor;$/;"	v	file:
prologProcessor	src/libs/txml/xmlparse.c	/^prologProcessor(XML_Parser parser,$/;"	f	file:
prologProcessor	src/libs/txml/xmlparse.c	/^static Processor prologProcessor;$/;"	v	file:
prologState	src/libs/txml/xmlparse.c	/^  PROLOG_STATE prologState;$/;"	m	struct:__anon82	file:
prologState	src/libs/txml/xmlparse.c	278;"	d	file:
prologTok	src/libs/txml/xmltok_impl.c	/^int PREFIX(prologTok)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
prolog_state	src/libs/txml/xmlrole.h	/^typedef struct prolog_state {$/;"	s
proper	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool proper(int s) {  $/;"	f
protocolEncodingName	src/libs/txml/xmlparse.c	/^  const XML_Char *protocolEncodingName;$/;"	m	struct:__anon82	file:
protocolEncodingName	src/libs/txml/xmlparse.c	277;"	d	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxList	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^ProxList proxList;$/;"	v
proximityThld	src/modules/graphic/ssggraph/grcam.cpp	/^    tdble  proximityThld;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
ps	export/include/learning/ann_policy.h	/^	real* ps; \/\/\/< Previous state vector \\deprecated$/;"	m	class:ANN_Policy
ps	export/include/learning/policy.h	/^	int ps; \/\/\/< previous state$/;"	m	class:DiscretePolicy
ps	src/drivers/berniw/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	src/drivers/berniw2/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	src/drivers/berniw3/pathfinder.h	/^		PathSeg* ps;			\/* array with the plan *\/$/;"	m	class:Pathfinder
ps	src/drivers/inferno/pathfinder.h	/^		pseg* ps;				\/\/ Dynamic path, ringbuffer.$/;"	m	class:PathSeg
ps	src/drivers/lliaw/pathfinder.h	/^		pseg* ps;				\/\/ Dynamic path, ringbuffer.$/;"	m	class:PathSeg
ps	src/drivers/tita/pathfinder.h	/^		pseg* ps;				\/\/ Dynamic path, ringbuffer.$/;"	m	class:PathSeg
ps	src/libs/learning/ann_policy.h	/^	real* ps; \/\/\/< Previous state vector \\deprecated$/;"	m	class:ANN_Policy
ps	src/libs/learning/policy.h	/^	int ps; \/\/\/< previous state$/;"	m	class:DiscretePolicy
psdyn	src/drivers/inferno/pathfinder.h	/^		PathSeg* psdyn;					\/\/ Dynamic trajectory.$/;"	m	class:Pathfinder
psdyn	src/drivers/lliaw/pathfinder.h	/^		PathSeg* psdyn;					\/\/ Dynamic trajectory.$/;"	m	class:Pathfinder
psdyn	src/drivers/tita/pathfinder.h	/^		PathSeg* psdyn;					\/\/ Dynamic trajectory.$/;"	m	class:Pathfinder
pseg	src/drivers/inferno/pathfinder.h	/^		class pseg {$/;"	c	class:PathSeg
pseg	src/drivers/lliaw/pathfinder.h	/^		class pseg {$/;"	c	class:PathSeg
pseg	src/drivers/tita/pathfinder.h	/^		class pseg {$/;"	c	class:PathSeg
psopt	src/drivers/inferno/pathfinder.cpp	/^PathSegOpt* Pathfinder::psopt = NULL;$/;"	m	class:Pathfinder	file:
psopt	src/drivers/inferno/pathfinder.h	/^		static PathSegOpt* psopt;		\/\/ Precomuted path.$/;"	m	class:Pathfinder
psopt	src/drivers/lliaw/pathfinder.cpp	/^PathSegOpt* Pathfinder::psopt = NULL;$/;"	m	class:Pathfinder	file:
psopt	src/drivers/lliaw/pathfinder.h	/^		static PathSegOpt* psopt;		\/\/ Precomuted path.$/;"	m	class:Pathfinder
psopt	src/drivers/tita/pathfinder.cpp	/^PathSegOpt* Pathfinder::psopt = NULL;$/;"	m	class:Pathfinder	file:
psopt	src/drivers/tita/pathfinder.h	/^		static PathSegOpt* psopt;		\/\/ Precomuted path.$/;"	m	class:Pathfinder
pspit	src/drivers/inferno/pathfinder.h	/^		PathSegPit* pspit;				\/\/ Pit path.$/;"	m	class:Pathfinder
pspit	src/drivers/lliaw/pathfinder.h	/^		PathSegPit* pspit;				\/\/ Pit path.$/;"	m	class:Pathfinder
pspit	src/drivers/tita/pathfinder.h	/^		PathSegPit* pspit;				\/\/ Pit path.$/;"	m	class:Pathfinder
ptr	src/libs/txml/xmlparse.c	/^  XML_Char *ptr;$/;"	m	struct:__anon77	file:
ptr	src/windows/include/plib/sl.h	/^  char           *ptr  ;          \/\/ ptr to data from write()$/;"	m	class:slDSP
pub	export/include/car.h	/^    tPublicCar		pub;	\/**< public *\/$/;"	m	struct:CarElt
pub	src/interfaces/car.h	/^    tPublicCar		pub;	\/**< public *\/$/;"	m	struct:CarElt
publicId	src/libs/txml/xmlparse.c	/^  const XML_Char *publicId;$/;"	m	struct:__anon76	file:
pursuit	export/include/learning/policy.h	/^	bool pursuit; \/\/\/< pursuit option$/;"	m	class:DiscretePolicy
pursuit	src/libs/learning/policy.h	/^	bool pursuit; \/\/\/< pursuit option$/;"	m	class:DiscretePolicy
push_length	src/windows/include/png.h	/^   png_uint_32 push_length;          \/* size of current input chunk *\/$/;"	m	struct:png_struct_def
pushed	src/libs/tgfclient/gui.h	/^    unsigned char	*pushed;$/;"	m	struct:__anon62
px	src/modules/graphic/ssggraph/grcar.h	/^    tdble               px;$/;"	m	struct:__anon5
py	src/modules/graphic/ssggraph/grcar.h	/^    tdble               py;$/;"	m	struct:__anon5
q	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Point q[4];    \/\/ support points of object B in local coordinates $/;"	v	file:
qh_version	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^char qh_version[] = "SOLID 2.0";$/;"	v
quality	src/misc/png2jpg/png2jpg.c	/^static int	quality;$/;"	v	file:
queryAcceleration	src/drivers/berniw/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	src/drivers/berniw2/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	src/drivers/berniw3/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	src/drivers/inferno/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	src/drivers/lliaw/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAcceleration	src/drivers/tita/mycar.cpp	/^double MyCar::queryAcceleration(tCarElt * car, double speed)$/;"	f	class:MyCar
queryAngleToTrack	src/drivers/berniw/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	src/drivers/berniw2/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	src/drivers/berniw3/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	src/drivers/inferno/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	src/drivers/lliaw/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
queryAngleToTrack	src/drivers/tita/berniw.h	/^inline double queryAngleToTrack(tCarElt * car)$/;"	f
querySlipSpeed	src/drivers/berniw/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	src/drivers/berniw2/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	src/drivers/berniw3/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	src/drivers/inferno/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	src/drivers/lliaw/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
querySlipSpeed	src/drivers/tita/mycar.cpp	/^double MyCar::querySlipSpeed(tCarElt* car)$/;"	f	class:MyCar
r	export/include/learning/policy.h	/^	real r; \/\/\/< reward$/;"	m	class:DiscretePolicy
r	src/drivers/berniw/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	src/drivers/berniw2/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	src/drivers/berniw3/trackdesc.h	/^		v3d l, m, r;			\/* right, middle and left segment (road) border *\/$/;"	m	class:TrackSegment
r	src/drivers/inferno/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
r	src/drivers/inferno/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
r	src/drivers/lliaw/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
r	src/drivers/lliaw/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
r	src/drivers/olethros/geometry.h	/^	float r; \/\/ radius$/;"	m	class:ParametricSphere
r	src/drivers/tita/trackdesc.h	/^		vec2d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment2D
r	src/drivers/tita/trackdesc.h	/^		vec3d l, m, r;			\/\/ right, middle and left segment (road) border.$/;"	m	class:TrackSegment
r	src/libs/learning/policy.h	/^	real r; \/\/\/< reward$/;"	m	class:DiscretePolicy
r	src/tools/accc/accc.h	/^  double r;$/;"	m	struct:col
r	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
race	export/include/car.h	/^    tCarRaceInfo	race;	\/**< public *\/$/;"	m	struct:CarElt
race	src/interfaces/car.h	/^    tCarRaceInfo	race;	\/**< public *\/$/;"	m	struct:CarElt
raceCmd	export/include/car.h	/^    int		raceCmd;    \/**< command issued by the driver *\/$/;"	m	struct:__anon202
raceCmd	src/interfaces/car.h	/^    int		raceCmd;    \/**< command issued by the driver *\/$/;"	m	struct:__anon162
raceEngineInfo	export/include/raceman.h	/^    tRaceEngineInfo	raceEngineInfo;$/;"	m	struct:RmInfo
raceEngineInfo	src/interfaces/raceman.h	/^    tRaceEngineInfo	raceEngineInfo;$/;"	m	struct:RmInfo
raceInfo	export/include/raceman.h	/^    tRaceAdmInfo	raceInfo;$/;"	m	struct:Situation
raceInfo	export/include/track.h	/^    unsigned int raceInfo;	\/**< Type of segment regarding the race:$/;"	m	struct:trackSeg
raceInfo	src/interfaces/raceman.h	/^    tRaceAdmInfo	raceInfo;$/;"	m	struct:Situation
raceInfo	src/interfaces/track.h	/^    unsigned int raceInfo;	\/**< Type of segment regarding the race:$/;"	m	struct:trackSeg
raceMsg	export/include/raceman.h	/^    char	*raceMsg;$/;"	m	struct:__anon208
raceMsg	src/interfaces/raceman.h	/^    char	*raceMsg;$/;"	m	struct:__anon167
raceName	export/include/raceman.h	/^    char		*raceName;$/;"	m	struct:__anon209
raceName	src/interfaces/raceman.h	/^    char		*raceName;$/;"	m	struct:__anon168
raceNumber	export/include/car.h	/^    int		raceNumber;		\/**< Car's race number *\/$/;"	m	struct:__anon197
raceNumber	src/interfaces/car.h	/^    int		raceNumber;		\/**< Car's race number *\/$/;"	m	struct:__anon157
raceType	src/drivers/berniw/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
raceType	src/drivers/berniw2/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
raceType	src/drivers/berniw3/trackdesc.h	/^		unsigned int raceType;	\/* race type (eg. pitlane, speedlimit, ...) *\/$/;"	m	class:TrackSegment
race_type	src/drivers/olethros/driver.h	/^	int race_type;$/;"	m	class:olethros::Driver
racemanMenuHdle	src/libs/raceengineclient/racemanmenu.cpp	/^static void		*racemanMenuHdle = NULL;$/;"	v	file:
racenumber	src/libs/confscreens/driverconfig.cpp	/^    int		racenumber;$/;"	m	struct:PlayerInfo	file:
radius	export/include/track.h	/^    tdble radius;		\/**< Radius in meters of the middle of the track (>0) *\/$/;"	m	struct:trackSeg
radius	src/drivers/berniw/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	src/drivers/berniw/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	src/drivers/berniw/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	src/drivers/berniw2/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	src/drivers/berniw2/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	src/drivers/berniw2/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	src/drivers/berniw3/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	src/drivers/berniw3/pathfinder.h	/^		tdble radius;	\/* radius of current segment *\/$/;"	m	class:PathSeg
radius	src/drivers/berniw3/trackdesc.h	/^		tdble radius;			\/* radius *\/$/;"	m	class:TrackSegment
radius	src/drivers/bt/driver.h	/^		float *radius;$/;"	m	class:Driver
radius	src/drivers/bt/learn.h	/^		float *radius;$/;"	m	class:SegLearn
radius	src/drivers/damned/driver.h	/^		float *radius;$/;"	m	class:Driver
radius	src/drivers/damned/learn.h	/^		float *radius;$/;"	m	class:SegLearn
radius	src/drivers/inferno/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	src/drivers/inferno/pathfinder.h	/^				tdble radius;	\/\/ Radius of current segment.$/;"	m	class:PathSeg::pseg
radius	src/drivers/inferno/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment
radius	src/drivers/inferno/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment2D
radius	src/drivers/lliaw/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	src/drivers/lliaw/pathfinder.h	/^				tdble radius;	\/\/ Radius of current segment.$/;"	m	class:PathSeg::pseg
radius	src/drivers/lliaw/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment
radius	src/drivers/lliaw/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment2D
radius	src/drivers/olethros/driver.h	/^	float *radius; \/\/\/< segment radi$/;"	m	class:olethros::Driver
radius	src/drivers/olethros/learn.h	/^	float *radius; \/\/\/< Array holding the radi of segments$/;"	m	class:olethros::SegLearn
radius	src/drivers/tita/berniw.h	/^inline double radius(double x1, double y1, double x2, double y2, double x3, double y3)$/;"	f
radius	src/drivers/tita/pathfinder.h	/^				tdble radius;	\/\/ Radius of current segment.$/;"	m	class:PathSeg::pseg
radius	src/drivers/tita/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment
radius	src/drivers/tita/trackdesc.h	/^		tdble radius;			\/\/ Radius.$/;"	m	class:TrackSegment2D
radius	src/interfaces/track.h	/^    tdble radius;		\/**< Radius in meters of the middle of the track (>0) *\/$/;"	m	struct:trackSeg
radius	src/modules/simu/simuv2/SOLID-2.0/src/Cylinder.h	/^  Scalar radius;$/;"	m	class:Cylinder
radius	src/modules/simu/simuv2/SOLID-2.0/src/Sphere.h	/^  Scalar radius;$/;"	m	class:Sphere
radius	src/modules/simu/simuv2/brake.h	/^    tdble	radius;$/;"	m	struct:__anon23
radius	src/modules/simu/simuv2/wheel.h	/^    tdble  	radius;$/;"	m	struct:__anon21
radius	src/windows/include/plib/sg.h	/^  SGDfloat radius ;$/;"	m	class:sgdSphere
radius	src/windows/include/plib/sg.h	/^  SGfloat radius ;$/;"	m	class:sgSphere
radius	src/windows/include/plib/ssgaFire.h	/^  float radius       ;$/;"	m	class:ssgaFire
radiusl	export/include/track.h	/^    tdble radiusl;		\/**< Radius in meters of the left side of the track (>0) *\/$/;"	m	struct:trackSeg
radiusl	src/interfaces/track.h	/^    tdble radiusl;		\/**< Radius in meters of the left side of the track (>0) *\/$/;"	m	struct:trackSeg
radiusr	export/include/track.h	/^    tdble radiusr;		\/**< Radius in meters of the right side of the track (>0) *\/$/;"	m	struct:trackSeg
radiusr	src/interfaces/track.h	/^    tdble radiusr;		\/**< Radius in meters of the right side of the track (>0) *\/$/;"	m	struct:trackSeg
rads	export/include/3D/Basic.h	/^inline Scalar rads(Scalar x) { return x * RADS_PER_DEG; }$/;"	f
rads	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar rads(Scalar x) { return x * RADS_PER_DEG; }$/;"	f
rads	src/modules/simu/simuv2/engine.h	/^    tdble		rads;   \/* revs in rad\/s ... *\/$/;"	m	struct:__anon12
rads	src/modules/simu/simuv2/engine.h	/^    tdble rads;$/;"	m	struct:__anon10
random	export/include/3D/Quaternion.h	/^inline Quaternion Quaternion::random() {$/;"	f	class:Quaternion
random	export/include/3D/Vector.h	/^inline Vector Vector::random() {$/;"	f	class:Vector
random	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^inline Quaternion Quaternion::random() {$/;"	f	class:Quaternion
random	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Vector Vector::random() {$/;"	f	class:Vector
random	src/tools/trackgen/objects.cpp	/^    int			random;$/;"	m	struct:objdef	file:
range	src/libs/txml/gennmtab.c	/^struct range {$/;"	s	file:
range	src/libs/txml/gennmtab/gennmtab.c	/^struct range {$/;"	s	file:
rate	src/libs/tgfclient/fg_gm.cpp	/^	short				rate;				\/\/ Display refresh rate.$/;"	m	struct:tagSFG_Display	file:
rate	src/windows/include/plib/sl.h	/^  int    rate   ;$/;"	m	class:slSample
rate	src/windows/include/plib/sl.h	/^  int rate ;$/;"	m	class:slDSP
ratio	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::ratio;$/;"	m	class:cGrTrackMap	file:
ratio	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float ratio;$/;"	m	class:cGrTrackMap
ratio	src/modules/simu/simuv2/differential.h	/^    tdble	ratio;$/;"	m	struct:__anon20
rawName	src/libs/txml/xmlparse.c	/^  const char *rawName;$/;"	m	struct:tag	file:
rawNameLength	src/libs/txml/xmlparse.c	/^  int rawNameLength;$/;"	m	struct:tag	file:
rawPrev	src/modules/graphic/ssggraph/grcar.h	/^    tdble		rawPrev;$/;"	m	struct:__anon4
rawRead	export/include/js.h	/^  void rawRead ( int *buttons, float *axes )$/;"	f	class:jsJoystick
rawRead	src/interfaces/js.h	/^  void rawRead ( int *buttons, float *axes )$/;"	f	class:jsJoystick
rawSetNum	src/windows/include/plib/ssg.h	/^  void rawSetNum ( unsigned int n ) \/* Better know what you're doing!! *\/$/;"	f	class:ssgSimpleList
rawSetNumVertices	src/windows/include/plib/ssg.h	/^  void rawSetNumVertices ( unsigned int n ) { vertices -> rawSetNum ( n ) ; }$/;"	f	class:ssgVtxTable
raw_add	src/windows/include/plib/ssg.h	/^  void raw_add ( char *thing )$/;"	f	class:ssgSimpleList
raw_add	src/windows/include/plib/ssg.h	/^  void raw_add ( char *things, unsigned int n )$/;"	f	class:ssgSimpleList
raw_get	src/windows/include/plib/ssg.h	/^  char *raw_get ( unsigned int n )$/;"	f	class:ssgSimpleList
raw_set	src/windows/include/plib/ssg.h	/^  void raw_set ( char *thing, unsigned int n  )$/;"	f	class:ssgSimpleList
rawb	src/libs/confscreens/controlconfig.cpp	/^static int		rawb[NUM_JOY] = {0};$/;"	v	file:
rawb	src/libs/confscreens/joystickconfig.cpp	/^static int	rawb[NUM_JOY] = {0};$/;"	v	file:
rbDrive	export/include/robot.h	/^    tfRbDrive	 rbDrive;	\/**< Drive during race *\/$/;"	m	struct:RobotItf
rbDrive	src/interfaces/robot.h	/^    tfRbDrive	 rbDrive;	\/**< Drive during race *\/$/;"	m	struct:RobotItf
rbEndRace	export/include/robot.h	/^    tfRbEndRace  rbEndRace;	\/**< End of the current race *\/$/;"	m	struct:RobotItf
rbEndRace	src/interfaces/robot.h	/^    tfRbEndRace  rbEndRace;	\/**< End of the current race *\/$/;"	m	struct:RobotItf
rbNewRace	export/include/robot.h	/^    tfRbNewRace  rbNewRace;	\/**< Start a new race *\/$/;"	m	struct:RobotItf
rbNewRace	src/interfaces/robot.h	/^    tfRbNewRace  rbNewRace;	\/**< Start a new race *\/$/;"	m	struct:RobotItf
rbNewTrack	export/include/robot.h	/^    tfRbNewTrack rbNewTrack;	\/**< Give the robot the track view. Called for every track change or new race *\/$/;"	m	struct:RobotItf
rbNewTrack	src/interfaces/robot.h	/^    tfRbNewTrack rbNewTrack;	\/**< Give the robot the track view. Called for every track change or new race *\/$/;"	m	struct:RobotItf
rbPitCmd	export/include/robot.h	/^    tfRbPitCmd	 rbPitCmd;	\/**< Get the driver's pit commands.$/;"	m	struct:RobotItf
rbPitCmd	src/interfaces/robot.h	/^    tfRbPitCmd	 rbPitCmd;	\/**< Get the driver's pit commands.$/;"	m	struct:RobotItf
rbShutdown	export/include/robot.h	/^    tfRbShutdown rbShutdown;	\/**< Called before the dll is unloaded *\/$/;"	m	struct:RobotItf
rbShutdown	src/interfaces/robot.h	/^    tfRbShutdown rbShutdown;	\/**< Called before the dll is unloaded *\/$/;"	m	struct:RobotItf
rbf	export/include/learning/ANN.h	/^	RBFConnection* rbf; \/\/\/< rbf connections (if any)$/;"	m	struct:Layer_
rbf	src/libs/learning/ANN.h	/^	RBFConnection* rbf; \/\/\/< rbf connections (if any)$/;"	m	struct:Layer_
reAddKeys	src/libs/raceengineclient/racegl.cpp	/^reAddKeys(void)$/;"	f	file:
reAddResKeys	src/libs/raceengineclient/racegl.cpp	/^reAddResKeys(void)$/;"	f	file:
reBigMsgId	src/libs/raceengineclient/racegl.cpp	/^static int	reBigMsgId;$/;"	v	file:
reCapture	src/libs/raceengineclient/raceengine.cpp	/^reCapture(void)$/;"	f	file:
reColor	src/libs/raceengineclient/racegl.cpp	/^static float	*reColor[] = {white, red};$/;"	v	file:
reConfigBack	src/libs/raceengineclient/racemanmenu.cpp	/^reConfigBack(void)$/;"	f	file:
reConfigBackHookInit	src/libs/raceengineclient/racemanmenu.cpp	/^reConfigBackHookInit(void)$/;"	f	file:
reConfigHookInit	src/libs/raceengineclient/racemanmenu.cpp	/^reConfigHookInit(void)$/;"	f	file:
reConfigRunState	src/libs/raceengineclient/racemanmenu.cpp	/^reConfigRunState(void)$/;"	f	file:
reConfigureMenu	src/libs/raceengineclient/racemanmenu.cpp	/^reConfigureMenu(void * \/* dummy *\/)$/;"	f	file:
reContDisplay	src/libs/raceengineclient/racegl.cpp	/^reContDisplay(void)$/;"	f	file:
reCurLine	src/libs/raceengineclient/racegl.cpp	/^static int	reCurLine;$/;"	v	file:
reDisplay	src/libs/raceengineclient/racegl.cpp	/^reDisplay(void)$/;"	f	file:
reDumpTrack	src/libs/raceengineclient/raceinit.cpp	/^reDumpTrack(tTrack *track, int verbose)$/;"	f	file:
reEventModList	src/libs/raceengineclient/raceinit.cpp	/^static tModList *reEventModList = 0;$/;"	v	file:
reHookActivate	src/libs/raceengineclient/racegl.cpp	/^reHookActivate(void * \/* dummy *\/)$/;"	f	file:
reHookHandle	src/libs/raceengineclient/racegl.cpp	/^static void	*reHookHandle = 0;$/;"	v	file:
reLoadMenu	src/libs/raceengineclient/racemanmenu.cpp	/^reLoadMenu(void *prevHandle)$/;"	f	file:
reMovieCapture	src/libs/raceengineclient/racegl.cpp	/^reMovieCapture(void * \/* dummy *\/)$/;"	f	file:
reMsgId	src/libs/raceengineclient/racegl.cpp	/^static int	reMsgId;$/;"	v	file:
rePauseId	src/libs/raceengineclient/racegl.cpp	/^static int	rePauseId;$/;"	v	file:
reRaceRealStart	src/libs/raceengineclient/racemain.cpp	/^reRaceRealStart(void)$/;"	f	file:
reRegisterRaceman	src/libs/raceengineclient/raceinit.cpp	/^reRegisterRaceman(tFList *racemanCur)$/;"	f	file:
reResCont	src/libs/raceengineclient/racegl.cpp	/^reResCont(void * \/* dummy *\/)$/;"	f	file:
reResMsg	src/libs/raceengineclient/racegl.cpp	/^static char	*reResMsg[LINES];$/;"	v	file:
reResMsgClr	src/libs/raceengineclient/racegl.cpp	/^static int	reResMsgClr[LINES];$/;"	v	file:
reResMsgId	src/libs/raceengineclient/racegl.cpp	/^static int	reResMsgId[LINES];$/;"	v	file:
reResScreenActivate	src/libs/raceengineclient/racegl.cpp	/^reResScreenActivate(void * \/* dummy *\/)$/;"	f	file:
reResScreenHdle	src/libs/raceengineclient/racegl.cpp	/^static void	*reResScreenHdle = 0;$/;"	v	file:
reResScreenShutdown	src/libs/raceengineclient/racegl.cpp	/^reResScreenShutdown(void * \/* dummy *\/)$/;"	f	file:
reResTitleId	src/libs/raceengineclient/racegl.cpp	/^static int	reResTitleId;$/;"	v	file:
reScreenActivate	src/libs/raceengineclient/racegl.cpp	/^reScreenActivate(void * \/* dummy *\/)$/;"	f	file:
reScreenHandle	src/libs/raceengineclient/racegl.cpp	/^static void	*reScreenHandle = 0;$/;"	v	file:
reSelectLoadFile	src/libs/raceengineclient/racemanmenu.cpp	/^reSelectLoadFile(char *filename)$/;"	f	file:
reSelectRaceman	src/libs/raceengineclient/raceinit.cpp	/^static void reSelectRaceman(void *params)$/;"	f	file:
reSkipPreStart	src/libs/raceengineclient/racegl.cpp	/^reSkipPreStart(void * \/* dummy *\/)$/;"	f	file:
reSortRacemanList	src/libs/raceengineclient/raceinit.cpp	/^reSortRacemanList(tFList **racemanList)$/;"	f	file:
reStateManage	src/libs/raceengineclient/racemanmenu.cpp	/^reStateManage(void * \/* dummy *\/)$/;"	f	file:
reaction	export/include/car.h	/^    tdble	reaction[4];    \/**< reaction on wheels *\/$/;"	m	struct:__anon201
reaction	src/interfaces/car.h	/^    tdble	reaction[4];    \/**< reaction on wheels *\/$/;"	m	struct:__anon161
read	export/include/js.h	/^  void read ( int *buttons, float *axes )$/;"	f	class:jsJoystick
read	src/interfaces/js.h	/^  void read ( int *buttons, float *axes )$/;"	f	class:jsJoystick
readKarma	src/drivers/bt/learn.cpp	/^bool SegLearn::readKarma(tTrack* track, tSituation *s, float *radius, int *uid, int driverindex)$/;"	f	class:SegLearn
readKarma	src/drivers/damned/learn.cpp	/^bool SegLearn::readKarma(tTrack* track, tSituation *s, float *radius, int *uid, int driverindex)$/;"	f	class:SegLearn
readOpenGLCfg	src/libs/confscreens/openglconfig.cpp	/^static void readOpenGLCfg(void)$/;"	f	file:
readSoundCfg	src/libs/confscreens/soundconfig.cpp	/^static void readSoundCfg(void)$/;"	f	file:
read_data_fn	src/windows/include/png.h	/^   png_rw_ptr read_data_fn;   \/* function for reading input data *\/$/;"	m	struct:png_struct_def
read_row_fn	src/windows/include/png.h	/^   png_read_status_ptr read_row_fn;   \/* called after each row is decoded *\/$/;"	m	struct:png_struct_def
read_string	src/libs/learning/string_utils.cpp	/^StringBuffer* read_string (FILE* f, StringBuffer* s)$/;"	f
read_user_chunk_fn	src/windows/include/png.h	/^   png_user_chunk_ptr read_user_chunk_fn; \/* user read chunk handler *\/$/;"	m	struct:png_struct_def
read_user_transform_fn	src/windows/include/png.h	/^   png_user_transform_ptr read_user_transform_fn; \/* user read transform *\/$/;"	m	struct:png_struct_def
real	export/include/learning/real.h	/^typedef double real;$/;"	t
real	export/include/learning/real.h	/^typedef float real;$/;"	t
real	src/libs/learning/real.h	/^typedef double real;$/;"	t
real	src/libs/learning/real.h	/^typedef float real;$/;"	t
realloc	export/include/tgf.h	162;"	d
realloc	src/libs/tgf/tgf.h	162;"	d
rearlight1	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*rearlight1 = NULL;$/;"	v
rearlight2	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgSimpleState	*rearlight2 = NULL;$/;"	v
rebound	src/modules/simu/simuv2/susp.h	/^    tDamperDef rebound;$/;"	m	struct:__anon16
reconfig	export/include/simu.h	/^    tfSimReConfig reconfig;$/;"	m	struct:__anon204
reconfig	src/interfaces/simu.h	/^    tfSimReConfig reconfig;$/;"	m	struct:__anon164
recursedirs	Make-default.mk	/^define recursedirs$/;"	m
red	src/libs/raceengineclient/racegl.cpp	/^static float red[4]     = {1.0, 0.0, 0.0, 1.0};$/;"	v	file:
red	src/libs/raceengineclient/racemanmenu.cpp	/^static float red[4]     = {1.0, 0.0, 0.0, 1.0};$/;"	v	file:
red	src/windows/include/png.h	/^   png_byte red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_8_struct
red	src/windows/include/png.h	/^   png_byte red;$/;"	m	struct:png_color_struct
red	src/windows/include/png.h	/^   png_uint_16 red;   \/* for use in red green blue files *\/$/;"	m	struct:png_color_16_struct
red	src/windows/include/png.h	/^   png_uint_16 red;$/;"	m	struct:png_sPLT_entry_struct
redraw	src/tools/accc/mainaccc.cpp	/^void redraw ()$/;"	f
ref	export/include/controlconfig.h	/^    tCtrlRef	ref;$/;"	m	struct:__anon205
ref	src/libs/confscreens/controlconfig.h	/^    tCtrlRef	ref;$/;"	m	struct:__anon44
ref	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  DtObjectRef ref;$/;"	m	class:Object
ref	src/tools/trackgen/easymesh.cpp	/^    struct ref	ref[3];$/;"	m	struct:surf	typeref:struct:surf::ref	file:
ref	src/tools/trackgen/easymesh.cpp	/^struct ref$/;"	s	file:
ref	src/windows/include/plib/sl.h	/^  void ref   () { ref_count++ ; }$/;"	f	class:slEnvelope
ref	src/windows/include/plib/sl.h	/^  void ref   () { ref_count++ ; }$/;"	f	class:slSample
ref	src/windows/include/plib/ssg.h	/^  void ref   () { refc++ ; }$/;"	f	class:ssgBase
refMouse	src/libs/tgfclient/control.cpp	/^static tMouseInfo refMouse;$/;"	v	file:
ref_count	src/windows/include/plib/sl.h	/^  int           ref_count      ;$/;"	m	class:slEnvelope
ref_count	src/windows/include/plib/sl.h	/^  int    ref_count ;$/;"	m	class:slSample
refc	src/windows/include/plib/ssg.h	/^  int   refc   ;  \/* The number of references to this node *\/$/;"	m	class:ssgBase
refcount	src/libs/tgf/params.cpp	/^    int					refcount;	\/**< Use counter (number of conf handle) *\/$/;"	m	struct:parmHeader	file:
refitBBox	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  void refitBBox() { bbox.enclose(lson->bbox, rson->bbox); }$/;"	f	class:BBoxInternal
refresh	export/include/graphic.h	/^    tfGraphicRefresh	    refresh;	    \/* Graphic refresh function *\/$/;"	m	struct:__anon211
refresh	src/interfaces/graphic.h	/^    tfGraphicRefresh	    refresh;	    \/* Graphic refresh function *\/$/;"	m	struct:__anon169
refresh	src/modules/graphic/ssggraph/grmain.cpp	/^refresh(tSituation *s)$/;"	f
refreshBoard	src/modules/graphic/ssggraph/grboard.cpp	/^void cGrBoard::refreshBoard(tSituation *s, float Fps, int forceArcade, tCarElt *curr)$/;"	f	class:cGrBoard
refreshDisplay	export/include/raceman.h	/^    int			refreshDisplay;$/;"	m	struct:__anon209
refreshDisplay	src/interfaces/raceman.h	/^    int			refreshDisplay;$/;"	m	struct:__anon168
refreshEditVal	src/libs/confscreens/driverconfig.cpp	/^refreshEditVal(void)$/;"	f	file:
refs	src/tools/accc/ac3dload.cpp	/^int refs=0;$/;"	v
relPos	export/include/car.h	/^    tPosd	relPos;		\/**< position relative to GC *\/$/;"	m	struct:__anon200
relPos	src/interfaces/car.h	/^    tPosd	relPos;		\/**< position relative to GC *\/$/;"	m	struct:__anon160
relPos	src/modules/simu/simuv2/wheel.h	/^    tPosd	relPos;		\/* relative pos \/ GC *\/$/;"	m	struct:__anon21
rel_error	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^Scalar rel_error = 1e-6; \/\/ relative error in the computed distance$/;"	v
rel_vel	src/modules/simu/simuv2/wheel.h	/^	tdble   rel_vel;    \/* relative velocity - used for realstic suspension movement*\/$/;"	m	struct:__anon21
relax	src/tools/trackgen/easymesh.cpp	/^void relax()$/;"	f
release	export/include/xmlparse.h	/^  void (*release)(void *data);$/;"	m	struct:__anon222
release	src/libs/txml/xmlparse.h	/^  void (*release)(void *data);$/;"	m	struct:__anon83
releaseSource	src/modules/graphic/ssggraph/SoundInterface.h	/^		bool releaseSource(TorcsSound* sound, int* index) {$/;"	f	class:SharedSourcePool
releaseTime	src/modules/simu/simuv2/transmission.h	/^    tdble	releaseTime;	\/* time needed for releasing the clutch pedal *\/$/;"	m	struct:__anon27
reliability_estimate	export/include/learning/policy.h	/^	bool reliability_estimate; \/\/\/< reliability estimates option$/;"	m	class:DiscretePolicy
reliability_estimate	src/libs/learning/policy.h	/^	bool reliability_estimate; \/\/\/< reliability estimates option$/;"	m	class:DiscretePolicy
remInfo	src/libs/tgfclient/guimenu.cpp	/^remInfo(void *cbinfo)$/;"	f	file:
remainingLaps	export/include/car.h	/^    int			remainingLaps;$/;"	m	struct:__anon198
remainingLaps	src/interfaces/car.h	/^    int			remainingLaps;$/;"	m	struct:__anon158
remaining_laps	src/drivers/olethros/learn.h	/^	int remaining_laps; \/\/\/< remaining_laps$/;"	m	class:olethros::SegLearn
remove	src/modules/graphic/ssggraph/grcam.h	/^    void remove(tGrCamHead *head) {$/;"	f	class:cGrCamera
remove	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  void remove() { succ->pred = pred; pred->succ = succ; }$/;"	f	class:Endpoint
removeAll	src/windows/include/plib/ssg.h	/^  void removeAll ()$/;"	f	class:ssgSimpleList
removeEntity	src/windows/include/plib/ssg.h	/^  void removeEntity ( ssgEntity *entity )$/;"	f	class:ssgKidList
removeEntity	src/windows/include/plib/ssg.h	/^  void removeEntity ( ssgEntity *entity )$/;"	f	class:ssgList
removeEntity	src/windows/include/plib/ul.h	/^  void removeEntity ( void *entity )$/;"	f	class:ulList
removeEntity	src/windows/include/ul.h	/^  void removeEntity ( void *entity )$/;"	f	class:ulList
removeLast	src/windows/include/plib/ssg.h	/^  void removeLast ()$/;"	f	class:ssgSimpleList
removePair	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^void removePair(ObjectPtr object1, ObjectPtr object2) {$/;"	f
removeParam	src/libs/tgf/params.cpp	/^removeParam (struct parmHeader *conf, struct section *section, struct param *param)$/;"	f	file:
removeParamByName	src/libs/tgf/params.cpp	/^removeParamByName (struct parmHeader *conf, char *sectionName, char *paramName)$/;"	f	file:
removeParent	src/windows/include/plib/ssg.h	/^  void removeParent ( ssgEntity *entity ) { parents.removeEntity ( entity ) ; }$/;"	f	class:ssgEntity
removeSection	src/libs/tgf/params.cpp	/^removeSection (struct parmHeader *conf, struct section *section)$/;"	f	file:
render_colours	src/windows/include/plib/ssg.h	/^  ssgColourArray   *render_colours   ;$/;"	m	class:ssgTween
render_normals	src/windows/include/plib/ssg.h	/^  ssgNormalArray   *render_normals   ;$/;"	m	class:ssgTween
render_texcoords	src/windows/include/plib/ssg.h	/^  ssgTexCoordArray *render_texcoords ;$/;"	m	class:ssgTween
render_vertices	src/windows/include/plib/ssg.h	/^  ssgVertexArray   *render_vertices  ;$/;"	m	class:ssgTween
renum	src/tools/trackgen/easymesh.cpp	/^void renum()$/;"	f
reorder	src/tools/accc/ac3dgroup.cpp	/^void reorder(ob_t * ob,ob_t * ob2, double    *textarray,tcoord_t      *vertexarray)$/;"	f
rep	src/modules/simu/simuv2/brake.h	/^    tdble	rep;	\/* front\/rear repartition *\/ $/;"	m	struct:__anon24
repair	export/include/car.h	/^    int			repair;$/;"	m	struct:__anon203
repair	src/interfaces/car.h	/^    int			repair;$/;"	m	struct:__anon163
repairId	src/libs/racescreens/pitmenu.cpp	/^static int		repairId;$/;"	v	file:
replaceEntity	src/windows/include/plib/ssg.h	/^  void replaceEntity ( ssgEntity *old_entity, ssgEntity *new_entity )$/;"	f	class:ssgKidList
replaceEntity	src/windows/include/plib/ssg.h	/^  void replaceEntity ( ssgEntity *old_entity, ssgEntity *new_entity )$/;"	f	class:ssgList
replaceEntity	src/windows/include/plib/ul.h	/^  void replaceEntity ( void *old_entity, void *new_entity )$/;"	f	class:ulList
replaceEntity	src/windows/include/ul.h	/^  void replaceEntity ( void *old_entity, void *new_entity )$/;"	f	class:ulList
replacing_traces	export/include/learning/policy.h	/^	bool replacing_traces; \/\/\/< Replacing instead of accumulating traces$/;"	m	class:DiscretePolicy
replacing_traces	src/libs/learning/policy.h	/^	bool replacing_traces; \/\/\/< Replacing instead of accumulating traces$/;"	m	class:DiscretePolicy
replay_mode	src/windows/include/plib/sl.h	/^  slReplayMode   replay_mode     ;$/;"	m	class:slPlayer
replay_mode	src/windows/include/plib/sl.h	/^  slReplayMode  replay_mode    ;$/;"	m	class:slEnvelope
reportDefault	src/libs/txml/xmlparse.c	/^reportDefault(XML_Parser parser, const ENCODING *enc, const char *s, const char *end)$/;"	f	file:
reportProcessingInstruction	src/libs/txml/xmlparse.c	/^reportProcessingInstruction(XML_Parser parser, const ENCODING *enc, const char *start, const char *end)$/;"	f	file:
res	src/windows/include/plib/ul.h	/^  static double res ;$/;"	m	class:ulClock
res	src/windows/include/ul.h	/^  static double res ;$/;"	m	class:ulClock
reserved	src/windows/include/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset	src/windows/include/plib/sl.h	/^  virtual void reset ()$/;"	f	class:slPlayer
reset	src/windows/include/plib/sl.h	/^  void reset ()$/;"	f	class:slSamplePlayer
reset	src/windows/include/plib/ul.h	/^  void reset ()$/;"	f	class:ulClock
reset	src/windows/include/ul.h	/^  void reset ()$/;"	f	class:ulClock
resetPair	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void resetPair(DtObjectRef obj1, DtObjectRef obj2) { $/;"	f	class:RespTable
resetSingle	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void resetSingle(DtObjectRef obj) { singleList.erase(obj); }$/;"	f	class:RespTable
reshape	src/tools/accc/mainaccc.cpp	/^void reshape ( int w, int h )$/;"	f
respTable	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	/^RespTable respTable;$/;"	v
response	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  DtResponse response;$/;"	m	class:Response
restLength	src/windows/include/plib/sg.h	/^  float restLength ;$/;"	m	class:sgSpringDamper
restPos	src/modules/simu/simuv2/carstruct.h	/^    tDynPt	restPos;	\/* target rest position after the car is broken *\/$/;"	m	struct:__anon18
results	export/include/raceman.h	/^    void		*results;	\/**< Race results *\/$/;"	m	struct:RmInfo
results	src/interfaces/raceman.h	/^    void		*results;	\/**< Race results *\/$/;"	m	struct:RmInfo
resume	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::resume()$/;"	f	class:OpenalTorcsSound
resume	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::resume()$/;"	f	class:PlibTorcsSound
resume	src/windows/include/plib/sl.h	/^  virtual void resume ()$/;"	f	class:slPlayer
retrieve	export/include/learning/List.h	/^	LISTITEM* (*retrieve) (struct List* list, void* ptr);$/;"	m	struct:List
retrieve	src/libs/learning/List.h	/^	LISTITEM* (*retrieve) (struct List* list, void* ptr);$/;"	m	struct:List
revsLimiter	src/modules/simu/simuv2/engine.h	/^    tdble		revsLimiter;$/;"	m	struct:__anon12
revsMax	src/modules/simu/simuv2/engine.h	/^    tdble		revsMax;$/;"	m	struct:__anon12
rgb	src/modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 rgb  ;$/;"	m	struct:_ssgMaterial	file:
rgb	src/tools/accc/accc.h	/^  color_t rgb;$/;"	m	struct:mat
rgb_to_gray_blue_coeff	src/windows/include/png.h	/^   png_uint_16 rgb_to_gray_blue_coeff;$/;"	m	struct:png_struct_def
rgb_to_gray_green_coeff	src/windows/include/png.h	/^   png_uint_16 rgb_to_gray_green_coeff;$/;"	m	struct:png_struct_def
rgb_to_gray_red_coeff	src/windows/include/png.h	/^   png_uint_16 rgb_to_gray_red_coeff;$/;"	m	struct:png_struct_def
rgb_to_gray_status	src/windows/include/png.h	/^   png_byte rgb_to_gray_status;$/;"	m	struct:png_struct_def
rgtSideNormal	export/include/track.h	/^    t3Dd	rgtSideNormal;	\/* normal to the right side in case of straight segment *\/$/;"	m	struct:trackSeg
rgtSideNormal	src/interfaces/track.h	/^    t3Dd	rgtSideNormal;	\/* normal to the right side in case of straight segment *\/$/;"	m	struct:trackSeg
rideHeight	src/modules/simu/simuv2/wheel.h	/^    tdble	rideHeight;	\/* height of the bottom of the car *\/$/;"	m	struct:__anon21
right	src/drivers/olethros/TrackData.h	/^    Point right;$/;"	m	class:Segment
right	src/modules/graphic/ssggraph/grcam.h	/^    float right;$/;"	m	class:cGrOrthoCamera
right	src/windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
right	src/windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
rimRadius	export/include/car.h	/^    tdble	rimRadius;	\/**< Rim radius *\/$/;"	m	struct:__anon195
rimRadius	src/interfaces/car.h	/^    tdble	rimRadius;	\/**< Rim radius *\/$/;"	m	struct:__anon155
rle_temp	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned char *rle_temp;$/;"	m	class:ssgSGIHeader
rmActivate	src/libs/racescreens/fileselect.cpp	/^rmActivate(void * \/* dummy *\/ )$/;"	f	file:
rmCallback	src/libs/racescreens/pitmenu.cpp	/^static tfuiCallback rmCallback;$/;"	v	file:
rmCar	src/libs/racescreens/pitmenu.cpp	/^static tCarElt		*rmCar;$/;"	v	file:
rmCatPrevNext	src/libs/racescreens/trackselect.cpp	/^static void rmCatPrevNext(void *vsel)$/;"	f	file:
rmChangeDisplayMode	src/libs/racescreens/racemenu.cpp	/^rmChangeDisplayMode(void * \/* dummy *\/)$/;"	f
rmChgPracticeScreen	src/libs/racescreens/results.cpp	/^rmChgPracticeScreen(void *vprc)$/;"	f	file:
rmChgQualifScreen	src/libs/racescreens/results.cpp	/^rmChgQualifScreen(void *vprc)$/;"	f	file:
rmChgRaceScreen	src/libs/racescreens/results.cpp	/^rmChgRaceScreen(void *vprc)$/;"	f	file:
rmChgStandingScreen	src/libs/racescreens/results.cpp	/^rmChgStandingScreen(void *vprc)$/;"	f	file:
rmChgStartScreen	src/libs/racescreens/miscscreens.cpp	/^rmChgStartScreen(void *vpsrc)$/;"	f	file:
rmClickOnFile	src/libs/racescreens/fileselect.cpp	/^rmClickOnFile(void * \/*dummy*\/)$/;"	f	file:
rmCurDispMode	src/libs/racescreens/racemenu.cpp	/^static int		rmCurDispMode;$/;"	v	file:
rmCurDispModeList	src/libs/racescreens/racemenu.cpp	/^static char		*rmCurDispModeList[] = { RM_VAL_VISIBLE, RM_VAL_INVISIBLE};$/;"	v	file:
rmCurText	src/libs/racescreens/loadingscreen.cpp	/^static int		rmCurText;$/;"	v	file:
rmDeactivate	src/libs/racescreens/fileselect.cpp	/^rmDeactivate(void * \/* dummy *\/ )$/;"	f	file:
rmDeativate	src/libs/racescreens/loadingscreen.cpp	/^rmDeativate(void * \/* dummy *\/)$/;"	f	file:
rmDispModeEditId	src/libs/racescreens/racemenu.cpp	/^static int		rmDispModeEditId;$/;"	v	file:
rmDisplayStartRace	src/libs/racescreens/miscscreens.cpp	/^rmDisplayStartRace(tRmInfo *info, void *startScr, void *abortScr, int start)$/;"	f	file:
rmFreeDrvList	src/libs/racescreens/driverselect.cpp	/^rmFreeDrvList(void)$/;"	f	file:
rmFs	src/libs/racescreens/fileselect.cpp	/^static tRmFileSelect	*rmFs;$/;"	v	file:
rmGetMapName	src/libs/racescreens/trackselect.cpp	/^static char * rmGetMapName(void)$/;"	f	file:
rmMove	src/libs/racescreens/driverselect.cpp	/^rmMove(void *vd)$/;"	f	file:
rmPracticeResults	src/libs/racescreens/results.cpp	/^rmPracticeResults(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmQualifResults	src/libs/racescreens/results.cpp	/^rmQualifResults(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmRaceResults	src/libs/racescreens/results.cpp	/^rmRaceResults(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmRepair	src/libs/racescreens/pitmenu.cpp	/^rmRepair(void* \/* dummy *\/)$/;"	f	file:
rmSaveId	src/libs/racescreens/results.cpp	/^static int	rmSaveId;$/;"	v	file:
rmSaveRes	src/libs/racescreens/results.cpp	/^rmSaveRes(void *vInfo)$/;"	f	file:
rmScrHdle	src/libs/racescreens/miscscreens.cpp	/^static void		*rmScrHdle = 0;$/;"	v	file:
rmScrHdle	src/libs/racescreens/results.cpp	/^static void	*rmScrHdle = NULL;$/;"	v	file:
rmSelect	src/libs/racescreens/fileselect.cpp	/^rmSelect(void * \/* dummy *\/ )$/;"	f	file:
rmSelectDeselect	src/libs/racescreens/driverselect.cpp	/^rmSelectDeselect(void * \/* dummy *\/ )$/;"	f	file:
rmShowStandings	src/libs/racescreens/results.cpp	/^rmShowStandings(void *prevHdle, tRmInfo *info, int start)$/;"	f	file:
rmStopAndGo	src/libs/racescreens/pitmenu.cpp	/^rmStopAndGo(void * \/* dummy *\/)$/;"	f	file:
rmTextId	src/libs/racescreens/loadingscreen.cpp	/^static int		rmTextId[TEXTLINES];$/;"	v	file:
rmTextLines	src/libs/racescreens/loadingscreen.cpp	/^static char		*rmTextLines[TEXTLINES] = {0};$/;"	v	file:
rmUpdateTrackInfo	src/libs/racescreens/trackselect.cpp	/^static void rmUpdateTrackInfo(void)$/;"	f	file:
rmUpdtFuel	src/libs/racescreens/pitmenu.cpp	/^rmUpdtFuel(void * \/* dummy *\/)$/;"	f	file:
rmUpdtRepair	src/libs/racescreens/pitmenu.cpp	/^rmUpdtRepair(void * \/* dummy *\/)$/;"	f	file:
rmUserData	src/libs/racescreens/pitmenu.cpp	/^static void *rmUserData;$/;"	v	file:
rmdsActivate	src/libs/racescreens/driverselect.cpp	/^rmdsActivate(void * \/* notused *\/)$/;"	f	file:
rmdsAddKeys	src/libs/racescreens/driverselect.cpp	/^rmdsAddKeys(void)$/;"	f	file:
rmdsClickOnDriver	src/libs/racescreens/driverselect.cpp	/^rmdsClickOnDriver(void * \/* dummy *\/)$/;"	f	file:
rmdsDeactivate	src/libs/racescreens/driverselect.cpp	/^rmdsDeactivate(void *screen)$/;"	f	file:
rmdsSelect	src/libs/racescreens/driverselect.cpp	/^rmdsSelect(void * \/* dummy *\/)$/;"	f	file:
rmdsSetFocus	src/libs/racescreens/driverselect.cpp	/^rmdsSetFocus(void * \/* dummy *\/)$/;"	f	file:
rmin	src/drivers/bt/learn.h	/^		float rmin;$/;"	m	class:SegLearn
rmin	src/drivers/damned/learn.h	/^		float rmin;$/;"	m	class:SegLearn
rmin	src/drivers/olethros/learn.h	/^	float rmin; \/\/\/< current estimated minimum radius$/;"	m	class:olethros::SegLearn
rmrpAddKeys	src/libs/racescreens/racemenu.cpp	/^rmrpAddKeys(void)$/;"	f	file:
rmrpDeactivate	src/libs/racescreens/racemenu.cpp	/^rmrpDeactivate(void *screen)$/;"	f	file:
rmrpDistId	src/libs/racescreens/racemenu.cpp	/^static int		rmrpDistId;$/;"	v	file:
rmrpDistance	src/libs/racescreens/racemenu.cpp	/^static int		rmrpDistance;$/;"	v	file:
rmrpLaps	src/libs/racescreens/racemenu.cpp	/^static int		rmrpLaps;$/;"	v	file:
rmrpLapsId	src/libs/racescreens/racemenu.cpp	/^static int		rmrpLapsId;$/;"	v	file:
rmrpUpdDist	src/libs/racescreens/racemenu.cpp	/^rmrpUpdDist(void * \/* dummy *\/)$/;"	f	file:
rmrpUpdLaps	src/libs/racescreens/racemenu.cpp	/^rmrpUpdLaps(void * \/* dummy *\/)$/;"	f	file:
rmrpValidate	src/libs/racescreens/racemenu.cpp	/^rmrpValidate(void * \/* dummy *\/)$/;"	f	file:
rmtsActivate	src/libs/racescreens/trackselect.cpp	/^static void rmtsActivate(void * \/* dummy *\/)$/;"	f	file:
rmtsAddKeys	src/libs/racescreens/trackselect.cpp	/^static void rmtsAddKeys(void)$/;"	f	file:
rmtsDeactivate	src/libs/racescreens/trackselect.cpp	/^static void rmtsDeactivate(void *screen)$/;"	f	file:
rmtsFreeLists	src/libs/racescreens/trackselect.cpp	/^static void rmtsFreeLists(void *vl)$/;"	f	file:
rmtsPrevNext	src/libs/racescreens/trackselect.cpp	/^static void rmtsPrevNext(void *vsel)$/;"	f	file:
rmtsSelect	src/libs/racescreens/trackselect.cpp	/^void rmtsSelect(void * \/* dummy *\/)$/;"	f
rnd	export/include/3D/Basic.h	/^inline Scalar rnd() { return (Scalar(rand()) + 0.5) \/ (Scalar(RAND_MAX) + 1); }$/;"	f
rnd	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline Scalar rnd() { return (Scalar(rand()) + 0.5) \/ (Scalar(RAND_MAX) + 1); }$/;"	f
rng_list	src/windows/include/plib/ssg.h	/^  float rng_list [ 33 ] ;$/;"	m	class:ssgRangeSelector
road	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar road;$/;"	m	class:CarSoundData
road	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap road; $/;"	m	class:SoundInterface
road_ride_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* road_ride_sound; \/\/\/< rolling on normal road$/;"	m	class:SoundInterface
robot	export/include/car.h	/^    struct RobotItf	*robot;	\/**< private *\/$/;"	m	struct:CarElt	typeref:struct:CarElt::RobotItf
robot	src/interfaces/car.h	/^    struct RobotItf	*robot;	\/**< private *\/$/;"	m	struct:CarElt	typeref:struct:CarElt::RobotItf
rollCenter	src/modules/simu/simuv2/wheel.h	/^    tdble	rollCenter;$/;"	m	struct:__anon21
rollRes	export/include/car.h	/^    tdble rollRes;              \/**< rolling resistance, useful for sound *\/$/;"	m	struct:__anon200
rollRes	src/interfaces/car.h	/^    tdble rollRes;              \/**< rolling resistance, useful for sound *\/$/;"	m	struct:__anon160
rollRes	src/modules/simu/simuv2/wheel.h	/^    tdble	rollRes;	\/* Rolling Resistance (summed over the car) *\/$/;"	m	struct:__anon21
root	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  BBoxNode *root;$/;"	m	class:Complex
rootSection	src/libs/tgf/params.cpp	/^    struct section			*rootSection;	\/**< List of sections at the first level *\/$/;"	m	struct:parmHeader	typeref:struct:parmHeader::section	file:
root_material	src/tools/accc/ac3dload.cpp	/^mat_t * root_material=NULL;$/;"	v
root_ob	src/tools/accc/ac3dload.cpp	/^ob_t * root_ob;$/;"	v
rotate	export/include/tmath/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::rotate(const v2t<T> &c, T arc) const$/;"	f	class:v2t
rotate	src/drivers/olethros/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	src/drivers/sparkle/linalg.h	/^inline v2d v2d::rotate(const v2d &c, float arc) const$/;"	f	class:v2d
rotate	src/libs/math/v2_t.h	/^template<class T> inline v2t<T> v2t<T>::rotate(const v2t<T> &c, T arc) const$/;"	f	class:v2t
rotate	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void rotate(const Quaternion& q) { curr.rotate(q); }$/;"	f	class:Object
rotate	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::rotate(const Quaternion& q) { $/;"	f	class:Transform
rotation	src/libs/tgfclient/fg_gm.cpp	/^	Rotation			rotation;			\/\/ The rotation mode.$/;"	m	struct:tagSFG_Display	file:
rotation_axis	src/windows/include/plib/ssg.h	/^  sgVec3 rotation_axis   ;$/;"	m	class:ssgAxisTransform
rotation_center	src/windows/include/plib/ssg.h	/^  sgVec3 rotation_center ;$/;"	m	class:ssgAxisTransform
round	src/drivers/inferno/trackdesc.cpp	/^float round(float x)$/;"	f
round	src/drivers/lliaw/trackdesc.cpp	/^float round(float x)$/;"	f
round	src/drivers/tita/trackdesc.cpp	/^float round(float x)$/;"	f
row_buf	src/windows/include/png.h	/^   png_bytep row_buf;         \/* buffer to save current (unfiltered) row *\/$/;"	m	struct:png_struct_def
row_buf_size	src/windows/include/png.h	/^   png_uint_32 row_buf_size;$/;"	m	struct:png_struct_def
row_fn	src/windows/include/png.h	/^   png_progressive_row_ptr row_fn;   \/* called after each prog. row is decoded *\/$/;"	m	struct:png_struct_def
row_info	src/windows/include/png.h	/^   png_row_info row_info;     \/* used for transformation routines *\/$/;"	m	struct:png_struct_def
row_number	src/windows/include/png.h	/^   png_uint_32 row_number;    \/* current row in interlace pass *\/$/;"	m	struct:png_struct_def
row_pointers	src/windows/include/png.h	/^   png_bytepp row_pointers;        \/* the image bits *\/$/;"	m	struct:png_info_struct
rowbytes	src/windows/include/png.h	/^   png_uint_32 rowbytes;      \/* size of row in bytes *\/$/;"	m	struct:png_struct_def
rowbytes	src/windows/include/png.h	/^   png_uint_32 rowbytes;    \/* bytes needed to hold an untransformed row *\/$/;"	m	struct:png_info_struct
rowbytes	src/windows/include/png.h	/^   png_uint_32 rowbytes; \/* number of bytes in row *\/$/;"	m	struct:png_row_info_struct
rp	src/libs/raceengineclient/racemanmenu.cpp	/^static tRmRaceParam	rp;$/;"	v	file:
rp	src/libs/racescreens/racemenu.cpp	/^static tRmRaceParam	*rp;$/;"	v	file:
rpmMaxPw	src/modules/simu/simuv2/engine.h	/^	tdble       rpmMaxPw;$/;"	m	struct:__anon11
rpmMaxTq	src/modules/simu/simuv2/engine.h	/^	tdble       rpmMaxTq;$/;"	m	struct:__anon11
rpos	src/windows/include/plib/sl.h	/^  char           *rpos ;          \/\/ read position for buffer$/;"	m	class:slDSP
rside	export/include/track.h	/^		struct { struct trackSeg *rside, *lside; };$/;"	m	struct:trackSeg::__anon180::__anon181	typeref:struct:trackSeg::__anon180::__anon181::trackSeg
rside	src/interfaces/track.h	/^		struct { struct trackSeg *rside, *lside; };$/;"	m	struct:trackSeg::__anon147::__anon148	typeref:struct:trackSeg::__anon147::__anon148::trackSeg
rson	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  BBoxNode *rson;$/;"	m	class:BBoxInternal
ruleState	export/include/raceman.h	/^    int			ruleState;$/;"	m	struct:RmCarRules
ruleState	src/interfaces/raceman.h	/^    int			ruleState;$/;"	m	struct:RmCarRules
rules	export/include/raceman.h	/^    tRmCarRules		*rules;		\/**< by car rules *\/$/;"	m	struct:RmInfo
rules	src/interfaces/raceman.h	/^    tRmCarRules		*rules;		\/**< by car rules *\/$/;"	m	struct:RmInfo
running	export/include/raceman.h	/^    int			running;$/;"	m	struct:__anon209
running	src/interfaces/raceman.h	/^    int			running;$/;"	m	struct:__anon168
running	src/windows/include/plib/ssg.h	/^  ssgAnimEnum      running ;$/;"	m	class:ssgTimedSelector
running_skid	src/modules/graphic/ssggraph/grskidmarks.h	/^  int			running_skid;$/;"	m	struct:__anon2
s	export/include/learning/Distribution.h	/^	real s; \/\/\/< standard deviation$/;"	m	class:NormalDistribution
s	export/include/learning/Distribution.h	/^	real s; \/\/\/< standard deviation$/;"	m	class:UniformDistribution
s	export/include/raceman.h	/^    tSituation		*s;		\/**< Situation during race *\/$/;"	m	struct:RmInfo
s	src/drivers/bt/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	src/drivers/bt/spline.h	/^		float s;	\/\/ slope.$/;"	m	class:SplinePoint
s	src/drivers/damned/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	src/drivers/damned/spline.h	/^		float s;	\/\/ slope.$/;"	m	class:SplinePoint
s	src/drivers/olethros/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	src/drivers/olethros/spline.h	/^		float s;	\/\/ slope.$/;"	m	class:SplinePoint
s	src/drivers/sparkle/spline.h	/^		SplinePoint *s;$/;"	m	class:Spline
s	src/drivers/sparkle/spline.h	/^		float s;	\/* slope *\/$/;"	m	class:SplinePoint
s	src/interfaces/raceman.h	/^    tSituation		*s;		\/**< Situation during race *\/$/;"	m	struct:RmInfo
s	src/libs/learning/Distribution.h	/^	real s; \/\/\/< standard deviation$/;"	m	class:NormalDistribution
s	src/libs/learning/Distribution.h	/^	real s; \/\/\/< standard deviation$/;"	m	class:UniformDistribution
s	src/libs/txml/xmlparse.c	/^  XML_Char s[1];$/;"	m	struct:block	file:
s	src/modules/simu/simuv2/SOLID-2.0/doc/solid2.html	/^functions (ten lines or less in length), then the use of the object$/;"	f
s	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int s;$/;"	m	struct:__anon32	file:
s	src/tools/trackgen/easymesh.cpp	/^    double s;$/;"	m	struct:sid	file:
s0	src/tools/trackgen/easymesh.cpp	/^    int s0, s1, type;$/;"	m	struct:chai	file:
s1	src/drivers/berniw/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	src/drivers/berniw2/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	src/drivers/berniw3/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s1	src/drivers/inferno/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s1	src/drivers/lliaw/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s1	src/drivers/tita/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s1	src/tools/trackgen/easymesh.cpp	/^    int s0, s1, type;$/;"	m	struct:chai	file:
s3	src/drivers/berniw/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	src/drivers/berniw2/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	src/drivers/berniw3/pathfinder.h	/^		int s1, s3;				\/* pitentrystart, pitentryend *\/$/;"	m	class:Pathfinder
s3	src/drivers/inferno/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s3	src/drivers/lliaw/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
s3	src/drivers/tita/pathfinder.h	/^		int s1, s3;				\/\/ pitentrystart, pitentryend.$/;"	m	class:Pathfinder
sTime	export/include/raceman.h	/^    tdble	sTime;$/;"	m	struct:__anon208
sTime	src/interfaces/raceman.h	/^    tdble	sTime;$/;"	m	struct:__anon167
s_imgHeight	src/libs/client/splash.cpp	/^static int s_imgWidth, s_imgHeight;$/;"	v	file:
s_imgWidth	src/libs/client/splash.cpp	/^static int s_imgWidth, s_imgHeight;$/;"	v	file:
s_texture	src/libs/client/splash.cpp	/^static GLuint s_texture = 0;$/;"	v	file:
sa	src/modules/simu/simuv2/wheel.h	/^    tdble	sa;		\/* slip angle *\/$/;"	m	struct:__anon21
safety_margin	src/windows/include/plib/sl.h	/^  float safety_margin ;$/;"	m	class:slScheduler
safety_threshold	src/drivers/olethros/learn.h	/^	float safety_threshold;$/;"	m	class:olethros::SegLearn
sameName	src/libs/txml/xmltok.h	/^  int (*sameName)(const ENCODING *,$/;"	m	struct:encoding
sameName	src/libs/txml/xmltok_impl.c	/^int PREFIX(sameName)(const ENCODING *enc, const char *ptr1, const char *ptr2)$/;"	f	file:
sample	export/include/learning/policy.h	/^	real* sample; \/\/\/< sampling output$/;"	m	class:DiscretePolicy
sample	src/libs/learning/policy.h	/^	real* sample; \/\/\/< sampling output$/;"	m	class:DiscretePolicy
sample	src/modules/graphic/ssggraph/TorcsSound.h	/^	slSample* sample; \/\/\/< sample data$/;"	m	class:PlibTorcsSound
sample	src/windows/include/plib/sl.h	/^  slSample      *sample          ;$/;"	m	class:slSamplePlayer
sample	src/windows/include/plib/sl.h	/^  slSample  *sample   ;$/;"	m	struct:slPendingCallBack
sampling_rate	src/modules/graphic/ssggraph/SoundInterface.h	/^	float sampling_rate; \/\/\/< sampling rate$/;"	m	class:SoundInterface
saturate	export/include/js.h	/^  float saturate  [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
saturate	src/interfaces/js.h	/^  float saturate  [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
save	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:ssgVtxTableCarlight
save	src/modules/graphic/ssggraph/grshadow.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:ssgVtxTableShadow
save	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:ssgVtxTableSmoke
save	src/modules/graphic/ssggraph/grvertexarray.h	/^  virtual int save ( FILE *fd ) {return  ssgVtxArray::save(fd);}$/;"	f	class:ssgGrVtxArray
save	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual int save ( FILE *fd )  {return  ssgVtxTable::save(fd);}$/;"	f	class:grVtxTable
saveElevation	src/tools/trackgen/maintrackgen.cpp	/^int		saveElevation;$/;"	v
saveFile	src/libs/learning/policy.cpp	/^void DiscretePolicy::saveFile (char* f) {$/;"	f	class:DiscretePolicy
saveIn3DSsubObject	src/tools/accc/ac3dload.cpp	/^void  saveIn3DSsubObject(ob_t * object,database3ds *db)$/;"	f
saveObin3DS	src/tools/accc/ac3dload.cpp	/^void saveObin3DS( char * OutputFilename, ob_t * object)$/;"	f
saveObject	src/tools/trackgen/track.cpp	/^saveObject(FILE *curFd, int nb, int start, char *texture, char *name, int surfType)$/;"	f	file:
saveOpenGLOption	src/libs/confscreens/openglconfig.cpp	/^static void saveOpenGLOption(void *)$/;"	f	file:
saveParameters	src/drivers/olethros/learn.cpp	/^void SegLearn::saveParameters (char* fname)$/;"	f	class:SegLearn
saveParams	src/libs/tgfclient/screen.cpp	/^saveParams(void)$/;"	f	file:
saveSkin	src/tools/texmapper/maintexmapper.cpp	/^void saveSkin(void)$/;"	f
saveSoundOption	src/libs/confscreens/soundconfig.cpp	/^static void saveSoundOption(void *)$/;"	f	file:
saveState	src/libs/learning/policy.cpp	/^void DiscretePolicy::saveState(FILE* f) $/;"	f	class:DiscretePolicy
saveTriangle	src/tools/texmapper/ssgSaveAC.cpp	/^struct saveTriangle$/;"	s	file:
saveTriangle	src/tools/trackgen/objects.cpp	/^struct saveTriangle$/;"	s	file:
save_buffer	src/windows/include/png.h	/^   png_bytep save_buffer;            \/* buffer for previously read data *\/$/;"	m	struct:png_struct_def
save_buffer_max	src/windows/include/png.h	/^   png_size_t save_buffer_max;       \/* total size of save_buffer *\/$/;"	m	struct:png_struct_def
save_buffer_ptr	src/windows/include/png.h	/^   png_bytep save_buffer_ptr;        \/* current location in save_buffer *\/$/;"	m	struct:png_struct_def
save_buffer_size	src/windows/include/png.h	/^   png_size_t save_buffer_size;      \/* amount of data now in save_buffer *\/$/;"	m	struct:png_struct_def
save_database	src/tools/texmapper/maintexmapper.cpp	/^void save_database(void)$/;"	f
save_fd	src/tools/texmapper/ssgSaveAC.cpp	/^static FILE *save_fd ;$/;"	v	file:
saved	src/tools/accc/accc.h	/^  int saved;$/;"	m	struct:ob
saved	src/tools/accc/accc.h	/^  int saved;$/;"	m	struct:tcoord
sbPos	src/libs/tgfclient/gui.h	/^    int			sbPos;$/;"	m	struct:__anon63
sbbmax	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	sbbmax;$/;"	m	struct:Face	file:
sbbmin	src/tools/texmapper/maintexmapper.cpp	/^    sgVec3	sbbmin;		\/* Bounding (scaled) box *\/$/;"	m	struct:Face	file:
scal_pixel_height	src/windows/include/png.h	/^   double scal_pixel_height;   \/* height of one pixel *\/$/;"	m	struct:png_info_struct
scal_pixel_width	src/windows/include/png.h	/^   double scal_pixel_width;    \/* width of one pixel *\/$/;"	m	struct:png_info_struct
scal_s_height	src/windows/include/png.h	/^   png_charp scal_s_height;    \/* string containing width *\/$/;"	m	struct:png_info_struct
scal_s_width	src/windows/include/png.h	/^   png_charp scal_s_width;     \/* string containing height *\/$/;"	m	struct:png_info_struct
scal_unit	src/windows/include/png.h	/^   png_byte scal_unit;         \/* unit of physical scale *\/$/;"	m	struct:png_info_struct
scale	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void scale(Scalar x, Scalar y, Scalar z) { curr.scale(x, y, z); }$/;"	f	class:Object
scale	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::scale(Scalar x, Scalar y, Scalar z) { $/;"	f	class:Transform
scale	src/modules/telemetry/telemetry.cpp	/^    tdble		scale;$/;"	m	struct:Channel	file:
scanAtts	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanAtts)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanCdataSection	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanCdataSection)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanCharRef	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanCharRef)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanComment	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanComment)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanDecl	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanDecl)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanEndTag	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanEndTag)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanHexCharRef	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanHexCharRef)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanLit	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanLit)(int open, const ENCODING *enc,$/;"	f	file:
scanLt	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanLt)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanPercent	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanPercent)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanPi	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanPi)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanPoundName	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanPoundName)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanRef	src/libs/txml/xmltok_impl.c	/^int PREFIX(scanRef)(const ENCODING *enc, const char *ptr, const char *end,$/;"	f	file:
scanners	src/libs/txml/xmltok.h	/^  int (*scanners[XML_N_STATES])(const ENCODING *,$/;"	m	struct:encoding
schar	src/modules/graphic/ssggraph/SoundInterface.h	/^	QSoundChar CarSoundData::*schar; \/\/\/< The calculated sound characteristic$/;"	m	class:QueueSoundMap_::CarSoundData
sched	src/modules/graphic/ssggraph/SoundInterface.h	/^	slScheduler* sched;$/;"	m	class:PlibSoundInterface
sched	src/modules/graphic/ssggraph/TorcsSound.h	/^	slScheduler* sched; \/\/\/< plib sl scheduler (see sl.h)$/;"	m	class:PlibTorcsSound
schedView	src/modules/graphic/ssggraph/grcam.cpp	/^    tSchedView *schedView;$/;"	m	class:cGrCarCamRoadZoomTVD	file:
scheduledEventTime	export/include/car.h	/^    double		scheduledEventTime;$/;"	m	struct:__anon198
scheduledEventTime	src/interfaces/car.h	/^    double		scheduledEventTime;$/;"	m	struct:__anon158
scrHandle	src/libs/confscreens/controlconfig.cpp	/^static void 	*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/confscreens/driverconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/confscreens/graphconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/confscreens/openglconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/confscreens/simuconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/confscreens/soundconfig.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/racescreens/driverselect.cpp	/^static void		*scrHandle;$/;"	v	file:
scrHandle	src/libs/racescreens/fileselect.cpp	/^static void		*scrHandle = NULL;$/;"	v	file:
scrHandle	src/libs/racescreens/racemenu.cpp	/^static void		*scrHandle;$/;"	v	file:
scrHandle	src/libs/racescreens/trackselect.cpp	/^static void *scrHandle;$/;"	v	file:
scrHandle	src/libs/tgfclient/guihelp.cpp	/^static void	*scrHandle;$/;"	v	file:
scrHandle	src/libs/tgfclient/screen.cpp	/^static void	*scrHandle = NULL;$/;"	v	file:
scrHandle2	src/libs/confscreens/joystickconfig.cpp	/^static void	*scrHandle2 = NULL;$/;"	v	file:
scrHandle2	src/libs/confscreens/mouseconfig.cpp	/^static void 	*scrHandle2 = NULL;$/;"	v	file:
screen	src/libs/tgfclient/guimenu.h	/^    void	*screen;$/;"	m	struct:__anon53
screen	src/modules/graphic/ssggraph/grcam.h	/^    class cGrScreen	*screen;	\/* screen where the camera is attached *\/$/;"	m	class:cGrCamera	typeref:class:cGrCamera::cGrScreen
screen_gamma	src/windows/include/png.h	/^   float screen_gamma;   \/* screen gamma value (display_exponent) *\/$/;"	m	struct:png_struct_def
scrh	src/libs/confscreens/mouseconfig.cpp	/^static int	scrw, scrh;$/;"	v	file:
scrh	src/modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
scrollBar	src/libs/tgfclient/gui.h	/^    int			scrollBar;$/;"	m	struct:__anon63
scrollList	src/libs/confscreens/driverconfig.cpp	/^static int	scrollList;$/;"	v	file:
scrollbar	src/libs/tgfclient/gui.h	/^	tGfuiScrollBar	scrollbar;$/;"	m	union:GfuiObject::__anon67
scrollist	src/libs/tgfclient/gui.h	/^	tGfuiScrollList scrollist;$/;"	m	union:GfuiObject::__anon67
scrw	src/libs/confscreens/mouseconfig.cpp	/^static int	scrw, scrh;$/;"	v	file:
scrw	src/modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
scrx	src/modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
scry	src/modules/graphic/ssggraph/grscreen.h	/^		int scrx, scry, scrw, scrh;$/;"	m	class:cGrScreen
search	src/modules/graphic/ssggraph/grloadac.cpp	/^static int search ( Tag *tags, char *s )$/;"	f	file:
searchForKid	src/windows/include/plib/ssg.h	/^  int        searchForKid ( ssgEntity *entity )$/;"	f	class:ssgBranch
secLeft	src/windows/include/plib/sl.h	/^  float          secLeft  ;       \/\/ seconds left in buffer$/;"	m	class:slDSP
secUsed	src/windows/include/plib/sl.h	/^  float          secUsed  ;       \/\/ seconds used in buffer$/;"	m	class:slDSP
second	src/windows/include/png.h	/^   png_byte second;  \/* second of minute, 0 - 60 (for leap seconds) *\/$/;"	m	struct:png_time_struct
secondsPerPacket	src/windows/include/plib/sl.h	/^  float          secondsPerPacket ;$/;"	m	class:slDSP
seconds_per_buffer	src/windows/include/plib/sl.h	/^  float seconds_per_buffer;$/;"	m	class:slScheduler
section	src/libs/tgf/params.cpp	/^struct section$/;"	s	file:
sectionHash	src/libs/tgf/params.cpp	/^    void				*sectionHash;	\/**< Hash table for section access *\/$/;"	m	struct:parmHeader	file:
seg	export/include/car.h	/^    tTrackSeg	*seg;		\/**< Track segment where the wheel is *\/$/;"	m	struct:__anon200
seg	export/include/track.h	/^    tTrackSeg	  *seg;		\/**< Main track *\/$/;"	m	struct:__anon186
seg	export/include/track.h	/^    tTrackSeg	*seg;		\/**< Track segment *\/$/;"	m	struct:__anon182
seg	src/interfaces/car.h	/^    tTrackSeg	*seg;		\/**< Track segment where the wheel is *\/$/;"	m	struct:__anon160
seg	src/interfaces/track.h	/^    tTrackSeg	  *seg;		\/**< Main track *\/$/;"	m	struct:__anon153
seg	src/interfaces/track.h	/^    tTrackSeg	*seg;		\/**< Track segment *\/$/;"	m	struct:__anon149
seg	src/tools/trackgen/easymesh.h	/^struct seg$/;"	s
segIndice	src/modules/graphic/ssggraph/grmain.cpp	/^int segIndice = 0;$/;"	v
segQuantum	src/drivers/olethros/learn.cpp	/^int SegLearn::segQuantum (int segid)$/;"	f	class:SegLearn
seg_alpha	src/drivers/olethros/driver.h	/^	float *seg_alpha; \/\/\/< targets for segments$/;"	m	class:olethros::Driver
seg_alpha_new	src/drivers/olethros/driver.h	/^	float *seg_alpha_new; \/\/\/< new targets for segments$/;"	m	class:olethros::Driver
segdm	src/drivers/olethros/learn.h	/^	float* segdm; \/\/\/< friction coefficient 1$/;"	m	class:olethros::SegLearn
segdm2	src/drivers/olethros/learn.h	/^	float* segdm2; \/\/\/< friction coefficient 2$/;"	m	class:olethros::SegLearn
segdm3	src/drivers/olethros/learn.h	/^	float* segdm3; \/\/\/< friction coefficient 3$/;"	m	class:olethros::SegLearn
segment	src/tools/trackgen/easymesh.cpp	/^struct seg *segment;$/;"	v	typeref:struct:seg
segments	src/drivers/olethros/TrackData.h	/^    std::vector<Segment> segments;$/;"	m	class:SegmentList
segmentsToPit	src/drivers/berniw/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	src/drivers/berniw2/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	src/drivers/berniw3/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	src/drivers/inferno/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	src/drivers/lliaw/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segmentsToPit	src/drivers/tita/pathfinder.h	/^inline int Pathfinder::segmentsToPit(int id) {$/;"	f	class:Pathfinder
segments_per_quantum	src/drivers/olethros/learn.h	/^	int segments_per_quantum; \/\/\/< number of segments each quantum contains$/;"	m	class:olethros::SegLearn
sel	src/libs/racescreens/driverselect.cpp	/^    int		sel;$/;"	m	struct:DrvElt	file:
select	export/include/confscreens.h	/^    tfSelectFile	select;$/;"	m	struct:__anon179
select	export/include/racescreens.h	/^    tfSelectFile	select;$/;"	m	struct:__anon175
select	src/libs/confscreens/confscreens.h	/^    tfSelectFile	select;$/;"	m	struct:__anon43
select	src/libs/racescreens/racescreens.h	/^    tfSelectFile	select;$/;"	m	struct:__anon37
select	src/windows/include/plib/ssg.h	/^  void select ( unsigned int s )$/;"	f	class:ssgSelector
selectBank	src/windows/include/plib/ssg.h	/^  void  selectBank ( float f ) { curr_bank = f ; }$/;"	f	class:ssgTweenController
selectBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::selectBoard(int val)$/;"	f	class:cGrBoard
selectBoard	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectBoard(long brd)$/;"	f	class:cGrScreen
selectCamera	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectCamera(long cam)$/;"	f	class:cGrScreen
selectNextCar	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectNextCar(void)$/;"	f	class:cGrScreen
selectNextFlag	src/modules/graphic/ssggraph/grscreen.h	/^		int selectNextFlag;$/;"	m	class:cGrScreen
selectPrevCar	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectPrevCar(void)$/;"	f	class:cGrScreen
selectPrevFlag	src/modules/graphic/ssggraph/grscreen.h	/^		int selectPrevFlag;$/;"	m	class:cGrScreen
selectStep	src/windows/include/plib/ssg.h	/^  void selectStep ( unsigned int s )$/;"	f	class:ssgSelector
selectTrackMap	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::selectTrackMap()$/;"	f	class:cGrScreen
selectTrackMap	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::selectTrackMap()$/;"	f	class:cGrTrackMap
selected	src/libs/tgfclient/gui.h	/^    int				selected;$/;"	m	struct:GfuiListElement
selectedElt	src/libs/tgfclient/gui.h	/^    int			selectedElt;$/;"	m	struct:__anon63
selectedScrollList	src/libs/racescreens/driverselect.cpp	/^static int		selectedScrollList, unselectedScrollList;$/;"	v	file:
selection	src/windows/include/plib/ssg.h	/^  int              selection ;$/;"	m	class:ssgStateSelector
selection	src/windows/include/plib/ssg.h	/^  int selection ;  \/* used to remember last transform selected *\/$/;"	m	class:ssgTransformArray
selection	src/windows/include/plib/ssg.h	/^  unsigned char* selection ;$/;"	m	class:ssgSelector
sens	src/drivers/human/pref.h	/^    float	sens;		\/* sensitivity of control *\/$/;"	m	struct:__anon144
sensName	src/drivers/human/pref.h	/^    char	*sensName;	\/* Name of the sens attribute *\/$/;"	m	struct:__anon144
sep_axes_test	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.cpp	/^inline bool sep_axes_test(const Vector& a, const Vector& b, $/;"	f
sep_axis	src/modules/simu/simuv2/SOLID-2.0/src/Encounter.h	/^  Vector sep_axis;$/;"	m	class:Encounter
separate_actions	export/include/learning/ann_policy.h	/^	bool separate_actions; \/\/\/< Single\/separate evaluation option$/;"	m	class:ANN_Policy
separate_actions	src/libs/learning/ann_policy.h	/^	bool separate_actions; \/\/\/< Single\/separate evaluation option$/;"	m	class:ANN_Policy
set	src/drivers/berniw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	src/drivers/berniw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	src/drivers/berniw2/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	src/drivers/berniw2/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	src/drivers/berniw3/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* id) {$/;"	f	class:PathSeg
set	src/drivers/berniw3/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, v3d* ip, v3d* id) {$/;"	f	class:PathSeg
set	src/drivers/inferno/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	src/drivers/inferno/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* ip, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	src/drivers/lliaw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	src/drivers/lliaw/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* ip, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	src/drivers/tita/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	src/drivers/tita/pathfinder.h	/^inline void PathSeg::set(tdble ispeedsqr, tdble ilength, vec2d* ip, vec2d* id, int segid) {$/;"	f	class:PathSeg
set	src/windows/include/plib/ssg.h	/^  virtual void set       ( GLenum mode, int val )$/;"	f	class:ssgSimpleState
set	src/windows/include/plib/ssg.h	/^  void   set ( float r, float g, float b, float a, unsigned int n )$/;"	f	class:ssgColourArray
set	src/windows/include/plib/ssg.h	/^  void   set ( float u, float v, unsigned int n )$/;"	f	class:ssgTexCoordArray
set	src/windows/include/plib/ssg.h	/^  void   set ( float x, float y, float z, unsigned int n )$/;"	f	class:ssgNormalArray
set	src/windows/include/plib/ssg.h	/^  void   set ( float x, float y, float z, unsigned int n )$/;"	f	class:ssgVertexArray
set	src/windows/include/plib/ssg.h	/^  void   set ( sgVec2   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgTexCoordArray
set	src/windows/include/plib/ssg.h	/^  void   set ( sgVec3   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgNormalArray
set	src/windows/include/plib/ssg.h	/^  void   set ( sgVec3   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgVertexArray
set	src/windows/include/plib/ssg.h	/^  void   set ( sgVec4   thing, unsigned int n ) { raw_set ( (char *) thing, n ) ; } ;$/;"	f	class:ssgColourArray
set	src/windows/include/plib/ssg.h	/^  void   set ( short    thing, unsigned int n ) { raw_set ( (char *) &thing, n ) ; } ;$/;"	f	class:ssgIndexArray
set	src/windows/include/plib/ssg.h	/^  void set ( ssgInterleavedArrayElement  thing, unsigned int n ) { raw_set ( (char *) &thing, n ) ; } ;$/;"	f	class:ssgInterleavedArray
set	src/windows/include/plib/ssg.h	/^  void set ( ssgInterleavedArrayElement *thing, unsigned int n ) { raw_set ( (char *)  thing, n ) ; } ;$/;"	f	class:ssgInterleavedArray
setAdditive	src/windows/include/plib/ssg.h	/^  void setAdditive ( int add ) { additive = add ; }$/;"	f	class:ssgRangeSelector
setAlphaClamp	src/windows/include/plib/ssg.h	/^  virtual void setAlphaClamp ( float clamp )$/;"	f	class:ssgSimpleState
setAxleSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setAxleSound (const char* sound_name)$/;"	f	class:SoundInterface
setBackfireLoopSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setBackfireLoopSound (const char* sound_name)$/;"	f	class:SoundInterface
setBackfireSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setBackfireSound (const char* sound_name)$/;"	f	class:SoundInterface
setBangSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setBangSound (const char* sound_name)$/;"	f	class:SoundInterface
setBase	src/drivers/inferno/pathfinder.h	/^		inline void setBase(int segid) {$/;"	f	class:PathSeg
setBase	src/drivers/lliaw/pathfinder.h	/^		inline void setBase(int segid) {$/;"	f	class:PathSeg
setBase	src/drivers/tita/pathfinder.h	/^		inline void setBase(int segid) {$/;"	f	class:PathSeg
setBase	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  void setBase(const void *ptr, bool free = false) { $/;"	f	class:Complex
setBottomCrashSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setBottomCrashSound (const char* sound_name)$/;"	f	class:SoundInterface
setBps	src/windows/include/plib/sl.h	/^  void setBps    ( int b ) { bps    = b ; }$/;"	f	class:slSample
setBuffer	src/windows/include/plib/sl.h	/^  void   setBuffer ( const Uchar *buff, int leng )$/;"	f	class:slSample
setCallback	src/modules/graphic/ssggraph/grssgext.h	/^  void setCallback ( int cb_type, ssgCallback cb ) {$/;"	f	class:ssgBranchCb
setCallback	src/windows/include/plib/ssg.h	/^  virtual void setCallback ( int cb_type, ssgCallback cb )$/;"	f	class:ssgLeaf
setCarDataPtr	src/drivers/bt/opponent.h	/^		void setCarDataPtr(SingleCardata *cardata) { this->cardata = cardata; }$/;"	f	class:Opponent
setCarDataPtr	src/drivers/damned/opponent.h	/^		void setCarDataPtr(SingleCardata *cardata) { this->cardata = cardata; }$/;"	f	class:Opponent
setCarDataPtr	src/drivers/olethros/opponent.h	/^		void setCarDataPtr(SingleCardata *cardata) { this->cardata = cardata; }$/;"	f	class:olethros::Opponent
setCarPosition	src/modules/graphic/ssggraph/CarSoundData.h	/^	void setCarPosition (sgVec3 p)$/;"	f	class:CarSoundData
setCarPtr	src/drivers/berniw/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	src/drivers/berniw2/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	src/drivers/berniw3/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	src/drivers/bt/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:Opponent
setCarPtr	src/drivers/damned/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:Opponent
setCarPtr	src/drivers/inferno/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	src/drivers/lliaw/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarPtr	src/drivers/olethros/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:olethros::Opponent
setCarPtr	src/drivers/sparkle/opponent.h	/^		void setCarPtr(tCarElt *car) { this->car = car; }$/;"	f	class:Opponent
setCarPtr	src/drivers/tita/mycar.h	/^		inline void setCarPtr(tCarElt* car) { me = car; }$/;"	f	class:AbstractCar
setCarSpeed	src/modules/graphic/ssggraph/CarSoundData.h	/^	void setCarSpeed (sgVec3 u)$/;"	f	class:CarSoundData
setCenter	export/include/js.h	/^  void setCenter   ( float *axes ) { memcpy ( center, axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setCenter	src/interfaces/js.h	/^  void setCenter   ( float *axes ) { memcpy ( center, axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setCenter	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setCenter(const Point& p)  { center = p; }$/;"	f	class:BBox
setCenter	src/windows/include/plib/sg.h	/^  void setCenter ( const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f	class:sgdSphere
setCenter	src/windows/include/plib/sg.h	/^  void setCenter ( const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f	class:sgSphere
setCenter	src/windows/include/plib/sg.h	/^  void setCenter ( const sgVec3 c )$/;"	f	class:sgSphere
setCenter	src/windows/include/plib/sg.h	/^  void setCenter ( const sgdVec3 c )$/;"	f	class:sgdSphere
setCenter	src/windows/include/plib/ssgaShapes.h	/^  void setCenter  ( sgVec3 c ) { sgCopyVec3 ( center, c ) ; regenerate () ; }$/;"	f	class:ssgaShape
setClipPlane	src/windows/include/plib/ssg.h	/^  void setClipPlane ( int i, sgVec4 plane )$/;"	f	class:ssgContext
setColour	src/windows/include/plib/ssg.h	/^  void setColour   ( GLenum which, const sgVec4 col )$/;"	f	class:ssgLight
setColour	src/windows/include/plib/ssg.h	/^  void setColour   ( GLenum which, float r, float g, float b )$/;"	f	class:ssgLight
setColour	src/windows/include/plib/ssgaShapes.h	/^  void setColour  ( sgVec4 c ) { sgCopyVec4 ( colour, c ) ; regenerate () ; }$/;"	f	class:ssgaShape
setColourMaterial	src/windows/include/plib/ssg.h	/^  virtual void setColourMaterial ( GLenum which )$/;"	f	class:ssgSimpleState
setColours	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:ssgVtxTableCarlight
setColours	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:ssgVtxTableShadow
setColours	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:ssgVtxTableSmoke
setColours	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setColours   ( ssgColourArray   *cl ) {  ssgVtxTable::setColours(cl);}$/;"	f	class:grVtxTable
setComment	src/windows/include/plib/sl.h	/^  void   setComment ( const char *nc )$/;"	f	class:slSample
setConfidenceDistribution	src/libs/learning/policy.cpp	/^void DiscretePolicy::setConfidenceDistribution (enum ConfidenceDistribution cd)$/;"	f	class:DiscretePolicy
setCrashSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setCrashSound (const char* sound_name, int index)$/;"	f	class:SoundInterface
setCreationRate	src/windows/include/plib/ssgaParticleSystem.h	/^  void  setCreationRate ( float cr ) { create_rate = cr ; }$/;"	f	class:ssgaParticleSystem
setCullFace	src/windows/include/plib/ssg.h	/^  void setCullFace ( int cf ) { cull_face = cf ; }$/;"	f	class:ssgLeaf
setCullface	src/windows/include/plib/ssg.h	/^  void setCullface       ( int on_off )$/;"	f	class:ssgContext
setCurrentCar	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::setCurrentCar(tCarElt *newCurCar)$/;"	f	class:cGrScreen
setDamping	src/windows/include/plib/sg.h	/^  void setDamping    ( float d ) { damping    = d ; }$/;"	f	class:sgSpringDamper
setDeadBand	export/include/js.h	/^  void  setDeadBand ( int axis, float db )   { dead_band [ axis ] = db   ; }$/;"	f	class:jsJoystick
setDeadBand	src/interfaces/js.h	/^  void  setDeadBand ( int axis, float db )   { dead_band [ axis ] = db   ; }$/;"	f	class:jsJoystick
setDefault	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void setDefault(const Response& resp) { defaultResp = resp; }$/;"	f	class:RespTable
setDepthCallback	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setDepthCallback ( ssgaWSDepthCallback cb ) { gridGetter  = cb ; } $/;"	f	class:ssgaWaveSystem
setDuration	src/windows/include/plib/ssg.h	/^  void setDuration ( float ti, int i = -1, ssgAnimTimeMode m = SSG_ANIM_FRAME )$/;"	f	class:ssgTimedSelector
setELearning	src/libs/learning/policy.cpp	/^void DiscretePolicy::setELearning() {$/;"	f	class:DiscretePolicy
setEdgeFlatten	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setEdgeFlatten   ( float dist             ) { edgeFlatten = dist ; }$/;"	f	class:ssgaWaveSystem
setEmpty	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setEmpty() { $/;"	f	class:BBox
setEngineSound	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::setEngineSound (TorcsSound* engine_sound, float rpm_scale)$/;"	f	class:CarSoundData
setError	export/include/js.h	/^  void  setError      () { error = JS_TRUE ; }$/;"	f	class:jsJoystick
setError	src/interfaces/js.h	/^  void  setError      () { error = JS_TRUE ; }$/;"	f	class:jsJoystick
setError	src/windows/include/plib/sl.h	/^  void setError () { error = SL_TRUE ; }$/;"	f	class:slDSP
setEuler	export/include/3D/Quaternion.h	/^  void setEuler(Scalar yaw, Scalar pitch, Scalar roll) {$/;"	f	class:Quaternion
setEuler	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  void setEuler(Scalar yaw, Scalar pitch, Scalar roll) {$/;"	f	class:Quaternion
setExtent	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setExtent(const Vector& v) { extent = v; }$/;"	f	class:BBox
setExternalPropertyIndex	src/windows/include/plib/ssg.h	/^  void setExternalPropertyIndex ( int i ) { external_property_index = i ; }$/;"	f	class:ssgState
setFOV	src/windows/include/plib/sg.h	/^  void setFOV ( const SGDfloat h, const SGDfloat v )$/;"	f	class:sgdFrustum
setFOV	src/windows/include/plib/sg.h	/^  void setFOV ( const SGfloat h, const SGfloat v )$/;"	f	class:sgFrustum
setFactor	src/modules/graphic/ssggraph/grcarlight.h	/^  void setFactor(double f){factor=f;}$/;"	f	class:ssgVtxTableCarlight
setFilename	src/windows/include/plib/ssg.h	/^  void  setFilename(const char *fname)$/;"	f	class:ssgTexture
setForce	src/windows/include/plib/sg.h	/^  void   setForce ( float x, float y, float z ) { sgSetVec3 ( force,x,y,z ) ; }$/;"	f	class:sgParticle
setForce	src/windows/include/plib/sg.h	/^  void   setForce ( sgVec3 f ) { sgCopyVec3 ( force, f ) ; }$/;"	f	class:sgParticle
setForcedLearning	src/libs/learning/policy.cpp	/^void DiscretePolicy::setForcedLearning(bool forced)$/;"	f	class:DiscretePolicy
setFrustum	src/windows/include/plib/sg.h	/^  void setFrustum ( const SGDfloat l, const SGDfloat r,$/;"	f	class:sgdFrustum
setFrustum	src/windows/include/plib/sg.h	/^  void setFrustum ( const SGfloat l, const SGfloat r,$/;"	f	class:sgFrustum
setFuelAtRaceStart	src/drivers/bt/strategy.cpp	/^void SimpleStrategy2::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy2
setFuelAtRaceStart	src/drivers/bt/strategy.cpp	/^void SimpleStrategy::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy
setFuelAtRaceStart	src/drivers/damned/strategy.cpp	/^void SimpleStrategy2::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy2
setFuelAtRaceStart	src/drivers/damned/strategy.cpp	/^void SimpleStrategy::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s, int index)$/;"	f	class:SimpleStrategy
setFuelAtRaceStart	src/drivers/olethros/strategy.cpp	/^void SimpleStrategy::setFuelAtRaceStart(tTrack* t, void **carParmHandle, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
setGamma	src/libs/learning/policy.cpp	/^void DiscretePolicy::setGamma (real gamma) $/;"	f	class:DiscretePolicy
setGearChangeSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setGearChangeSound (const char* sound_name)$/;"	f	class:SoundInterface
setGlobalGain	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual void setGlobalGain(float g) $/;"	f	class:SoundInterface
setGlobalGain	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual void setGlobalGain(float g)$/;"	f	class:OpenalSoundInterface
setGlobalGain	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual void setGlobalGain(float g)$/;"	f	class:PlibSoundInterface
setGrassRideSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setGrassRideSound (const char* sound_name)$/;"	f	class:SoundInterface
setGrassSkidSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setGrassSkidSound (const char* sound_name)$/;"	f	class:SoundInterface
setHeading	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setHeading ( float h ) { heading  = h ; }$/;"	f	class:ssgaWaveTrain
setHeadlight	src/windows/include/plib/ssg.h	/^  void setHeadlight ( int head ) { is_headlight = head ; }$/;"	f	class:ssgLight
setHeight	src/windows/include/plib/ssgaFire.h	/^  void setHeight    ( float hgt )$/;"	f	class:ssgaFire
setHotColour	src/windows/include/plib/ssgaFire.h	/^  void setHotColour ( sgVec4 col )$/;"	f	class:ssgaFire
setID	src/windows/include/plib/ssg.h	/^  void setID ( int i ) { id = i ; }$/;"	f	class:ssgLight
setIdentity	export/include/3D/Matrix.h	/^  void setIdentity() { setValue(1, 0, 0, 0, 1, 0, 0, 0, 1); }$/;"	f	class:Matrix
setIdentity	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setIdentity() { setValue(1, 0, 0, 0, 1, 0, 0, 0, 1); }$/;"	f	class:Matrix
setIdentity	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void setIdentity() { curr.setIdentity(); }$/;"	f	class:Object
setIdentity	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::setIdentity() {$/;"	f	class:Transform
setInPit	src/drivers/bt/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:Pit
setInPit	src/drivers/damned/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:Pit
setInPit	src/drivers/olethros/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:olethros::Pit
setInPit	src/drivers/sparkle/pit.h	/^		void setInPit(bool inpitlane) { this->inpitlane = inpitlane; }$/;"	f	class:Pit
setInf	export/include/3D/Point.h	/^inline void Point::setInf(const Point& p) {$/;"	f	class:Point
setInf	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline void Point::setInf(const Point& p) {$/;"	f	class:Point
setKbeta	src/drivers/berniw/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	src/drivers/berniw2/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	src/drivers/berniw3/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	src/drivers/inferno/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	src/drivers/lliaw/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKbeta	src/drivers/tita/trackdesc.h	/^		inline void setKbeta(double b) { kbeta = b; }$/;"	f	class:TrackSegment
setKgamma	src/drivers/berniw/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	src/drivers/berniw2/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	src/drivers/berniw3/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	src/drivers/inferno/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	src/drivers/lliaw/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKgamma	src/drivers/tita/trackdesc.h	/^		inline void setKgamma(double c) { kgamma = c; }$/;"	f	class:TrackSegment
setKidCallback	src/windows/include/plib/ssgaShapes.h	/^  void setKidCallback ( int cb_type, ssgCallback cb )$/;"	f	class:ssgaShape
setKidState	src/windows/include/plib/ssgaShapes.h	/^  void setKidState    ( ssgState *s )$/;"	f	class:ssgaShape
setLPFilter	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setLPFilter(float lp)$/;"	f	class:OpenalTorcsSound
setLPFilter	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void TorcsSound::setLPFilter(float lp)$/;"	f	class:TorcsSound
setLambda	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setLambda ( float h ) { lambda  = h ; }$/;"	f	class:ssgaWaveTrain
setLatLongStyle	src/windows/include/plib/ssgaShapes.h	/^  void setLatLongStyle ( int ll ) { latlong_style = ll ; regenerate () ; }$/;"	f	class:ssgaSphere
setLearningRate	export/include/learning/policy.h	/^	virtual void setLearningRate (real alpha) {this->alpha = alpha;}$/;"	f	class:DiscretePolicy
setLearningRate	src/libs/learning/policy.h	/^	virtual void setLearningRate (real alpha) {this->alpha = alpha;}$/;"	f	class:DiscretePolicy
setLeftWidth	src/drivers/olethros/TrackData.cpp	/^void TrackData::setLeftWidth(float width)$/;"	f	class:TrackData
setLength	src/drivers/berniw/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	src/drivers/berniw2/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	src/drivers/berniw3/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	src/drivers/inferno/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	src/drivers/lliaw/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	src/drivers/tita/trackdesc.h	/^		inline void setLength(double len) { length = len; }$/;"	f	class:TrackSegment
setLength	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setLength ( float h ) { length  = h ; }$/;"	f	class:ssgaWaveTrain
setLimits	src/windows/include/plib/ssg.h	/^  void setLimits ( int st, int en )$/;"	f	class:ssgTimedSelector
setListener	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void SoundSource::setListener (sgVec3 p, sgVec3 u)$/;"	f	class:SoundSource
setListenerPosition	src/modules/graphic/ssggraph/CarSoundData.h	/^	void setListenerPosition (sgVec3 p)$/;"	f	class:CarSoundData
setLoc	src/drivers/berniw/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	src/drivers/berniw2/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	src/drivers/berniw3/pathfinder.h	/^		inline void setLoc(v3d* ip) { p = (*ip); }$/;"	f	class:PathSeg
setLoc	src/drivers/inferno/pathfinder.h	/^		inline void setLoc(const vec2d* ip, int segid) { ps[getid(segid)].p = (*ip); }$/;"	f	class:PathSeg
setLoc	src/drivers/lliaw/pathfinder.h	/^		inline void setLoc(const vec2d* ip, int segid) { ps[getid(segid)].p = (*ip); }$/;"	f	class:PathSeg
setLoc	src/drivers/tita/pathfinder.h	/^		inline void setLoc(const vec2d* ip, int segid) { ps[getid(segid)].p = (*ip); }$/;"	f	class:PathSeg
setLocWeighted	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setLocWeighted	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setLocWeighted	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::setLocWeighted(int id, double newweight, v3d* newp)$/;"	f	class:Pathfinder
setMass	src/windows/include/plib/sg.h	/^  void   setMass ( float m )$/;"	f	class:sgParticle
setMaterial	src/windows/include/plib/ssg.h	/^  virtual void setMaterial   ( GLenum which, sgVec4 rgba )$/;"	f	class:ssgSimpleState
setMaterial	src/windows/include/plib/ssg.h	/^  virtual void setMaterial ( GLenum which, float r, float g,$/;"	f	class:ssgSimpleState
setMatrix	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void setMatrix(const double v[16]) { curr.setValue(v); }$/;"	f	class:Object
setMatrix	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void setMatrix(const float v[16]) { curr.setValue(v); }$/;"	f	class:Object
setMax	src/windows/include/plib/sg.h	/^  void setMax ( const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f	class:sgdBox
setMax	src/windows/include/plib/sg.h	/^  void setMax ( const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f	class:sgBox
setMax	src/windows/include/plib/sg.h	/^  void setMax ( const sgVec3 src )$/;"	f	class:sgBox
setMax	src/windows/include/plib/sg.h	/^  void setMax ( const sgdVec3 src )$/;"	f	class:sgdBox
setMaxDelta	src/windows/include/plib/ul.h	/^  void   setMaxDelta  ( double maxDelta ) { max_delta = maxDelta ; }$/;"	f	class:ulClock
setMaxDelta	src/windows/include/ul.h	/^  void   setMaxDelta  ( double maxDelta ) { max_delta = maxDelta ; }$/;"	f	class:ulClock
setMaxRange	export/include/js.h	/^  void setMaxRange ( float *axes ) { memcpy ( max   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMaxRange	src/interfaces/js.h	/^  void setMaxRange ( float *axes ) { memcpy ( max   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMean	export/include/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:ExponentialDistribution
setMean	export/include/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:LaplacianDistribution
setMean	export/include/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:NormalDistribution
setMean	export/include/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:UniformDistribution
setMean	src/libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:ExponentialDistribution
setMean	src/libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:LaplacianDistribution
setMean	src/libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:NormalDistribution
setMean	src/libs/learning/Distribution.h	/^	virtual void setMean (real mean)$/;"	f	class:UniformDistribution
setMetalSkidSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setMetalSkidSound (const char* sound_name)$/;"	f	class:SoundInterface
setMin	src/windows/include/plib/sg.h	/^  void setMin ( const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f	class:sgdBox
setMin	src/windows/include/plib/sg.h	/^  void setMin ( const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f	class:sgBox
setMin	src/windows/include/plib/sg.h	/^  void setMin ( const sgVec3 src )$/;"	f	class:sgBox
setMin	src/windows/include/plib/sg.h	/^  void setMin ( const sgdVec3 src )$/;"	f	class:sgdBox
setMinRange	export/include/js.h	/^  void setMinRange ( float *axes ) { memcpy ( min   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMinRange	src/interfaces/js.h	/^  void setMinRange ( float *axes ) { memcpy ( min   , axes, num_axes * sizeof(float) ) ; }$/;"	f	class:jsJoystick
setMode	src/windows/include/plib/ssg.h	/^  void  setMode ( int _mode ) { mode = _mode ; }$/;"	f	class:ssgTweenController
setMode	src/windows/include/plib/ssg.h	/^  void setMode ( ssgAnimDirection m ) { mode = m ; }$/;"	f	class:ssgTimedSelector
setModelView	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrOrthoCamera::setModelView(void)$/;"	f	class:cGrOrthoCamera
setModelView	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::setModelView(void)$/;"	f	class:cGrPerspCamera
setNCars	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::setNCars(int n_cars)$/;"	f	class:OpenalSoundInterface
setNCars	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^void PlibSoundInterface::setNCars(int n_cars)$/;"	f	class:PlibSoundInterface
setNearFar	src/windows/include/plib/sg.h	/^  void setNearFar ( const SGDfloat n, const SGDfloat f )$/;"	f	class:sgdFrustum
setNearFar	src/windows/include/plib/sg.h	/^  void setNearFar ( const SGfloat n, const SGfloat f )$/;"	f	class:sgFrustum
setNormals	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:ssgVtxTableCarlight
setNormals	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:ssgVtxTableShadow
setNormals	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:ssgVtxTableSmoke
setNormals	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setNormals   ( ssgNormalArray   *nl ) {  ssgVtxTable::setNormals(nl);}$/;"	f	class:grVtxTable
setNum	src/windows/include/plib/ssg.h	/^  void setNum ( unsigned int n )$/;"	f	class:ssgSimpleList
setNumTris	src/windows/include/plib/ssgaShapes.h	/^  void setNumTris ( int ntri ) { ntriangles = ntri ; regenerate () ; }$/;"	f	class:ssgaShape
setOffset	src/modules/graphic/ssggraph/grshadow.cpp	/^void ssgVtxTableShadow::setOffset(float f, float u)$/;"	f	class:ssgVtxTableShadow
setOffset	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setOffset ( sgVec2 _offset ) { sgCopyVec2 ( offset, _offset ) ; }$/;"	f	class:ssgaWaveSystem
setOnOff	src/modules/graphic/ssggraph/grcarlight.h	/^  void setOnOff (int s) { on=s ; }$/;"	f	class:ssgVtxTableCarlight
setOneOverMass	src/windows/include/plib/sg.h	/^  void   setOneOverMass ( float oom ) { ooMass = oom ; }$/;"	f	class:sgParticle
setOpaque	src/windows/include/plib/ssg.h	/^  virtual void setOpaque      (void) { translucent = FALSE ; }$/;"	f	class:ssgState
setOpenEntityNames	src/libs/txml/xmlparse.c	/^int setOpenEntityNames(XML_Parser parser, const XML_Char *openEntityNames)$/;"	f	file:
setOptLength	src/drivers/inferno/pathfinder.h	/^		inline void setOptLength(float l, int id) { length[id] = l; }$/;"	f	class:PathSegOpt
setOptLength	src/drivers/lliaw/pathfinder.h	/^		inline void setOptLength(float l, int id) { length[id] = l; }$/;"	f	class:PathSegOpt
setOptLength	src/drivers/tita/pathfinder.h	/^		inline void setOptLength(float l, int id) { length[id] = l; }$/;"	f	class:PathSegOpt
setOptLoc	src/drivers/berniw/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	src/drivers/berniw2/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	src/drivers/berniw3/pathfinder.h	/^		inline void setOptLoc(v3d* ip) { o = (*ip); }$/;"	f	class:PathSeg
setOptLoc	src/drivers/inferno/pathfinder.h	/^		inline void setOptLoc(const vec2d* ip, int id) { o[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptLoc	src/drivers/lliaw/pathfinder.h	/^		inline void setOptLoc(const vec2d* ip, int id) { o[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptLoc	src/drivers/tita/pathfinder.h	/^		inline void setOptLoc(const vec2d* ip, int id) { o[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptToMiddle	src/drivers/inferno/pathfinder.h	/^		inline void setOptToMiddle(float m, int id) { disttomiddle[id] = m; }$/;"	f	class:PathSegOpt
setOptToMiddle	src/drivers/lliaw/pathfinder.h	/^		inline void setOptToMiddle(float m, int id) { disttomiddle[id] = m; }$/;"	f	class:PathSegOpt
setOptToMiddle	src/drivers/tita/pathfinder.h	/^		inline void setOptToMiddle(float m, int id) { disttomiddle[id] = m; }$/;"	f	class:PathSegOpt
setOptToRight	src/drivers/inferno/pathfinder.h	/^		inline void setOptToRight(const vec2d* ip, int id) { tr[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptToRight	src/drivers/lliaw/pathfinder.h	/^		inline void setOptToRight(const vec2d* ip, int id) { tr[id] = (*ip); }$/;"	f	class:PathSegOpt
setOptToRight	src/drivers/tita/pathfinder.h	/^		inline void setOptToRight(const vec2d* ip, int id) { tr[id] = (*ip); }$/;"	f	class:PathSegOpt
setOrtho	src/windows/include/plib/sg.h	/^  void setOrtho   ( const SGDfloat l, const SGDfloat r,$/;"	f	class:sgdFrustum
setOrtho	src/windows/include/plib/sg.h	/^  void setOrtho   ( const SGfloat l, const SGfloat r,$/;"	f	class:sgFrustum
setOrtho	src/windows/include/plib/sg.h	/^  void setOrtho ( const SGDfloat w, const SGDfloat h )$/;"	f	class:sgdFrustum
setOrtho	src/windows/include/plib/sg.h	/^  void setOrtho ( const SGfloat w, const SGfloat h )$/;"	f	class:sgFrustum
setPair	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void setPair(DtObjectRef obj1, DtObjectRef obj2, const Response& resp) {$/;"	f	class:RespTable
setParticle	src/windows/include/plib/sg.h	/^  void setParticle  ( int which, sgParticle *p ) { if ( which == 0 ) p0 = p ; else p1 = p ; }$/;"	f	class:sgSpringDamper
setParticles	src/windows/include/plib/sg.h	/^  void setParticles ( sgParticle *_p0, sgParticle *_p1 ) { p0 = _p0 ; p1 = _p1 ; }$/;"	f	class:sgSpringDamper
setPitLoc	src/drivers/berniw/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	src/drivers/berniw2/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	src/drivers/berniw3/pathfinder.h	/^		inline void setPitLoc(v3d* ip) { l = ip; }$/;"	f	class:PathSeg
setPitLoc	src/drivers/inferno/pathfinder.h	/^		inline void setPitLoc(vec2d* ip, int id) {$/;"	f	class:PathSegPit
setPitLoc	src/drivers/lliaw/pathfinder.h	/^		inline void setPitLoc(vec2d* ip, int id) {$/;"	f	class:PathSegPit
setPitLoc	src/drivers/tita/pathfinder.h	/^		inline void setPitLoc(vec2d* ip, int id) {$/;"	f	class:PathSegPit
setPitStop	src/drivers/berniw/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	src/drivers/berniw2/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	src/drivers/berniw3/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	src/drivers/inferno/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	src/drivers/lliaw/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitStop	src/drivers/tita/pathfinder.h	/^inline void Pathfinder::setPitStop(bool p, int id) {$/;"	f	class:Pathfinder
setPitch	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setPitch(float pitch)$/;"	f	class:OpenalTorcsSound
setPitch	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void TorcsSound::setPitch(float pitch)$/;"	f	class:TorcsSound
setPitstop	src/drivers/bt/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:Pit
setPitstop	src/drivers/damned/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:Pit
setPitstop	src/drivers/olethros/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:olethros::Pit
setPitstop	src/drivers/sparkle/pit.cpp	/^void Pit::setPitstop(bool pitstop)$/;"	f	class:Pit
setPos	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::setPos (int x, int y, int w, int h)$/;"	f	class:cGrCarCamMirror
setPos	src/windows/include/plib/sg.h	/^  void   setPos   ( float x, float y, float z ) { sgSetVec3 ( pos  ,x,y,z ) ; }$/;"	f	class:sgParticle
setPos	src/windows/include/plib/sg.h	/^  void   setPos   ( sgVec3 p ) { sgCopyVec3 ( pos  , p ) ; }$/;"	f	class:sgParticle
setPosition	src/windows/include/plib/ssg.h	/^  void setPosition ( const sgVec3 pos ) { sgCopyVec3 ( position, pos ) ; }$/;"	f	class:ssgLight
setPosition	src/windows/include/plib/ssg.h	/^  void setPosition ( float x, float y, float z ) { sgSetVec3 ( position, x, y, z ) ; }$/;"	f	class:ssgLight
setPrimitiveType	src/windows/include/plib/ssg.h	/^  virtual void setPrimitiveType ( GLenum ty ) { gltype = ty ; }$/;"	f	class:ssgLeaf
setProjection	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrOrthoCamera::setProjection(void)$/;"	f	class:cGrOrthoCamera
setProjection	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::setProjection(void)$/;"	f	class:cGrPerspCamera
setPursuit	src/libs/learning/policy.cpp	/^void DiscretePolicy::setPursuit(bool pursuit)$/;"	f	class:DiscretePolicy
setQLearning	src/libs/learning/policy.cpp	/^void DiscretePolicy::setQLearning() {$/;"	f	class:DiscretePolicy
setRadius	src/drivers/berniw/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	src/drivers/berniw2/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	src/drivers/berniw3/pathfinder.h	/^		inline void setRadius(tdble r) { radius = r; }$/;"	f	class:PathSeg
setRadius	src/drivers/inferno/pathfinder.h	/^		inline void setRadius(tdble r, int segid) { ps[getid(segid)].radius = r; }$/;"	f	class:PathSeg
setRadius	src/drivers/lliaw/pathfinder.h	/^		inline void setRadius(tdble r, int segid) { ps[getid(segid)].radius = r; }$/;"	f	class:PathSeg
setRadius	src/drivers/tita/pathfinder.h	/^		inline void setRadius(tdble r, int segid) { ps[getid(segid)].radius = r; }$/;"	f	class:PathSeg
setRadius	src/windows/include/plib/sg.h	/^  void     setRadius ( const SGDfloat r ) { radius = r ; }$/;"	f	class:sgdSphere
setRadius	src/windows/include/plib/sg.h	/^  void    setRadius ( const SGfloat r ) { radius = r ; }$/;"	f	class:sgSphere
setRandomSeed	src/libs/learning/Distribution.cpp	/^void setRandomSeed(unsigned int seed)$/;"	f
setRandomness	src/libs/learning/policy.cpp	/^void DiscretePolicy::setRandomness (real epsilon)$/;"	f	class:DiscretePolicy
setRange	src/windows/include/plib/ssg.h	/^  void setRange ( unsigned int which, float range )$/;"	f	class:ssgRangeSelector
setRanges	src/windows/include/plib/ssg.h	/^  void setRanges ( float *ranges, unsigned int nranges )$/;"	f	class:ssgRangeSelector
setRate	src/windows/include/plib/sl.h	/^  void setRate   ( int r ) { rate   = r ; }$/;"	f	class:slSample
setReferenceDistance	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setReferenceDistance(float dist)$/;"	f	class:OpenalTorcsSound
setReferenceDistance	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual void setReferenceDistance (float dist) {}$/;"	f	class:TorcsSound
setReplacingTraces	src/libs/learning/policy.cpp	/^void DiscretePolicy::setReplacingTraces (bool replacing)$/;"	f	class:DiscretePolicy
setRestLength	src/windows/include/plib/sg.h	/^  void setRestLength ( float l ) { restLength = l ; }$/;"	f	class:sgSpringDamper
setRestLength	src/windows/include/plib/sg.h	/^  void setRestLength () { restLength = sgDistanceVec3 ( p0->getPos(), p1->getPos() ) ; }$/;"	f	class:sgSpringDamper
setRightWidth	src/drivers/olethros/TrackData.cpp	/^void TrackData::setRightWidth(float width)$/;"	f	class:TrackData
setRoadRideSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setRoadRideSound (const char* sound_name)$/;"	f	class:SoundInterface
setRotation	export/include/3D/Matrix.h	/^  void setRotation(const Quaternion& q) {$/;"	f	class:Matrix
setRotation	export/include/3D/Quaternion.h	/^  void setRotation(const Vector& axis, Scalar angle) {$/;"	f	class:Quaternion
setRotation	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setRotation(const Quaternion& q) {$/;"	f	class:Matrix
setRotation	src/modules/simu/simuv2/SOLID-2.0/include/3D/Quaternion.h	/^  void setRotation(const Vector& axis, Scalar angle) {$/;"	f	class:Quaternion
setSafetyMargin	src/windows/include/plib/sl.h	/^  void setSafetyMargin ( float seconds ) { safety_margin = seconds ; }$/;"	f	class:slScheduler
setSarsa	src/libs/learning/policy.cpp	/^void DiscretePolicy::setSarsa()$/;"	f	class:DiscretePolicy
setSaturation	export/include/js.h	/^  void  setSaturation ( int axis, float st ) { saturate [ axis ] = st    ; }$/;"	f	class:jsJoystick
setSaturation	src/interfaces/js.h	/^  void  setSaturation ( int axis, float st ) { saturate [ axis ] = st    ; }$/;"	f	class:jsJoystick
setScaling	export/include/3D/Matrix.h	/^  void setScaling(Scalar x, Scalar y, Scalar z) {$/;"	f	class:Matrix
setScaling	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setScaling(Scalar x, Scalar y, Scalar z) {$/;"	f	class:Matrix
setShadeModel	src/windows/include/plib/ssg.h	/^  virtual void setShadeModel ( GLenum model )$/;"	f	class:ssgSimpleState
setShininess	src/windows/include/plib/ssg.h	/^  virtual void setShininess ( float sh )$/;"	f	class:ssgSimpleState
setSingle	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  void setSingle(DtObjectRef obj, const Response& resp) { $/;"	f	class:RespTable
setSize	src/modules/graphic/ssggraph/grcarlight.h	/^  int setSize (double s) { size=s ; return 0; }$/;"	f	class:ssgVtxTableCarlight
setSize	src/windows/include/plib/ssgaParticleSystem.h	/^  void setSize ( float sz ) { size = sz ; }$/;"	f	class:ssgaParticleSystem
setSize	src/windows/include/plib/ssgaShapes.h	/^  void setSize    ( float  s ) { sgSetVec3  ( size,s,s,s) ; regenerate () ; }$/;"	f	class:ssgaShape
setSize	src/windows/include/plib/ssgaShapes.h	/^  void setSize    ( sgVec3 s ) { sgCopyVec3 ( size  , s ) ; regenerate () ; }$/;"	f	class:ssgaShape
setSkidSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setSkidSound (const char* sound_name)$/;"	f	class:SoundInterface
setSource	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setSource (sgVec3 p, sgVec3 u)$/;"	f	class:OpenalTorcsSound
setSource	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void SoundSource::setSource(sgVec3 p, sgVec3 u)$/;"	f	class:SoundSource
setSource	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual void setSource(sgVec3 p, sgVec3 u) {}$/;"	f	class:TorcsSound
setSpeed	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setSpeed ( float h ) { speed  = h ; }$/;"	f	class:ssgaWaveTrain
setSpeedsqr	src/drivers/berniw/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	src/drivers/berniw2/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	src/drivers/berniw3/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr) { speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	src/drivers/inferno/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr, int segid) { ps[getid(segid)].speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	src/drivers/lliaw/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr, int segid) { ps[getid(segid)].speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpeedsqr	src/drivers/tita/pathfinder.h	/^		inline void setSpeedsqr(tdble spsqr, int segid) { ps[getid(segid)].speedsqr = spsqr; }$/;"	f	class:PathSeg
setSpotAttenuation	src/windows/include/plib/ssg.h	/^  void setSpotAttenuation ( float constant, float linear, float quadratic )$/;"	f	class:ssgLight
setSpotDiffusion	src/windows/include/plib/ssg.h	/^  void setSpotDiffusion ( float exp, float cut = 90.0f )$/;"	f	class:ssgLight
setSpotDirection	src/windows/include/plib/ssg.h	/^  void setSpotDirection ( const sgVec3 dir ) { sgCopyVec3 ( direction, dir ) ; }$/;"	f	class:ssgLight
setSpotDirection	src/windows/include/plib/ssg.h	/^  void setSpotDirection ( float x, float y, float z ) { sgSetVec3 ( direction, x, y, z ) ; }$/;"	f	class:ssgLight
setSpotlight	src/windows/include/plib/ssg.h	/^  void setSpotlight ( int spot ) { position[3] = ( spot ? 1.0f : 0.0f ) ; }$/;"	f	class:ssgLight
setState	src/drivers/olethros/pit.h	/^		void setState (enum PitState state) {pit_state = state;}$/;"	f	class:olethros::Pit
setState1	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::setState1 (ssgState *st)$/;"	f	class:grVtxTable
setState2	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::setState2 (ssgState *st)$/;"	f	class:grVtxTable
setState3	src/modules/graphic/ssggraph/grvtxtable.cpp	/^void grVtxTable::setState3 (ssgState *st)$/;"	f	class:grVtxTable
setStateCallback	src/windows/include/plib/ssg.h	/^  void setStateCallback ( int cb_type, ssgStateCallback cb )$/;"	f	class:ssgState
setStep	src/drivers/olethros/TrackData.cpp	/^void TrackData::setStep(float step)$/;"	f	class:TrackData
setStep	src/windows/include/plib/sl.h	/^  void setStep ( int n, float _time, float _value )$/;"	f	class:slEnvelope
setStereo	src/windows/include/plib/sl.h	/^  void setStereo ( int s ) { stereo = s ; }$/;"	f	class:slSample
setStiffness	src/windows/include/plib/sg.h	/^  void setStiffness  ( float s ) { stiffness  = s ; }$/;"	f	class:sgSpringDamper
setSup	export/include/3D/Point.h	/^inline void Point::setSup(const Point& p) {$/;"	f	class:Point
setSup	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline void Point::setSup(const Point& p) {$/;"	f	class:Point
setTab	src/libs/txml/gennmtab.c	/^void setTab(char *tab, struct range *ranges, size_t nRanges)$/;"	f
setTab	src/libs/txml/gennmtab/gennmtab.c	/^void setTab(char *tab, struct range *ranges, size_t nRanges)$/;"	f
setTeamMate	src/drivers/bt/opponent.cpp	/^void Opponents::setTeamMate(char *teammate)$/;"	f	class:Opponents
setTeamMate	src/drivers/damned/opponent.cpp	/^void Opponents::setTeamMate(char *teammate)$/;"	f	class:Opponents
setTexCoords	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:ssgVtxTableCarlight
setTexCoords	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:ssgVtxTableShadow
setTexCoords	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:ssgVtxTableSmoke
setTexCoords	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setTexCoords ( ssgTexCoordArray *tl ) {  ssgVtxTable::setTexCoords(tl);}$/;"	f	class:grVtxTable
setTexScale	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setTexScale      ( float u, float v       ) { tu = u ; tv = v ; }$/;"	f	class:ssgaWaveSystem
setTexture	src/modules/graphic/ssggraph/grtexture.h	/^		virtual void setTexture(GLuint tex) {$/;"	f	class:grManagedState
setTexture	src/modules/graphic/ssggraph/grtexture.h	/^		virtual void setTexture(const char *fname, int _wrapu = TRUE, int _wrapv = TRUE, int _mipmap = TRUE) {$/;"	f	class:grManagedState
setTexture	src/modules/graphic/ssggraph/grtexture.h	/^		virtual void setTexture(ssgTexture *tex) {$/;"	f	class:grManagedState
setTexture	src/windows/include/plib/ssg.h	/^  virtual void  setTexture ( const char *fname,$/;"	f	class:ssgSimpleState
setTexture	src/windows/include/plib/ssg.h	/^  virtual void setTexture ( GLuint tex )$/;"	f	class:ssgSimpleState
setTexture	src/windows/include/plib/ssg.h	/^  virtual void setTexture ( ssgTexture *tex )$/;"	f	class:ssgSimpleState
setTextureFilename	src/windows/include/plib/ssg.h	/^  virtual void setTextureFilename ( const char *fname )$/;"	f	class:ssgSimpleState
setTrackPtr	src/drivers/bt/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:Opponent
setTrackPtr	src/drivers/damned/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:Opponent
setTrackPtr	src/drivers/olethros/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:olethros::Opponent
setTrackPtr	src/drivers/sparkle/opponent.h	/^		static void setTrackPtr(tTrack *track) { Opponent::track = track; }$/;"	f	class:Opponent
setTranslucent	src/windows/include/plib/ssg.h	/^  virtual void setTranslucent (void) { translucent = TRUE  ; }$/;"	f	class:ssgState
setTravCallback	src/windows/include/plib/ssg.h	/^  void setTravCallback ( int cb_type, ssgTravCallback cb )$/;"	f	class:ssgEntity
setTraversalMask	src/windows/include/plib/ssg.h	/^  void setTraversalMask     ( int t ) { traversal_mask  =  t ; }$/;"	f	class:ssgEntity
setTraversalMaskBits	src/windows/include/plib/ssg.h	/^  void setTraversalMaskBits ( int t ) { traversal_mask |=  t ; }$/;"	f	class:ssgEntity
setTurboParameters	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::setTurboParameters (bool turbo_on, float turbo_rpm, float turbo_lag)$/;"	f	class:CarSoundData
setTurboSound	src/modules/graphic/ssggraph/SoundInterface.h	/^	void setTurboSound (const char* sound_name)$/;"	f	class:SoundInterface
setUpwardSpeed	src/windows/include/plib/ssgaFire.h	/^  void setUpwardSpeed ( float spd )$/;"	f	class:ssgaFire
setUserData	src/windows/include/plib/ssg.h	/^  void setUserData ( ssgBase *s )$/;"	f	class:ssgBase
setValue	export/include/3D/Matrix.h	/^  void setValue(Scalar xx, Scalar xy, Scalar xz, $/;"	f	class:Matrix
setValue	export/include/3D/Matrix.h	/^  void setValue(const double *m) {$/;"	f	class:Matrix
setValue	export/include/3D/Matrix.h	/^  void setValue(const float *m) {$/;"	f	class:Matrix
setValue	export/include/3D/Tuple3.h	/^  void setValue(Scalar x, Scalar y, Scalar z) {$/;"	f	class:Tuple3
setValue	export/include/3D/Tuple3.h	/^  void setValue(const double v[3]) {$/;"	f	class:Tuple3
setValue	export/include/3D/Tuple3.h	/^  void setValue(const float v[3]) {$/;"	f	class:Tuple3
setValue	export/include/3D/Tuple4.h	/^  void setValue(Scalar x, Scalar y, Scalar z, Scalar w) {$/;"	f	class:Tuple4
setValue	export/include/3D/Tuple4.h	/^  void setValue(const double v[4]) {$/;"	f	class:Tuple4
setValue	export/include/3D/Tuple4.h	/^  void setValue(const float v[4]) {$/;"	f	class:Tuple4
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setValue(Scalar xx, Scalar xy, Scalar xz, $/;"	f	class:Matrix
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setValue(const double *m) {$/;"	f	class:Matrix
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  void setValue(const float *m) {$/;"	f	class:Matrix
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  void setValue(Scalar x, Scalar y, Scalar z) {$/;"	f	class:Tuple3
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  void setValue(const double v[3]) {$/;"	f	class:Tuple3
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple3.h	/^  void setValue(const float v[3]) {$/;"	f	class:Tuple3
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  void setValue(Scalar x, Scalar y, Scalar z, Scalar w) {$/;"	f	class:Tuple4
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  void setValue(const double v[4]) {$/;"	f	class:Tuple4
setValue	src/modules/simu/simuv2/SOLID-2.0/include/3D/Tuple4.h	/^  void setValue(const float v[4]) {$/;"	f	class:Tuple4
setValue	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  void setValue(const Point& min, const Point& max) { $/;"	f	class:BBox
setValue	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::setValue(const double m[16]) {$/;"	f	class:Transform
setValue	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::setValue(const float m[16]) {$/;"	f	class:Transform
setVariance	export/include/learning/Distribution.h	/^	virtual void setVariance (real var) $/;"	f	class:NormalDistribution
setVariance	export/include/learning/Distribution.h	/^	virtual void setVariance (real var) $/;"	f	class:UniformDistribution
setVariance	export/include/learning/Distribution.h	/^	virtual void setVariance (real var)$/;"	f	class:ExponentialDistribution
setVariance	export/include/learning/Distribution.h	/^	virtual void setVariance (real var)$/;"	f	class:LaplacianDistribution
setVariance	src/libs/learning/Distribution.h	/^	virtual void setVariance (real var) $/;"	f	class:NormalDistribution
setVariance	src/libs/learning/Distribution.h	/^	virtual void setVariance (real var) $/;"	f	class:UniformDistribution
setVariance	src/libs/learning/Distribution.h	/^	virtual void setVariance (real var)$/;"	f	class:ExponentialDistribution
setVariance	src/libs/learning/Distribution.h	/^	virtual void setVariance (real var)$/;"	f	class:LaplacianDistribution
setVel	src/windows/include/plib/sg.h	/^  void   setVel   ( float x, float y, float z ) { sgSetVec3 ( vel  ,x,y,z ) ; }$/;"	f	class:sgParticle
setVel	src/windows/include/plib/sg.h	/^  void   setVel   ( sgVec3 v ) { sgCopyVec3 ( vel  , v ) ; }$/;"	f	class:sgParticle
setVertices	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:ssgVtxTableCarlight
setVertices	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:ssgVtxTableShadow
setVertices	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:ssgVtxTableSmoke
setVertices	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void setVertices  ( ssgVertexArray   *vl ) {  ssgVtxTable::setVertices(vl);}$/;"	f	class:grVtxTable
setViewMode	src/modules/graphic/ssggraph/grtrackmap.cpp	/^void cGrTrackMap::setViewMode(int vm) {$/;"	f	class:cGrTrackMap
setViewport	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::setViewport(int x, int y, int w, int h)$/;"	f	class:cGrCarCamMirror
setVolume	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::setVolume (float vol)$/;"	f	class:OpenalTorcsSound
setVolume	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::setVolume(float vol)$/;"	f	class:PlibTorcsSound
setVolume	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void TorcsSound::setVolume(float vol)$/;"	f	class:TorcsSound
setWaveHeight	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setWaveHeight ( float h ) { height  = h ; }$/;"	f	class:ssgaWaveTrain
setWaveTrain	src/windows/include/plib/ssgaWaveSystem.h	/^  void setWaveTrain ( int i, ssgaWaveTrain *t )$/;"	f	class:ssgaWaveSystem
setWeight	src/drivers/berniw/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWeight	src/drivers/berniw2/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWeight	src/drivers/berniw3/pathfinder.h	/^		inline void setWeight(tdble w) { weight = w; }$/;"	f	class:PathSeg
setWidth	src/drivers/olethros/TrackData.cpp	/^void TrackData::setWidth(float width)$/;"	f	class:TrackData
setWindDirn	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setWindDirn      ( float dirn             ) { windHeading = dirn  ; }$/;"	f	class:ssgaWaveSystem
setWindSpeed	src/windows/include/plib/ssgaWaveSystem.h	/^  void  setWindSpeed     ( float speed            ) { windSpeed   = speed ; }$/;"	f	class:ssgaWaveSystem
setZoom	src/modules/graphic/ssggraph/grcam.cpp	/^    void setZoom(int cmd) {$/;"	f	class:cGrCarCamCenter
setZoom	src/modules/graphic/ssggraph/grcam.cpp	/^    void setZoom(int cmd) {$/;"	f	class:cGrCarCamRoadZoom
setZoom	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrPerspCamera::setZoom(int cmd)$/;"	f	class:cGrPerspCamera
setZoom	src/modules/graphic/ssggraph/grcam.h	/^    void setZoom(int cmd) { }$/;"	f	class:cGrOrthoCamera
setZoom	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::setZoom(long zoom)$/;"	f	class:cGrScreen
set_max	export/include/3D/Basic.h	/^inline void set_max(Scalar& x, Scalar y) { if (x < y) x = y; }$/;"	f
set_max	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline void set_max(Scalar& x, Scalar y) { if (x < y) x = y; }$/;"	f
set_min	export/include/3D/Basic.h	/^inline void set_min(Scalar& x, Scalar y) { if (x > y) x = y; }$/;"	f
set_min	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline void set_min(Scalar& x, Scalar y) { if (x > y) x = y; }$/;"	f
set_texcoord	src/tools/texmapper/maintexmapper.cpp	/^void set_texcoord(ssgEntity *start, sgMat4 m)$/;"	f
set_texture_coord	src/tools/texmapper/maintexmapper.cpp	/^void set_texture_coord(void)$/;"	f
settings	src/drivers/human/pref.cpp	/^    char	*settings;$/;"	m	struct:__anon145	file:
setup	src/windows/include/plib/ssg.h	/^  void setup ()$/;"	f	class:ssgLight
sgACos	src/windows/include/plib/sg.h	/^inline SGfloat sgACos ( SGfloat s )$/;"	f
sgASin	src/windows/include/plib/sg.h	/^inline SGfloat sgASin ( SGfloat s )$/;"	f
sgATan	src/windows/include/plib/sg.h	/^inline SGfloat sgATan ( SGfloat s )$/;"	f
sgATan2	src/windows/include/plib/sg.h	/^inline SGfloat sgATan2 ( SGfloat y, SGfloat x )$/;"	f
sgAbs	src/windows/include/plib/sg.h	/^inline SGfloat sgAbs    ( const SGfloat a ) { return (a<SG_ZERO) ? -a : a ; }$/;"	f
sgAddScaledVec2	src/windows/include/plib/sg.h	/^inline void sgAddScaledVec2 ( sgVec2 dst, const sgVec2 src, const SGfloat s )$/;"	f
sgAddScaledVec2	src/windows/include/plib/sg.h	/^inline void sgAddScaledVec2 ( sgVec2 dst, const sgVec2 src1, const sgVec2 src2, const SGfloat s )$/;"	f
sgAddScaledVec3	src/windows/include/plib/sg.h	/^inline void sgAddScaledVec3 ( sgVec3 dst, const sgVec3 src, const SGfloat s )$/;"	f
sgAddScaledVec3	src/windows/include/plib/sg.h	/^inline void sgAddScaledVec3 ( sgVec3 dst, const sgVec3 src1, const sgVec3 src2, const SGfloat s )$/;"	f
sgAddScaledVec4	src/windows/include/plib/sg.h	/^inline void sgAddScaledVec4 ( sgVec4 dst, const sgVec4 src, const SGfloat s )$/;"	f
sgAddScaledVec4	src/windows/include/plib/sg.h	/^inline void sgAddScaledVec4 ( sgVec4 dst, const sgVec4 src1, const sgVec4 src2, const SGfloat s )$/;"	f
sgAddVec2	src/windows/include/plib/sg.h	/^inline void sgAddVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgAddVec2	src/windows/include/plib/sg.h	/^inline void sgAddVec2 ( sgVec2 dst, const sgVec2 src1, const sgVec2 src2 )$/;"	f
sgAddVec3	src/windows/include/plib/sg.h	/^inline void sgAddVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgAddVec3	src/windows/include/plib/sg.h	/^inline void sgAddVec3 ( sgVec3 dst, const sgVec3 src1, const sgVec3 src2 )$/;"	f
sgAddVec4	src/windows/include/plib/sg.h	/^inline void sgAddVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgAddVec4	src/windows/include/plib/sg.h	/^inline void sgAddVec4 ( sgVec4 dst, const sgVec4 src1, const sgVec4 src2 )$/;"	f
sgAngleBetweenNormalizedVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgAngleBetweenNormalizedVec3 ( sgVec3 v1, sgVec3 v2 )$/;"	f
sgBox	src/windows/include/plib/sg.h	/^  sgBox () { empty () ; }$/;"	f	class:sgBox
sgBox	src/windows/include/plib/sg.h	/^class sgBox$/;"	c
sgCompareFloat	src/windows/include/plib/sg.h	/^inline int sgCompareFloat ( const SGfloat a, const SGfloat b, const SGfloat tol )$/;"	f
sgCompareVec2	src/windows/include/plib/sg.h	/^inline int sgCompareVec2 ( const sgVec2 a, const sgVec2 b, const SGfloat tol )$/;"	f
sgCompareVec3	src/windows/include/plib/sg.h	/^inline int sgCompareVec3 ( const sgVec3 a, const sgVec3 b, const SGfloat tol )$/;"	f
sgCompareVec4	src/windows/include/plib/sg.h	/^inline int sgCompareVec4 ( const sgVec4 a, const sgVec4 b, const SGfloat tol )$/;"	f
sgCoord	src/windows/include/plib/sg.h	/^struct sgCoord$/;"	s
sgCopyCoord	src/windows/include/plib/sg.h	/^inline void sgCopyCoord ( sgCoord *dst, const sgCoord *src )$/;"	f
sgCopyMat4	src/windows/include/plib/sg.h	/^inline void sgCopyMat4 ( sgMat4 dst, const sgMat4 src )$/;"	f
sgCopyQuat	src/windows/include/plib/sg.h	/^inline void sgCopyQuat ( sgQuat dst, const sgQuat src )$/;"	f
sgCopyVec2	src/windows/include/plib/sg.h	/^inline void sgCopyVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgCopyVec3	src/windows/include/plib/sg.h	/^inline void sgCopyVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgCopyVec4	src/windows/include/plib/sg.h	/^inline void sgCopyVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgCos	src/windows/include/plib/sg.h	/^inline SGfloat sgCos ( SGfloat s )$/;"	f
sgDistToLineSegmentVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgDistToLineSegmentVec3 ( const sgLineSegment3 line,$/;"	f
sgDistToLineVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgDistToLineVec2 ( const sgVec3 line, const sgVec2 pnt )$/;"	f
sgDistToLineVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgDistToLineVec3 ( const sgLine3 line,$/;"	f
sgDistToPlaneVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgDistToPlaneVec3 ( const sgVec4 plane, const sgVec3 pnt )$/;"	f
sgDistanceSquaredVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgDistanceSquaredVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgDistanceSquaredVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgDistanceSquaredVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgDistanceSquaredVec4	src/windows/include/plib/sg.h	/^inline SGfloat sgDistanceSquaredVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgDistanceVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgDistanceVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgDistanceVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgDistanceVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgDistanceVec4	src/windows/include/plib/sg.h	/^inline SGfloat sgDistanceVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgEqualVec2	src/windows/include/plib/sg.h	/^inline int sgEqualVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgEqualVec3	src/windows/include/plib/sg.h	/^inline int sgEqualVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgEqualVec4	src/windows/include/plib/sg.h	/^inline int sgEqualVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgEulerToQuat	src/windows/include/plib/sg.h	/^inline void sgEulerToQuat( sgQuat dst,$/;"	f
sgFloat	src/windows/include/plib/sg.h	31;"	d
sgFrustum	src/windows/include/plib/sg.h	/^  sgFrustum (void)$/;"	f	class:sgFrustum
sgFrustum	src/windows/include/plib/sg.h	/^class sgFrustum$/;"	c
sgFullXformPnt3	src/windows/include/plib/sg.h	/^inline void sgFullXformPnt3 ( sgVec3 dst, const sgMat4 mat ) { sgFullXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgFullXformPnt4	src/windows/include/plib/sg.h	/^inline void sgFullXformPnt4 ( sgVec4 dst, const sgMat4 mat ) { sgFullXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgGetGravity	src/windows/include/plib/sg.h	/^inline float  sgGetGravity     () { return - _sgGravity[2] ; }$/;"	f
sgGetGravityVec3	src/windows/include/plib/sg.h	/^inline float *sgGetGravityVec3 () { return   _sgGravity    ; }$/;"	f
sgHPRToQuat	src/windows/include/plib/sg.h	/^inline void sgHPRToQuat ( sgQuat dst, SGfloat h, SGfloat p, SGfloat r )$/;"	f
sgHPRToQuat	src/windows/include/plib/sg.h	/^inline void sgHPRToQuat ( sgQuat dst, const sgVec3 hpr )$/;"	f
sgHeightAbovePlaneVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgHeightAbovePlaneVec3 ( const sgVec4 plane, const sgVec3 pnt )$/;"	f
sgHeightOfPlaneVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgHeightOfPlaneVec2 ( const sgVec4 plane, const sgVec2 pnt )$/;"	f
sgHypot	src/windows/include/plib/sg.h	/^inline SGfloat sgHypot  ( const SGfloat x, const SGfloat y ) { return sgSqrt( sgSquare(x) + sgSquare(y) ); }$/;"	f
sgInvertMat4	src/windows/include/plib/sg.h	/^inline void sgInvertMat4 ( sgMat4 dst ) { sgInvertMat4 ( dst, dst ) ; }$/;"	f
sgInvertQuat	src/windows/include/plib/sg.h	/^inline void sgInvertQuat ( sgQuat dst ) { sgInvertQuat ( dst, dst ) ; }$/;"	f
sgInvertQuat	src/windows/include/plib/sg.h	/^inline void sgInvertQuat ( sgQuat dst, const sgQuat src )$/;"	f
sgLengthSquaredVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgLengthSquaredVec2 ( sgVec2 const src )$/;"	f
sgLengthSquaredVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgLengthSquaredVec3 ( sgVec3 const src )$/;"	f
sgLengthSquaredVec4	src/windows/include/plib/sg.h	/^inline SGfloat sgLengthSquaredVec4 ( sgVec4 const src )$/;"	f
sgLengthVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgLengthVec2 ( const sgVec2 src )$/;"	f
sgLengthVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgLengthVec3 ( const sgVec3 src )$/;"	f
sgLengthVec4	src/windows/include/plib/sg.h	/^inline SGfloat sgLengthVec4 ( const sgVec4 src )$/;"	f
sgLerp	src/windows/include/plib/sg.h	/^inline SGfloat sgLerp ( const SGfloat a, const SGfloat b, const SGfloat f )$/;"	f
sgLerpAnglesVec3	src/windows/include/plib/sg.h	/^inline void sgLerpAnglesVec3 ( sgVec3 dst, const sgVec3 a,$/;"	f
sgLerpVec2	src/windows/include/plib/sg.h	/^inline void sgLerpVec2 ( sgVec2 dst, const sgVec2 a, const sgVec2 b, const SGfloat f )$/;"	f
sgLerpVec3	src/windows/include/plib/sg.h	/^inline void sgLerpVec3 ( sgVec3 dst, const sgVec3 a, const sgVec3 b, const SGfloat f )$/;"	f
sgLerpVec4	src/windows/include/plib/sg.h	/^inline void sgLerpVec4 ( sgVec4 dst, const sgVec4 a, const sgVec4 b, const SGfloat f )$/;"	f
sgLine3	src/windows/include/plib/sg.h	/^struct sgLine3    \/* Infinite line *\/$/;"	s
sgLineSegment3	src/windows/include/plib/sg.h	/^struct sgLineSegment3   \/* Bounded line segment *\/$/;"	s
sgLineSegment3ToLine3	src/windows/include/plib/sg.h	/^inline void sgLineSegment3ToLine3 ( sgLine3 *line,$/;"	f
sgLocalRotQuat	src/windows/include/plib/sg.h	1359;"	d
sgMake2DLine	src/windows/include/plib/sg.h	/^inline void sgMake2DLine ( sgVec3 dst, const sgVec2 a, const sgVec2 b )$/;"	f
sgMakeCoordMat4	src/windows/include/plib/sg.h	/^inline void sgMakeCoordMat4( sgMat4 dst, const sgCoord *src )$/;"	f
sgMakeCoordMat4	src/windows/include/plib/sg.h	/^inline void sgMakeCoordMat4( sgMat4 dst, const sgVec3 xyz, const sgVec3 hpr )$/;"	f
sgMakeIdentMat4	src/windows/include/plib/sg.h	/^inline void sgMakeIdentMat4 ( sgMat4 dst )$/;"	f
sgMakeIdentQuat	src/windows/include/plib/sg.h	/^inline void sgMakeIdentQuat ( sgQuat dst )$/;"	f
sgMakePlane	src/windows/include/plib/sg.h	/^inline void sgMakePlane ( sgVec4 dst, const sgVec3 a, const sgVec3 b, const sgVec3 c )$/;"	f
sgMakePlane	src/windows/include/plib/sg.h	/^inline void sgMakePlane ( sgVec4 dst, const sgVec3 normal, const sgVec3 pnt )$/;"	f
sgMakeRotMat4	src/windows/include/plib/sg.h	/^inline void sgMakeRotMat4   ( sgMat4 dst, const sgVec3 hpr )$/;"	f
sgMakeRotMat4	src/windows/include/plib/sg.h	/^inline void sgMakeRotMat4   ( sgMat4 dst,const SGfloat h, const SGfloat p, const SGfloat r )$/;"	f
sgMat3	src/windows/include/plib/sg.h	/^typedef SGfloat sgMat3  [3][3] ;$/;"	t
sgMat4	src/windows/include/plib/sg.h	/^typedef SGfloat sgMat4  [4][4] ;$/;"	t
sgNegateVec2	src/windows/include/plib/sg.h	/^inline void sgNegateVec2 ( sgVec2 dst )$/;"	f
sgNegateVec2	src/windows/include/plib/sg.h	/^inline void sgNegateVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgNegateVec3	src/windows/include/plib/sg.h	/^inline void sgNegateVec3 ( sgVec3 dst )$/;"	f
sgNegateVec3	src/windows/include/plib/sg.h	/^inline void sgNegateVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgNegateVec4	src/windows/include/plib/sg.h	/^inline void sgNegateVec4 ( sgVec4 dst )$/;"	f
sgNegateVec4	src/windows/include/plib/sg.h	/^inline void sgNegateVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgNormaliseQuat	src/windows/include/plib/sg.h	/^inline void sgNormaliseQuat ( sgQuat dst ) { sgNormaliseQuat ( dst, dst ) ; }$/;"	f
sgNormaliseQuat	src/windows/include/plib/sg.h	/^inline void sgNormaliseQuat ( sgQuat dst, const sgQuat src )$/;"	f
sgNormaliseVec2	src/windows/include/plib/sg.h	/^inline void sgNormaliseVec2 ( sgVec2 dst )$/;"	f
sgNormaliseVec2	src/windows/include/plib/sg.h	/^inline void sgNormaliseVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgNormaliseVec3	src/windows/include/plib/sg.h	/^inline void sgNormaliseVec3 ( sgVec3 dst )$/;"	f
sgNormaliseVec3	src/windows/include/plib/sg.h	/^inline void sgNormaliseVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgNormaliseVec4	src/windows/include/plib/sg.h	/^inline void sgNormaliseVec4 ( sgVec4 dst )$/;"	f
sgNormaliseVec4	src/windows/include/plib/sg.h	/^inline void sgNormaliseVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgNormalizeQuat	src/windows/include/plib/sg.h	702;"	d
sgNormalizeVec2	src/windows/include/plib/sg.h	699;"	d
sgNormalizeVec3	src/windows/include/plib/sg.h	700;"	d
sgNormalizeVec4	src/windows/include/plib/sg.h	701;"	d
sgParticle	src/windows/include/plib/sg.h	/^  sgParticle ( float mass, float x = 0.0f, float y = 0.0f, float z = 0.0f )$/;"	f	class:sgParticle
sgParticle	src/windows/include/plib/sg.h	/^  sgParticle ( float mass, sgVec3 _pos )$/;"	f	class:sgParticle
sgParticle	src/windows/include/plib/sg.h	/^class sgParticle$/;"	c
sgPerlinNoise_1D	src/windows/include/plib/sg.h	/^class sgPerlinNoise_1D$/;"	c
sgPerlinNoise_2D	src/windows/include/plib/sg.h	/^class sgPerlinNoise_2D$/;"	c
sgPerlinNoise_3D	src/windows/include/plib/sg.h	/^class sgPerlinNoise_3D$/;"	c
sgPointInTriangle	src/windows/include/plib/sg.h	/^inline bool sgPointInTriangle ( sgVec3 point, sgVec3 tri[3] )$/;"	f
sgPostMultQuat	src/windows/include/plib/sg.h	/^inline void sgPostMultQuat ( sgQuat dst, const sgQuat q )$/;"	f
sgPostRotQuat	src/windows/include/plib/sg.h	/^inline void sgPostRotQuat ( sgQuat dst, const SGfloat angle, const sgVec3 axis )$/;"	f
sgPostRotQuat	src/windows/include/plib/sg.h	/^inline void sgPostRotQuat ( sgQuat dst,$/;"	f
sgPreMultQuat	src/windows/include/plib/sg.h	/^inline void sgPreMultQuat ( sgQuat dst, const sgQuat q )$/;"	f
sgPreRotQuat	src/windows/include/plib/sg.h	/^inline void sgPreRotQuat ( sgQuat dst, const SGfloat angle, const sgVec3 axis )$/;"	f
sgPreRotQuat	src/windows/include/plib/sg.h	/^inline void sgPreRotQuat ( sgQuat dst,$/;"	f
sgQuat	src/windows/include/plib/sg.h	/^typedef sgVec4 sgQuat ;$/;"	t
sgReflectInPlaneVec3	src/windows/include/plib/sg.h	/^inline void sgReflectInPlaneVec3 ( sgVec3 dst, const sgVec4 plane ) $/;"	f
sgRotQuat	src/windows/include/plib/sg.h	1362;"	d
sgScalarProductVec2	src/windows/include/plib/sg.h	/^inline SGfloat sgScalarProductVec2 ( const sgVec2 a, const sgVec2 b )$/;"	f
sgScalarProductVec3	src/windows/include/plib/sg.h	/^inline SGfloat sgScalarProductVec3 ( const sgVec3 a, const sgVec3 b )$/;"	f
sgScalarProductVec4	src/windows/include/plib/sg.h	/^inline SGfloat sgScalarProductVec4 ( const sgVec4 a, const sgVec4 b )$/;"	f
sgScaleMat4	src/windows/include/plib/sg.h	/^inline void sgScaleMat4 ( sgMat4 dst, const sgMat4 src, const SGfloat scale )$/;"	f
sgScaleVec2	src/windows/include/plib/sg.h	/^inline void sgScaleVec2 ( sgVec2 dst, const SGfloat s )$/;"	f
sgScaleVec2	src/windows/include/plib/sg.h	/^inline void sgScaleVec2 ( sgVec2 dst, const sgVec2 src, const SGfloat s )$/;"	f
sgScaleVec3	src/windows/include/plib/sg.h	/^inline void sgScaleVec3 ( sgVec3 dst, const SGfloat s )$/;"	f
sgScaleVec3	src/windows/include/plib/sg.h	/^inline void sgScaleVec3 ( sgVec3 dst, const sgVec3 src, const SGfloat s )$/;"	f
sgScaleVec4	src/windows/include/plib/sg.h	/^inline void sgScaleVec4 ( sgVec4 dst, const SGfloat s )$/;"	f
sgScaleVec4	src/windows/include/plib/sg.h	/^inline void sgScaleVec4 ( sgVec4 dst, const sgVec4 src, const SGfloat s )$/;"	f
sgSetCoord	src/windows/include/plib/sg.h	/^inline void sgSetCoord ( sgCoord *dst, const SGfloat x, const SGfloat y, const SGfloat z,$/;"	f
sgSetCoord	src/windows/include/plib/sg.h	/^inline void sgSetCoord ( sgCoord *dst, const sgVec3 xyz, const sgVec3 hpr )$/;"	f
sgSetCoord	src/windows/include/plib/sg.h	/^inline void sgSetCoord ( sgCoord *dst, sgdCoord *src )$/;"	f
sgSetGravity	src/windows/include/plib/sg.h	/^inline void   sgSetGravity     ( float  g ) { sgSetVec3 ( _sgGravity, 0.0f, 0.0f, -g ) ; }$/;"	f
sgSetGravityVec3	src/windows/include/plib/sg.h	/^inline void   sgSetGravityVec3 ( sgVec3 g ) { sgCopyVec3 ( _sgGravity, g ) ; }$/;"	f
sgSetMat4	src/windows/include/plib/sg.h	/^inline void sgSetMat4 ( sgMat4 dst, sgdMat4 src )$/;"	f
sgSetQuat	src/windows/include/plib/sg.h	/^inline void sgSetQuat ( sgQuat dst, sgdQuat src )$/;"	f
sgSetQuat	src/windows/include/plib/sg.h	/^inline void sgSetQuat ( sgQuat dst,$/;"	f
sgSetVec2	src/windows/include/plib/sg.h	/^inline void sgSetVec2 ( sgVec2 dst, const SGfloat x, const SGfloat y )$/;"	f
sgSetVec2	src/windows/include/plib/sg.h	/^inline void sgSetVec2 ( sgVec2 dst, sgdVec2 src )$/;"	f
sgSetVec3	src/windows/include/plib/sg.h	/^inline void sgSetVec3 ( sgVec3 dst, const SGfloat x, const SGfloat y, const SGfloat z )$/;"	f
sgSetVec3	src/windows/include/plib/sg.h	/^inline void sgSetVec3 ( sgVec3 dst, sgdVec3 src )$/;"	f
sgSetVec4	src/windows/include/plib/sg.h	/^inline void sgSetVec4 ( sgVec4 dst, const SGfloat x, const SGfloat y, const SGfloat z, const SGfloat w )$/;"	f
sgSetVec4	src/windows/include/plib/sg.h	/^inline void sgSetVec4 ( sgVec4 dst, sgdVec4 src )$/;"	f
sgSin	src/windows/include/plib/sg.h	/^inline SGfloat sgSin ( SGfloat s )$/;"	f
sgSphere	src/windows/include/plib/sg.h	/^  sgSphere () { empty () ; }$/;"	f	class:sgSphere
sgSphere	src/windows/include/plib/sg.h	/^class sgSphere$/;"	c
sgSpringDamper	src/windows/include/plib/sg.h	/^  sgSpringDamper ( sgParticle *_p0, sgParticle *_p1,$/;"	f	class:sgSpringDamper
sgSpringDamper	src/windows/include/plib/sg.h	/^  sgSpringDamper ()$/;"	f	class:sgSpringDamper
sgSpringDamper	src/windows/include/plib/sg.h	/^class sgSpringDamper$/;"	c
sgSqrt	src/windows/include/plib/sg.h	/^inline SGfloat sgSqrt   ( const SGfloat x ) { return (SGfloat) sqrt ( x ) ; }$/;"	f
sgSquare	src/windows/include/plib/sg.h	/^inline SGfloat sgSquare ( const SGfloat x ) { return x * x ; }$/;"	f
sgSubVec2	src/windows/include/plib/sg.h	/^inline void sgSubVec2 ( sgVec2 dst, const sgVec2 src )$/;"	f
sgSubVec2	src/windows/include/plib/sg.h	/^inline void sgSubVec2 ( sgVec2 dst, const sgVec2 src1, const sgVec2 src2 )$/;"	f
sgSubVec3	src/windows/include/plib/sg.h	/^inline void sgSubVec3 ( sgVec3 dst, const sgVec3 src )$/;"	f
sgSubVec3	src/windows/include/plib/sg.h	/^inline void sgSubVec3 ( sgVec3 dst, const sgVec3 src1, const sgVec3 src2 )$/;"	f
sgSubVec4	src/windows/include/plib/sg.h	/^inline void sgSubVec4 ( sgVec4 dst, const sgVec4 src )$/;"	f
sgSubVec4	src/windows/include/plib/sg.h	/^inline void sgSubVec4 ( sgVec4 dst, const sgVec4 src1, const sgVec4 src2 )$/;"	f
sgTan	src/windows/include/plib/sg.h	/^inline SGfloat sgTan ( SGfloat s )$/;"	f
sgVec2	src/windows/include/plib/sg.h	/^typedef SGfloat sgVec2 [ 2 ] ;$/;"	t
sgVec3	src/windows/include/plib/sg.h	/^typedef SGfloat sgVec3 [ 3 ] ;$/;"	t
sgVec4	src/windows/include/plib/sg.h	/^typedef SGfloat sgVec4 [ 4 ] ;$/;"	t
sgVec9	src/windows/include/plib/ssgaShapes.h	/^typedef float sgVec9 [ 9 ] ;  \/* Needed for ssgaPatch *\/$/;"	t
sgWorldRotQuat	src/windows/include/plib/sg.h	1358;"	d
sgXformPnt3	src/windows/include/plib/sg.h	/^inline void sgXformPnt3     ( sgVec3 dst, const sgMat4 mat ) { sgXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgXformPnt4	src/windows/include/plib/sg.h	/^inline void sgXformPnt4     ( sgVec4 dst, const sgMat4 mat ) { sgXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgXformVec3	src/windows/include/plib/sg.h	/^inline void sgXformVec3     ( sgVec3 dst, const sgMat4 mat ) { sgXformVec3 ( dst, dst, mat ) ; }$/;"	f
sgXformVec4	src/windows/include/plib/sg.h	/^inline void sgXformVec4     ( sgVec4 dst, const sgMat4 mat ) { sgXformVec4 ( dst, dst, mat ) ; }$/;"	f
sgZeroCoord	src/windows/include/plib/sg.h	/^inline void sgZeroCoord ( sgCoord *dst )$/;"	f
sgZeroVec2	src/windows/include/plib/sg.h	/^inline void sgZeroVec2 ( sgVec2 dst ) { dst[0]=dst[1]=SG_ZERO ; }$/;"	f
sgZeroVec3	src/windows/include/plib/sg.h	/^inline void sgZeroVec3 ( sgVec3 dst ) { dst[0]=dst[1]=dst[2]=SG_ZERO ; }$/;"	f
sgZeroVec4	src/windows/include/plib/sg.h	/^inline void sgZeroVec4 ( sgVec4 dst ) { dst[0]=dst[1]=dst[2]=dst[3]=SG_ZERO ; }$/;"	f
sgdACos	src/windows/include/plib/sg.h	/^inline SGDfloat sgdACos ( SGDfloat s )$/;"	f
sgdASin	src/windows/include/plib/sg.h	/^inline SGDfloat sgdASin ( SGDfloat s )$/;"	f
sgdATan	src/windows/include/plib/sg.h	/^inline SGDfloat sgdATan ( SGDfloat s )$/;"	f
sgdATan2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdATan2 ( SGDfloat y, SGDfloat x )$/;"	f
sgdAbs	src/windows/include/plib/sg.h	/^inline SGDfloat sgdAbs    ( const SGDfloat a ) { return ( a < SGD_ZERO ) ? -a : a ; }$/;"	f
sgdAddScaledVec2	src/windows/include/plib/sg.h	/^inline void sgdAddScaledVec2 ( sgdVec2 dst, const sgdVec2 src, const SGDfloat s )$/;"	f
sgdAddScaledVec2	src/windows/include/plib/sg.h	/^inline void sgdAddScaledVec2 ( sgdVec2 dst, const sgdVec2 src1, const sgdVec2 src2, const SGDfloat s )$/;"	f
sgdAddScaledVec3	src/windows/include/plib/sg.h	/^inline void sgdAddScaledVec3 ( sgdVec3 dst, const sgdVec3 src, const SGDfloat s )$/;"	f
sgdAddScaledVec3	src/windows/include/plib/sg.h	/^inline void sgdAddScaledVec3 ( sgdVec3 dst, const sgdVec3 src1, const sgdVec3 src2, const SGDfloat s )$/;"	f
sgdAddScaledVec4	src/windows/include/plib/sg.h	/^inline void sgdAddScaledVec4 ( sgdVec4 dst, const sgdVec4 src, const SGDfloat s )$/;"	f
sgdAddScaledVec4	src/windows/include/plib/sg.h	/^inline void sgdAddScaledVec4 ( sgdVec4 dst, const sgdVec4 src1, const sgdVec4 src2, const SGDfloat s )$/;"	f
sgdAddVec2	src/windows/include/plib/sg.h	/^inline void sgdAddVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdAddVec2	src/windows/include/plib/sg.h	/^inline void sgdAddVec2 ( sgdVec2 dst, const sgdVec2 src1, const sgdVec2 src2 )$/;"	f
sgdAddVec3	src/windows/include/plib/sg.h	/^inline void sgdAddVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdAddVec3	src/windows/include/plib/sg.h	/^inline void sgdAddVec3 ( sgdVec3 dst, const sgdVec3 src1, const sgdVec3 src2 )$/;"	f
sgdAddVec4	src/windows/include/plib/sg.h	/^inline void sgdAddVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdAddVec4	src/windows/include/plib/sg.h	/^inline void sgdAddVec4 ( sgdVec4 dst, const sgdVec4 src1, const sgdVec4 src2 )$/;"	f
sgdAngleBetweenNormalizedVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdAngleBetweenNormalizedVec3 ( sgdVec3 v1, sgdVec3 v2 )$/;"	f
sgdBox	src/windows/include/plib/sg.h	/^class sgdBox$/;"	c
sgdCompareFloat	src/windows/include/plib/sg.h	/^inline int sgdCompareFloat ( const SGDfloat a, const SGDfloat b, const SGDfloat tol )$/;"	f
sgdCompareVec2	src/windows/include/plib/sg.h	/^inline int sgdCompareVec2 ( const sgdVec2 a, const sgdVec2 b, const SGDfloat tol )$/;"	f
sgdCompareVec3	src/windows/include/plib/sg.h	/^inline int sgdCompareVec3 ( const sgdVec3 a, const sgdVec3 b, const SGDfloat tol )$/;"	f
sgdCompareVec4	src/windows/include/plib/sg.h	/^inline int sgdCompareVec4 ( const sgdVec4 a, const sgdVec4 b, const SGDfloat tol )$/;"	f
sgdCoord	src/windows/include/plib/sg.h	/^struct sgdCoord$/;"	s
sgdCopyCoord	src/windows/include/plib/sg.h	/^inline void sgdCopyCoord ( sgdCoord *dst, const sgdCoord *src )$/;"	f
sgdCopyMat4	src/windows/include/plib/sg.h	/^inline void sgdCopyMat4 ( sgdMat4 dst, const sgdMat4 src )$/;"	f
sgdCopyQuat	src/windows/include/plib/sg.h	/^inline void sgdCopyQuat ( sgdQuat dst, const sgdQuat src )$/;"	f
sgdCopyVec2	src/windows/include/plib/sg.h	/^inline void sgdCopyVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdCopyVec3	src/windows/include/plib/sg.h	/^inline void sgdCopyVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdCopyVec4	src/windows/include/plib/sg.h	/^inline void sgdCopyVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdCos	src/windows/include/plib/sg.h	/^inline SGDfloat sgdCos ( SGDfloat s )$/;"	f
sgdDistToLineSegmentVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistToLineSegmentVec3 ( const sgdLineSegment3 line,$/;"	f
sgdDistToLineVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistToLineVec2 ( const sgdVec3 line, const sgdVec2 pnt )$/;"	f
sgdDistToLineVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistToLineVec3 ( const sgdLine3 line,$/;"	f
sgdDistToPlaneVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistToPlaneVec3 ( const sgdVec4 plane, const sgdVec3 pnt )$/;"	f
sgdDistanceSquaredVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceSquaredVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdDistanceSquaredVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceSquaredVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdDistanceSquaredVec4	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceSquaredVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdDistanceVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdDistanceVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdDistanceVec4	src/windows/include/plib/sg.h	/^inline SGDfloat sgdDistanceVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdEqualVec2	src/windows/include/plib/sg.h	/^inline int sgdEqualVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdEqualVec3	src/windows/include/plib/sg.h	/^inline int sgdEqualVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdEqualVec4	src/windows/include/plib/sg.h	/^inline int sgdEqualVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdEulerToQuat	src/windows/include/plib/sg.h	/^inline void sgdEulerToQuat( sgdQuat dst,$/;"	f
sgdFloat	src/windows/include/plib/sg.h	1401;"	d
sgdFrustum	src/windows/include/plib/sg.h	/^  sgdFrustum (void)$/;"	f	class:sgdFrustum
sgdFrustum	src/windows/include/plib/sg.h	/^class sgdFrustum$/;"	c
sgdFullXformPnt3	src/windows/include/plib/sg.h	/^inline void sgdFullXformPnt3 ( sgdVec3 dst, const sgdMat4 mat ) { sgdFullXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgdFullXformPnt4	src/windows/include/plib/sg.h	/^inline void sgdFullXformPnt4 ( sgdVec4 dst, const sgdMat4 mat ) { sgdFullXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgdHPRToQuat	src/windows/include/plib/sg.h	/^inline void sgdHPRToQuat ( sgdQuat dst, SGDfloat h, SGDfloat p, SGDfloat r )$/;"	f
sgdHPRToQuat	src/windows/include/plib/sg.h	/^inline void sgdHPRToQuat ( sgdQuat dst, const sgdVec3 hpr )$/;"	f
sgdHeightAbovePlaneVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdHeightAbovePlaneVec3 ( const sgdVec4 plane, const sgdVec3 pnt )$/;"	f
sgdHeightOfPlaneVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdHeightOfPlaneVec2 ( const sgdVec4 plane, const sgdVec2 pnt )$/;"	f
sgdInvertMat4	src/windows/include/plib/sg.h	/^inline void sgdInvertMat4 ( sgdMat4 dst ) { sgdInvertMat4 ( dst, dst ) ; }$/;"	f
sgdInvertQuat	src/windows/include/plib/sg.h	/^inline void sgdInvertQuat ( sgdQuat dst ) { sgdInvertQuat ( dst, dst ) ; }$/;"	f
sgdInvertQuat	src/windows/include/plib/sg.h	/^inline void sgdInvertQuat ( sgdQuat dst, const sgdQuat src )$/;"	f
sgdLengthSquaredVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdLengthSquaredVec2 ( sgdVec2 const src )$/;"	f
sgdLengthSquaredVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdLengthSquaredVec3 ( sgdVec3 const src )$/;"	f
sgdLengthSquaredVec4	src/windows/include/plib/sg.h	/^inline SGDfloat sgdLengthSquaredVec4 ( sgdVec4 const src )$/;"	f
sgdLengthVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdLengthVec2 ( sgdVec2 const src )$/;"	f
sgdLengthVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdLengthVec3 ( sgdVec3 const src )$/;"	f
sgdLengthVec4	src/windows/include/plib/sg.h	/^inline SGDfloat sgdLengthVec4 ( sgdVec4 const src )$/;"	f
sgdLerpAnglesVec3	src/windows/include/plib/sg.h	/^inline void sgdLerpAnglesVec3 ( sgdVec3 dst, const sgdVec3 a,$/;"	f
sgdLerpVec2	src/windows/include/plib/sg.h	/^inline void sgdLerpVec2 ( sgdVec2 dst, const sgdVec2 a, const sgdVec2 b, const SGDfloat f )$/;"	f
sgdLerpVec3	src/windows/include/plib/sg.h	/^inline void sgdLerpVec3 ( sgdVec3 dst, const sgdVec3 a, const sgdVec3 b, const SGDfloat f )$/;"	f
sgdLerpVec4	src/windows/include/plib/sg.h	/^inline void sgdLerpVec4 ( sgdVec4 dst, const sgdVec4 a, const sgdVec4 b, const SGDfloat f )$/;"	f
sgdLine3	src/windows/include/plib/sg.h	/^struct sgdLine3    \/* Infinite line *\/$/;"	s
sgdLineSegment3	src/windows/include/plib/sg.h	/^struct sgdLineSegment3   \/* Bounded line segment *\/$/;"	s
sgdLineSegment3ToLine3	src/windows/include/plib/sg.h	/^inline void sgdLineSegment3ToLine3 ( sgdLine3 *line,$/;"	f
sgdMake2DLine	src/windows/include/plib/sg.h	/^inline void sgdMake2DLine ( sgdVec3 dst, const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdMakeCoordMat4	src/windows/include/plib/sg.h	/^inline void sgdMakeCoordMat4( sgdMat4 dst, const sgdCoord *src )$/;"	f
sgdMakeCoordMat4	src/windows/include/plib/sg.h	/^inline void sgdMakeCoordMat4( sgdMat4 dst, const sgdVec3 xyz, const sgdVec3 hpr )$/;"	f
sgdMakeIdentMat4	src/windows/include/plib/sg.h	/^inline void sgdMakeIdentMat4 ( sgdMat4 dst )$/;"	f
sgdMakeIdentQuat	src/windows/include/plib/sg.h	/^inline void sgdMakeIdentQuat ( sgdQuat dst )$/;"	f
sgdMakePlane	src/windows/include/plib/sg.h	/^inline void sgdMakePlane ( sgdVec4 dst, const sgdVec3 a, const sgdVec3 b, const sgdVec3 c )$/;"	f
sgdMakePlane	src/windows/include/plib/sg.h	/^inline void sgdMakePlane ( sgdVec4 dst, const sgdVec3 normal, const sgdVec3 pnt )$/;"	f
sgdMakeRotMat4	src/windows/include/plib/sg.h	/^inline void sgdMakeRotMat4   ( sgdMat4 dst, const SGDfloat h, const SGDfloat p, const SGDfloat r )$/;"	f
sgdMakeRotMat4	src/windows/include/plib/sg.h	/^inline void sgdMakeRotMat4   ( sgdMat4 dst, const sgdVec3 hpr )$/;"	f
sgdMat3	src/windows/include/plib/sg.h	/^typedef SGDfloat sgdMat3  [3][3] ;$/;"	t
sgdMat4	src/windows/include/plib/sg.h	/^typedef SGDfloat sgdMat4  [4][4] ;$/;"	t
sgdNegateVec2	src/windows/include/plib/sg.h	/^inline void sgdNegateVec2 ( sgdVec2 dst )$/;"	f
sgdNegateVec2	src/windows/include/plib/sg.h	/^inline void sgdNegateVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdNegateVec3	src/windows/include/plib/sg.h	/^inline void sgdNegateVec3 ( sgdVec3 dst )$/;"	f
sgdNegateVec3	src/windows/include/plib/sg.h	/^inline void sgdNegateVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdNegateVec4	src/windows/include/plib/sg.h	/^inline void sgdNegateVec4 ( sgdVec4 dst )$/;"	f
sgdNegateVec4	src/windows/include/plib/sg.h	/^inline void sgdNegateVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdNormaliseQuat	src/windows/include/plib/sg.h	/^inline void sgdNormaliseQuat ( sgdQuat dst ) { sgdNormaliseQuat ( dst, dst ) ; }$/;"	f
sgdNormaliseQuat	src/windows/include/plib/sg.h	/^inline void sgdNormaliseQuat ( sgdQuat dst, const sgdQuat src )$/;"	f
sgdNormaliseVec2	src/windows/include/plib/sg.h	/^inline void sgdNormaliseVec2 ( sgdVec2 dst )$/;"	f
sgdNormaliseVec2	src/windows/include/plib/sg.h	/^inline void sgdNormaliseVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdNormaliseVec3	src/windows/include/plib/sg.h	/^inline void sgdNormaliseVec3 ( sgdVec3 dst )$/;"	f
sgdNormaliseVec3	src/windows/include/plib/sg.h	/^inline void sgdNormaliseVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdNormaliseVec4	src/windows/include/plib/sg.h	/^inline void sgdNormaliseVec4 ( sgdVec4 dst )$/;"	f
sgdNormaliseVec4	src/windows/include/plib/sg.h	/^inline void sgdNormaliseVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdNormalizeQuat	src/windows/include/plib/sg.h	2046;"	d
sgdNormalizeVec2	src/windows/include/plib/sg.h	2043;"	d
sgdNormalizeVec3	src/windows/include/plib/sg.h	2044;"	d
sgdNormalizeVec4	src/windows/include/plib/sg.h	2045;"	d
sgdPostMultQuat	src/windows/include/plib/sg.h	/^inline void sgdPostMultQuat ( sgdQuat dst, const sgdQuat q )$/;"	f
sgdPreMultQuat	src/windows/include/plib/sg.h	/^inline void sgdPreMultQuat ( sgdQuat dst, const sgdQuat q )$/;"	f
sgdQuat	src/windows/include/plib/sg.h	/^typedef sgdVec4 sgdQuat ;$/;"	t
sgdReflectInPlaneVec3	src/windows/include/plib/sg.h	/^inline void sgdReflectInPlaneVec3 ( sgdVec3 dst, const sgdVec4 plane ) $/;"	f
sgdRotQuat	src/windows/include/plib/sg.h	/^inline void sgdRotQuat ( sgdQuat dst, const SGDfloat angle, const sgdVec3 axis )$/;"	f
sgdRotQuat	src/windows/include/plib/sg.h	/^inline void sgdRotQuat ( sgdQuat dst,$/;"	f
sgdScalarProductVec2	src/windows/include/plib/sg.h	/^inline SGDfloat sgdScalarProductVec2 ( const sgdVec2 a, const sgdVec2 b )$/;"	f
sgdScalarProductVec3	src/windows/include/plib/sg.h	/^inline SGDfloat sgdScalarProductVec3 ( const sgdVec3 a, const sgdVec3 b )$/;"	f
sgdScalarProductVec4	src/windows/include/plib/sg.h	/^inline SGDfloat sgdScalarProductVec4 ( const sgdVec4 a, const sgdVec4 b )$/;"	f
sgdScaleMat4	src/windows/include/plib/sg.h	/^inline void sgdScaleMat4 ( sgdMat4 dst, const sgdMat4 src, const SGDfloat scale )$/;"	f
sgdScaleVec2	src/windows/include/plib/sg.h	/^inline void sgdScaleVec2 ( sgdVec2 dst, const SGDfloat s )$/;"	f
sgdScaleVec2	src/windows/include/plib/sg.h	/^inline void sgdScaleVec2 ( sgdVec2 dst, const sgdVec2 src, const SGDfloat s )$/;"	f
sgdScaleVec3	src/windows/include/plib/sg.h	/^inline void sgdScaleVec3 ( sgdVec3 dst, const SGDfloat s )$/;"	f
sgdScaleVec3	src/windows/include/plib/sg.h	/^inline void sgdScaleVec3 ( sgdVec3 dst, const sgdVec3 src, const SGDfloat s )$/;"	f
sgdScaleVec4	src/windows/include/plib/sg.h	/^inline void sgdScaleVec4 ( sgdVec4 dst, const SGDfloat s )$/;"	f
sgdScaleVec4	src/windows/include/plib/sg.h	/^inline void sgdScaleVec4 ( sgdVec4 dst, const sgdVec4 src, const SGDfloat s )$/;"	f
sgdSetCoord	src/windows/include/plib/sg.h	/^inline void sgdSetCoord ( sgdCoord *dst, const SGDfloat x, const SGDfloat y, const SGDfloat z,$/;"	f
sgdSetCoord	src/windows/include/plib/sg.h	/^inline void sgdSetCoord ( sgdCoord *dst, const sgdVec3 xyz, const sgdVec3 hpr )$/;"	f
sgdSetCoord	src/windows/include/plib/sg.h	/^inline void sgdSetCoord ( sgdCoord *dst, sgCoord *src )$/;"	f
sgdSetMat4	src/windows/include/plib/sg.h	/^inline void sgdSetMat4 ( sgdMat4 dst, sgMat4 src )$/;"	f
sgdSetQuat	src/windows/include/plib/sg.h	/^inline void sgdSetQuat ( sgdQuat dst, sgQuat src )$/;"	f
sgdSetQuat	src/windows/include/plib/sg.h	/^inline void sgdSetQuat ( sgdQuat dst,$/;"	f
sgdSetVec2	src/windows/include/plib/sg.h	/^inline void sgdSetVec2 ( sgdVec2 dst, const SGDfloat x, const SGDfloat y )$/;"	f
sgdSetVec2	src/windows/include/plib/sg.h	/^inline void sgdSetVec2 ( sgdVec2 dst, sgVec2 src )$/;"	f
sgdSetVec3	src/windows/include/plib/sg.h	/^inline void sgdSetVec3 ( sgdVec3 dst, const SGDfloat x, const SGDfloat y, const SGDfloat z )$/;"	f
sgdSetVec3	src/windows/include/plib/sg.h	/^inline void sgdSetVec3 ( sgdVec3 dst, sgVec3 src )$/;"	f
sgdSetVec4	src/windows/include/plib/sg.h	/^inline void sgdSetVec4 ( sgdVec4 dst, const SGDfloat x, const SGDfloat y, const SGDfloat z, const SGDfloat w )$/;"	f
sgdSetVec4	src/windows/include/plib/sg.h	/^inline void sgdSetVec4 ( sgdVec4 dst, sgVec4 src )$/;"	f
sgdSin	src/windows/include/plib/sg.h	/^inline SGDfloat sgdSin ( SGDfloat s )$/;"	f
sgdSphere	src/windows/include/plib/sg.h	/^class sgdSphere$/;"	c
sgdSqrt	src/windows/include/plib/sg.h	/^inline SGDfloat sgdSqrt   ( const SGDfloat x ) { return sqrt ( x ) ; }$/;"	f
sgdSquare	src/windows/include/plib/sg.h	/^inline SGDfloat sgdSquare ( const SGDfloat x ) { return x * x ; }$/;"	f
sgdSubVec2	src/windows/include/plib/sg.h	/^inline void sgdSubVec2 ( sgdVec2 dst, const sgdVec2 src )$/;"	f
sgdSubVec2	src/windows/include/plib/sg.h	/^inline void sgdSubVec2 ( sgdVec2 dst, const sgdVec2 src1, const sgdVec2 src2 )$/;"	f
sgdSubVec3	src/windows/include/plib/sg.h	/^inline void sgdSubVec3 ( sgdVec3 dst, const sgdVec3 src )$/;"	f
sgdSubVec3	src/windows/include/plib/sg.h	/^inline void sgdSubVec3 ( sgdVec3 dst, const sgdVec3 src1, const sgdVec3 src2 )$/;"	f
sgdSubVec4	src/windows/include/plib/sg.h	/^inline void sgdSubVec4 ( sgdVec4 dst, const sgdVec4 src )$/;"	f
sgdSubVec4	src/windows/include/plib/sg.h	/^inline void sgdSubVec4 ( sgdVec4 dst, const sgdVec4 src1, const sgdVec4 src2 )$/;"	f
sgdTan	src/windows/include/plib/sg.h	/^inline SGDfloat sgdTan ( SGDfloat s )$/;"	f
sgdVec2	src/windows/include/plib/sg.h	/^typedef SGDfloat sgdVec2 [ 2 ] ;$/;"	t
sgdVec3	src/windows/include/plib/sg.h	/^typedef SGDfloat sgdVec3 [ 3 ] ;$/;"	t
sgdVec4	src/windows/include/plib/sg.h	/^typedef SGDfloat sgdVec4 [ 4 ] ;$/;"	t
sgdXformPnt3	src/windows/include/plib/sg.h	/^inline void sgdXformPnt3     ( sgdVec3 dst, const sgdMat4 mat ) { sgdXformPnt3 ( dst, dst, mat ) ; }$/;"	f
sgdXformPnt4	src/windows/include/plib/sg.h	/^inline void sgdXformPnt4     ( sgdVec4 dst, const sgdMat4 mat ) { sgdXformPnt4 ( dst, dst, mat ) ; }$/;"	f
sgdXformVec3	src/windows/include/plib/sg.h	/^inline void sgdXformVec3     ( sgdVec3 dst, const sgdMat4 mat ) { sgdXformVec3 ( dst, dst, mat ) ; }$/;"	f
sgdXformVec4	src/windows/include/plib/sg.h	/^inline void sgdXformVec4     ( sgdVec4 dst, const sgdMat4 mat ) { sgdXformVec4 ( dst, dst, mat ) ; }$/;"	f
sgdZeroCoord	src/windows/include/plib/sg.h	/^inline void sgdZeroCoord ( sgdCoord *dst )$/;"	f
sgdZeroVec2	src/windows/include/plib/sg.h	/^inline void sgdZeroVec2 ( sgdVec2 dst ) { dst[0]=dst[1]=SGD_ZERO ; }$/;"	f
sgdZeroVec3	src/windows/include/plib/sg.h	/^inline void sgdZeroVec3 ( sgdVec3 dst ) { dst[0]=dst[1]=dst[2]=SGD_ZERO ; }$/;"	f
sgdZeroVec4	src/windows/include/plib/sg.h	/^inline void sgdZeroVec4 ( sgdVec4 dst ) { dst[0]=dst[1]=dst[2]=dst[3]=SGD_ZERO ; }$/;"	f
sgn	export/include/3D/Basic.h	/^inline int    sgn(Scalar x) { return x < 0 ? -1 : x > 0 ? 1 : 0; }$/;"	f
sgn	src/modules/simu/simuv2/SOLID-2.0/include/3D/Basic.h	/^inline int    sgn(Scalar x) { return x < 0 ? -1 : x > 0 ? 1 : 0; }$/;"	f
shad_xmax	src/modules/graphic/ssggraph/grloadac.cpp	/^double shad_xmax;$/;"	v
shad_xmin	src/modules/graphic/ssggraph/grloadac.cpp	/^double shad_xmin;$/;"	v
shad_ymax	src/modules/graphic/ssggraph/grloadac.cpp	/^double shad_ymax;$/;"	v
shad_ymin	src/modules/graphic/ssggraph/grloadac.cpp	/^double shad_ymin;$/;"	v
shade_model	src/windows/include/plib/ssg.h	/^  GLenum shade_model ;$/;"	m	class:ssgSimpleState
shadowAnchor	src/modules/graphic/ssggraph/grcar.h	/^    ssgBranch		*shadowAnchor;$/;"	m	struct:__anon5
shadowBase	src/modules/graphic/ssggraph/grcar.h	/^    ssgVtxTableShadow	*shadowBase;$/;"	m	struct:__anon5
shadowCurr	src/modules/graphic/ssggraph/grcar.h	/^    ssgVtxTableShadow	*shadowCurr;$/;"	m	struct:__anon5
shadowtexture	src/tools/accc/ac3dload.cpp	/^char *shadowtexture="shadow2.rgb";$/;"	v
shape	src/modules/simu/simuv2/carstruct.h	/^    DtShapeRef	shape;		\/* for collision *\/$/;"	m	struct:__anon18
shapePtr	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  ShapePtr shapePtr;$/;"	m	class:Object
sharedSource	src/modules/graphic/ssggraph/SoundInterface.h	/^struct sharedSource {$/;"	s
shared_memory	src/linux/main.cpp	/^void *shared_memory = (void *)0;$/;"	v
shared_states	src/windows/include/plib/ssg.h	/^  ssgSimpleStateArray shared_states ;$/;"	m	class:ssgLoaderOptions
shared_textures	src/windows/include/plib/ssg.h	/^  ssgTextureArray shared_textures ;$/;"	m	class:ssgLoaderOptions
shi	src/modules/graphic/ssggraph/grloadac.cpp	/^  float  shi  ;$/;"	m	struct:_ssgMaterial	file:
shi	src/tools/accc/accc.h	/^  int shi;$/;"	m	struct:mat
shift	src/windows/include/png.h	/^   png_color_8 shift;         \/* shift for significant bit tranformation *\/$/;"	m	struct:png_struct_def
shiftThld	src/drivers/human/human.h	/^	tdble	shiftThld[MAX_GEARS+1];$/;"	m	struct:HumanContext
shiftThld	src/drivers/inferno2/inferno2.cpp	/^tdble	shiftThld[10][MAX_GEARS+1];$/;"	v
shininess	src/windows/include/plib/ssg.h	/^  float  shininess ;$/;"	m	class:ssgSimpleState
shmid	src/linux/main.cpp	/^int shmid;$/;"	v
shutdn	src/drivers/inferno2/inferno2.cpp	/^shutdn(int index)$/;"	f	file:
shutdown	export/include/simu.h	/^    tfSimShutdown shutdown;$/;"	m	struct:__anon204
shutdown	export/include/telemetry.h	/^    tftlmShutdown		shutdown;		\/* close the telemetry *\/$/;"	m	struct:__anon215
shutdown	src/drivers/berniw/berniw.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	src/drivers/berniw2/berniw2.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	src/drivers/berniw3/berniw3.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	src/drivers/bt/bt.cpp	/^static void shutdown(int index)$/;"	f	file:
shutdown	src/drivers/damned/damned.cpp	/^static void shutdown(int index)$/;"	f	file:
shutdown	src/drivers/human/human.cpp	/^shutdown(int index)$/;"	f	file:
shutdown	src/drivers/inferno/inferno.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	src/drivers/lliaw/lliaw.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	src/drivers/olethros/olethros.cpp	/^static void shutdown(int index)$/;"	f	namespace:olethros
shutdown	src/drivers/sparkle/sparkle.cpp	/^static void shutdown(int index)$/;"	f	file:
shutdown	src/drivers/tita/tita.cpp	/^static void shutdown(int index) {$/;"	f	file:
shutdown	src/interfaces/simu.h	/^    tfSimShutdown shutdown;$/;"	m	struct:__anon164
shutdown	src/interfaces/telemetry.h	/^    tftlmShutdown		shutdown;		\/* close the telemetry *\/$/;"	m	struct:__anon170
shutdown	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::shutdown(void)$/;"	f	class:cGrBoard
shutdownCars	src/modules/graphic/ssggraph/grmain.cpp	/^shutdownCars(void)$/;"	f
shutdownTrack	src/modules/graphic/ssggraph/grmain.cpp	/^shutdownTrack(void)$/;"	f
shutdowncars	export/include/graphic.h	/^    tfGraphicShutdwnCars    shutdowncars;   \/* Graphic shutdown function *\/$/;"	m	struct:__anon211
shutdowncars	src/interfaces/graphic.h	/^    tfGraphicShutdwnCars    shutdowncars;   \/* Graphic shutdown function *\/$/;"	m	struct:__anon169
shutdowntrack	export/include/graphic.h	/^    tfGraphicShutdwnTrack   shutdowntrack;  \/* Graphic shutdown function *\/$/;"	m	struct:__anon211
shutdowntrack	src/interfaces/graphic.h	/^    tfGraphicShutdwnTrack   shutdowntrack;  \/* Graphic shutdown function *\/$/;"	m	struct:__anon169
si	src/tools/trackgen/easymesh.cpp	/^    int si, sj, sk;$/;"	m	struct:ele	file:
sid	src/tools/trackgen/easymesh.cpp	/^struct sid$/;"	s	file:
side	export/include/track.h	/^		struct trackSeg* side[2];$/;"	m	union:trackSeg::__anon180	typeref:struct:trackSeg::__anon180::trackSeg
side	export/include/track.h	/^	int side;		\/**< Pits side:$/;"	m	struct:__anon183
side	src/interfaces/track.h	/^		struct trackSeg* side[2];$/;"	m	union:trackSeg::__anon147	typeref:struct:trackSeg::__anon147::trackSeg
side	src/interfaces/track.h	/^	int side;		\/**< Pits side:$/;"	m	struct:__anon150
side	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Side side;$/;"	m	class:Endpoint
side	src/tools/trackgen/easymesh.cpp	/^side[MAX_NODES*3];$/;"	v	typeref:struct:sid
sideBankType	src/modules/track/track2.cpp	/^static int sideBankType[2];$/;"	v	file:
sideBankType	src/modules/track/track3.cpp	/^static int sideBankType[2];$/;"	v	file:
sideBankType	src/modules/track/track4.cpp	/^static int sideBankType[2];$/;"	v	file:
sideEndWidth	src/modules/track/track2.cpp	/^static tdble sideEndWidth[2];$/;"	v	file:
sideEndWidth	src/modules/track/track3.cpp	/^static tdble sideEndWidth[2];$/;"	v	file:
sideEndWidth	src/modules/track/track4.cpp	/^static tdble sideEndWidth[2];$/;"	v	file:
sideMaterial	src/modules/track/track2.cpp	/^static char *sideMaterial[2];$/;"	v	file:
sideMaterial	src/modules/track/track3.cpp	/^static char *sideMaterial[2];$/;"	v	file:
sideMaterial	src/modules/track/track4.cpp	/^static char *sideMaterial[2];$/;"	v	file:
sideStartWidth	src/modules/track/track2.cpp	/^static tdble sideStartWidth[2];$/;"	v	file:
sideStartWidth	src/modules/track/track3.cpp	/^static tdble sideStartWidth[2];$/;"	v	file:
sideStartWidth	src/modules/track/track4.cpp	/^static tdble sideStartWidth[2];$/;"	v	file:
sideSurface	src/modules/track/track3.cpp	/^static tTrackSurface *sideSurface[2];$/;"	v	file:
sideSurface	src/modules/track/track4.cpp	/^static tTrackSurface *sideSurface[2];$/;"	v	file:
sidedist	src/drivers/bt/opponent.h	/^		float sidedist;		\/\/ approx distance of center of gravity of the cars.$/;"	m	class:Opponent
sidedist	src/drivers/damned/opponent.h	/^		float sidedist;		\/\/ approx distance of center of gravity of the cars.$/;"	m	class:Opponent
sidedist	src/drivers/olethros/opponent.h	/^		float sidedist;		\/\/\/< approx distance of center of gravity of the cars.$/;"	m	class:olethros::Opponent
sidedist	src/drivers/sparkle/opponent.h	/^		float sidedist;		\/* approx distance of center of gravity of the cars *\/$/;"	m	class:Opponent
sig_bit	src/windows/include/png.h	/^   png_color_8 sig_bit;       \/* significant bits in each available channel *\/$/;"	m	struct:png_struct_def
sig_bit	src/windows/include/png.h	/^   png_color_8 sig_bit; \/* significant bits in color channels *\/$/;"	m	struct:png_info_struct
sig_bytes	src/windows/include/png.h	/^   png_byte sig_bytes;        \/* magic bytes read\/written from start of file *\/$/;"	m	struct:png_struct_def
sign	export/include/learning/MathFunctions.h	/^inline const T sign(const T& x)$/;"	f
sign	src/drivers/berniw/berniw.h	/^inline double sign(double number)$/;"	f
sign	src/drivers/berniw2/berniw.h	/^inline double sign(double number)$/;"	f
sign	src/drivers/berniw3/berniw.h	/^inline double sign(double number)$/;"	f
sign	src/drivers/inferno/berniw.h	/^inline double sign(double number)$/;"	f
sign	src/drivers/lliaw/berniw.h	/^inline double sign(double number)$/;"	f
sign	src/drivers/olethros/linalg.h	/^inline float sign(float d) {$/;"	f
sign	src/drivers/tita/berniw.h	/^inline double sign(double number)$/;"	f
sign	src/libs/learning/MathFunctions.h	/^inline const T sign(const T& x)$/;"	f
signature	src/windows/include/png.h	/^   png_byte signature[8];   \/* magic bytes read by libpng from start of file *\/$/;"	m	struct:png_info_struct
simDammageFactor	src/modules/simu/simuv2/categories.cpp	/^tdble simDammageFactor[] = {0.0f, 0.5f, 0.8f, 1.0f, 1.0f};$/;"	v
simItf	export/include/raceman.h	/^    tSimItf	simItf;$/;"	m	struct:__anon207
simItf	src/interfaces/raceman.h	/^    tSimItf	simItf;$/;"	m	struct:__anon166
simSkidFactor	src/modules/simu/simuv2/categories.cpp	/^tdble simSkidFactor[] = {0.40f, 0.35f, 0.3f, 0.0f, 0.0f};$/;"	v
simuInit	src/modules/simu/simuv2/simuitf.cpp	/^simuInit(int \/* index *\/, void *pt)$/;"	f	file:
simuVersionList	src/libs/confscreens/simuconfig.cpp	/^static char *simuVersionList[] = {"simuv2", "simuv3"};$/;"	v	file:
simuv2	src/modules/simu/simuv2/simuitf.cpp	/^simuv2(tModInfo *modInfo)$/;"	f
sinAngle	src/modules/simu/simuv2/SOLID-2.0/src/Cone.h	/^  Scalar sinAngle;$/;"	m	class:Cone
singleList	src/modules/simu/simuv2/SOLID-2.0/src/RespTable.h	/^  SingleList singleList;$/;"	m	class:RespTable
singlePLayerShutdown	src/libs/raceengineclient/singleplayer.cpp	/^singlePLayerShutdown(void *precMenu)$/;"	f	file:
singlePlayerHandle	src/libs/raceengineclient/singleplayer.cpp	/^static void *singlePlayerHandle = NULL;$/;"	v	file:
singlePlayerMenuActivate	src/libs/raceengineclient/singleplayer.cpp	/^singlePlayerMenuActivate(void * \/* dummy *\/)$/;"	f	file:
singleTextureMode	src/libs/tgf/tgf.cpp	/^static int singleTextureMode = 0;$/;"	v	file:
size	src/drivers/inferno/pathfinder.h	/^		int size;				\/\/ # of ps segments$/;"	m	class:PathSeg
size	src/drivers/lliaw/pathfinder.h	/^		int size;				\/\/ # of ps segments$/;"	m	class:PathSeg
size	src/drivers/olethros/TrackData.h	/^    int size()$/;"	f	class:SegmentList
size	src/drivers/tita/pathfinder.h	/^		int size;				\/\/ # of ps segments$/;"	m	class:PathSeg
size	src/libs/tgf/hash.cpp	/^    int					size;$/;"	m	struct:HashElem	file:
size	src/libs/tgf/hash.cpp	/^    int		size;$/;"	m	struct:HashHeader	file:
size	src/libs/tgfclient/guifont.h	/^    float	size;$/;"	m	class:GfuiFontClass
size	src/libs/txml/hashtable.h	/^  size_t size;$/;"	m	struct:__anon73
size	src/libs/txml/xmlparse.c	/^  int size;$/;"	m	struct:block	file:
size	src/modules/graphic/ssggraph/grcarlight.h	/^  float size;$/;"	m	class:ssgVtxTableCarlight
size	src/modules/graphic/ssggraph/grskidmarks.h	/^  int			*size;$/;"	m	struct:__anon2
size	src/modules/simu/simuv2/SOLID-2.0/src/BBox.h	/^  Scalar size() const { return max(max(extent[X], extent[Y]), extent[Z]); }$/;"	f	class:BBox
size	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  int size() const { return count; }$/;"	f	class:IndexArray
size	src/windows/include/plib/ssgaParticleSystem.h	/^  float size ;$/;"	m	class:ssgaParticle
size	src/windows/include/plib/ssgaParticleSystem.h	/^  float size ;$/;"	m	class:ssgaParticleSystem
size	src/windows/include/plib/ssgaShapes.h	/^  sgVec3 size   ;$/;"	m	class:ssgaShape
size	src/windows/include/png.h	/^    png_size_t size;$/;"	m	struct:png_unknown_chunk_t
sizeChk	src/windows/include/plib/ssg.h	/^  void sizeChk ( unsigned int n )$/;"	f	class:ssgSimpleList
sizeTable	src/windows/include/plib/ssgaFire.h	/^  float *sizeTable   ;$/;"	m	class:ssgaFire
size_of	src/windows/include/plib/ssg.h	/^  unsigned int size_of ;  \/* The size of each thing *\/$/;"	m	class:ssgSimpleList
size_user_input	src/linux/main.cpp	/^int size_user_input = 4;$/;"	v
sizex	src/modules/graphic/ssggraph/grsmoke.h	/^  float sizex;$/;"	m	class:ssgVtxTableSmoke
sizey	src/modules/graphic/ssggraph/grsmoke.h	/^  float sizey;$/;"	m	class:ssgVtxTableSmoke
sizez	src/modules/graphic/ssggraph/grsmoke.h	/^  float sizez;$/;"	m	class:ssgVtxTableSmoke
sj	src/tools/trackgen/easymesh.cpp	/^    int si, sj, sk;$/;"	m	struct:ele	file:
sk	src/tools/trackgen/easymesh.cpp	/^    int si, sj, sk;$/;"	m	struct:ele	file:
skeyInfo	src/drivers/human/human.cpp	/^static tKeyInfo skeyInfo[256];$/;"	v	file:
skid	export/include/car.h	/^    tdble	skid[4];		\/**< skid intensity *\/$/;"	m	struct:__anon201
skid	src/interfaces/car.h	/^    tdble	skid[4];		\/**< skid intensity *\/$/;"	m	struct:__anon161
skid	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar skid;$/;"	m	struct:WheelSoundData_
skidState	src/modules/graphic/ssggraph/grskidmarks.cpp	/^static ssgSimpleState *skidState = NULL;$/;"	v	file:
skid_full	src/modules/graphic/ssggraph/grskidmarks.h	/^  int			skid_full;$/;"	m	struct:__anon2
skid_metal	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar skid_metal;$/;"	m	class:CarSoundData
skid_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* skid_sound[4]; \/\/\/< set of skid sounds, one per tyre$/;"	m	class:SoundInterface
skidmarks	src/modules/graphic/ssggraph/grcar.h	/^    tgrSkidmarks        *skidmarks;$/;"	m	struct:__anon5
skillLevel	export/include/car.h	/^    int		skillLevel;		\/**< Driver's skill level (0=rookie -> 3=pro) *\/$/;"	m	struct:__anon197
skillLevel	src/interfaces/car.h	/^    int		skillLevel;		\/**< Driver's skill level (0=rookie -> 3=pro) *\/$/;"	m	struct:__anon157
skilllevel	src/libs/confscreens/driverconfig.cpp	/^    int		skilllevel;$/;"	m	struct:PlayerInfo	file:
skipS	src/libs/txml/xmltok.h	/^  const char *(*skipS)(const ENCODING *, const char *);$/;"	m	struct:encoding
skipS	src/libs/txml/xmltok_impl.c	/^const char *PREFIX(skipS)(const ENCODING *enc, const char *ptr)$/;"	f	file:
skip_length	src/windows/include/png.h	/^   png_uint_32 skip_length;          \/* bytes to skip in input data *\/$/;"	m	struct:png_struct_def
skip_quotes	src/modules/graphic/ssggraph/grloadac.cpp	/^static void skip_quotes ( char **s )$/;"	f	file:
skip_spaces	src/modules/graphic/ssggraph/grloadac.cpp	/^static void skip_spaces ( char **s )$/;"	f	file:
slCallBack	src/windows/include/plib/sl.h	/^typedef void (*slCallBack) ( slSample *, slEvent, int ) ;$/;"	t
slDSP	src/windows/include/plib/sl.h	/^  slDSP ( const char *device, int _rate = SL_DEFAULT_SAMPLING_RATE,$/;"	f	class:slDSP
slDSP	src/windows/include/plib/sl.h	/^  slDSP ( int _rate = SL_DEFAULT_SAMPLING_RATE,$/;"	f	class:slDSP
slDSP	src/windows/include/plib/sl.h	/^class slDSP$/;"	c
slEnvelope	src/windows/include/plib/sl.h	/^  slEnvelope ( int _nsteps = 1, slReplayMode _rm = SL_SAMPLE_ONE_SHOT )$/;"	f	class:slEnvelope
slEnvelope	src/windows/include/plib/sl.h	/^  slEnvelope ( int _nsteps, slReplayMode _rm, float *_times, float *_values )$/;"	f	class:slEnvelope
slEnvelope	src/windows/include/plib/sl.h	/^class slEnvelope$/;"	c
slEnvelopeType	src/windows/include/plib/sl.h	/^enum slEnvelopeType$/;"	g
slEvent	src/windows/include/plib/sl.h	/^enum slEvent$/;"	g
slMODPlayer	src/windows/include/plib/sl.h	/^  slMODPlayer ( const char *fname, slReplayMode rp_mode = SL_SAMPLE_ONE_SHOT, $/;"	f	class:slMODPlayer
slMODPlayer	src/windows/include/plib/sl.h	/^class slMODPlayer : public slPlayer$/;"	c
slPendingCallBack	src/windows/include/plib/sl.h	/^struct slPendingCallBack$/;"	s
slPlayer	src/windows/include/plib/sl.h	/^  slPlayer ( slReplayMode  rp_mode = SL_SAMPLE_ONE_SHOT, $/;"	f	class:slPlayer
slPlayer	src/windows/include/plib/sl.h	/^class slPlayer$/;"	c
slPreemptMode	src/windows/include/plib/sl.h	/^enum slPreemptMode$/;"	g
slReplayMode	src/windows/include/plib/sl.h	/^enum slReplayMode$/;"	g
slSample	src/windows/include/plib/sl.h	/^  slSample ( const Uchar *buff, int leng )$/;"	f	class:slSample
slSample	src/windows/include/plib/sl.h	/^  slSample ( const char *fname, const class slDSP *dsp = NULL )$/;"	f	class:slSample
slSample	src/windows/include/plib/sl.h	/^  slSample () { init () ; }$/;"	f	class:slSample
slSample	src/windows/include/plib/sl.h	/^class slSample$/;"	c
slSamplePlayer	src/windows/include/plib/sl.h	/^  slSamplePlayer ( slSample *s, slReplayMode  rp_mode = SL_SAMPLE_ONE_SHOT, $/;"	f	class:slSamplePlayer
slSamplePlayer	src/windows/include/plib/sl.h	/^class slSamplePlayer : public slPlayer$/;"	c
slSampleStatus	src/windows/include/plib/sl.h	/^enum slSampleStatus$/;"	g
slScheduler	src/windows/include/plib/sl.h	/^  slScheduler ( const char *device,$/;"	f	class:slScheduler
slScheduler	src/windows/include/plib/sl.h	/^  slScheduler ( int _rate = SL_DEFAULT_SAMPLING_RATE ) : slDSP ( _rate, SL_FALSE, 8 ) { init () ; }$/;"	f	class:slScheduler
slScheduler	src/windows/include/plib/sl.h	/^class slScheduler : public slDSP$/;"	c
slipAccel	export/include/car.h	/^	tdble slipAccel;$/;"	m	struct:__anon200
slipAccel	src/interfaces/car.h	/^	tdble slipAccel;$/;"	m	struct:__anon160
slipSide	export/include/car.h	/^	tdble slipSide;$/;"	m	struct:__anon200
slipSide	src/interfaces/car.h	/^	tdble slipSide;$/;"	m	struct:__anon160
slopesn	src/drivers/berniw/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	src/drivers/berniw2/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	src/drivers/berniw3/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	src/drivers/inferno/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	src/drivers/lliaw/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesn	src/drivers/tita/spline.cpp	/^void slopesn(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	src/drivers/berniw/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	src/drivers/berniw2/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	src/drivers/berniw3/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	src/drivers/inferno/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	src/drivers/lliaw/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
slopesp	src/drivers/tita/spline.cpp	/^void slopesp(int dim, const double *const x, const double *const y, double *const ys)$/;"	f
smMixer	src/windows/include/plib/sm.h	/^class smMixer$/;"	c
smax	export/include/learning/policy.h	/^ 	bool smax; \/\/\/< softmax option$/;"	m	class:DiscretePolicy
smax	src/libs/learning/policy.h	/^ 	bool smax; \/\/\/< softmax option$/;"	m	class:DiscretePolicy
smoke	export/include/car.h	/^	float   smoke;$/;"	m	struct:__anon201
smoke	src/interfaces/car.h	/^	float   smoke;$/;"	m	struct:__anon161
smoke	src/modules/graphic/ssggraph/grsmoke.h	/^  ssgVtxTableSmoke * smoke;$/;"	m	struct:tgrSmoke_st
smokeList	src/modules/graphic/ssggraph/grsmoke.h	/^  tgrSmoke * smokeList;$/;"	m	struct:__anon1
smokeManager	src/modules/graphic/ssggraph/grsmoke.cpp	/^static tgrSmokeManager *smokeManager = 0;$/;"	v	file:
smokeType	src/modules/graphic/ssggraph/grsmoke.h	/^  int smokeType;$/;"	m	class:ssgVtxTableSmoke
smokeTypeStep	src/modules/graphic/ssggraph/grsmoke.h	/^  int smokeTypeStep;$/;"	m	class:ssgVtxTableSmoke
smooth	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::smooth(int id, double delta, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::smooth(int Step)$/;"	f	class:Pathfinder
smooth	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::smooth(int s, int p, int e, double w)$/;"	f	class:Pathfinder
smooth	src/tools/trackgen/easymesh.cpp	/^int smooth()$/;"	f
smoothFaceTriNorm	src/tools/accc/ac3dload.cpp	/^void smoothFaceTriNorm(ob_t * object )$/;"	f
smoothObjectTriNorm	src/tools/accc/ac3dload.cpp	/^void smoothObjectTriNorm(ob_t * object )$/;"	f
smoothTriNorm	src/tools/accc/ac3dload.cpp	/^void smoothTriNorm(ob_t * object )$/;"	f
smooth_accel	src/modules/graphic/ssggraph/CarSoundData.h	/^	float smooth_accel; \/\/\/< smoothed acceleration input$/;"	m	class:CarSoundData
smooth_angle	src/tools/accc/ac3dload.cpp	/^double smooth_angle=70.0;$/;"	v
smooth_colour	src/modules/graphic/ssggraph/grskidmarks.h	/^	sgVec4 smooth_colour;$/;"	m	struct:__anon2
snd	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* snd; \/\/\/< The raw sound.$/;"	m	struct:QueueSoundMap_
sndChannel	src/windows/include/plib/sl.h	/^  SndChannelPtr  sndChannel   ;   \/\/ sound channel we are using$/;"	m	class:slDSP
snorm	src/tools/accc/accc.h	/^  point_t  * snorm;$/;"	m	struct:ob
snprintf	export/include/portability.h	61;"	d
snprintf	src/libs/portability/portability.h	61;"	d
softMax	src/libs/learning/policy.cpp	/^int DiscretePolicy::softMax(real* Qs) {$/;"	f	class:DiscretePolicy
sopath	export/include/tgf.h	/^    char		*sopath;		\/**< path name of file *\/$/;"	m	struct:ModList
sopath	src/libs/tgf/tgf.h	/^    char		*sopath;		\/**< path name of file *\/$/;"	m	struct:ModList
sortSndPriority	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^int sortSndPriority(const void* a, const void* b) $/;"	f
sorted	src/windows/include/plib/ul.h	/^  bool sorted ;$/;"	m	class:ulLinkedList
sorted	src/windows/include/ul.h	/^  bool sorted ;$/;"	m	class:ulLinkedList
soundInitialized	src/modules/graphic/ssggraph/grsound.cpp	/^static int soundInitialized = 0;$/;"	v	file:
soundOptionList	src/libs/confscreens/soundconfig.cpp	/^static char *soundOptionList[] = {GR_ATT_SOUND_STATE_OPENAL,$/;"	v	file:
sound_interface	src/modules/graphic/ssggraph/CarSoundData.h	/^	SoundInterface* sound_interface;$/;"	m	class:CarSoundData
sound_interface	src/modules/graphic/ssggraph/grsound.cpp	/^static SoundInterface* sound_interface = NULL;$/;"	v	file:
sound_list	src/modules/graphic/ssggraph/SoundInterface.h	/^	std::vector<TorcsSound*> sound_list; \/\/\/< keeps track of sounds used$/;"	m	class:SoundInterface
sound_list	src/modules/graphic/ssggraph/SoundInterface.h	/^	std::vector<TorcsSound*> sound_list;$/;"	m	class:PlibSoundInterface
sound_mode	src/modules/graphic/ssggraph/grsound.cpp	/^static enum SoundMode sound_mode = OPENAL_MODE;$/;"	v	typeref:enum:SoundMode	file:
source	src/modules/graphic/ssggraph/SoundInterface.h	/^	ALuint source;$/;"	m	struct:sharedSource
source	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALuint source; \/\/\/< source id$/;"	m	class:OpenalTorcsSound
source_position	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat source_position[3]; \/\/\/< source position$/;"	m	class:OpenalTorcsSound
source_velocity	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat source_velocity[3]; \/\/\/< source velocity$/;"	m	class:OpenalTorcsSound
sourcepool	src/modules/graphic/ssggraph/SoundInterface.h	/^	SharedSourcePool* sourcepool;$/;"	m	class:OpenalSoundInterface
spacing	src/tools/trackgen/easymesh.cpp	/^void spacing(int e, int n)$/;"	f
spare	src/windows/include/plib/ssg.h	/^  int   spare ;  \/* This spare field is used in a bunch of short-term hacks *\/$/;"	m	class:ssgBase
spare_byte	src/windows/include/png.h	/^   png_byte spare_byte;     \/* to align the data, and for future use *\/$/;"	m	struct:png_info_struct
sparkle	src/drivers/sparkle/sparkle.cpp	/^extern "C" int sparkle(tModInfo *modInfo)$/;"	f
spdSens	src/drivers/human/pref.h	/^    float	spdSens;	\/* speed sensitivity *\/$/;"	m	struct:__anon144
spdSensName	src/drivers/human/pref.h	/^    char	*spdSensName;	\/* Name of the speed sensitivity attribute *\/$/;"	m	struct:__anon144
spdtgt	src/drivers/inferno2/inferno2.cpp	/^static tdble spdtgt[10]    = {250.0f};$/;"	v	file:
spdtgt2	src/drivers/inferno2/inferno2.cpp	/^static tdble spdtgt2[10]   = {2.0f};$/;"	v	file:
spec	src/modules/graphic/ssggraph/grloadac.cpp	/^  sgVec4 spec ;$/;"	m	struct:_ssgMaterial	file:
spec	src/tools/accc/accc.h	/^  color_t spec;$/;"	m	struct:mat
specialkey	src/libs/tgfclient/gui.h	/^    int			specialkey;$/;"	m	struct:GfuiKey
specular	src/windows/include/plib/ssg.h	/^  sgVec4 specular ;$/;"	m	class:ssgLight
specular_colour	src/windows/include/plib/ssg.h	/^  sgVec4 specular_colour ;$/;"	m	class:ssgSimpleState
speed	src/drivers/berniw/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	src/drivers/berniw/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon119
speed	src/drivers/berniw2/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	src/drivers/berniw2/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon94
speed	src/drivers/berniw3/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	src/drivers/berniw3/pathfinder.h	/^	double speed;			\/* same, but not squared *\/$/;"	m	struct:__anon110
speed	src/drivers/bt/cardata.h	/^		float speed;		\/\/ speed in direction of the track.$/;"	m	class:SingleCardata
speed	src/drivers/damned/cardata.h	/^		float speed;		\/\/ speed in direction of the track.$/;"	m	class:SingleCardata
speed	src/drivers/inferno/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	src/drivers/inferno/pathfinder.h	/^	double speed;			\/\/ same, but not squared.$/;"	m	struct:__anon136
speed	src/drivers/lliaw/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	src/drivers/lliaw/pathfinder.h	/^	double speed;			\/\/ same, but not squared.$/;"	m	struct:__anon129
speed	src/drivers/olethros/cardata.h	/^	float speed;		\/\/ speed in direction of the track.$/;"	m	class:olethros::SingleCardata
speed	src/drivers/sparkle/driver.h	/^		float speed;			\/* speed in track direction *\/$/;"	m	class:Driver
speed	src/drivers/sparkle/opponent.h	/^		float speed;		\/* speed in direction of the track *\/$/;"	m	class:Opponent
speed	src/drivers/tita/mycar.h	/^		double speed;$/;"	m	class:AbstractCar
speed	src/drivers/tita/pathfinder.h	/^	double speed;			\/\/ same, but not squared.$/;"	m	struct:__anon102
speed	src/modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 speed;$/;"	m	class:CarSoundData
speed	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 speed;$/;"	m	class:cGrCamera
speed	src/windows/include/plib/ssgaWaveSystem.h	/^  float speed  ;$/;"	m	class:ssgaWaveTrain
speedLimit	export/include/track.h	/^	tdble speedLimit;			\/**< Speed limit between pitStart and pitEnd *\/$/;"	m	struct:__anon183
speedLimit	src/interfaces/track.h	/^	tdble speedLimit;			\/**< Speed limit between pitStart and pitEnd *\/$/;"	m	struct:__anon150
speedLimiter	src/drivers/human/human.cpp	/^static int speedLimiter	= 0;$/;"	v	file:
speed_factor	src/drivers/olethros/driver.h	/^	float speed_factor; \/\/\/< speed factor to use.$/;"	m	class:olethros::Driver
speed_factor	src/drivers/olethros/strategy.h	/^	float speed_factor;$/;"	m	class:olethros::ManagedStrategy
speedangle	src/drivers/bt/driver.h	/^		float speedangle;		\/\/ the angle of the speed vector relative to trackangle, > 0.0 points to right.$/;"	m	class:Driver
speedangle	src/drivers/damned/driver.h	/^		float speedangle;		\/\/ the angle of the speed vector relative to trackangle, > 0.0 points to right.$/;"	m	class:Driver
speedangle	src/drivers/olethros/driver.h	/^	float speedangle;		\/\/\/< the angle of the speed vector relative to trackangle, > 0.0 points to right.$/;"	m	class:olethros::Driver
speedlimit	src/drivers/bt/pit.h	/^		float speedlimit;				\/\/ Pit speed limit.$/;"	m	class:Pit
speedlimit	src/drivers/damned/pit.h	/^		float speedlimit;				\/\/ Pit speed limit.$/;"	m	class:Pit
speedlimit	src/drivers/olethros/pit.h	/^		float speedlimit;				\/\/ Pit speed limit.$/;"	m	class:olethros::Pit
speedlimit	src/drivers/sparkle/pit.h	/^		float speedlimit;       \/* pit speed limit *\/$/;"	m	class:Pit
speedlimitsqr	src/drivers/bt/pit.h	/^		float speedlimitsqr;			\/\/ Pit speed limit squared.$/;"	m	class:Pit
speedlimitsqr	src/drivers/damned/pit.h	/^		float speedlimitsqr;			\/\/ Pit speed limit squared.$/;"	m	class:Pit
speedlimitsqr	src/drivers/olethros/pit.h	/^		float speedlimitsqr;			\/\/ Pit speed limit squared.$/;"	m	class:olethros::Pit
speedlimitsqr	src/drivers/sparkle/pit.h	/^		float speedlimitsqr;    \/* pit speed limit squared *\/$/;"	m	class:Pit
speedsqr	src/drivers/berniw/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	src/drivers/berniw/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	src/drivers/berniw/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon119
speedsqr	src/drivers/berniw2/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	src/drivers/berniw2/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	src/drivers/berniw2/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon94
speedsqr	src/drivers/berniw3/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	src/drivers/berniw3/pathfinder.h	/^		tdble speedsqr;	\/* max possible speed sqared (speed ist therefore sqrt(speedsqr) *\/$/;"	m	class:PathSeg
speedsqr	src/drivers/berniw3/pathfinder.h	/^	double speedsqr;		\/* on track direction projected speed squared of opponent *\/$/;"	m	struct:__anon110
speedsqr	src/drivers/inferno/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	src/drivers/inferno/pathfinder.h	/^				tdble speedsqr;	\/\/ Max possible speed sqared (speed ist therefore sqrt(speedsqr).$/;"	m	class:PathSeg::pseg
speedsqr	src/drivers/inferno/pathfinder.h	/^	double speedsqr;		\/\/ on track direction projected speed squared of opponent.$/;"	m	struct:__anon136
speedsqr	src/drivers/lliaw/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	src/drivers/lliaw/pathfinder.h	/^				tdble speedsqr;	\/\/ Max possible speed sqared (speed ist therefore sqrt(speedsqr).$/;"	m	class:PathSeg::pseg
speedsqr	src/drivers/lliaw/pathfinder.h	/^	double speedsqr;		\/\/ on track direction projected speed squared of opponent.$/;"	m	struct:__anon129
speedsqr	src/drivers/tita/mycar.h	/^		double speedsqr;$/;"	m	class:AbstractCar
speedsqr	src/drivers/tita/pathfinder.h	/^				tdble speedsqr;	\/\/ Max possible speed sqared (speed ist therefore sqrt(speedsqr).$/;"	m	class:PathSeg::pseg
speedsqr	src/drivers/tita/pathfinder.h	/^	double speedsqr;		\/\/ on track direction projected speed squared of opponent.$/;"	m	struct:__anon102
spinTq	src/modules/simu/simuv2/wheel.h	/^    tdble  	spinTq;		\/* spin torque feedback *\/$/;"	m	struct:__anon21
spinVel	export/include/car.h	/^    tdble	spinVel;	\/**< spin velocity rad\/s *\/$/;"	m	struct:__anon200
spinVel	src/interfaces/car.h	/^    tdble	spinVel;	\/**< spin velocity rad\/s *\/$/;"	m	struct:__anon160
spinVel	src/modules/simu/simuv2/differential.h	/^    tdble	spinVel;$/;"	m	struct:__anon19
spinVel	src/modules/simu/simuv2/wheel.h	/^    tdble  	spinVel;   	\/* spin velocity *\/$/;"	m	struct:__anon21
splashDisplay	src/libs/client/splash.cpp	/^static void splashDisplay( void )$/;"	f	file:
splashKey	src/libs/client/splash.cpp	/^static void splashKey( unsigned char \/* key *\/, int \/* x *\/, int \/* y *\/)$/;"	f	file:
splashMouse	src/libs/client/splash.cpp	/^static void splashMouse(int \/* b *\/, int s, int \/* x *\/, int \/* y *\/)$/;"	f	file:
splashTimer	src/libs/client/splash.cpp	/^static void splashTimer(int \/* value *\/)$/;"	f	file:
spline	src/drivers/berniw/spline.cpp	/^double spline($/;"	f
spline	src/drivers/berniw2/spline.cpp	/^double spline($/;"	f
spline	src/drivers/berniw3/spline.cpp	/^double spline($/;"	f
spline	src/drivers/bt/pit.h	/^		Spline *spline;					\/\/ Spline.$/;"	m	class:Pit
spline	src/drivers/damned/pit.h	/^		Spline *spline;					\/\/ Spline.$/;"	m	class:Pit
spline	src/drivers/inferno/spline.cpp	/^double spline($/;"	f
spline	src/drivers/lliaw/spline.cpp	/^double spline($/;"	f
spline	src/drivers/olethros/pit.h	/^		Spline *spline;					\/\/ Spline.$/;"	m	class:olethros::Pit
spline	src/drivers/sparkle/pit.h	/^		Spline *spline;         \/* spline *\/$/;"	m	class:Pit
spline	src/drivers/tita/spline.cpp	/^double spline($/;"	f
splitOb	src/tools/accc/ac3dload.cpp	/^int splitOb (ob_t **object)$/;"	f
splt_palettes	src/windows/include/png.h	/^   png_sPLT_tp splt_palettes;$/;"	m	struct:png_info_struct
splt_palettes_num	src/windows/include/png.h	/^   png_uint_32 splt_palettes_num;$/;"	m	struct:png_info_struct
spring	src/modules/simu/simuv2/susp.h	/^    tSpring spring;$/;"	m	struct:Suspension
springForce	src/modules/simu/simuv2/susp.cpp	/^static tdble springForce(tSuspension *susp)$/;"	f	file:
sqr	src/drivers/berniw/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	src/drivers/berniw/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	src/drivers/berniw/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	src/drivers/berniw2/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	src/drivers/berniw2/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	src/drivers/berniw2/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	src/drivers/berniw3/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	src/drivers/berniw3/pathfinder.h	/^		inline double sqr(double a) { return a*a; };$/;"	f	class:Pathfinder
sqr	src/drivers/berniw3/trackdesc.h	/^		inline double sqr(double a) { return a*a; }$/;"	f	class:TrackSegment
sqr	src/drivers/inferno/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	src/drivers/inferno/pathfinder.h	/^		inline double sqr(const double a) const { return a*a; };$/;"	f	class:Pathfinder
sqr	src/drivers/inferno/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment
sqr	src/drivers/inferno/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment2D
sqr	src/drivers/lliaw/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	src/drivers/lliaw/pathfinder.h	/^		inline double sqr(const double a) const { return a*a; };$/;"	f	class:Pathfinder
sqr	src/drivers/lliaw/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment
sqr	src/drivers/lliaw/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment2D
sqr	src/drivers/tita/berniw.h	/^inline double sqr(double x)$/;"	f
sqr	src/drivers/tita/pathfinder.h	/^		inline double sqr(const double a) const { return a*a; };$/;"	f	class:Pathfinder
sqr	src/drivers/tita/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment
sqr	src/drivers/tita/trackdesc.h	/^		inline double sqr(double a) const { return a*a; }$/;"	f	class:TrackSegment2D
src-robots-base_PKGDIR	src/drivers/berniw/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/berniw3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/0/practice/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/0/qualifying/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/0/race/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/1/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/1/practice/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/1/qualifying/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/1/race/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/2/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/3/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/4/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/5/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/6/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/7/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/8/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/9/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/bt/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/1/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/2/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/3/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/4/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/5/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/6/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/7/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/8/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/9/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/damned/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/1/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/10/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/2/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/3/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/4/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/5/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/6/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/7/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/8/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/9/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/inferno2/Makefile	/^src-robots-base_PKGDIR		= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/lliaw/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/1/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/2/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/3/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/4/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/5/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/6/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/7/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/8/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/9/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/olethros/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/sparkle/0/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/sparkle/Makefile	/^src-robots-base_PKGDIR   = ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/1/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/10/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/2/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/3/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/4/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/5/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/6/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/7/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/8/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/9/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGDIR	src/drivers/tita/Makefile	/^src-robots-base_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/berniw3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/0/practice/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/0/qualifying/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/0/race/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/1/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/1/practice/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/1/qualifying/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/1/race/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/2/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/3/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/4/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/5/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/6/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/7/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/8/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/9/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/bt/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/1/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/2/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/3/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/4/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/5/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/6/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/7/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/8/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/9/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/damned/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/inferno2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/lliaw/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/1/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/2/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/3/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/4/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/5/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/6/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/7/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/8/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/9/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/olethros/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/sparkle/0/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/sparkle/Makefile	/^src-robots-base_PKGFILES = $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/1/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/10/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/2/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/3/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/4/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/5/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/6/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/7/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/8/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/9/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src-robots-base_PKGFILES	src/drivers/tita/Makefile	/^src-robots-base_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGDIR	Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}$/;"	m
src_PKGDIR	src/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/doc/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/drivers/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/drivers/human/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/drivers/human/tracks/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/drivers/human/tracks/dirt-2/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/interfaces/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/client/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/confscreens/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/learning/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/math/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/portability/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/raceengineclient/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/racescreens/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/robottools/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/tgf/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/tgfclient/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/txml/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/libs/txml/gennmtab/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/linux/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/graphic/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/graphic/ssggraph/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/simuv2/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/simuv2/SOLID-2.0/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/simuv2/SOLID-2.0/include/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/simu/simuv2/SOLID-2.0/src/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/telemetry/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/modules/track/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/raceman/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/accc/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/nfs2ac/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/nfsperf/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/package/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/package/specfiles/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/texmapper/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/tools/trackgen/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/dll/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/include/AL/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/include/GL/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/include/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/include/plib/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGDIR	src/windows/lib/Makefile	/^src_PKGDIR	= ${PACKAGE}-${VERSION}\/$(subst ${TORCS_BASE},,$(shell pwd))$/;"	m
src_PKGFILES	Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print | grep -v TAGS | grep -v torcstune.jar)$/;"	m
src_PKGFILES	src/Makefile	/^src_PKGFILES	= Makefile$/;"	m
src_PKGFILES	src/doc/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/drivers/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/drivers/human/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/drivers/human/tracks/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/drivers/human/tracks/dirt-2/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/interfaces/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/client/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/confscreens/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/learning/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/math/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/portability/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/raceengineclient/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/racescreens/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/robottools/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/tgf/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/tgfclient/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/txml/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/libs/txml/gennmtab/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/linux/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/Makefile	/^src_PKGFILES	= Makefile$/;"	m
src_PKGFILES	src/modules/graphic/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/graphic/ssggraph/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/simuv2/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/simuv2/SOLID-2.0/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/simuv2/SOLID-2.0/include/3D/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/simuv2/SOLID-2.0/include/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/simuv2/SOLID-2.0/include/SOLID/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/simu/simuv2/SOLID-2.0/src/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/telemetry/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/modules/track/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/raceman/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/accc/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/nfs2ac/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/nfsperf/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/package/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/package/specfiles/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/texmapper/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/tools/trackgen/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/dll/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/include/AL/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/include/GL/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/include/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/include/plib/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
src_PKGFILES	src/windows/lib/Makefile	/^src_PKGFILES	= $(shell find * -maxdepth 0 -type f -print)$/;"	m
srgb_intent	src/windows/include/png.h	/^   png_byte srgb_intent; \/* sRGB rendering intent [0, 1, 2, or 3] *\/$/;"	m	struct:png_info_struct
ssgAnimDirection	src/windows/include/plib/ssg.h	/^enum ssgAnimDirection$/;"	g
ssgAnimEnum	src/windows/include/plib/ssg.h	/^enum ssgAnimEnum$/;"	g
ssgAnimTimeMode	src/windows/include/plib/ssg.h	/^enum ssgAnimTimeMode$/;"	g
ssgAxisTransform	src/windows/include/plib/ssg.h	/^class ssgAxisTransform : public ssgTransform$/;"	c
ssgBase	src/windows/include/plib/ssg.h	/^class ssgBase $/;"	c
ssgBaseTransform	src/windows/include/plib/ssg.h	/^class ssgBaseTransform : public ssgBranch$/;"	c
ssgBranch	src/windows/include/plib/ssg.h	/^class ssgBranch : public ssgEntity$/;"	c
ssgBranchCb	src/modules/graphic/ssggraph/grssgext.h	/^  ssgBranchCb(void):ssgBranch() {$/;"	f	class:ssgBranchCb
ssgBranchCb	src/modules/graphic/ssggraph/grssgext.h	/^class ssgBranchCb : public ssgBranch$/;"	c
ssgCallback	src/windows/include/plib/ssg.h	/^typedef int (*ssgCallback)( ssgEntity * ) ;$/;"	t
ssgColourArray	src/windows/include/plib/ssg.h	/^  ssgColourArray ( int init = 3, sgVec4* things = 0 )$/;"	f	class:ssgColourArray
ssgColourArray	src/windows/include/plib/ssg.h	/^class ssgColourArray : public ssgSimpleList$/;"	c
ssgContext	src/windows/include/plib/ssg.h	/^class ssgContext$/;"	c
ssgCullResult	src/windows/include/plib/ssg.h	/^enum ssgCullResult$/;"	g
ssgCutout	src/windows/include/plib/ssg.h	/^class ssgCutout : public ssgBranch$/;"	c
ssgEntity	src/windows/include/plib/ssg.h	/^class ssgEntity : public ssgBase$/;"	c
ssgEntityBinding	src/windows/include/plib/ssg.h	/^struct ssgEntityBinding$/;"	s
ssgForceBasicState	src/windows/include/plib/ssg.h	/^inline void ssgForceBasicState ()$/;"	f
ssgGetCameraPosition	src/windows/include/plib/ssg.h	/^inline void ssgGetCameraPosition ( sgVec3 pos )$/;"	f
ssgGetCurrentContext	src/windows/include/plib/ssg.h	/^inline ssgContext *ssgGetCurrentContext () { return _ssgCurrentContext ; }$/;"	f
ssgGetCurrentOptions	src/windows/include/plib/ssg.h	/^inline ssgLoaderOptions* ssgGetCurrentOptions ()$/;"	f
ssgGetFOV	src/windows/include/plib/ssg.h	/^inline void ssgGetFOV ( float *w, float *h )$/;"	f
ssgGetFrustum	src/windows/include/plib/ssg.h	/^inline  sgFrustum *ssgGetFrustum ()$/;"	f
ssgGetModelviewMatrix	src/windows/include/plib/ssg.h	/^inline void ssgGetModelviewMatrix ( sgMat4 dst )$/;"	f
ssgGetNearFar	src/windows/include/plib/ssg.h	/^inline void ssgGetNearFar ( float *n, float *f )$/;"	f
ssgGetOrtho	src/windows/include/plib/ssg.h	/^inline void ssgGetOrtho ( float *w, float *h )$/;"	f
ssgGetProjectionMatrix	src/windows/include/plib/ssg.h	/^inline void ssgGetProjectionMatrix ( sgMat4 dst )$/;"	f
ssgGrVtxArray	src/modules/graphic/ssggraph/grvertexarray.h	/^class ssgGrVtxArray : public ssgVtxArray$/;"	c
ssgHit	src/windows/include/plib/ssg.h	/^  ssgHit ()$/;"	f	class:ssgHit
ssgHit	src/windows/include/plib/ssg.h	/^class ssgHit$/;"	c
ssgIndexArray	src/windows/include/plib/ssg.h	/^  ssgIndexArray ( int init = 3, short* things = 0 )$/;"	f	class:ssgIndexArray
ssgIndexArray	src/windows/include/plib/ssg.h	/^class ssgIndexArray : public ssgSimpleList$/;"	c
ssgInterleavedArray	src/windows/include/plib/ssg.h	/^  ssgInterleavedArray ( int init = 3, ssgInterleavedArrayElement* things = 0 )$/;"	f	class:ssgInterleavedArray
ssgInterleavedArray	src/windows/include/plib/ssg.h	/^class ssgInterleavedArray : public ssgSimpleList$/;"	c
ssgInterleavedArrayElement	src/windows/include/plib/ssg.h	/^struct ssgInterleavedArrayElement$/;"	s
ssgInvisible	src/windows/include/plib/ssg.h	/^class ssgInvisible : public ssgBranch$/;"	c
ssgKidList	src/windows/include/plib/ssg.h	/^class ssgKidList : public ssgList$/;"	c
ssgLeaf	src/windows/include/plib/ssg.h	/^class ssgLeaf : public ssgEntity$/;"	c
ssgLight	src/windows/include/plib/ssg.h	/^  ssgLight ()$/;"	f	class:ssgLight
ssgLight	src/windows/include/plib/ssg.h	/^class ssgLight$/;"	c
ssgList	src/windows/include/plib/ssg.h	/^class ssgList$/;"	c
ssgLoad	src/windows/include/plib/ssg.h	/^inline ssgEntity *ssgLoad ( char *fname, ssgBranch *(*cb)(char *))$/;"	f
ssgLoadFunc	src/windows/include/plib/ssg.h	/^typedef ssgEntity *ssgLoadFunc ( const char *, const ssgLoaderOptions * ) ;$/;"	t
ssgLoadModelviewMatrix	src/windows/include/plib/ssg.h	/^inline void ssgLoadModelviewMatrix ( sgMat4 mat )$/;"	f
ssgLoadModelviewMatrix	src/windows/include/plib/ssg.h	/^inline void ssgLoadModelviewMatrix ()$/;"	f
ssgLoadProjectionMatrix	src/windows/include/plib/ssg.h	/^inline void ssgLoadProjectionMatrix ( sgFrustum *f )$/;"	f
ssgLoadProjectionMatrix	src/windows/include/plib/ssg.h	/^inline void ssgLoadProjectionMatrix ()$/;"	f
ssgLoaderOptions	src/windows/include/plib/ssg.h	/^  ssgLoaderOptions ()$/;"	f	class:ssgLoaderOptions
ssgLoaderOptions	src/windows/include/plib/ssg.h	/^class ssgLoaderOptions$/;"	c
ssgLoaderOptionsEx	src/modules/graphic/ssggraph/grssgext.h	/^		ssgLoaderOptionsEx():ssgLoaderOptions() {}$/;"	f	class:ssgLoaderOptionsEx
ssgLoaderOptionsEx	src/modules/graphic/ssggraph/grssgext.h	/^class ssgLoaderOptionsEx : public ssgLoaderOptions {$/;"	c
ssgLoaderOptionsEx	src/tools/trackgen/util.h	/^    ssgLoaderOptionsEx()$/;"	f	class:ssgLoaderOptionsEx
ssgLoaderOptionsEx	src/tools/trackgen/util.h	/^class ssgLoaderOptionsEx : public ssgLoaderOptions$/;"	c
ssgModelPath	src/windows/include/plib/ssg.h	/^inline void ssgModelPath   ( const char *path )$/;"	f
ssgNormalArray	src/windows/include/plib/ssg.h	/^  ssgNormalArray ( int init = 3, sgVec3* things = 0 )$/;"	f	class:ssgNormalArray
ssgNormalArray	src/windows/include/plib/ssg.h	/^class ssgNormalArray : public ssgSimpleList$/;"	c
ssgOverrideCullface	src/windows/include/plib/ssg.h	/^inline void ssgOverrideCullface ( int on_off )$/;"	f
ssgOverrideState	src/windows/include/plib/ssg.h	/^inline void ssgOverrideState ( ssgState *s )$/;"	f
ssgOverrideTexture	src/windows/include/plib/ssg.h	/^inline void ssgOverrideTexture ( int on_off )$/;"	f
ssgRangeSelector	src/windows/include/plib/ssg.h	/^class ssgRangeSelector : public ssgSelector$/;"	c
ssgRoot	src/windows/include/plib/ssg.h	/^class ssgRoot : public ssgBranch$/;"	c
ssgSGIHeader	src/modules/graphic/ssggraph/grloadsgi.h	/^class ssgSGIHeader {$/;"	c
ssgSaveACInner	src/tools/trackgen/objects.cpp	/^ssgSaveACInner (ssgEntity *ent, FILE *save_fd)$/;"	f	file:
ssgSaveFunc	src/windows/include/plib/ssg.h	/^typedef int        ssgSaveFunc ( const char *, ssgEntity * ) ;$/;"	t
ssgSaveLeaf	src/tools/trackgen/objects.cpp	/^ssgSaveLeaf (ssgEntity *ent, FILE *save_fd)$/;"	f	file:
ssgSelector	src/windows/include/plib/ssg.h	/^class ssgSelector : public ssgBranch$/;"	c
ssgSetCamera	src/windows/include/plib/ssg.h	/^inline void ssgSetCamera ( sgCoord *coord )$/;"	f
ssgSetCamera	src/windows/include/plib/ssg.h	/^inline void ssgSetCamera ( sgMat4 mat )$/;"	f
ssgSetCameraLookAt	src/windows/include/plib/ssg.h	/^inline void ssgSetCameraLookAt ( const sgVec3 eye, const sgVec3 center )$/;"	f
ssgSetCameraLookAt	src/windows/include/plib/ssg.h	/^inline void ssgSetCameraLookAt ( const sgVec3 eye, const sgVec3 center, const sgVec3 up )$/;"	f
ssgSetCurrentOptions	src/windows/include/plib/ssg.h	/^inline void ssgSetCurrentOptions ( ssgLoaderOptions* options )$/;"	f
ssgSetFOV	src/windows/include/plib/ssg.h	/^inline void ssgSetFOV ( float w, float h )$/;"	f
ssgSetFrustum	src/windows/include/plib/ssg.h	/^inline void ssgSetFrustum ( float l, float r, float b, float t, float n, float f )$/;"	f
ssgSetNearFar	src/windows/include/plib/ssg.h	/^inline void ssgSetNearFar ( float n, float f )$/;"	f
ssgSetOrtho	src/windows/include/plib/ssg.h	/^inline void ssgSetOrtho ( float l, float r, float b, float t, float n, float f )$/;"	f
ssgSetOrtho	src/windows/include/plib/ssg.h	/^inline void ssgSetOrtho ( float w, float h )$/;"	f
ssgSimpleList	src/windows/include/plib/ssg.h	/^  ssgSimpleList ( int sz, int init = 3, char* things = 0 )$/;"	f	class:ssgSimpleList
ssgSimpleList	src/windows/include/plib/ssg.h	/^  ssgSimpleList ()$/;"	f	class:ssgSimpleList
ssgSimpleList	src/windows/include/plib/ssg.h	/^class ssgSimpleList : public ssgBase$/;"	c
ssgSimpleState	src/windows/include/plib/ssg.h	/^class ssgSimpleState : public ssgState$/;"	c
ssgSimpleStateArray	src/windows/include/plib/ssg.h	/^  ssgSimpleStateArray ( int init = 3 )$/;"	f	class:ssgSimpleStateArray
ssgSimpleStateArray	src/windows/include/plib/ssg.h	/^class ssgSimpleStateArray : private ssgSimpleList$/;"	c
ssgState	src/windows/include/plib/ssg.h	/^class ssgState : public ssgBase$/;"	c
ssgStateCallback	src/windows/include/plib/ssg.h	/^typedef int (*ssgStateCallback)( ssgState *entity ) ;$/;"	t
ssgStateSelector	src/windows/include/plib/ssg.h	/^class ssgStateSelector : public ssgSimpleState$/;"	c
ssgStatistics	src/windows/include/plib/ssg.h	/^  ssgStatistics ()$/;"	f	class:ssgStatistics
ssgStatistics	src/windows/include/plib/ssg.h	/^class ssgStatistics$/;"	c
ssgTexCoordArray	src/windows/include/plib/ssg.h	/^  ssgTexCoordArray ( int init = 3, sgVec2* things = 0 )$/;"	f	class:ssgTexCoordArray
ssgTexCoordArray	src/windows/include/plib/ssg.h	/^class ssgTexCoordArray : public ssgSimpleList$/;"	c
ssgTexTrans	src/windows/include/plib/ssg.h	/^class ssgTexTrans : public ssgBaseTransform$/;"	c
ssgTexture	src/windows/include/plib/ssg.h	/^class ssgTexture : public ssgBase$/;"	c
ssgTextureArray	src/windows/include/plib/ssg.h	/^  ssgTextureArray ( int init = 3 )$/;"	f	class:ssgTextureArray
ssgTextureArray	src/windows/include/plib/ssg.h	/^class ssgTextureArray : private ssgSimpleList$/;"	c
ssgTextureInfo	src/windows/include/plib/ssg.h	/^struct ssgTextureInfo$/;"	s
ssgTexturePath	src/windows/include/plib/ssg.h	/^inline void ssgTexturePath ( const char *path )$/;"	f
ssgTimedSelector	src/windows/include/plib/ssg.h	/^class ssgTimedSelector : public ssgSelector$/;"	c
ssgTransform	src/windows/include/plib/ssg.h	/^class ssgTransform : public ssgBaseTransform$/;"	c
ssgTransformArray	src/windows/include/plib/ssg.h	/^  ssgTransformArray ( int init = 3, sgMat4* things = 0 )$/;"	f	class:ssgTransformArray
ssgTransformArray	src/windows/include/plib/ssg.h	/^class ssgTransformArray : public ssgSimpleList$/;"	c
ssgTravCallback	src/windows/include/plib/ssg.h	/^typedef int (*ssgTravCallback)( ssgEntity *entity, int traversal_mask ) ;$/;"	t
ssgTween	src/windows/include/plib/ssg.h	/^class ssgTween : public ssgVtxTable$/;"	c
ssgTweenController	src/windows/include/plib/ssg.h	/^class ssgTweenController : public ssgBranch$/;"	c
ssgTypeAxisTransform	src/windows/include/plib/ssg.h	/^inline int ssgTypeAxisTransform() { return _SSG_TYPE_AXISTRANSFORM  | ssgTypeTransform () ; }$/;"	f
ssgTypeBase	src/windows/include/plib/ssg.h	/^inline int ssgTypeBase         () { return _SSG_TYPE_BASE ; }$/;"	f
ssgTypeBaseTransform	src/windows/include/plib/ssg.h	/^inline int ssgTypeBaseTransform() { return _SSG_TYPE_BASETRANSFORM | ssgTypeBranch () ; }$/;"	f
ssgTypeBranch	src/windows/include/plib/ssg.h	/^inline int ssgTypeBranch       () { return _SSG_TYPE_BRANCH    | ssgTypeEntity  () ; }$/;"	f
ssgTypeColourArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeColourArray  () { return _SSG_TYPE_COLOURARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeCutout	src/windows/include/plib/ssg.h	/^inline int ssgTypeCutout       () { return _SSG_TYPE_CUTOUT    | ssgTypeBranch  () ; }$/;"	f
ssgTypeEntity	src/windows/include/plib/ssg.h	/^inline int ssgTypeEntity       () { return _SSG_TYPE_ENTITY    | ssgTypeBase    () ; }$/;"	f
ssgTypeIndexArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeIndexArray   () { return _SSG_TYPE_INDEXARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeInterleavedArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeInterleavedArray() { return _SSG_TYPE_INTERLEAVEDARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeInvisible	src/windows/include/plib/ssg.h	/^inline int ssgTypeInvisible    () { return _SSG_TYPE_INVISIBLE | ssgTypeBranch  () ; }$/;"	f
ssgTypeLeaf	src/windows/include/plib/ssg.h	/^inline int ssgTypeLeaf         () { return _SSG_TYPE_LEAF      | ssgTypeEntity  () ; }$/;"	f
ssgTypeNormalArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeNormalArray  () { return _SSG_TYPE_NORMALARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeRangeSelector	src/windows/include/plib/ssg.h	/^inline int ssgTypeRangeSelector() { return _SSG_TYPE_RANGESELECTOR | ssgTypeSelector () ; }$/;"	f
ssgTypeRoot	src/windows/include/plib/ssg.h	/^inline int ssgTypeRoot         () { return _SSG_TYPE_ROOT      | ssgTypeBranch  () ; }$/;"	f
ssgTypeSelector	src/windows/include/plib/ssg.h	/^inline int ssgTypeSelector     () { return _SSG_TYPE_SELECTOR  | ssgTypeBranch  () ; }$/;"	f
ssgTypeSimpleList	src/windows/include/plib/ssg.h	/^inline int ssgTypeSimpleList   () { return _SSG_TYPE_SIMPLELIST | ssgTypeBase   () ; }$/;"	f
ssgTypeSimpleState	src/windows/include/plib/ssg.h	/^inline int ssgTypeSimpleState  () { return _SSG_TYPE_SIMPLESTATE | ssgTypeState () ; }$/;"	f
ssgTypeState	src/windows/include/plib/ssg.h	/^inline int ssgTypeState        () { return _SSG_TYPE_STATE     | ssgTypeBase    () ; }$/;"	f
ssgTypeStateSelector	src/windows/include/plib/ssg.h	/^inline int ssgTypeStateSelector() { return _SSG_TYPE_STATESELECTOR | ssgTypeSimpleState () ; }$/;"	f
ssgTypeTexCoordArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeTexCoordArray() { return _SSG_TYPE_TEXCOORDARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeTexTrans	src/windows/include/plib/ssg.h	/^inline int ssgTypeTexTrans     () { return _SSG_TYPE_TEXTRANS  | ssgTypeBaseTransform () ; }$/;"	f
ssgTypeTexture	src/windows/include/plib/ssg.h	/^inline int ssgTypeTexture      () { return _SSG_TYPE_TEXTURE   | ssgTypeBase    () ; }$/;"	f
ssgTypeTimedSelector	src/windows/include/plib/ssg.h	/^inline int ssgTypeTimedSelector() { return _SSG_TYPE_TIMEDSELECTOR | ssgTypeSelector () ; }$/;"	f
ssgTypeTransform	src/windows/include/plib/ssg.h	/^inline int ssgTypeTransform    () { return _SSG_TYPE_TRANSFORM | ssgTypeBaseTransform () ; }$/;"	f
ssgTypeTransformArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeTransformArray() { return _SSG_TYPE_TRANSFORMARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeTween	src/windows/include/plib/ssg.h	/^inline int ssgTypeTween        () { return _SSG_TYPE_TWEEN     | ssgTypeVtxTable() ; }$/;"	f
ssgTypeTweenController	src/windows/include/plib/ssg.h	/^inline int ssgTypeTweenController(){ return _SSG_TYPE_TWEENCONTROLLER | ssgTypeBranch() ; }$/;"	f
ssgTypeVTable	src/windows/include/plib/ssg.h	/^inline int ssgTypeVTable       () { return _SSG_TYPE_VTABLE    | ssgTypeLeaf    () ; }$/;"	f
ssgTypeVertexArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeVertexArray  () { return _SSG_TYPE_VERTEXARRAY | ssgTypeSimpleList () ; }$/;"	f
ssgTypeVtxArray	src/windows/include/plib/ssg.h	/^inline int ssgTypeVtxArray     () { return _SSG_TYPE_VTXARRAY  | ssgTypeVtxTable() ; }$/;"	f
ssgTypeVtxTable	src/windows/include/plib/ssg.h	/^inline int ssgTypeVtxTable     () { return _SSG_TYPE_VTXTABLE  | ssgTypeLeaf    () ; }$/;"	f
ssgVTable	src/windows/include/plib/ssg.h	/^class ssgVTable : public ssgLeaf$/;"	c
ssgVertexArray	src/windows/include/plib/ssg.h	/^  ssgVertexArray ( int init = 3, sgVec3* things = 0 )$/;"	f	class:ssgVertexArray
ssgVertexArray	src/windows/include/plib/ssg.h	/^class ssgVertexArray : public ssgSimpleList$/;"	c
ssgVtxArray	src/windows/include/plib/ssg.h	/^class ssgVtxArray : public ssgVtxTable$/;"	c
ssgVtxTable	src/windows/include/plib/ssg.h	/^class ssgVtxTable : public ssgLeaf$/;"	c
ssgVtxTableCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgVtxTableCarlight::ssgVtxTableCarlight()$/;"	f	class:ssgVtxTableCarlight
ssgVtxTableCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgVtxTableCarlight::ssgVtxTableCarlight(ssgVertexArray *vtx, double s, sgVec3 p)$/;"	f	class:ssgVtxTableCarlight
ssgVtxTableCarlight	src/modules/graphic/ssggraph/grcarlight.h	/^class ssgVtxTableCarlight : public ssgVtxTable$/;"	c
ssgVtxTableShadow	src/modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::ssgVtxTableShadow ( GLenum ty, ssgVertexArray   *vl,$/;"	f	class:ssgVtxTableShadow
ssgVtxTableShadow	src/modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::ssgVtxTableShadow ()$/;"	f	class:ssgVtxTableShadow
ssgVtxTableShadow	src/modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::ssgVtxTableShadow (float f, float u) : ssgVtxTable(), factor(f), unit(u)$/;"	f	class:ssgVtxTableShadow
ssgVtxTableShadow	src/modules/graphic/ssggraph/grshadow.h	/^class ssgVtxTableShadow : public ssgVtxTable$/;"	c
ssgVtxTableSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgVtxTableSmoke:: ssgVtxTableSmoke (ssgVertexArray	*shd_vtx , float initsize, int typ)$/;"	f	class:ssgVtxTableSmoke
ssgVtxTableSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgVtxTableSmoke::ssgVtxTableSmoke ()$/;"	f	class:ssgVtxTableSmoke
ssgVtxTableSmoke	src/modules/graphic/ssggraph/grsmoke.h	/^class ssgVtxTableSmoke : public ssgVtxTable$/;"	c
ssgaCube	src/windows/include/plib/ssgaShapes.h	/^class ssgaCube : public ssgaShape$/;"	c
ssgaCylinder	src/windows/include/plib/ssgaShapes.h	/^class ssgaCylinder : public ssgaShape$/;"	c
ssgaFire	src/windows/include/plib/ssgaFire.h	/^class ssgaFire : public ssgaParticleSystem$/;"	c
ssgaLensFlare	src/windows/include/plib/ssgaLensFlare.h	/^class ssgaLensFlare : public ssgaShape$/;"	c
ssgaParticle	src/windows/include/plib/ssgaParticleSystem.h	/^  ssgaParticle ()$/;"	f	class:ssgaParticle
ssgaParticle	src/windows/include/plib/ssgaParticleSystem.h	/^class ssgaParticle$/;"	c
ssgaParticleCreateFunc	src/windows/include/plib/ssgaParticleSystem.h	/^typedef void (* ssgaParticleCreateFunc) ( ssgaParticleSystem *ps,$/;"	t
ssgaParticleDeleteFunc	src/windows/include/plib/ssgaParticleSystem.h	/^typedef void (* ssgaParticleDeleteFunc) ( ssgaParticleSystem *ps,$/;"	t
ssgaParticleSystem	src/windows/include/plib/ssgaParticleSystem.h	/^class ssgaParticleSystem : public ssgVtxTable$/;"	c
ssgaParticleUpdateFunc	src/windows/include/plib/ssgaParticleSystem.h	/^typedef void (* ssgaParticleUpdateFunc) ( float deltaTime,$/;"	t
ssgaPatch	src/windows/include/plib/ssgaShapes.h	/^class ssgaPatch : public ssgaShape$/;"	c
ssgaShape	src/windows/include/plib/ssgaShapes.h	/^class ssgaShape : public ssgBranch$/;"	c
ssgaSphere	src/windows/include/plib/ssgaShapes.h	/^class ssgaSphere : public ssgaShape$/;"	c
ssgaTeapot	src/windows/include/plib/ssgaShapes.h	/^class ssgaTeapot : public ssgaShape$/;"	c
ssgaTypeCube	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeCube    () { return _SSGA_TYPE_CUBE     | ssgaTypeShape ();}$/;"	f
ssgaTypeCylinder	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeCylinder() { return _SSGA_TYPE_CYLINDER | ssgaTypeShape ();}$/;"	f
ssgaTypeLensFlare	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeLensFlare ()$/;"	f
ssgaTypeParticleSystem	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeParticleSystem ()$/;"	f
ssgaTypePatch	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypePatch   () { return _SSGA_TYPE_PATCH    | ssgaTypeShape ();}$/;"	f
ssgaTypeShape	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeShape   () { return _SSGA_TYPE_SHAPE    | ssgTypeBranch ();}$/;"	f
ssgaTypeSphere	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeSphere  () { return _SSGA_TYPE_SPHERE   | ssgaTypeShape ();}$/;"	f
ssgaTypeTeapot	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeTeapot  () { return _SSGA_TYPE_TEAPOT   | ssgaTypeShape ();}$/;"	f
ssgaTypeWaveSystem	src/windows/include/plib/ssgAux.h	/^inline int ssgaTypeWaveSystem ()$/;"	f
ssgaWSDepthCallback	src/windows/include/plib/ssgaWaveSystem.h	/^typedef float (* ssgaWSDepthCallback ) ( float x, float y ) ;$/;"	t
ssgaWaveSystem	src/windows/include/plib/ssgaWaveSystem.h	/^class ssgaWaveSystem : public ssgaShape$/;"	c
ssgaWaveTrain	src/windows/include/plib/ssgaWaveSystem.h	/^  ssgaWaveTrain ()$/;"	f	class:ssgaWaveTrain
ssgaWaveTrain	src/windows/include/plib/ssgaWaveSystem.h	/^class ssgaWaveTrain$/;"	c
ssggraph	src/modules/graphic/ssggraph/ssggraph.cpp	/^ssggraph(tModInfo *modInfo)$/;"	f
sstring	src/drivers/human/human.cpp	/^static char	sstring[1024];$/;"	v	file:
standalone	src/libs/txml/xmlparse.c	/^  int standalone;$/;"	m	struct:__anon81	file:
start	src/libs/racescreens/miscscreens.cpp	/^    int		start;$/;"	m	struct:__anon39	file:
start	src/libs/racescreens/results.cpp	/^    int		start;$/;"	m	struct:__anon38	file:
start	src/libs/txml/gennmtab.c	/^  int start;$/;"	m	struct:range	file:
start	src/libs/txml/gennmtab/gennmtab.c	/^  int start;$/;"	m	struct:range	file:
start	src/libs/txml/xmlparse.c	/^  XML_Char *start;$/;"	m	struct:__anon77	file:
start	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::start()$/;"	f	class:OpenalTorcsSound
start	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::start()$/;"	f	class:PlibTorcsSound
start	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned int  *start ;$/;"	m	class:ssgSGIHeader
start	src/tools/trackgen/track.cpp	/^    int			start;$/;"	m	struct:dispElt	file:
start	src/windows/include/plib/sl.h	/^  virtual void start ()$/;"	f	class:slPlayer
start	src/windows/include/plib/sl.h	/^  void start ()$/;"	f	class:slSamplePlayer
start	src/windows/include/plib/ssg.h	/^  int   start ;$/;"	m	class:ssgTimedSelector
start	src/windows/include/plib/ul.h	/^  double start ;$/;"	m	class:ulClock
start	src/windows/include/ul.h	/^  double start ;$/;"	m	class:ulClock
startElement	src/libs/txml/xml.cpp	/^startElement(void *userData, const char *name, const char **atts)$/;"	f	file:
startElementHandler	src/libs/txml/xmlparse.c	/^  XML_StartElementHandler startElementHandler;$/;"	m	struct:__anon82	file:
startElementHandler	src/libs/txml/xmlparse.c	261;"	d	file:
startMonitoring	export/include/telemetry.h	/^    tftlmStartMonitoring	startMonitoring;	\/* Start monitoring *\/$/;"	m	struct:__anon215
startMonitoring	src/interfaces/telemetry.h	/^    tftlmStartMonitoring	startMonitoring;	\/* Start monitoring *\/$/;"	m	struct:__anon170
startPitTime	export/include/raceman.h	/^    double	startPitTime;$/;"	m	struct:__anon208
startPitTime	src/interfaces/raceman.h	/^    double	startPitTime;$/;"	m	struct:__anon167
startProfile	src/libs/tgf/profiler.cpp	/^void Profiler::startProfile(const char * name) {$/;"	f	class:Profiler
startRank	export/include/car.h	/^    int		startRank;		\/**< Car's starting position *\/$/;"	m	struct:__anon197
startRank	src/interfaces/car.h	/^    int		startRank;		\/**< Car's starting position *\/$/;"	m	struct:__anon157
startScr	src/libs/racescreens/miscscreens.cpp	/^    void	*startScr;$/;"	m	struct:__anon39	file:
startWidth	export/include/track.h	/^    tdble startWidth;		\/**< Width of the beginning of the segment *\/$/;"	m	struct:trackSeg
startWidth	src/interfaces/track.h	/^    tdble startWidth;		\/**< Width of the beginning of the segment *\/$/;"	m	struct:trackSeg
start_size	src/windows/include/plib/ssgaFire.h	/^  float start_size   ;$/;"	m	class:ssgaFire
start_time	src/windows/include/plib/ssg.h	/^  double  start_time ;$/;"	m	class:ssgTimedSelector
startid	src/drivers/inferno/pathfinder.h	/^		int startid;		\/\/ Id of first pit segment.$/;"	m	class:PathSegPit
startid	src/drivers/lliaw/pathfinder.h	/^		int startid;		\/\/ Id of first pit segment.$/;"	m	class:PathSegPit
startid	src/drivers/tita/pathfinder.h	/^		int startid;		\/\/ Id of first pit segment.$/;"	m	class:PathSegPit
startmode	src/drivers/berniw/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	src/drivers/berniw2/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	src/drivers/berniw3/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	src/drivers/inferno/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	src/drivers/lliaw/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
startmode	src/drivers/tita/mycar.h	/^		bool startmode;$/;"	m	class:MyCar
statGC	export/include/car.h	/^    t3Dd	statGC;			\/**< Static pos of GC (should be the origin of car axis) *\/$/;"	m	struct:__anon197
statGC	src/interfaces/car.h	/^    t3Dd	statGC;			\/**< Static pos of GC (should be the origin of car axis) *\/$/;"	m	struct:__anon157
statGC	src/modules/simu/simuv2/carstruct.h	/^    t3Dd	statGC;		\/* static pos of GC *\/$/;"	m	struct:__anon18
state	export/include/car.h	/^    int		state;		\/**< wheel state *\/$/;"	m	struct:__anon200
state	export/include/car.h	/^    int		state;	    	\/**< state of the car.$/;"	m	struct:__anon199
state	export/include/raceman.h	/^    int			state;$/;"	m	struct:__anon206
state	export/include/raceman.h	/^    int			state;$/;"	m	struct:__anon209
state	export/include/raceman.h	/^    int		state;$/;"	m	struct:RmMovieCapture
state	src/drivers/bt/opponent.h	/^		int state;			\/\/ State variable to characterize the relation to the opponent, e. g. opponent is behind.$/;"	m	class:Opponent
state	src/drivers/damned/opponent.h	/^		int state;			\/\/ State variable to characterize the relation to the opponent, e. g. opponent is behind.$/;"	m	class:Opponent
state	src/drivers/human/human.cpp	/^	int state;$/;"	m	struct:__anon146	file:
state	src/drivers/olethros/opponent.h	/^		int state;			\/\/\/< State variable to characterize the relation to the opponent, e. g. opponent is behind.$/;"	m	class:olethros::Opponent
state	src/drivers/sparkle/opponent.h	/^		int state;$/;"	m	class:Opponent
state	src/interfaces/car.h	/^    int		state;		\/**< wheel state *\/$/;"	m	struct:__anon160
state	src/interfaces/car.h	/^    int		state;	    	\/**< state of the car.$/;"	m	struct:__anon159
state	src/interfaces/raceman.h	/^    int			state;$/;"	m	struct:__anon165
state	src/interfaces/raceman.h	/^    int			state;$/;"	m	struct:__anon168
state	src/interfaces/raceman.h	/^    int		state;$/;"	m	struct:RmMovieCapture
state	src/libs/tgf/params.cpp	/^    int			state;$/;"	m	struct:parmOutput	file:
state	src/libs/tgfclient/gui.h	/^    int			state;$/;"	m	struct:__anon65
state	src/libs/tgfclient/gui.h	/^    int		state;		\/* enable \/ disable *\/$/;"	m	struct:GfuiObject
state	src/libs/tgfclient/gui.h	/^    unsigned int	state;$/;"	m	struct:__anon61
state	src/libs/tgfclient/gui.h	/^    unsigned int	state;$/;"	m	struct:__anon62
state	src/modules/graphic/ssggraph/grskidmarks.h	/^	int			*state;$/;"	m	struct:__anon2
state	src/modules/graphic/ssggraph/grutil.cpp	/^    grManagedState *state;$/;"	m	struct:stlist	file:
state	src/modules/simu/simuv2/susp.h	/^    int    state;        \/* indicate the state of the suspension *\/$/;"	m	struct:Suspension
state	src/modules/simu/simuv2/transmission.h	/^    int		state;$/;"	m	struct:__anon27
state	src/modules/simu/simuv2/wheel.h	/^    int     	state;     	\/* wheel state *\/$/;"	m	struct:__anon21
state	src/modules/telemetry/telemetry.cpp	/^    int		state;$/;"	m	struct:Tlm	file:
state	src/tools/trackgen/easymesh.cpp	/^    int state;            \/* is it (D)one, (A)ctive or (W)aiting *\/$/;"	m	struct:ele	file:
state	src/windows/include/plib/ssg.h	/^  ssgState *state ;$/;"	m	class:ssgLeaf
state	src/windows/include/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
state1	src/modules/graphic/ssggraph/grvtxtable.h	/^  grMultiTexState *state1 ;$/;"	m	class:grVtxTable
state2	src/modules/graphic/ssggraph/grvtxtable.h	/^  grMultiTexState *state2 ;$/;"	m	class:grVtxTable
state3	src/modules/graphic/ssggraph/grvtxtable.h	/^  grMultiTexState *state3 ;$/;"	m	class:grVtxTable
stateList	src/modules/graphic/ssggraph/grutil.cpp	/^static stlist * stateList = NULL;$/;"	v	file:
stateOverridden	src/windows/include/plib/ssg.h	/^  int  stateOverridden    () { return ovState != NULL ; }$/;"	f	class:ssgContext
statelist	src/windows/include/plib/ssg.h	/^  ssgSimpleState **statelist ;$/;"	m	class:ssgStateSelector
staticPos	src/modules/simu/simuv2/aero.h	/^    t3Dd	staticPos;$/;"	m	struct:__anon14
staticPos	src/modules/simu/simuv2/wheel.h	/^    tPosd	staticPos;	\/* pos relative to the GC (z is suspension travel at rest) *\/$/;"	m	struct:__anon21
static_pool	src/modules/graphic/ssggraph/TorcsSound.h	/^	bool static_pool;	\/\/\/< dynamic or static source assignment?$/;"	m	class:OpenalTorcsSound
status	src/windows/include/plib/sl.h	/^  slSampleStatus status          ;$/;"	m	class:slPlayer
steer	export/include/car.h	/^    tdble	steer;	    \/**< Steer command [-1.0, 1.0]  *\/$/;"	m	struct:__anon202
steer	src/interfaces/car.h	/^    tdble	steer;	    \/**< Steer command [-1.0, 1.0]  *\/$/;"	m	struct:__anon162
steer	src/modules/simu/simuv2/carstruct.h	/^    tSteer		steer;$/;"	m	struct:__anon18
steer	src/modules/simu/simuv2/steer.h	/^    tdble	steer;		\/* current steer value *\/$/;"	m	struct:__anon25
steer	src/modules/simu/simuv2/wheel.h	/^    tdble	steer;$/;"	m	struct:__anon21
steerLock	export/include/car.h	/^    tdble	steerLock;		\/**< Steer lock angle *\/$/;"	m	struct:__anon197
steerLock	src/interfaces/car.h	/^    tdble	steerLock;		\/**< Steer lock angle *\/$/;"	m	struct:__anon157
steerLock	src/modules/simu/simuv2/steer.h	/^    tdble	steerLock;	\/* in rad *\/$/;"	m	struct:__anon25
steerMult	src/drivers/inferno2/inferno2.cpp	/^static tdble steerMult[10] = {2.0f};$/;"	v	file:
step	src/drivers/olethros/TrackData.h	/^    float step;$/;"	m	class:TrackData
step0_max_life	src/modules/graphic/ssggraph/grsmoke.h	/^  double step0_max_life;$/;"	m	class:ssgVtxTableSmoke
step1_max_life	src/modules/graphic/ssggraph/grsmoke.h	/^  double step1_max_life;$/;"	m	class:ssgVtxTableSmoke
step2_max_life	src/modules/graphic/ssggraph/grsmoke.h	/^  double step2_max_life;$/;"	m	class:ssgVtxTableSmoke
stepInterpolate	src/drivers/berniw/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	src/drivers/berniw2/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	src/drivers/berniw3/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	src/drivers/inferno/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	src/drivers/lliaw/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stepInterpolate	src/drivers/tita/pathfinder.cpp	/^void Pathfinder::stepInterpolate(int iMin, int iMax, int Step)$/;"	f	class:Pathfinder
stereo	src/windows/include/plib/sl.h	/^  int    stereo ;$/;"	m	class:slSample
stereo	src/windows/include/plib/sl.h	/^  int stereo ;$/;"	m	class:slDSP
stiffness	src/windows/include/plib/sg.h	/^  float stiffness  ;$/;"	m	class:sgSpringDamper
stkProfiles	export/include/tgf.h	/^  std::vector<ProfileInstance *> stkProfiles;$/;"	m	class:Profiler
stkProfiles	src/libs/tgf/tgf.h	/^  std::vector<ProfileInstance *> stkProfiles;$/;"	m	class:Profiler
stlist	src/modules/graphic/ssggraph/grutil.cpp	/^typedef struct stlist$/;"	s	file:
stlist	src/modules/graphic/ssggraph/grutil.cpp	/^} stlist;$/;"	t	typeref:struct:stlist	file:
stop	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::stop()$/;"	f	class:OpenalTorcsSound
stop	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::stop()$/;"	f	class:PlibTorcsSound
stop	src/windows/include/plib/sl.h	/^  virtual void stop ()$/;"	f	class:slPlayer
stop	src/windows/include/plib/sl.h	/^  void stop ()$/;"	f	class:slSamplePlayer
stopActiveProfiles	src/libs/tgf/profiler.cpp	/^void Profiler::stopActiveProfiles() {$/;"	f	class:Profiler
stopMonitoring	export/include/telemetry.h	/^    tftlmStopMonitoring		stopMonitoring;		\/* Stop monitoring *\/$/;"	m	struct:__anon215
stopMonitoring	src/interfaces/telemetry.h	/^    tftlmStopMonitoring		stopMonitoring;		\/* Stop monitoring *\/$/;"	m	struct:__anon170
stopProfile	src/libs/tgf/profiler.cpp	/^void Profiler::stopProfile() {$/;"	f	class:Profiler
stopType	export/include/car.h	/^    int			stopType;$/;"	m	struct:__anon203
stopType	src/interfaces/car.h	/^    int			stopType;$/;"	m	struct:__anon163
store	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::store (void)$/;"	f	class:cGrCarCamMirror
storeAttributeValue	src/libs/txml/xmlparse.c	/^storeAttributeValue(XML_Parser parser, const ENCODING *enc, int isCdata,$/;"	f	file:
storeAtts	src/libs/txml/xmlparse.c	/^static enum XML_Error storeAtts(XML_Parser parser, const ENCODING *enc,$/;"	f	file:
storeEntityValue	src/libs/txml/xmlparse.c	/^enum XML_Error storeEntityValue(XML_Parser parser,$/;"	f	file:
strBaseName	src/libs/learning/string_utils.cpp	/^char *strBaseName(char *filename) {$/;"	f
strConcat	src/libs/learning/string_utils.cpp	/^char *strConcat(int n, ...)$/;"	f
strRemoveSuffix	src/libs/learning/string_utils.cpp	/^char *strRemoveSuffix(char *filename, char c)$/;"	f
straight2d	export/include/tmath/linalg_t.h	/^typedef straight2t<double> straight2d;$/;"	t
straight2d	src/libs/math/linalg_t.h	/^typedef straight2t<double> straight2d;$/;"	t
straight2f	export/include/tmath/linalg_t.h	/^typedef straight2t<float> straight2f;$/;"	t
straight2f	src/libs/math/linalg_t.h	/^typedef straight2t<float> straight2f;$/;"	t
straight2t	export/include/tmath/straight2_t.h	/^		straight2t() {}$/;"	f	class:straight2t
straight2t	export/include/tmath/straight2_t.h	/^		straight2t(T x, T y, T dx, T dy)$/;"	f	class:straight2t
straight2t	export/include/tmath/straight2_t.h	/^		straight2t(const v2t<T> &anchor, const v2t<T> &dir)$/;"	f	class:straight2t
straight2t	export/include/tmath/straight2_t.h	/^template<class T> class straight2t {$/;"	c
straight2t	src/libs/math/straight2_t.h	/^		straight2t() {}$/;"	f	class:straight2t
straight2t	src/libs/math/straight2_t.h	/^		straight2t(T x, T y, T dx, T dy)$/;"	f	class:straight2t
straight2t	src/libs/math/straight2_t.h	/^		straight2t(const v2t<T> &anchor, const v2t<T> &dir)$/;"	f	class:straight2t
straight2t	src/libs/math/straight2_t.h	/^template<class T> class straight2t {$/;"	c
strategy	src/drivers/bt/driver.h	/^		AbstractStrategy *strategy;		\/\/ Pit stop strategy.$/;"	m	class:Driver
strategy	src/drivers/damned/driver.h	/^		AbstractStrategy *strategy;		\/\/ Pit stop strategy.$/;"	m	class:Driver
strategy	src/drivers/olethros/driver.h	/^	AbstractStrategy *strategy;		\/\/\/< Pit stop strategy.$/;"	m	class:olethros::Driver
strcasecmp	src/windows/osspec.h	41;"	d
strdup	export/include/tgf.h	164;"	d
strdup	src/libs/tgf/tgf.h	164;"	d
streqci	src/libs/txml/xmltok.c	/^int streqci(const char *s1, const char *s2)$/;"	f	file:
stricmp	src/tools/accc/accc.h	173;"	d
string	export/include/learning/string_utils.h	/^     char* string; \/\/\/<This is the string$/;"	m	struct:StringBuffer_
string	src/libs/learning/string_utils.h	/^     char* string; \/\/\/<This is the string$/;"	m	struct:StringBuffer_
string_copy	src/libs/learning/string_utils.cpp	/^char* string_copy (char* c)$/;"	f
stripes	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgIndexArray      *stripes;$/;"	m	class:grVtxTable
stripifyOb	src/tools/accc/ac3dload.cpp	/^void stripifyOb(ob_t * object,int writeit)$/;"	f
striplist	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgIndexArray    *striplist=NULL;$/;"	v	file:
strips	src/modules/graphic/ssggraph/grskidmarks.h	/^  tgrSkidStrip	strips[4]; \/* the strips of the four wheels*\/$/;"	m	struct:__anon3
strncasecmp	src/windows/osspec.h	40;"	d
strndup	export/include/portability.h	/^static char *strndup(const char *str, int len)$/;"	f
strndup	src/libs/portability/portability.h	/^static char *strndup(const char *str, int len)$/;"	f
strnicmp	src/tools/accc/accc.h	174;"	d
stuck	src/drivers/bt/driver.h	/^		int stuck;$/;"	m	class:Driver
stuck	src/drivers/damned/driver.h	/^		int stuck;$/;"	m	class:Driver
stuck	src/drivers/olethros/driver.h	/^	int stuck;$/;"	m	class:olethros::Driver
stuck	src/drivers/sparkle/driver.h	/^		int stuck;$/;"	m	class:Driver
style	export/include/track.h	/^    int			style;	\/**< Barrier style *\/$/;"	m	struct:trackBarrier
style	export/include/track.h	/^    int style;			\/**< Border and barrier segments style:$/;"	m	struct:trackSeg
style	src/interfaces/track.h	/^    int			style;	\/**< Barrier style *\/$/;"	m	struct:trackBarrier
style	src/interfaces/track.h	/^    int style;			\/**< Border and barrier segments style:$/;"	m	struct:trackSeg
stype	src/modules/graphic/ssggraph/grsmoke.h	/^  int stype;$/;"	m	class:ssgVtxTableSmoke
sub	export/include/xml.h	/^    struct xmlElement	*sub;		\/* next element at the next level (nested) *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
sub	src/libs/txml/xml.h	/^    struct xmlElement	*sub;		\/* next element at the next level (nested) *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
subForce	src/windows/include/plib/sg.h	/^  void subForce    ( sgVec3 f ) { sgSubVec3    ( force, f ) ; }$/;"	f	class:sgParticle
subSectionList	src/libs/tgf/params.cpp	/^    struct sectionHead			subSectionList;	\/**< List of sub-sections (linked by linkSection)*\/$/;"	m	struct:section	typeref:struct:section::sectionHead	file:
subTime	export/include/tgf.h	/^  double subTime;$/;"	m	class:ProfileInstance
subTime	src/libs/tgf/tgf.h	/^  double subTime;$/;"	m	class:ProfileInstance
sub_row	src/windows/include/png.h	/^   png_bytep sub_row;         \/* buffer to save "sub" row when filtering *\/$/;"	m	struct:png_struct_def
succ	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  Endpoint *succ;$/;"	m	class:Endpoint
sumx	src/tools/trackgen/easymesh.h	/^    double sumx, sumy;$/;"	m	struct:nod
sumy	src/tools/trackgen/easymesh.h	/^    double sumx, sumy;$/;"	m	struct:nod
sun	src/modules/graphic/ssggraph/grscene.cpp	/^ssgTransform *sun = NULL ;$/;"	v
sup	export/include/3D/Point.h	/^inline Point sup(const Point& p1, const Point& p2) { $/;"	f
sup	src/modules/simu/simuv2/SOLID-2.0/include/3D/Point.h	/^inline Point sup(const Point& p1, const Point& p2) { $/;"	f
support	src/modules/simu/simuv2/SOLID-2.0/src/Box.cpp	/^Point Box::support(const Vector& v) const {$/;"	f	class:Box
support	src/modules/simu/simuv2/SOLID-2.0/src/Cone.cpp	/^Point Cone::support(const Vector& v) const {$/;"	f	class:Cone
support	src/modules/simu/simuv2/SOLID-2.0/src/Cylinder.cpp	/^Point Cylinder::support(const Vector& v) const {$/;"	f	class:Cylinder
support	src/modules/simu/simuv2/SOLID-2.0/src/Polygon.cpp	/^Point Polygon::support(const Vector& v) const {$/;"	f	class:Polygon
support	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Point Polyhedron::support(const Vector& v) const {$/;"	f	class:Polyhedron
support	src/modules/simu/simuv2/SOLID-2.0/src/Simplex.cpp	/^Point Simplex::support(const Vector& v) const {$/;"	f	class:Simplex
support	src/modules/simu/simuv2/SOLID-2.0/src/Sphere.cpp	/^Point Sphere::support(const Vector& v) const {$/;"	f	class:Sphere
surf	src/tools/trackgen/easymesh.cpp	/^struct surf$/;"	s	file:
surfType	src/tools/trackgen/track.cpp	/^    int			surfType;$/;"	m	struct:dispElt	file:
surf_tag	src/modules/graphic/ssggraph/grloadac.cpp	/^static Tag surf_tag [] =$/;"	v	file:
surface	export/include/track.h	/^    tTrackSurface	*surface; \/**< Barrier surface *\/$/;"	m	struct:trackBarrier
surface	export/include/track.h	/^    tTrackSurface	*surface; \/**< Segment surface *\/$/;"	m	struct:trackSeg
surface	src/interfaces/track.h	/^    tTrackSurface	*surface; \/**< Barrier surface *\/$/;"	m	struct:trackBarrier
surface	src/interfaces/track.h	/^    tTrackSurface	*surface; \/**< Segment surface *\/$/;"	m	struct:trackSeg
surface_tags	src/modules/graphic/ssggraph/grloadac.cpp	/^static Tag surface_tags [] =$/;"	v	file:
surfaces	export/include/track.h	/^    tTrackSurface *surfaces;	\/**< Segment surface list *\/$/;"	m	struct:__anon186
surfaces	src/interfaces/track.h	/^    tTrackSurface *surfaces;	\/**< Segment surface list *\/$/;"	m	struct:__anon153
surfaces	src/tools/trackgen/easymesh.cpp	/^    struct surf	*surfaces;$/;"	m	struct:group	typeref:struct:group::surf	file:
surfrefs	src/tools/accc/accc.h	/^  int      * surfrefs;$/;"	m	struct:ob
susp	src/modules/simu/simuv2/wheel.h	/^    tSuspension  susp;		\/* associated suspension *\/$/;"	m	struct:__anon21
swap32	src/libs/tgfclient/guifont.cpp	/^void swap32(unsigned int *p, unsigned int size)$/;"	f
swapBase	src/modules/simu/simuv2/SOLID-2.0/src/Complex.h	/^  void swapBase() { swap(base, prev_base); } $/;"	f	class:Complex
swap_side	src/tools/trackgen/easymesh.cpp	/^void swap_side(int s)$/;"	f
switchMirror	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::switchMirror(void)$/;"	f	class:cGrScreen
sx	src/modules/graphic/ssggraph/grcar.h	/^    tdble               sx;$/;"	m	struct:__anon5
sx	src/modules/simu/simuv2/wheel.h	/^    tdble	sx;		\/* longitudinal slip value *\/$/;"	m	struct:__anon21
sy	src/modules/graphic/ssggraph/grcar.h	/^    tdble               sy;$/;"	m	struct:__anon5
syntaxError	src/libs/txml/xmlrole.c	/^int syntaxError(PROLOG_STATE *state)$/;"	f	file:
systemId	src/libs/txml/xmlparse.c	/^  const XML_Char *systemId;$/;"	m	struct:__anon76	file:
t	export/include/learning/ANN.h	/^	real* t; \/\/\/< targets$/;"	m	struct:ANN_
t	src/libs/learning/ANN.h	/^	real* t; \/\/\/< targets$/;"	m	struct:ANN_
t	src/tools/nfs2ac/mainnfs2ac.cpp	/^    int t;$/;"	m	struct:__anon32	file:
t	src/tools/texmapper/ssgSaveAC.cpp	/^  sgVec2 t [ 3 ] ;$/;"	m	struct:saveTriangle	file:
t	src/tools/trackgen/objects.cpp	/^  sgVec2 t[3];$/;"	m	struct:saveTriangle	file:
t0	src/windows/include/plib/ssgaLensFlare.h	/^  ssgTexCoordArray *t0 ;$/;"	m	class:ssgaLensFlare
t0tab	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t0tab = NULL;$/;"	v	file:
t1tab	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t1tab = NULL;$/;"	v	file:
t2tab	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t2tab = NULL;$/;"	v	file:
t3Dd	export/include/tgf.h	/^} t3Dd;$/;"	t	typeref:struct:__anon189
t3Dd	src/libs/tgf/tgf.h	/^} t3Dd;$/;"	t	typeref:struct:__anon47
t3Df	export/include/tgf.h	/^} t3Df;$/;"	t	typeref:struct:__anon188
t3Df	src/libs/tgf/tgf.h	/^} t3Df;$/;"	t	typeref:struct:__anon46
t3Di	export/include/tgf.h	/^} t3Di;$/;"	t	typeref:struct:__anon190
t3Di	src/libs/tgf/tgf.h	/^} t3Di;$/;"	t	typeref:struct:__anon48
t3tab	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2           *t3tab = NULL;$/;"	v	file:
tAero	src/modules/simu/simuv2/aero.h	/^} tAero;$/;"	t	typeref:struct:__anon13
tAxle	src/modules/simu/simuv2/axle.h	/^} tAxle;$/;"	t	typeref:struct:__anon22
tBrake	src/modules/simu/simuv2/brake.h	/^} tBrake;$/;"	t	typeref:struct:__anon23
tBrakeSyst	src/modules/simu/simuv2/brake.h	/^} tBrakeSyst;$/;"	t	typeref:struct:__anon24
tCar	src/modules/simu/simuv2/carstruct.h	/^} tCar;$/;"	t	typeref:struct:__anon18
tCarCtrl	export/include/car.h	/^} tCarCtrl;$/;"	t	typeref:struct:__anon202
tCarCtrl	src/interfaces/car.h	/^} tCarCtrl;$/;"	t	typeref:struct:__anon162
tCarElt	export/include/car.h	/^} tCarElt;$/;"	t	typeref:struct:CarElt
tCarElt	src/interfaces/car.h	/^} tCarElt;$/;"	t	typeref:struct:CarElt
tCarInfo	src/libs/confscreens/driverconfig.cpp	/^typedef struct tCarInfo$/;"	s	file:
tCarInfo	src/libs/confscreens/driverconfig.cpp	/^} tCarInfo;$/;"	t	typeref:struct:tCarInfo	file:
tCarPenalty	export/include/car.h	/^} tCarPenalty;$/;"	t	typeref:struct:CarPenalty
tCarPenalty	src/interfaces/car.h	/^} tCarPenalty;$/;"	t	typeref:struct:CarPenalty
tCarPitCmd	export/include/car.h	/^} tCarPitCmd;$/;"	t	typeref:struct:__anon203
tCarPitCmd	src/interfaces/car.h	/^} tCarPitCmd;$/;"	t	typeref:struct:__anon163
tCarRaceInfo	export/include/car.h	/^} tCarRaceInfo;$/;"	t	typeref:struct:__anon198
tCarRaceInfo	src/interfaces/car.h	/^} tCarRaceInfo;$/;"	t	typeref:struct:__anon158
tCatInfo	src/libs/confscreens/driverconfig.cpp	/^typedef struct tCatInfo$/;"	s	file:
tCatInfo	src/libs/confscreens/driverconfig.cpp	/^} tCatInfo;$/;"	t	typeref:struct:tCatInfo	file:
tChannel	src/modules/telemetry/telemetry.cpp	/^} tChannel;$/;"	t	typeref:struct:Channel	file:
tClutch	src/modules/simu/simuv2/transmission.h	/^} tClutch;$/;"	t	typeref:struct:__anon27
tCmdInfo	export/include/controlconfig.h	/^} tCmdInfo;$/;"	t	typeref:struct:__anon205
tCmdInfo	src/libs/confscreens/controlconfig.h	/^} tCmdInfo;$/;"	t	typeref:struct:__anon44
tCollisionState	export/include/car.h	/^} tCollisionState;$/;"	t	typeref:struct:tCollisionState_
tCollisionState	src/interfaces/car.h	/^} tCollisionState;$/;"	t	typeref:struct:tCollisionState_
tCollisionState_	export/include/car.h	/^typedef struct tCollisionState_ {$/;"	s
tCollisionState_	src/interfaces/car.h	/^typedef struct tCollisionState_ {$/;"	s
tColor	src/tools/nfs2ac/mainnfs2ac.cpp	/^} tColor;$/;"	t	typeref:struct:__anon32	file:
tControlCmd	src/drivers/human/pref.h	/^} tControlCmd;$/;"	t	typeref:struct:__anon144
tCtrl	src/drivers/human/pref.cpp	/^} tCtrl;$/;"	t	typeref:struct:__anon145	file:
tCtrlJoyInfo	export/include/tgfclient.h	/^} tCtrlJoyInfo;$/;"	t	typeref:struct:__anon213
tCtrlJoyInfo	src/libs/tgfclient/tgfclient.h	/^} tCtrlJoyInfo;$/;"	t	typeref:struct:__anon57
tCtrlMouseInfo	export/include/tgfclient.h	/^} tCtrlMouseInfo;$/;"	t	typeref:struct:__anon214
tCtrlMouseInfo	src/libs/tgfclient/tgfclient.h	/^} tCtrlMouseInfo;$/;"	t	typeref:struct:__anon58
tCtrlRef	export/include/tgfclient.h	/^} tCtrlRef;$/;"	t	typeref:struct:__anon212
tCtrlRef	src/libs/tgfclient/tgfclient.h	/^} tCtrlRef;$/;"	t	typeref:struct:__anon56
tDamper	src/modules/simu/simuv2/susp.h	/^} tDamper;$/;"	t	typeref:struct:__anon16
tDamperDef	src/modules/simu/simuv2/susp.h	/^} tDamperDef;$/;"	t	typeref:struct:__anon15
tDifferential	src/modules/simu/simuv2/differential.h	/^} tDifferential;$/;"	t	typeref:struct:__anon20
tDispElt	src/tools/trackgen/track.cpp	/^} tDispElt;$/;"	t	typeref:struct:dispElt	file:
tDrvElt	src/libs/racescreens/driverselect.cpp	/^} tDrvElt;$/;"	t	typeref:struct:DrvElt	file:
tDynAxis	src/modules/simu/simuv2/differential.h	/^} tDynAxis;$/;"	t	typeref:struct:__anon19
tDynPt	export/include/tgf.h	/^} tDynPt;$/;"	t	typeref:struct:__anon192
tDynPt	src/libs/tgf/tgf.h	/^} tDynPt;$/;"	t	typeref:struct:__anon50
tEngine	src/modules/simu/simuv2/engine.h	/^} tEngine;$/;"	t	typeref:struct:__anon12
tEngineCurve	src/modules/simu/simuv2/engine.h	/^} tEngineCurve;$/;"	t	typeref:struct:__anon11
tEngineCurveElem	src/modules/simu/simuv2/engine.h	/^} tEngineCurveElem;$/;"	t	typeref:struct:__anon10
tFList	export/include/tgf.h	/^} tFList;$/;"	t	typeref:struct:FList
tFList	src/libs/tgf/tgf.h	/^} tFList;$/;"	t	typeref:struct:FList
tFace	src/tools/texmapper/maintexmapper.cpp	/^} tFace;$/;"	t	typeref:struct:Face	file:
tForces	export/include/tgf.h	/^} tForces;$/;"	t	typeref:struct:__anon193
tForces	src/libs/tgf/tgf.h	/^} tForces;$/;"	t	typeref:struct:__anon51
tGearbox	src/modules/simu/simuv2/transmission.h	/^} tGearbox;$/;"	t	typeref:struct:__anon26
tGfOs	export/include/os.h	/^} tGfOs;$/;"	t	typeref:struct:__anon171
tGfOs	src/libs/tgf/os.h	/^} tGfOs;$/;"	t	typeref:struct:__anon45
tGfuiButton	src/libs/tgfclient/gui.h	/^} tGfuiButton;$/;"	t	typeref:struct:__anon61
tGfuiEditbox	src/libs/tgfclient/gui.h	/^} tGfuiEditbox;$/;"	t	typeref:struct:__anon65
tGfuiGrButton	src/libs/tgfclient/gui.h	/^} tGfuiGrButton;$/;"	t	typeref:struct:__anon62
tGfuiImage	src/libs/tgfclient/gui.h	/^} tGfuiImage;$/;"	t	typeref:struct:__anon66
tGfuiKey	src/libs/tgfclient/gui.h	/^} tGfuiKey;$/;"	t	typeref:struct:GfuiKey
tGfuiLabel	src/libs/tgfclient/gui.h	/^} tGfuiLabel;$/;"	t	typeref:struct:__anon60
tGfuiListElement	src/libs/tgfclient/gui.h	/^} tGfuiListElement;$/;"	t	typeref:struct:GfuiListElement
tGfuiObject	src/libs/tgfclient/gui.h	/^} tGfuiObject;$/;"	t	typeref:struct:GfuiObject
tGfuiScreen	src/libs/tgfclient/gui.h	/^} tGfuiScreen;$/;"	t	typeref:struct:__anon68
tGfuiScrollBar	src/libs/tgfclient/gui.h	/^} tGfuiScrollBar;$/;"	t	typeref:struct:__anon64
tGfuiScrollList	src/libs/tgfclient/gui.h	/^} tGfuiScrollList;$/;"	t	typeref:struct:__anon63
tGraphicItf	export/include/graphic.h	/^} tGraphicItf;$/;"	t	typeref:struct:__anon211
tGraphicItf	src/interfaces/graphic.h	/^} tGraphicItf;$/;"	t	typeref:struct:__anon169
tGroup	src/tools/trackgen/track.cpp	/^} tGroup;$/;"	t	typeref:struct:group	file:
tHashElem	src/libs/tgf/hash.cpp	/^} tHashElem;$/;"	t	typeref:struct:HashElem	file:
tHashHeader	src/libs/tgf/hash.cpp	/^} tHashHeader;$/;"	t	typeref:struct:HashHeader	file:
tHumanContext	src/drivers/human/human.h	/^} tHumanContext;$/;"	t	typeref:struct:HumanContext
tInfo	src/libs/confscreens/driverconfig.cpp	/^typedef struct tInfo$/;"	s	file:
tInfo	src/libs/confscreens/driverconfig.cpp	/^} tInfo;$/;"	t	typeref:struct:tInfo	file:
tInitCar	export/include/car.h	/^} tInitCar;$/;"	t	typeref:struct:__anon197
tInitCar	src/interfaces/car.h	/^} tInitCar;$/;"	t	typeref:struct:__anon157
tKeyInfo	src/drivers/human/human.cpp	/^} tKeyInfo;$/;"	t	typeref:struct:__anon146	file:
tLine	src/tools/trackgen/relief.cpp	/^} tLine;$/;"	t	typeref:struct:Line	file:
tMainMod	src/libs/raceengineclient/raceinit.cpp	/^} tMainMod;$/;"	t	typeref:struct:__anon86	file:
tMeanVal	export/include/tgf.h	/^} tMeanVal;$/;"	t	typeref:struct:__anon194
tMeanVal	src/libs/tgf/tgf.h	/^} tMeanVal;$/;"	t	typeref:struct:__anon52
tMnuCallbackInfo	src/libs/tgfclient/guimenu.h	/^} tMnuCallbackInfo;$/;"	t	typeref:struct:__anon53
tModInfo	export/include/tgf.h	/^} tModInfo;$/;"	t	typeref:struct:ModInfo
tModInfo	src/libs/tgf/tgf.h	/^} tModInfo;$/;"	t	typeref:struct:ModInfo
tModList	export/include/tgf.h	/^} tModList;$/;"	t	typeref:struct:ModList
tModList	src/libs/tgf/tgf.h	/^} tModList;$/;"	t	typeref:struct:ModList
tMouseInfo	export/include/tgfclient.h	/^} tMouseInfo;$/;"	t	typeref:struct:MouseInfo
tMouseInfo	src/libs/tgfclient/tgfclient.h	/^} tMouseInfo;$/;"	t	typeref:struct:MouseInfo
tOCar	src/drivers/berniw/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon119
tOCar	src/drivers/berniw2/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon94
tOCar	src/drivers/berniw3/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon110
tOCar	src/drivers/inferno/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon136
tOCar	src/drivers/lliaw/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon129
tOCar	src/drivers/tita/pathfinder.h	/^} tOCar;$/;"	t	typeref:struct:__anon102
tOverlapTimer	src/drivers/berniw/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon120
tOverlapTimer	src/drivers/berniw2/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon95
tOverlapTimer	src/drivers/berniw3/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon111
tOverlapTimer	src/drivers/inferno/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon137
tOverlapTimer	src/drivers/lliaw/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon130
tOverlapTimer	src/drivers/tita/pathfinder.h	/^} tOverlapTimer;$/;"	t	typeref:struct:__anon103
tParam	src/drivers/berniw/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon118
tParam	src/drivers/berniw2/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon93
tParam	src/drivers/berniw3/pathfinder.h	/^} tParam;$/;"	t	typeref:struct:__anon109
tPlayerInfo	src/libs/confscreens/driverconfig.cpp	/^} tPlayerInfo;$/;"	t	typeref:struct:PlayerInfo	file:
tPosd	export/include/tgf.h	/^} tPosd;$/;"	t	typeref:struct:__anon191
tPosd	src/libs/tgf/tgf.h	/^} tPosd;$/;"	t	typeref:struct:__anon49
tPrivCar	export/include/car.h	/^} tPrivCar;$/;"	t	typeref:struct:__anon201
tPrivCar	src/interfaces/car.h	/^} tPrivCar;$/;"	t	typeref:struct:__anon161
tPublicCar	export/include/car.h	/^} tPublicCar;$/;"	t	typeref:struct:__anon199
tPublicCar	src/interfaces/car.h	/^} tPublicCar;$/;"	t	typeref:struct:__anon159
tRaceAdmInfo	export/include/raceman.h	/^} tRaceAdmInfo;$/;"	t	typeref:struct:__anon206
tRaceAdmInfo	src/interfaces/raceman.h	/^} tRaceAdmInfo;$/;"	t	typeref:struct:__anon165
tRaceCall	src/libs/racescreens/results.cpp	/^} tRaceCall;$/;"	t	typeref:struct:__anon38	file:
tRaceEngineInfo	export/include/raceman.h	/^} tRaceEngineInfo;$/;"	t	typeref:struct:__anon209
tRaceEngineInfo	src/interfaces/raceman.h	/^} tRaceEngineInfo;$/;"	t	typeref:struct:__anon168
tRaceModIft	export/include/raceman.h	/^} tRaceModIft;$/;"	t	typeref:struct:__anon207
tRaceModIft	src/interfaces/raceman.h	/^} tRaceModIft;$/;"	t	typeref:struct:__anon166
tReCarInfo	export/include/raceman.h	/^} tReCarInfo;$/;"	t	typeref:struct:__anon208
tReCarInfo	src/interfaces/raceman.h	/^} tReCarInfo;$/;"	t	typeref:struct:__anon167
tReStandings	src/libs/raceengineclient/raceresults.cpp	/^} tReStandings;$/;"	t	typeref:struct:__anon85	file:
tRmCarRules	export/include/raceman.h	/^} tRmCarRules;$/;"	t	typeref:struct:RmCarRules
tRmCarRules	src/interfaces/raceman.h	/^} tRmCarRules;$/;"	t	typeref:struct:RmCarRules
tRmDrvSelect	export/include/confscreens.h	/^} tRmDrvSelect;$/;"	t	typeref:struct:__anon177
tRmDrvSelect	export/include/racescreens.h	/^} tRmDrvSelect;$/;"	t	typeref:struct:__anon173
tRmDrvSelect	src/libs/confscreens/confscreens.h	/^} tRmDrvSelect;$/;"	t	typeref:struct:__anon41
tRmDrvSelect	src/libs/racescreens/racescreens.h	/^} tRmDrvSelect;$/;"	t	typeref:struct:__anon35
tRmFileSelect	export/include/confscreens.h	/^} tRmFileSelect;$/;"	t	typeref:struct:__anon179
tRmFileSelect	export/include/racescreens.h	/^} tRmFileSelect;$/;"	t	typeref:struct:__anon175
tRmFileSelect	src/libs/confscreens/confscreens.h	/^} tRmFileSelect;$/;"	t	typeref:struct:__anon43
tRmFileSelect	src/libs/racescreens/racescreens.h	/^} tRmFileSelect;$/;"	t	typeref:struct:__anon37
tRmInfo	export/include/raceman.h	/^} tRmInfo;$/;"	t	typeref:struct:RmInfo
tRmInfo	src/interfaces/raceman.h	/^} tRmInfo;$/;"	t	typeref:struct:RmInfo
tRmMovieCapture	export/include/raceman.h	/^} tRmMovieCapture;$/;"	t	typeref:struct:RmMovieCapture
tRmMovieCapture	src/interfaces/raceman.h	/^} tRmMovieCapture;$/;"	t	typeref:struct:RmMovieCapture
tRmRaceParam	export/include/confscreens.h	/^} tRmRaceParam;$/;"	t	typeref:struct:__anon178
tRmRaceParam	export/include/racescreens.h	/^} tRmRaceParam;$/;"	t	typeref:struct:__anon174
tRmRaceParam	src/libs/confscreens/confscreens.h	/^} tRmRaceParam;$/;"	t	typeref:struct:__anon42
tRmRaceParam	src/libs/racescreens/racescreens.h	/^} tRmRaceParam;$/;"	t	typeref:struct:__anon36
tRmTrackSelect	export/include/confscreens.h	/^} tRmTrackSelect;$/;"	t	typeref:struct:__anon176
tRmTrackSelect	export/include/racescreens.h	/^} tRmTrackSelect;$/;"	t	typeref:struct:__anon172
tRmTrackSelect	src/libs/confscreens/confscreens.h	/^} tRmTrackSelect;$/;"	t	typeref:struct:__anon40
tRmTrackSelect	src/libs/racescreens/racescreens.h	/^} tRmTrackSelect;$/;"	t	typeref:struct:__anon34
tRoadCam	export/include/track.h	/^} tRoadCam;$/;"	t	typeref:struct:RoadCam
tRoadCam	src/interfaces/track.h	/^} tRoadCam;$/;"	t	typeref:struct:RoadCam
tRobotItf	export/include/robot.h	/^} tRobotItf;$/;"	t	typeref:struct:RobotItf
tRobotItf	src/interfaces/robot.h	/^} tRobotItf;$/;"	t	typeref:struct:RobotItf
tRow	src/tools/texmapper/maintexmapper.cpp	/^} tRow;$/;"	t	typeref:struct:__anon30	file:
tSchedView	src/modules/graphic/ssggraph/grcam.cpp	/^} tSchedView;$/;"	t	typeref:struct:__anon6	file:
tScrollBarInfo	export/include/tgfclient.h	/^} tScrollBarInfo;$/;"	t	typeref:struct:ScrollBarInfo
tScrollBarInfo	src/libs/tgfclient/tgfclient.h	/^} tScrollBarInfo;$/;"	t	typeref:struct:ScrollBarInfo
tSegExt	export/include/track.h	/^} tSegExt;$/;"	t	typeref:struct:SegExt
tSegExt	src/interfaces/track.h	/^} tSegExt;$/;"	t	typeref:struct:SegExt
tSimItf	export/include/simu.h	/^} tSimItf;$/;"	t	typeref:struct:__anon204
tSimItf	src/interfaces/simu.h	/^} tSimItf;$/;"	t	typeref:struct:__anon164
tSituation	export/include/raceman.h	/^} tSituation;$/;"	t	typeref:struct:Situation
tSituation	src/interfaces/raceman.h	/^} tSituation;$/;"	t	typeref:struct:Situation
tSpring	src/modules/simu/simuv2/susp.h	/^} tSpring;$/;"	t	typeref:struct:__anon17
tStartRaceCall	src/libs/racescreens/miscscreens.cpp	/^} tStartRaceCall;$/;"	t	typeref:struct:__anon39	file:
tSteer	src/modules/simu/simuv2/steer.h	/^} tSteer;$/;"	t	typeref:struct:__anon25
tSuspension	src/modules/simu/simuv2/susp.h	/^} tSuspension;$/;"	t	typeref:struct:Suspension
tTelemItf	export/include/telemetry.h	/^} tTelemItf;$/;"	t	typeref:struct:__anon215
tTelemItf	src/interfaces/telemetry.h	/^} tTelemItf;$/;"	t	typeref:struct:__anon170
tTexElt	src/tools/trackgen/track.cpp	/^} tTexElt;$/;"	t	typeref:struct:texElt	file:
tTlm	src/modules/telemetry/telemetry.cpp	/^} tTlm;$/;"	t	typeref:struct:Tlm	file:
tTrack	export/include/track.h	/^} tTrack;$/;"	t	typeref:struct:__anon186
tTrack	src/interfaces/track.h	/^} tTrack;$/;"	t	typeref:struct:__anon153
tTrackBarrier	export/include/track.h	/^} tTrackBarrier;$/;"	t	typeref:struct:trackBarrier
tTrackBarrier	src/interfaces/track.h	/^} tTrackBarrier;$/;"	t	typeref:struct:trackBarrier
tTrackGraphicInfo	export/include/track.h	/^} tTrackGraphicInfo;$/;"	t	typeref:struct:__anon185
tTrackGraphicInfo	src/interfaces/track.h	/^} tTrackGraphicInfo;$/;"	t	typeref:struct:__anon152
tTrackItf	export/include/track.h	/^} tTrackItf;$/;"	t	typeref:struct:__anon187
tTrackItf	src/interfaces/track.h	/^} tTrackItf;$/;"	t	typeref:struct:__anon154
tTrackOwnPit	export/include/track.h	/^} tTrackOwnPit;$/;"	t	typeref:struct:TrackOwnPit
tTrackOwnPit	src/interfaces/track.h	/^} tTrackOwnPit;$/;"	t	typeref:struct:TrackOwnPit
tTrackPitInfo	export/include/track.h	/^} tTrackPitInfo;$/;"	t	typeref:struct:__anon183
tTrackPitInfo	src/interfaces/track.h	/^} tTrackPitInfo;$/;"	t	typeref:struct:__anon150
tTrackSeg	export/include/track.h	/^} tTrackSeg;$/;"	t	typeref:struct:trackSeg
tTrackSeg	src/interfaces/track.h	/^} tTrackSeg;$/;"	t	typeref:struct:trackSeg
tTrackSurface	export/include/track.h	/^} tTrackSurface;$/;"	t	typeref:struct:trackSurface
tTrackSurface	src/interfaces/track.h	/^} tTrackSurface;$/;"	t	typeref:struct:trackSurface
tTransmission	src/modules/simu/simuv2/transmission.h	/^} tTransmission;$/;"	t	typeref:struct:__anon28
tTriangle	src/tools/nfs2ac/mainnfs2ac.cpp	/^} tTriangle;$/;"	t	typeref:struct:__anon33	file:
tTrkLocPos	export/include/track.h	/^} tTrkLocPos;$/;"	t	typeref:struct:__anon182
tTrkLocPos	src/interfaces/track.h	/^} tTrkLocPos;$/;"	t	typeref:struct:__anon149
tTurnMarksInfo	export/include/track.h	/^} tTurnMarksInfo;$/;"	t	typeref:struct:__anon184
tTurnMarksInfo	src/interfaces/track.h	/^} tTurnMarksInfo;$/;"	t	typeref:struct:__anon151
tVector	src/tools/nfs2ac/mainnfs2ac.cpp	/^} tVector;$/;"	t	typeref:struct:__anon31	file:
tVisualAttributes	export/include/car.h	/^} tVisualAttributes;$/;"	t	typeref:struct:__anon196
tVisualAttributes	src/interfaces/car.h	/^} tVisualAttributes;$/;"	t	typeref:struct:__anon156
tWheel	src/modules/simu/simuv2/wheel.h	/^} tWheel;$/;"	t	typeref:struct:__anon21
tWheelSpec	export/include/car.h	/^} tWheelSpec;$/;"	t	typeref:struct:__anon195
tWheelSpec	src/interfaces/car.h	/^} tWheelSpec;$/;"	t	typeref:struct:__anon155
tWheelState	export/include/car.h	/^} tWheelState;$/;"	t	typeref:struct:__anon200
tWheelState	src/interfaces/car.h	/^} tWheelState;$/;"	t	typeref:struct:__anon160
tWing	src/modules/simu/simuv2/aero.h	/^} tWing;$/;"	t	typeref:struct:__anon14
t_index	src/windows/include/plib/ssg.h	/^  sgVec2 *texcoords ; int num_texcoords ; unsigned short *t_index ;$/;"	m	class:ssgVTable
t_xmax	src/modules/graphic/ssggraph/grloadac.cpp	/^static double t_xmax;$/;"	v	file:
t_xmin	src/modules/graphic/ssggraph/grloadac.cpp	/^static double t_xmin;$/;"	v	file:
t_ymax	src/modules/graphic/ssggraph/grloadac.cpp	/^static double t_ymax;$/;"	v	file:
t_ymin	src/modules/graphic/ssggraph/grloadac.cpp	/^static double t_ymin;$/;"	v	file:
table	src/modules/simu/simuv2/SOLID-2.0/src/AlgoTable.h	/^  Function table[NUM_TYPES][NUM_TYPES];$/;"	m	class:AlgoTable
tableSize	src/windows/include/plib/ssgaFire.h	/^  int    tableSize   ;$/;"	m	class:ssgaFire
tablen	src/modules/graphic/ssggraph/grloadsgi.h	/^		int           tablen ;$/;"	m	class:ssgSGIHeader
taccel	src/drivers/olethros/learn.h	/^		float taccel; \/\/\/< acceleration$/;"	m	class:olethros::SegLearn::Averages
tag	src/libs/txml/xmlparse.c	/^typedef struct tag {$/;"	s	file:
tag	src/modules/simu/simuv2/SOLID-2.0/src/BBoxTree.h	/^  TagType tag;$/;"	m	class:BBoxNode
tagLevel	src/libs/txml/xmlparse.c	/^  int tagLevel;$/;"	m	struct:__anon82	file:
tagLevel	src/libs/txml/xmlparse.c	285;"	d	file:
tagSFG_Display	src/libs/tgfclient/fg_gm.cpp	/^struct tagSFG_Display$/;"	s	file:
tagSFG_State	src/libs/tgfclient/fg_gm.cpp	/^struct tagSFG_State$/;"	s	file:
tagSFG_XYUse	src/libs/tgfclient/fg_gm.cpp	/^struct tagSFG_XYUse$/;"	s	file:
tagStack	src/libs/txml/xmlparse.c	/^  TAG *tagStack;$/;"	m	struct:__anon82	file:
tagStack	src/libs/txml/xmlparse.c	302;"	d	file:
tail	export/include/learning/List.h	/^	LISTITEM* tail; \/\/\/< tail item$/;"	m	struct:List
tail	src/libs/learning/List.h	/^	LISTITEM* tail; \/\/\/< tail item$/;"	m	struct:List
tail	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^  Endpoint tail;$/;"	m	class:EndpointList	file:
tail	src/windows/include/plib/ul.h	/^  ulListNode *tail ;$/;"	m	class:ulLinkedList
tail	src/windows/include/ul.h	/^  ulListNode *tail ;$/;"	m	class:ulLinkedList
tand	src/drivers/olethros/learn.h	/^	float tand(float x)$/;"	f	class:olethros::SegLearn
tand_der	src/drivers/olethros/learn.h	/^	float tand_der(float x)$/;"	f	class:olethros::SegLearn
tank	export/include/car.h	/^    tdble	tank;			\/**< Fuel tank capa *\/$/;"	m	struct:__anon197
tank	src/interfaces/car.h	/^    tdble	tank;			\/**< Fuel tank capa *\/$/;"	m	struct:__anon157
tank	src/modules/simu/simuv2/carstruct.h	/^    tdble	tank;		\/* fuel tank capa *\/$/;"	m	struct:__anon18
tcoord	src/tools/accc/accc.h	/^typedef struct tcoord {$/;"	s
tcoord_t	src/tools/accc/accc.h	/^} tcoord_t;$/;"	t	typeref:struct:tcoord
tcount	src/tools/texmapper/ssgSaveAC.cpp	/^static int tcount ;$/;"	v	file:
tdError	export/include/learning/policy.h	/^	real tdError; \/\/\/< temporal difference error$/;"	m	class:DiscretePolicy
tdError	src/libs/learning/policy.h	/^	real tdError; \/\/\/< temporal difference error$/;"	m	class:DiscretePolicy
tdble	export/include/tgf.h	/^typedef float tdble;$/;"	t
tdble	src/libs/tgf/tgf.h	/^typedef float tdble;$/;"	t
tdot	export/include/3D/Matrix.h	/^  Scalar tdot(int i, const Vector& v) const {$/;"	f	class:Matrix
tdot	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^  Scalar tdot(int i, const Vector& v) const {$/;"	f	class:Matrix
teammate	src/drivers/bt/opponent.h	/^		bool teammate;				\/\/ Is this opponent a team mate of me (configure it in setup XML)?$/;"	m	class:Opponent
teammate	src/drivers/damned/opponent.h	/^		bool teammate;				\/\/ Is this opponent a team mate of me (configure it in setup XML)?$/;"	m	class:Opponent
teammate	src/drivers/inferno/pathfinder.h	/^		tCarElt* teammate;				\/\/ Teammate, TODO: support multiple teammates.$/;"	m	class:Pathfinder
teammate	src/drivers/lliaw/pathfinder.h	/^		tCarElt* teammate;				\/\/ Teammate, TODO: support multiple teammates.$/;"	m	class:Pathfinder
teammate	src/drivers/tita/pathfinder.h	/^		tCarElt* teammate;				\/\/ Teammate, TODO: support multiple teammates.$/;"	m	class:Pathfinder
teamname	export/include/car.h	/^	char	teamname[MAX_NAME_LEN];	\/**< Team name *\/$/;"	m	struct:__anon197
teamname	src/interfaces/car.h	/^	char	teamname[MAX_NAME_LEN];	\/**< Team name *\/$/;"	m	struct:__anon157
telemInit	src/modules/telemetry/telemetryitf.cpp	/^telemInit(int index, void *pt)$/;"	f	file:
telemetry	src/modules/telemetry/telemetryitf.cpp	/^telemetry(tModInfo *modInfo)$/;"	f
temp	export/include/learning/policy.h	/^	real temp; \/\/\/< scratch$/;"	m	class:DiscretePolicy
temp	src/libs/learning/policy.h	/^	real temp; \/\/\/< scratch$/;"	m	class:DiscretePolicy
temp	src/modules/simu/simuv2/brake.h	/^    tdble	temp;$/;"	m	struct:__anon23
temp2Pool	src/libs/txml/xmlparse.c	/^  STRING_POOL temp2Pool;$/;"	m	struct:__anon82	file:
temp2Pool	src/libs/txml/xmlparse.c	306;"	d	file:
tempPool	src/libs/txml/xmlparse.c	/^  STRING_POOL tempPool;$/;"	m	struct:__anon82	file:
tempPool	src/libs/txml/xmlparse.c	305;"	d	file:
temp_in	export/include/car.h	/^	tdble   temp_in, temp_mid, temp_out;$/;"	m	struct:__anon200
temp_in	src/interfaces/car.h	/^	tdble   temp_in, temp_mid, temp_out;$/;"	m	struct:__anon160
temp_mid	export/include/car.h	/^	tdble   temp_in, temp_mid, temp_out;$/;"	m	struct:__anon200
temp_mid	src/interfaces/car.h	/^	tdble   temp_in, temp_mid, temp_out;$/;"	m	struct:__anon160
temp_out	export/include/car.h	/^	tdble   temp_in, temp_mid, temp_out;$/;"	m	struct:__anon200
temp_out	src/interfaces/car.h	/^	tdble   temp_in, temp_mid, temp_out;$/;"	m	struct:__anon160
terrainSplitOb	src/tools/accc/ac3dload.cpp	/^int terrainSplitOb (ob_t **object)$/;"	f
teu	src/modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tev	src/modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tex	src/modules/graphic/ssggraph/grcam.h	/^    GLuint	tex;			\/* texture *\/$/;"	m	class:cGrCarCamMirror
tex	src/modules/graphic/ssggraph/grskidmarks.h	/^  ssgTexCoordArray  **tex; $/;"	m	struct:__anon2
tex	src/tools/accc/ac3dload.cpp	/^char tex[256][256];$/;"	v
texCoord	src/windows/include/plib/ssg.h	/^  sgVec2 texCoord ;$/;"	m	struct:ssgInterleavedArrayElement
texElt	src/tools/trackgen/track.cpp	/^typedef struct texElt$/;"	s	file:
texScale	src/tools/texmapper/maintexmapper.cpp	/^    float	texScale;$/;"	m	struct:Face	file:
tex_state	src/modules/graphic/ssggraph/grskidmarks.h	/^  float         tex_state;$/;"	m	struct:__anon2
texcoords	src/windows/include/plib/ssg.h	/^  sgVec2 *texcoords ; int num_texcoords ; unsigned short *t_index ;$/;"	m	class:ssgVTable
texcoords	src/windows/include/plib/ssg.h	/^  ssgTexCoordArray *texcoords ;$/;"	m	class:ssgVtxTable
texcoords	src/windows/include/plib/ssgaWaveSystem.h	/^  sgVec2 *texcoords ;$/;"	m	class:ssgaWaveSystem
texcoords1	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgTexCoordArray *texcoords1 ;$/;"	m	class:grVtxTable
texcoords2	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgTexCoordArray *texcoords2 ;$/;"	m	class:grVtxTable
texcoords3	src/modules/graphic/ssggraph/grvtxtable.h	/^  ssgTexCoordArray *texcoords3 ;$/;"	m	class:grVtxTable
texid	src/tools/trackgen/track.cpp	/^    unsigned int	texid;$/;"	m	struct:texElt	file:
texnum	src/tools/accc/ac3dload.cpp	/^int texnum=0;$/;"	v
texoff	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2 texoff ;$/;"	v	file:
texrep	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec2 texrep ;$/;"	v	file:
texrep_x	src/tools/accc/accc.h	/^  double  texrep_x;$/;"	m	struct:ob
texrep_y	src/tools/accc/accc.h	/^  double  texrep_y;$/;"	m	struct:ob
text	src/libs/tgfclient/gui.h	/^    char	*text;		\/* text *\/$/;"	m	struct:__anon60
text	src/windows/include/png.h	/^   png_charp text;         \/* comment, may be an empty string (ie "")$/;"	m	struct:png_text_struct
text	src/windows/include/png.h	/^   png_textp text; \/* array of comments read\/to write *\/$/;"	m	struct:png_info_struct
textLen	src/libs/txml/xmlparse.c	/^  int textLen;$/;"	m	struct:__anon76	file:
textPtr	src/libs/txml/xmlparse.c	/^  const XML_Char *textPtr;$/;"	m	struct:__anon76	file:
text_length	src/windows/include/png.h	/^   png_size_t text_length; \/* length of the text string *\/$/;"	m	struct:png_text_struct
textarray	src/tools/accc/accc.h	/^  double    * textarray;$/;"	m	struct:ob
textarray1	src/tools/accc/accc.h	/^  double    * textarray1;$/;"	m	struct:ob
textarray2	src/tools/accc/accc.h	/^  double    * textarray2;$/;"	m	struct:ob
textarray3	src/tools/accc/accc.h	/^  double    * textarray3;$/;"	m	struct:ob
texture	src/libs/tgfclient/gui.h	/^    GLuint		texture;$/;"	m	struct:__anon66
texture	src/modules/graphic/ssggraph/grcar.h	/^    ssgSimpleState	*texture;$/;"	m	struct:__anon4
texture	src/tools/accc/accc.h	/^  char * texture;$/;"	m	struct:ob
texture	src/tools/trackgen/track.cpp	/^    tTexElt		*texture;$/;"	m	struct:dispElt	file:
texture	src/windows/include/plib/ssg.h	/^  ssgTexture* texture ;$/;"	m	class:ssgSimpleState
texture1	src/tools/accc/accc.h	/^  char * texture1;$/;"	m	struct:ob
texture2	src/tools/accc/accc.h	/^  char * texture2;$/;"	m	struct:ob
texture3	src/tools/accc/accc.h	/^  char * texture3;$/;"	m	struct:ob
textureCompressOptionList	src/libs/confscreens/openglconfig.cpp	/^static char *textureCompressOptionList[] = {GR_ATT_TEXTURECOMPRESSION_DISABLED, GR_ATT_TEXTURECOMPRESSION_ENABLED};$/;"	v	file:
textureMe	src/windows/include/plib/ssg.h	/^  void textureMe(float uP, float vP) $/;"	f	class:ssgVtxTable
textureOverridden	src/windows/include/plib/ssg.h	/^  int  textureOverridden  () { return ovTexture  ; }$/;"	f	class:ssgContext
textureSizeOptionList	src/libs/confscreens/openglconfig.cpp	/^static int textureSizeOptionList[] = {8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384};$/;"	v	file:
texture_dir	src/windows/include/plib/ssg.h	/^  char* texture_dir ;$/;"	m	class:ssgLoaderOptions
tfDirGetList	export/include/os.h	/^typedef tFList *(*tfDirGetList)(char *);$/;"	t
tfDirGetList	src/libs/tgf/os.h	/^typedef tFList *(*tfDirGetList)(char *);$/;"	t
tfDirGetListFiltered	export/include/os.h	/^typedef tFList *(*tfDirGetListFiltered)(char *, char *);$/;"	t
tfDirGetListFiltered	src/libs/tgf/os.h	/^typedef tFList *(*tfDirGetListFiltered)(char *, char *);$/;"	t
tfDirfreeUserData	export/include/tgf.h	/^typedef void (*tfDirfreeUserData)(void*);	\/**< Function to call for releasing the user data associated with file entry *\/$/;"	t
tfDirfreeUserData	src/libs/tgf/tgf.h	/^typedef void (*tfDirfreeUserData)(void*);	\/**< Function to call for releasing the user data associated with file entry *\/$/;"	t
tfGraphicBendCar	export/include/graphic.h	/^typedef void (*tfGraphicBendCar) (int \/*index*\/, sgVec3 \/*poc*\/, sgVec3 \/*force*\/, int \/*cnt*\/);$/;"	t
tfGraphicBendCar	src/interfaces/graphic.h	/^typedef void (*tfGraphicBendCar) (int \/*index*\/, sgVec3 \/*poc*\/, sgVec3 \/*force*\/, int \/*cnt*\/);$/;"	t
tfGraphicInitCars	export/include/graphic.h	/^typedef int (*tfGraphicInitCars)(struct Situation *); $/;"	t
tfGraphicInitCars	src/interfaces/graphic.h	/^typedef int (*tfGraphicInitCars)(struct Situation *); $/;"	t
tfGraphicInitTrack	export/include/graphic.h	/^typedef int (*tfGraphicInitTrack)(tTrack *);$/;"	t
tfGraphicInitTrack	src/interfaces/graphic.h	/^typedef int (*tfGraphicInitTrack)(tTrack *);$/;"	t
tfGraphicInitView	export/include/graphic.h	/^typedef int (*tfGraphicInitView)(int \/*x*\/, int \/*y*\/, int \/*width*\/, int \/*height*\/, int \/*flag*\/, void * \/*screen*\/);$/;"	t
tfGraphicInitView	src/interfaces/graphic.h	/^typedef int (*tfGraphicInitView)(int \/*x*\/, int \/*y*\/, int \/*width*\/, int \/*height*\/, int \/*flag*\/, void * \/*screen*\/);$/;"	t
tfGraphicRefresh	export/include/graphic.h	/^typedef int (*tfGraphicRefresh)(struct Situation *);$/;"	t
tfGraphicRefresh	src/interfaces/graphic.h	/^typedef int (*tfGraphicRefresh)(struct Situation *);$/;"	t
tfGraphicShutdwnCars	export/include/graphic.h	/^typedef void (*tfGraphicShutdwnCars)(void);$/;"	t
tfGraphicShutdwnCars	src/interfaces/graphic.h	/^typedef void (*tfGraphicShutdwnCars)(void);$/;"	t
tfGraphicShutdwnTrack	export/include/graphic.h	/^typedef void (*tfGraphicShutdwnTrack)(void);$/;"	t
tfGraphicShutdwnTrack	src/interfaces/graphic.h	/^typedef void (*tfGraphicShutdwnTrack)(void);$/;"	t
tfHashFree	export/include/tgf.h	/^typedef void (*tfHashFree)(void*);	\/**< Function to call for releasing the user data associated with hash table *\/$/;"	t
tfHashFree	src/libs/tgf/tgf.h	/^typedef void (*tfHashFree)(void*);	\/**< Function to call for releasing the user data associated with hash table *\/$/;"	t
tfModFreeInfoList	export/include/os.h	/^typedef int (*tfModFreeInfoList)(tModList **);$/;"	t
tfModFreeInfoList	src/libs/tgf/os.h	/^typedef int (*tfModFreeInfoList)(tModList **);$/;"	t
tfModGetInfo	export/include/os.h	/^typedef int (*tfModGetInfo)(unsigned int, char*, tModList **);$/;"	t
tfModGetInfo	src/libs/tgf/os.h	/^typedef int (*tfModGetInfo)(unsigned int, char*, tModList **);$/;"	t
tfModGetInfoDir	export/include/os.h	/^typedef int (*tfModGetInfoDir)(unsigned int, char*, int, tModList **);$/;"	t
tfModGetInfoDir	src/libs/tgf/os.h	/^typedef int (*tfModGetInfoDir)(unsigned int, char*, int, tModList **);$/;"	t
tfModInfo	export/include/tgf.h	/^typedef int (*tfModInfo)(tModInfo *);	\/* first function called in the module *\/$/;"	t
tfModInfo	src/libs/tgf/tgf.h	/^typedef int (*tfModInfo)(tModInfo *);	\/* first function called in the module *\/$/;"	t
tfModLoad	export/include/os.h	/^typedef int (*tfModLoad)(unsigned int, char*, tModList **);$/;"	t
tfModLoad	src/libs/tgf/os.h	/^typedef int (*tfModLoad)(unsigned int, char*, tModList **);$/;"	t
tfModLoadDir	export/include/os.h	/^typedef int (*tfModLoadDir)(unsigned int, char*, tModList **);$/;"	t
tfModLoadDir	src/libs/tgf/os.h	/^typedef int (*tfModLoadDir)(unsigned int, char*, tModList **);$/;"	t
tfModPrivInit	export/include/tgf.h	/^typedef int (*tfModPrivInit)(int index, void *);$/;"	t
tfModPrivInit	src/libs/tgf/tgf.h	/^typedef int (*tfModPrivInit)(int index, void *);$/;"	t
tfModShut	export/include/tgf.h	/^typedef int (*tfModShut)(void);	\/* last function called in the module *\/$/;"	t
tfModShut	src/libs/tgf/tgf.h	/^typedef int (*tfModShut)(void);	\/* last function called in the module *\/$/;"	t
tfModUnloadList	export/include/os.h	/^typedef int (*tfModUnloadList)(tModList **);$/;"	t
tfModUnloadList	src/libs/tgf/os.h	/^typedef int (*tfModUnloadList)(tModList **);$/;"	t
tfRbDrive	export/include/robot.h	/^typedef void (*tfRbDrive)   (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbDrive	src/interfaces/robot.h	/^typedef void (*tfRbDrive)   (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbEndRace	export/include/robot.h	/^typedef void (*tfRbEndRace) (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbEndRace	src/interfaces/robot.h	/^typedef void (*tfRbEndRace) (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbNewRace	export/include/robot.h	/^typedef void (*tfRbNewRace) (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbNewRace	src/interfaces/robot.h	/^typedef void (*tfRbNewRace) (int index, tCarElt *car, tSituation *s);$/;"	t
tfRbNewTrack	export/include/robot.h	/^typedef void (*tfRbNewTrack)(int index, tTrack *track, void *carHandle, void **myCarSettings, tSituation *s);$/;"	t
tfRbNewTrack	src/interfaces/robot.h	/^typedef void (*tfRbNewTrack)(int index, tTrack *track, void *carHandle, void **myCarSettings, tSituation *s);$/;"	t
tfRbPitCmd	export/include/robot.h	/^typedef int  (*tfRbPitCmd)  (int index, tCarElt* car, tSituation *s);$/;"	t
tfRbPitCmd	src/interfaces/robot.h	/^typedef int  (*tfRbPitCmd)  (int index, tCarElt* car, tSituation *s);$/;"	t
tfRbShutdown	export/include/robot.h	/^typedef void (*tfRbShutdown)(int index);$/;"	t
tfRbShutdown	src/interfaces/robot.h	/^typedef void (*tfRbShutdown)(int index);$/;"	t
tfRmRunState	export/include/raceman.h	/^typedef int (*tfRmRunState) (struct RmInfo *);$/;"	t
tfRmRunState	src/interfaces/raceman.h	/^typedef int (*tfRmRunState) (struct RmInfo *);$/;"	t
tfSelectFile	export/include/confscreens.h	/^typedef void (*tfSelectFile) (char *);$/;"	t
tfSelectFile	export/include/racescreens.h	/^typedef void (*tfSelectFile) (char *);$/;"	t
tfSelectFile	src/libs/confscreens/confscreens.h	/^typedef void (*tfSelectFile) (char *);$/;"	t
tfSelectFile	src/libs/racescreens/racescreens.h	/^typedef void (*tfSelectFile) (char *);$/;"	t
tfSimConfig	export/include/simu.h	/^typedef void (*tfSimConfig)(tCarElt*, struct RmInfo*);$/;"	t
tfSimConfig	src/interfaces/simu.h	/^typedef void (*tfSimConfig)(tCarElt*, struct RmInfo*);$/;"	t
tfSimInit	export/include/simu.h	/^typedef void (*tfSimInit)(int, tTrack*);$/;"	t
tfSimInit	src/interfaces/simu.h	/^typedef void (*tfSimInit)(int, tTrack*);$/;"	t
tfSimReConfig	export/include/simu.h	/^typedef void (*tfSimReConfig)(tCarElt*);$/;"	t
tfSimReConfig	src/interfaces/simu.h	/^typedef void (*tfSimReConfig)(tCarElt*);$/;"	t
tfSimShutdown	export/include/simu.h	/^typedef void (*tfSimShutdown)(void);$/;"	t
tfSimShutdown	src/interfaces/simu.h	/^typedef void (*tfSimShutdown)(void);$/;"	t
tfSimUpdate	export/include/simu.h	/^typedef void (*tfSimUpdate)(struct Situation*, double, int);$/;"	t
tfSimUpdate	src/interfaces/simu.h	/^typedef void (*tfSimUpdate)(struct Situation*, double, int);$/;"	t
tfTimeClock	export/include/os.h	/^typedef double (*tfTimeClock)(void);$/;"	t
tfTimeClock	src/libs/tgf/os.h	/^typedef double (*tfTimeClock)(void);$/;"	t
tfTrackBuild	export/include/track.h	/^typedef tTrack*(*tfTrackBuild)(char*);$/;"	t
tfTrackBuild	src/interfaces/track.h	/^typedef tTrack*(*tfTrackBuild)(char*);$/;"	t
tfTrackGlobal2Local	export/include/track.h	/^typedef void(*tfTrackGlobal2Local)(tTrackSeg* \/*seg*\/, tdble \/*X*\/, tdble \/*Y*\/, tTrkLocPos* \/*pos*\/, int \/*sides*\/);$/;"	t
tfTrackGlobal2Local	src/interfaces/track.h	/^typedef void(*tfTrackGlobal2Local)(tTrackSeg* \/*seg*\/, tdble \/*X*\/, tdble \/*Y*\/, tTrkLocPos* \/*pos*\/, int \/*sides*\/);$/;"	t
tfTrackHeightG	export/include/track.h	/^typedef tdble(*tfTrackHeightG)(tTrackSeg*, tdble, tdble);$/;"	t
tfTrackHeightG	src/interfaces/track.h	/^typedef tdble(*tfTrackHeightG)(tTrackSeg*, tdble, tdble);$/;"	t
tfTrackHeightL	export/include/track.h	/^typedef tdble(*tfTrackHeightL)(tTrkLocPos*);$/;"	t
tfTrackHeightL	src/interfaces/track.h	/^typedef tdble(*tfTrackHeightL)(tTrkLocPos*);$/;"	t
tfTrackLocal2Global	export/include/track.h	/^typedef void(*tfTrackLocal2Global)(tTrkLocPos*, tdble *, tdble *);$/;"	t
tfTrackLocal2Global	src/interfaces/track.h	/^typedef void(*tfTrackLocal2Global)(tTrkLocPos*, tdble *, tdble *);$/;"	t
tfTrackShutdown	export/include/track.h	/^typedef void(*tfTrackShutdown)(void);$/;"	t
tfTrackShutdown	src/interfaces/track.h	/^typedef void(*tfTrackShutdown)(void);$/;"	t
tfTrackSideNormal	export/include/track.h	/^typedef void(*tfTrackSideNormal)(tTrackSeg*, tdble, tdble, int, t3Dd*);$/;"	t
tfTrackSideNormal	src/interfaces/track.h	/^typedef void(*tfTrackSideNormal)(tTrackSeg*, tdble, tdble, int, t3Dd*);$/;"	t
tfTrackSurfaceNormal	export/include/track.h	/^typedef void(*tfTrackSurfaceNormal)(tTrkLocPos *, t3Dd*);$/;"	t
tfTrackSurfaceNormal	src/interfaces/track.h	/^typedef void(*tfTrackSurfaceNormal)(tTrkLocPos *, t3Dd*);$/;"	t
tftlmInit	export/include/telemetry.h	/^typedef void(*tftlmInit)(tdble \/* ymin *\/, tdble \/* ymax *\/);$/;"	t
tftlmInit	src/interfaces/telemetry.h	/^typedef void(*tftlmInit)(tdble \/* ymin *\/, tdble \/* ymax *\/);$/;"	t
tftlmNewChannel	export/include/telemetry.h	/^typedef void(*tftlmNewChannel)(const char * \/* name *\/, tdble * \/* var *\/, tdble \/* min *\/, tdble \/* max *\/);$/;"	t
tftlmNewChannel	src/interfaces/telemetry.h	/^typedef void(*tftlmNewChannel)(const char * \/* name *\/, tdble * \/* var *\/, tdble \/* min *\/, tdble \/* max *\/);$/;"	t
tftlmShutdown	export/include/telemetry.h	/^typedef void(*tftlmShutdown)(void);$/;"	t
tftlmShutdown	src/interfaces/telemetry.h	/^typedef void(*tftlmShutdown)(void);$/;"	t
tftlmStartMonitoring	export/include/telemetry.h	/^typedef void(*tftlmStartMonitoring)(const char * \/* filename *\/);$/;"	t
tftlmStartMonitoring	src/interfaces/telemetry.h	/^typedef void(*tftlmStartMonitoring)(const char * \/* filename *\/);$/;"	t
tftlmStopMonitoring	export/include/telemetry.h	/^typedef void(*tftlmStopMonitoring)(void);$/;"	t
tftlmStopMonitoring	src/interfaces/telemetry.h	/^typedef void(*tftlmStopMonitoring)(void);$/;"	t
tftlmUpdate	export/include/telemetry.h	/^typedef void(*tftlmUpdate)(double \/* time *\/);$/;"	t
tftlmUpdate	src/interfaces/telemetry.h	/^typedef void(*tftlmUpdate)(double \/* time *\/);$/;"	t
tfuiCallback	export/include/tgfclient.h	/^typedef void (*tfuiCallback)(void * \/* userdata *\/);$/;"	t
tfuiCallback	src/libs/tgfclient/tgfclient.h	/^typedef void (*tfuiCallback)(void * \/* userdata *\/);$/;"	t
tfuiKeyCallback	export/include/tgfclient.h	/^typedef int (*tfuiKeyCallback)(unsigned char key, int modifier, int state); \/**< return 1 to prevent normal key computing *\/$/;"	t
tfuiKeyCallback	src/libs/tgfclient/tgfclient.h	/^typedef int (*tfuiKeyCallback)(unsigned char key, int modifier, int state); \/**< return 1 to prevent normal key computing *\/$/;"	t
tfuiSBCallback	export/include/tgfclient.h	/^typedef void (*tfuiSBCallback)(tScrollBarInfo *);$/;"	t
tfuiSBCallback	src/libs/tgfclient/tgfclient.h	/^typedef void (*tfuiSBCallback)(tScrollBarInfo *);$/;"	t
tfuiSKeyCallback	export/include/tgfclient.h	/^typedef int (*tfuiSKeyCallback)(int key, int modifier, int state);  \/**< return 1 to prevent normal key computing *\/$/;"	t
tfuiSKeyCallback	src/libs/tgfclient/tgfclient.h	/^typedef int (*tfuiSKeyCallback)(int key, int modifier, int state);  \/**< return 1 to prevent normal key computing *\/$/;"	t
tgfKeyBinding	src/libs/tgfclient/control.cpp	/^} tgfKeyBinding;$/;"	t	typeref:struct:__anon59	file:
tgrCarInfo	src/modules/graphic/ssggraph/grcar.h	/^} tgrCarInfo;$/;"	t	typeref:struct:__anon5
tgrCarInstrument	src/modules/graphic/ssggraph/grcar.h	/^} tgrCarInstrument;$/;"	t	typeref:struct:__anon4
tgrCarlight	src/modules/graphic/ssggraph/grcarlight.h	/^}tgrCarlight;$/;"	t	typeref:struct:tgrCarlight_t
tgrCarlight_t	src/modules/graphic/ssggraph/grcarlight.h	/^typedef struct tgrCarlight_t$/;"	s
tgrSkidStrip	src/modules/graphic/ssggraph/grskidmarks.h	/^}tgrSkidStrip;$/;"	t	typeref:struct:__anon2
tgrSkidmarks	src/modules/graphic/ssggraph/grskidmarks.h	/^}tgrSkidmarks;$/;"	t	typeref:struct:__anon3
tgrSmoke	src/modules/graphic/ssggraph/grsmoke.h	/^}tgrSmoke;$/;"	t	typeref:struct:tgrSmoke_st
tgrSmokeManager	src/modules/graphic/ssggraph/grsmoke.h	/^}tgrSmokeManager;$/;"	t	typeref:struct:__anon1
tgrSmoke_st	src/modules/graphic/ssggraph/grsmoke.h	/^typedef struct tgrSmoke_st$/;"	s
th	src/modules/graphic/ssggraph/grcam.h	/^    int		tw, th;			\/* texture size *\/$/;"	m	class:cGrCarCamMirror
theCamList	src/modules/track/track.cpp	/^static tRoadCam *theCamList;$/;"	v	file:
theCarslight	src/modules/graphic/ssggraph/grcarlight.cpp	/^tgrCarlight * theCarslight = NULL;$/;"	v
theTrack	src/modules/track/track.cpp	/^static tTrack	*theTrack = NULL;$/;"	v	file:
thisCar	src/drivers/bt/cardata.h	/^		inline bool thisCar(tCarElt *car) { return (car == this->car); }$/;"	f	class:SingleCardata
thisCar	src/drivers/damned/cardata.h	/^		inline bool thisCar(tCarElt *car) { return (car == this->car); }$/;"	f	class:SingleCardata
thisCar	src/drivers/olethros/cardata.h	/^	inline bool thisCar(tCarElt *car) { return (car == this->car); }$/;"	f	class:olethros::SingleCardata
tickover	src/modules/simu/simuv2/engine.h	/^    tdble		tickover;$/;"	m	struct:__anon12
time	src/drivers/berniw/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon119
time	src/drivers/berniw/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon120
time	src/drivers/berniw2/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon94
time	src/drivers/berniw2/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon95
time	src/drivers/berniw3/pathfinder.h	/^	double time;			\/* estimate of time to catch up the car *\/$/;"	m	struct:__anon110
time	src/drivers/berniw3/pathfinder.h	/^	double time;			\/* how long is the opponent "in range" to overlap me *\/$/;"	m	struct:__anon111
time	src/drivers/inferno/pathfinder.h	/^	double time;			\/\/ estimate of time to catch up the car.$/;"	m	struct:__anon136
time	src/drivers/inferno/pathfinder.h	/^	double time;			\/\/ how long is the opponent "in range" to overlap me.$/;"	m	struct:__anon137
time	src/drivers/lliaw/pathfinder.h	/^	double time;			\/\/ estimate of time to catch up the car.$/;"	m	struct:__anon129
time	src/drivers/lliaw/pathfinder.h	/^	double time;			\/\/ how long is the opponent "in range" to overlap me.$/;"	m	struct:__anon130
time	src/drivers/tita/pathfinder.h	/^	double time;			\/\/ estimate of time to catch up the car.$/;"	m	struct:__anon102
time	src/drivers/tita/pathfinder.h	/^	double time;			\/\/ how long is the opponent "in range" to overlap me.$/;"	m	struct:__anon103
time	src/windows/include/plib/sl.h	/^  float        *time           ;$/;"	m	class:slEnvelope
timeBeforeNext	export/include/car.h	/^    double		timeBeforeNext;$/;"	m	struct:__anon198
timeBeforeNext	src/interfaces/car.h	/^    double		timeBeforeNext;$/;"	m	struct:__anon158
timeBehindLeader	export/include/car.h	/^    double		timeBehindLeader;$/;"	m	struct:__anon198
timeBehindLeader	src/interfaces/car.h	/^    double		timeBehindLeader;$/;"	m	struct:__anon158
timeBehindPrev	export/include/car.h	/^    double		timeBehindPrev;$/;"	m	struct:__anon198
timeBehindPrev	src/interfaces/car.h	/^    double		timeBehindPrev;$/;"	m	struct:__anon158
timeClock	export/include/os.h	/^    tfTimeClock			timeClock;$/;"	m	struct:__anon171
timeClock	src/libs/tgf/os.h	/^    tfTimeClock			timeClock;$/;"	m	struct:__anon45
timeFire	src/modules/graphic/ssggraph/grsmoke.cpp	/^double * timeFire = 0;$/;"	v
timeMult	export/include/raceman.h	/^    double		timeMult;$/;"	m	struct:__anon209
timeMult	src/interfaces/raceman.h	/^    double		timeMult;$/;"	m	struct:__anon168
timeSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^double * timeSmoke = 0;$/;"	v
timeStrip	src/modules/graphic/ssggraph/grskidmarks.h	/^  double		timeStrip;$/;"	m	struct:__anon2
timeToRelease	src/modules/simu/simuv2/transmission.h	/^    tdble	timeToRelease;	\/* remaining time before releasing the clutch pedal *\/$/;"	m	struct:__anon27
time_buffer	src/windows/include/png.h	/^   png_charp time_buffer;            \/* String to hold RFC 1123 time text *\/$/;"	m	struct:png_struct_def
time_mode	src/windows/include/plib/ssg.h	/^  ssgAnimTimeMode time_mode ;$/;"	m	class:ssgTimedSelector
time_since_accident	src/drivers/olethros/learn.h	/^	float time_since_accident;$/;"	m	class:olethros::SegLearn
time_since_left_turn	src/drivers/olethros/learn.h	/^	double time_since_left_turn;$/;"	m	class:olethros::SegLearn
time_since_right_turn	src/drivers/olethros/learn.h	/^	double time_since_right_turn;$/;"	m	class:olethros::SegLearn
time_to_live	src/windows/include/plib/ssgaParticleSystem.h	/^  float time_to_live ;$/;"	m	class:ssgaParticle
timer	src/modules/graphic/ssggraph/grcam.cpp	/^    int timer;$/;"	m	class:cGrCarCamRoadFly	file:
times	src/windows/include/plib/ssg.h	/^  float  *times      ;$/;"	m	class:ssgTimedSelector
tireHeight	export/include/car.h	/^    tdble	tireHeight;	\/**< Tire height  *\/$/;"	m	struct:__anon195
tireHeight	src/interfaces/car.h	/^    tdble	tireHeight;	\/**< Tire height  *\/$/;"	m	struct:__anon155
tireSpringRate	src/modules/simu/simuv2/wheel.h	/^    tdble	tireSpringRate;$/;"	m	struct:__anon21
tireWidth	export/include/car.h	/^    tdble	tireWidth;	\/**< Tire width *\/$/;"	m	struct:__anon195
tireWidth	src/interfaces/car.h	/^    tdble	tireWidth;	\/**< Tire width *\/$/;"	m	struct:__anon155
tita	src/drivers/tita/tita.cpp	/^extern "C" int tita(tModInfo *modInfo)$/;"	f
title	export/include/confscreens.h	/^    char		*title;$/;"	m	struct:__anon178
title	export/include/confscreens.h	/^    char		*title;$/;"	m	struct:__anon179
title	export/include/racescreens.h	/^    char		*title;$/;"	m	struct:__anon174
title	export/include/racescreens.h	/^    char		*title;$/;"	m	struct:__anon175
title	src/libs/confscreens/confscreens.h	/^    char		*title;$/;"	m	struct:__anon42
title	src/libs/confscreens/confscreens.h	/^    char		*title;$/;"	m	struct:__anon43
title	src/libs/racescreens/racescreens.h	/^    char		*title;$/;"	m	struct:__anon36
title	src/libs/racescreens/racescreens.h	/^    char		*title;$/;"	m	struct:__anon37
tkmn	src/tools/accc/accc.h	/^  struct ob * tkmn;$/;"	m	struct:ob_groups	typeref:struct:ob_groups::ob
tkmnlabel	src/tools/accc/accc.h	/^  int    tkmnlabel;$/;"	m	struct:ob_groups
tlist	src/tools/texmapper/ssgSaveAC.cpp	/^static saveTriangle *tlist ;$/;"	v	file:
tmpIndice	src/tools/accc/ac3dload.cpp	/^int  tmpIndice=0;$/;"	v
tmpIndice2	src/tools/accc/ac3dload.cpp	/^int  tmpIndice2=0;$/;"	v
tmpIndice3	src/tools/accc/ac3dload.cpp	/^int  tmpIndice3=0;$/;"	v
tmpPoint	src/tools/accc/ac3dload.cpp	/^point_t tmpPoint[100000];$/;"	v
tmpStart	export/include/tgf.h	/^  double tmpStart;$/;"	m	class:ProfileInstance
tmpStart	src/libs/tgf/tgf.h	/^  double tmpStart;$/;"	m	class:ProfileInstance
tmp_axes	export/include/js.h	/^  float        tmp_axes [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
tmp_axes	src/interfaces/js.h	/^  float        tmp_axes [ _JS_MAX_AXES ] ;$/;"	m	class:jsJoystick
tmp_buttons	export/include/js.h	/^  int          tmp_buttons ;$/;"	m	class:jsJoystick
tmp_buttons	src/interfaces/js.h	/^  int          tmp_buttons ;$/;"	m	class:jsJoystick
tmpname	src/tools/accc/ac3dload.cpp	/^char tmpname[256];$/;"	v
tmpsurf	src/tools/accc/ac3dload.cpp	/^int     tmpsurf[100000];  $/;"	v
tmptexa	src/tools/accc/ac3dload.cpp	/^double   tmptexa[200000];$/;"	v
tmpva	src/tools/accc/ac3dload.cpp	/^tcoord_t     tmpva[100000];$/;"	v
toAscii	src/libs/txml/xmltok.c	/^int toAscii(const ENCODING *enc, const char *ptr, const char *end)$/;"	f	file:
toLeft	export/include/track.h	/^    tdble	toLeft;		\/**< Distance to left side of segment (+ to inside of track - to outside) *\/$/;"	m	struct:__anon182
toLeft	src/interfaces/track.h	/^    tdble	toLeft;		\/**< Distance to left side of segment (+ to inside of track - to outside) *\/$/;"	m	struct:__anon149
toMiddle	export/include/track.h	/^    tdble	toMiddle;	\/**< Distance to middle of segment (+ to left - to right) *\/$/;"	m	struct:__anon182
toMiddle	src/interfaces/track.h	/^    tdble	toMiddle;	\/**< Distance to middle of segment (+ to left - to right) *\/$/;"	m	struct:__anon149
toRight	export/include/track.h	/^    tdble	toRight;	\/**< Distance to right side of segment (+ to inside of track - to outside) *\/$/;"	m	struct:__anon182
toRight	src/interfaces/track.h	/^    tdble	toRight;	\/**< Distance to right side of segment (+ to inside of track - to outside) *\/$/;"	m	struct:__anon149
toSplineCoord	src/drivers/bt/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:Pit
toSplineCoord	src/drivers/damned/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:Pit
toSplineCoord	src/drivers/olethros/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:olethros::Pit
toSplineCoord	src/drivers/sparkle/pit.cpp	/^float Pit::toSplineCoord(float x)$/;"	f	class:Pit
toStart	export/include/track.h	/^    tdble	toStart;	\/**< Distance to start of segment (or arc if turn) *\/$/;"	m	struct:__anon182
toStart	src/interfaces/track.h	/^    tdble	toStart;	\/**< Distance to start of segment (or arc if turn) *\/$/;"	m	struct:__anon149
tobjdef	src/tools/trackgen/objects.cpp	/^} tobjdef;$/;"	t	typeref:struct:objdef	file:
token	src/modules/graphic/ssggraph/grloadac.cpp	/^  char *token ;$/;"	m	struct:Tag	file:
top	src/modules/graphic/ssggraph/grcam.h	/^    float top;$/;"	m	class:cGrOrthoCamera
top	src/windows/include/plib/sg.h	/^  SGDfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgdFrustum
top	src/windows/include/plib/sg.h	/^  SGfloat left, right, bot, top, nnear, ffar ;$/;"	m	class:sgFrustum
topSpd	export/include/raceman.h	/^    tdble	topSpd;$/;"	m	struct:__anon208
topSpd	src/interfaces/raceman.h	/^    tdble	topSpd;$/;"	m	struct:__anon167
topSpeed	export/include/car.h	/^    tdble		topSpeed;$/;"	m	struct:__anon198
topSpeed	src/interfaces/car.h	/^    tdble		topSpeed;$/;"	m	struct:__anon158
top_tags	src/modules/graphic/ssggraph/grloadac.cpp	/^static Tag top_tags [] =$/;"	v	file:
topofthepage	doc/faq/faq.html	/^        <a name="topofthepage">$/;"	a
topofthepage	doc/tutorials/robot/torcs/faq/faq.html	/^        <a name="topofthepage">$/;"	a
torcstrack	src/drivers/berniw/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	src/drivers/berniw2/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	src/drivers/berniw3/trackdesc.h	/^		tTrack *torcstrack;$/;"	m	class:TrackDesc
torcstrack	src/drivers/inferno/trackdesc.h	/^		tTrack *torcstrack;		\/\/ Pointer to original TORCS  track.$/;"	m	class:TrackDesc
torcstrack	src/drivers/lliaw/trackdesc.h	/^		tTrack *torcstrack;		\/\/ Pointer to original TORCS  track.$/;"	m	class:TrackDesc
torcstrack	src/drivers/tita/trackdesc.h	/^		tTrack *torcstrack;		\/\/ Pointer to original TORCS  track.$/;"	m	class:TrackDesc
totLaps	export/include/raceman.h	/^    int			totLaps;	\/**< total laps *\/$/;"	m	struct:__anon206
totLaps	src/interfaces/raceman.h	/^    int			totLaps;	\/**< total laps *\/$/;"	m	struct:__anon165
total	src/windows/include/plib/ssg.h	/^  unsigned int total   ;  \/* The total number of things in the list *\/$/;"	m	class:ssgSimpleList
total	src/windows/include/plib/ssg.h	/^  unsigned int total ;  \/* The total number of entities in the list *\/$/;"	m	class:ssgList
total	src/windows/include/plib/ul.h	/^  unsigned int total ;  \/* The total number of entities in the list *\/$/;"	m	class:ulList
total	src/windows/include/ul.h	/^  unsigned int total ;  \/* The total number of entities in the list *\/$/;"	m	class:ulList
totalPitTime	export/include/raceman.h	/^    double	totalPitTime;$/;"	m	struct:__anon208
totalPitTime	src/interfaces/raceman.h	/^    double	totalPitTime;$/;"	m	struct:__anon167
totalTime	export/include/tgf.h	/^  double totalTime;$/;"	m	class:ProfileInstance
totalTime	src/libs/tgf/tgf.h	/^  double totalTime;$/;"	m	class:ProfileInstance
total_in	src/windows/include/zlib.h	/^    uLong    total_in;  \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	src/windows/include/zlib.h	/^    uLong    total_out; \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
totalnv	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              totalnv=0;$/;"	v	file:
totalstripe	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              totalstripe=0;$/;"	v	file:
tr	src/drivers/berniw/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	src/drivers/berniw2/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	src/drivers/berniw3/trackdesc.h	/^		v3d tr;					\/* normalized direction vector to the right side *\/$/;"	m	class:TrackSegment
tr	src/drivers/inferno/pathfinder.h	/^		vec2d* tr;				\/\/ to right perpendicular to the path.$/;"	m	class:PathSegOpt
tr	src/drivers/inferno/trackdesc.h	/^		vec2d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment2D
tr	src/drivers/inferno/trackdesc.h	/^		vec3d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment
tr	src/drivers/lliaw/pathfinder.h	/^		vec2d* tr;				\/\/ to right perpendicular to the path.$/;"	m	class:PathSegOpt
tr	src/drivers/lliaw/trackdesc.h	/^		vec2d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment2D
tr	src/drivers/lliaw/trackdesc.h	/^		vec3d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment
tr	src/drivers/tita/pathfinder.h	/^		vec2d* tr;				\/\/ to right perpendicular to the path.$/;"	m	class:PathSegOpt
tr	src/drivers/tita/trackdesc.h	/^		vec2d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment2D
tr	src/drivers/tita/trackdesc.h	/^		vec3d tr;				\/\/ normalized direction vector to the right side.$/;"	m	class:TrackSegment
tr_mode	src/drivers/berniw/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	src/drivers/berniw2/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	src/drivers/berniw3/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	src/drivers/inferno/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	src/drivers/lliaw/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
tr_mode	src/drivers/tita/mycar.h	/^		int tr_mode;$/;"	m	class:MyCar
track	export/include/raceman.h	/^    tTrack		*track;		\/**< Current track *\/$/;"	m	struct:RmInfo
track	src/drivers/berniw/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	src/drivers/berniw/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	src/drivers/berniw2/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	src/drivers/berniw2/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	src/drivers/berniw3/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	src/drivers/berniw3/pathfinder.h	/^		TrackDesc* track;		\/* pointer to track data *\/$/;"	m	class:Pathfinder
track	src/drivers/bt/driver.h	/^		tTrack* track;$/;"	m	class:Driver
track	src/drivers/bt/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:Opponent	file:
track	src/drivers/bt/opponent.h	/^		static tTrack *track;$/;"	m	class:Opponent
track	src/drivers/bt/pit.h	/^		tTrack *track;$/;"	m	class:Pit
track	src/drivers/damned/driver.h	/^		tTrack* track;$/;"	m	class:Driver
track	src/drivers/damned/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:Opponent	file:
track	src/drivers/damned/opponent.h	/^		static tTrack *track;$/;"	m	class:Opponent
track	src/drivers/damned/pit.h	/^		tTrack *track;$/;"	m	class:Pit
track	src/drivers/inferno/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	src/drivers/inferno/pathfinder.h	/^		TrackDesc* track;		\/\/ pointer to track data.$/;"	m	class:Pathfinder
track	src/drivers/lliaw/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	src/drivers/lliaw/pathfinder.h	/^		TrackDesc* track;		\/\/ pointer to track data.$/;"	m	class:Pathfinder
track	src/drivers/olethros/driver.h	/^	tTrack* track;$/;"	m	class:olethros::Driver
track	src/drivers/olethros/learn.h	/^	tTrack* track; \/\/\/< A pointer to the current track$/;"	m	class:olethros::SegLearn
track	src/drivers/olethros/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:olethros::Opponent	file:
track	src/drivers/olethros/opponent.h	/^		static tTrack *track;$/;"	m	class:olethros::Opponent
track	src/drivers/olethros/pit.h	/^		tTrack *track;$/;"	m	class:olethros::Pit
track	src/drivers/sparkle/driver.h	/^		tTrack* track;$/;"	m	class:Driver
track	src/drivers/sparkle/opponent.cpp	/^tTrack* Opponent::track;$/;"	m	class:Opponent	file:
track	src/drivers/sparkle/opponent.h	/^		static tTrack *track;$/;"	m	class:Opponent
track	src/drivers/sparkle/pit.h	/^		tTrack *track;$/;"	m	class:Pit
track	src/drivers/tita/mycar.h	/^		TrackDesc* track;$/;"	m	class:OtherCar
track	src/drivers/tita/pathfinder.h	/^		TrackDesc* track;		\/\/ pointer to track data.$/;"	m	class:Pathfinder
track	src/interfaces/raceman.h	/^    tTrack		*track;		\/**< Current track *\/$/;"	m	struct:RmInfo
track	src/modules/track/trackitf.cpp	/^track(tModInfo *modInfo)$/;"	f
trackBarrier	export/include/track.h	/^typedef struct trackBarrier {$/;"	s
trackBarrier	src/interfaces/track.h	/^typedef struct trackBarrier {$/;"	s
trackInit	src/modules/track/trackitf.cpp	/^trackInit(int \/* index *\/, void *pt)$/;"	f	file:
trackItf	export/include/confscreens.h	/^    tTrackItf	trackItf;	\/* Track module interface *\/$/;"	m	struct:__anon176
trackItf	export/include/raceman.h	/^    tTrackItf	trackItf;$/;"	m	struct:__anon207
trackItf	export/include/racescreens.h	/^    tTrackItf	trackItf;	\/* Track module interface *\/$/;"	m	struct:__anon172
trackItf	src/interfaces/raceman.h	/^    tTrackItf	trackItf;$/;"	m	struct:__anon166
trackItf	src/libs/confscreens/confscreens.h	/^    tTrackItf	trackItf;	\/* Track module interface *\/$/;"	m	struct:__anon40
trackItf	src/libs/racescreens/racescreens.h	/^    tTrackItf	trackItf;	\/* Track module interface *\/$/;"	m	struct:__anon34
trackMap	src/modules/graphic/ssggraph/grboard.h	/^	cGrTrackMap *trackMap;$/;"	m	class:cGrBoard
trackSeg	export/include/track.h	/^typedef struct trackSeg {$/;"	s
trackSeg	src/interfaces/track.h	/^typedef struct trackSeg {$/;"	s
trackSurface	export/include/track.h	/^typedef struct trackSurface {$/;"	s
trackSurface	src/interfaces/track.h	/^typedef struct trackSurface {$/;"	s
track_height	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_height;$/;"	m	class:cGrTrackMap	file:
track_height	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_height;$/;"	m	class:cGrTrackMap
track_max_x	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_max_x;$/;"	m	class:cGrTrackMap	file:
track_max_x	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_max_x;$/;"	m	class:cGrTrackMap
track_max_y	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_max_y;$/;"	m	class:cGrTrackMap	file:
track_max_y	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_max_y;$/;"	m	class:cGrTrackMap
track_min_x	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_min_x;$/;"	m	class:cGrTrackMap	file:
track_min_x	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_min_x;$/;"	m	class:cGrTrackMap
track_min_y	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_min_y;$/;"	m	class:cGrTrackMap	file:
track_min_y	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_min_y;$/;"	m	class:cGrTrackMap
track_width	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_width;$/;"	m	class:cGrTrackMap	file:
track_width	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_width;$/;"	m	class:cGrTrackMap
track_x_ratio	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_x_ratio;$/;"	m	class:cGrTrackMap	file:
track_x_ratio	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_x_ratio;$/;"	m	class:cGrTrackMap
track_y_ratio	src/modules/graphic/ssggraph/grtrackmap.cpp	/^float cGrTrackMap::track_y_ratio;$/;"	m	class:cGrTrackMap	file:
track_y_ratio	src/modules/graphic/ssggraph/grtrackmap.h	/^		static float track_y_ratio;$/;"	m	class:cGrTrackMap
trackangle	src/drivers/bt/cardata.h	/^		float trackangle;	\/\/ Track angle at the opponents position.$/;"	m	class:SingleCardata
trackangle	src/drivers/damned/cardata.h	/^		float trackangle;	\/\/ Track angle at the opponents position.$/;"	m	class:SingleCardata
trackangle	src/drivers/olethros/cardata.h	/^	float trackangle;	\/\/ Track angle at the opponents position.$/;"	m	class:olethros::SingleCardata
trackangle	src/drivers/sparkle/driver.h	/^		float trackangle;		\/* the angle of the current track segment (global coordinates) *\/$/;"	m	class:Driver
trackdef	src/tools/trackgen/maintrackgen.cpp	/^static char	trackdef[1024];$/;"	v	file:
trackindices	src/tools/trackgen/track.cpp	/^static unsigned int	*trackindices;$/;"	v	file:
tracktexcoord	src/tools/trackgen/track.cpp	/^static float		*tracktexcoord;$/;"	v	file:
trackvertices	src/tools/trackgen/track.cpp	/^static float		*trackvertices;$/;"	v	file:
train	src/windows/include/plib/ssgaWaveSystem.h	/^  ssgaWaveTrain *train [ SSGA_MAX_WAVETRAIN ] ;$/;"	m	class:ssgaWaveSystem
trans	src/tools/accc/accc.h	/^  double trans;$/;"	m	struct:mat
trans	src/windows/include/png.h	/^   png_bytep trans;           \/* transparency values for paletted files *\/$/;"	m	struct:png_struct_def
trans	src/windows/include/png.h	/^   png_bytep trans; \/* transparent values for paletted image *\/$/;"	m	struct:png_info_struct
trans_values	src/windows/include/png.h	/^   png_color_16 trans_values; \/* transparency values for non-paletted files *\/$/;"	m	struct:png_struct_def
trans_values	src/windows/include/png.h	/^   png_color_16 trans_values; \/* transparent color for non-palette image *\/$/;"	m	struct:png_info_struct
transferValue	src/modules/simu/simuv2/transmission.h	/^    tdble	transferValue;	\/* 1.0 -> released, 0.0 -> applied *\/$/;"	m	struct:__anon27
transform	src/modules/graphic/ssggraph/grcarlight.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:ssgVtxTableCarlight
transform	src/modules/graphic/ssggraph/grshadow.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:ssgVtxTableShadow
transform	src/modules/graphic/ssggraph/grsmoke.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:ssgVtxTableSmoke
transform	src/modules/graphic/ssggraph/grvtxtable.h	/^  virtual void transform ( const sgMat4 m )  { ssgVtxTable::transform(m);}$/;"	f	class:grVtxTable
transform	src/windows/include/plib/ssg.h	/^  sgMat4 transform ;$/;"	m	class:ssgBaseTransform
transformations	src/windows/include/png.h	/^   png_uint_32 transformations; \/* which transformations to perform *\/$/;"	m	struct:png_struct_def
translate	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  void translate(const Vector& v) { curr.translate(v); }$/;"	f	class:Object
translate	src/modules/simu/simuv2/SOLID-2.0/src/Transform.cpp	/^void Transform::translate(const Vector& v) { $/;"	f	class:Transform
translucent	src/windows/include/plib/ssg.h	/^  int translucent ;$/;"	m	class:ssgState
transmission	src/libs/confscreens/driverconfig.cpp	/^    char	*transmission;$/;"	m	struct:PlayerInfo	file:
transmission	src/modules/simu/simuv2/carstruct.h	/^    tTransmission	transmission;	\/* includes clutch, gearbox and driveshaft *\/$/;"	m	struct:__anon18
transpose	export/include/3D/Matrix.h	/^inline Matrix Matrix::transpose() const {$/;"	f	class:Matrix
transpose	export/include/3D/Matrix.h	/^inline Matrix transpose(const Matrix& m) { return m.transpose(); }$/;"	f
transpose	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix Matrix::transpose() const {$/;"	f	class:Matrix
transpose	src/modules/simu/simuv2/SOLID-2.0/include/3D/Matrix.h	/^inline Matrix transpose(const Matrix& m) { return m.transpose(); }$/;"	f
traversal_mask	src/windows/include/plib/ssg.h	/^  int traversal_mask ;$/;"	m	class:ssgEntity
triStateHdle	src/libs/racescreens/miscscreens.cpp	/^static void *triStateHdle = 0;$/;"	v	file:
triangle	src/windows/include/plib/ssg.h	/^  int      triangle ;$/;"	m	class:ssgHit
tridiagonal	src/drivers/berniw/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	src/drivers/berniw2/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	src/drivers/berniw3/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	src/drivers/inferno/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	src/drivers/lliaw/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal	src/drivers/tita/spline.cpp	/^void tridiagonal(int dim, SplineEquationData *tmp, double *x)$/;"	f
tridiagonal2	src/drivers/berniw/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	src/drivers/berniw2/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	src/drivers/berniw3/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	src/drivers/inferno/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	src/drivers/lliaw/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
tridiagonal2	src/drivers/tita/spline.cpp	/^void tridiagonal2(int dim, SplineEquationData2 *tmp)$/;"	f
triple	export/include/3D/Vector.h	/^inline Scalar triple(const Vector& v1, const Vector& v2, const Vector& v3) {$/;"	f
triple	src/modules/simu/simuv2/SOLID-2.0/include/3D/Vector.h	/^inline Scalar triple(const Vector& v1, const Vector& v2, const Vector& v3) {$/;"	f
trkBuild	export/include/track.h	/^    tfTrackBuild		trkBuild;		\/* build track structure for simu *\/$/;"	m	struct:__anon187
trkBuild	src/interfaces/track.h	/^    tfTrackBuild		trkBuild;		\/* build track structure for simu *\/$/;"	m	struct:__anon154
trkBuildEx	export/include/track.h	/^    tfTrackBuild		trkBuildEx;		\/* build with graphic extensions  *\/$/;"	m	struct:__anon187
trkBuildEx	src/interfaces/track.h	/^    tfTrackBuild		trkBuildEx;		\/* build with graphic extensions  *\/$/;"	m	struct:__anon154
trkGlobal2Local	export/include/track.h	/^    tfTrackGlobal2Local		trkGlobal2Local;$/;"	m	struct:__anon187
trkGlobal2Local	src/interfaces/track.h	/^    tfTrackGlobal2Local		trkGlobal2Local;$/;"	m	struct:__anon154
trkHeightG	export/include/track.h	/^    tfTrackHeightG		trkHeightG;$/;"	m	struct:__anon187
trkHeightG	src/interfaces/track.h	/^    tfTrackHeightG		trkHeightG;$/;"	m	struct:__anon154
trkHeightL	export/include/track.h	/^    tfTrackHeightL		trkHeightL;$/;"	m	struct:__anon187
trkHeightL	src/interfaces/track.h	/^    tfTrackHeightL		trkHeightL;$/;"	m	struct:__anon154
trkLocal2Global	export/include/track.h	/^    tfTrackLocal2Global		trkLocal2Global;$/;"	m	struct:__anon187
trkLocal2Global	src/interfaces/track.h	/^    tfTrackLocal2Global		trkLocal2Global;$/;"	m	struct:__anon154
trkPos	export/include/car.h	/^    tTrkLocPos	trkPos;		\/**< current track position. The segment is the track segment (not sides)*\/$/;"	m	struct:__anon199
trkPos	src/interfaces/car.h	/^    tTrkLocPos	trkPos;		\/**< current track position. The segment is the track segment (not sides)*\/$/;"	m	struct:__anon159
trkPos	src/modules/simu/simuv2/carstruct.h	/^    tTrkLocPos	trkPos;		\/* current track position *\/$/;"	m	struct:__anon18
trkPos	src/modules/simu/simuv2/wheel.h	/^    tTrkLocPos	trkPos;		\/* current track position *\/$/;"	m	struct:__anon21
trkShutdown	export/include/track.h	/^    tfTrackShutdown		trkShutdown;$/;"	m	struct:__anon187
trkShutdown	src/interfaces/track.h	/^    tfTrackShutdown		trkShutdown;$/;"	m	struct:__anon154
trkSideNormal	export/include/track.h	/^    tfTrackSideNormal   	trkSideNormal;$/;"	m	struct:__anon187
trkSideNormal	src/interfaces/track.h	/^    tfTrackSideNormal   	trkSideNormal;$/;"	m	struct:__anon154
trkSurfaceNormal	export/include/track.h	/^    tfTrackSurfaceNormal	trkSurfaceNormal;$/;"	m	struct:__anon187
trkSurfaceNormal	src/interfaces/track.h	/^    tfTrackSurfaceNormal	trkSurfaceNormal;$/;"	m	struct:__anon154
trtime	src/drivers/berniw/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	src/drivers/berniw2/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	src/drivers/berniw3/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	src/drivers/inferno/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	src/drivers/lliaw/mycar.h	/^		double trtime;$/;"	m	class:MyCar
trtime	src/drivers/tita/mycar.h	/^		double trtime;$/;"	m	class:MyCar
true	src/windows/include/plib/ul.h	/^const   int true  = 1 ;$/;"	v
true	src/windows/include/ul.h	/^const   int true  = 1 ;$/;"	v
tryKarmaFilename	src/drivers/bt/learn.cpp	/^FILE* SegLearn::tryKarmaFilename(char* buffer, int size, const char *path, int driverindex, const char *tbuf, bool storelocalfilename)$/;"	f	class:SegLearn
tryKarmaFilename	src/drivers/damned/learn.cpp	/^FILE* SegLearn::tryKarmaFilename(char* buffer, int size, const char *path, int driverindex, const char *tbuf, bool storelocalfilename)$/;"	f	class:SegLearn
ts	src/drivers/berniw/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	src/drivers/berniw2/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	src/drivers/berniw3/trackdesc.h	/^		TrackSegment* ts;		\/* pointer to the array of tracksegments *\/$/;"	m	class:TrackDesc
ts	src/drivers/inferno/trackdesc.h	/^		TrackSegment* ts;		\/\/ Pointer to the array of tracksegments in 3D$/;"	m	class:TrackDesc
ts	src/drivers/lliaw/trackdesc.h	/^		TrackSegment* ts;		\/\/ Pointer to the array of tracksegments in 3D$/;"	m	class:TrackDesc
ts	src/drivers/tita/trackdesc.h	/^		TrackSegment* ts;		\/\/ Pointer to the array of tracksegments in 3D$/;"	m	class:TrackDesc
ts	src/libs/raceengineclient/racemanmenu.cpp	/^static tRmTrackSelect	ts;$/;"	v	file:
ts	src/libs/racescreens/trackselect.cpp	/^static tRmTrackSelect *ts;$/;"	v	file:
ts2d	src/drivers/inferno/trackdesc.h	/^		TrackSegment2D* ts2d;	\/\/ Pointer to the array of tracksegments in 2D$/;"	m	class:TrackDesc
ts2d	src/drivers/lliaw/trackdesc.h	/^		TrackSegment2D* ts2d;	\/\/ Pointer to the array of tracksegments in 2D$/;"	m	class:TrackDesc
ts2d	src/drivers/tita/trackdesc.h	/^		TrackSegment2D* ts2d;	\/\/ Pointer to the array of tracksegments in 2D$/;"	m	class:TrackDesc
tsu	src/modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tsv	src/modules/graphic/ssggraph/grcam.h	/^    float	tsu, tsv, teu, tev;	\/* texture coord *\/$/;"	m	class:cGrCarCamMirror
tu	src/windows/include/plib/ssgaWaveSystem.h	/^  float tu, tv ;$/;"	m	class:ssgaWaveSystem
turbo	src/modules/graphic/ssggraph/CarSoundData.h	/^	QSoundChar turbo;$/;"	m	class:CarSoundData
turbo	src/modules/graphic/ssggraph/SoundInterface.h	/^	QueueSoundMap turbo;$/;"	m	class:SoundInterface
turbo_ilag	src/modules/graphic/ssggraph/CarSoundData.h	/^	float turbo_ilag; \/\/\/< how fast turbo catches up with engine$/;"	m	class:CarSoundData
turbo_on	src/modules/graphic/ssggraph/CarSoundData.h	/^	bool turbo_on; \/\/\/< use turbo sound$/;"	m	class:CarSoundData
turbo_rpm	src/modules/graphic/ssggraph/CarSoundData.h	/^	float turbo_rpm; \/\/\/< when turbo comes in$/;"	m	class:CarSoundData
turbo_sound	src/modules/graphic/ssggraph/SoundInterface.h	/^	TorcsSound* turbo_sound; \/\/\/< turbo spinning sound$/;"	m	class:SoundInterface
turnMarksInfo	export/include/track.h	/^    tTurnMarksInfo	turnMarksInfo;$/;"	m	struct:__anon185
turnMarksInfo	src/interfaces/track.h	/^    tTurnMarksInfo	turnMarksInfo;$/;"	m	struct:__anon152
turn_to_face	src/windows/include/plib/ssgaParticleSystem.h	/^  int turn_to_face   ;$/;"	m	class:ssgaParticleSystem
turnaround	src/drivers/berniw/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	src/drivers/berniw2/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	src/drivers/berniw3/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	src/drivers/inferno/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	src/drivers/lliaw/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
turnaround	src/drivers/tita/mycar.h	/^		double turnaround;$/;"	m	class:MyCar
tv	src/windows/include/plib/ssgaWaveSystem.h	/^  float tu, tv ;$/;"	m	class:ssgaWaveSystem
tw	src/modules/graphic/ssggraph/grcam.h	/^    int		tw, th;			\/* texture size *\/$/;"	m	class:cGrCarCamMirror
twoStateHdle	src/libs/racescreens/miscscreens.cpp	/^static void *twoStateHdle = 0;$/;"	v	file:
tx1	src/libs/tgfclient/guifont.h	/^    float tx1, ty1;$/;"	m	struct:__anon54
tx2	src/libs/tgfclient/guifont.h	/^    float tx2, ty2;$/;"	m	struct:__anon54
txmlAttribute	export/include/xml.h	/^} txmlAttribute;$/;"	t	typeref:struct:xmlAttribute
txmlAttribute	src/libs/txml/xml.h	/^} txmlAttribute;$/;"	t	typeref:struct:xmlAttribute
txmlElement	export/include/xml.h	/^} txmlElement;    $/;"	t	typeref:struct:xmlElement
txmlElement	src/libs/txml/xml.h	/^} txmlElement;    $/;"	t	typeref:struct:xmlElement
ty1	src/libs/tgfclient/guifont.h	/^    float tx1, ty1;$/;"	m	struct:__anon54
ty2	src/libs/tgfclient/guifont.h	/^    float tx2, ty2;$/;"	m	struct:__anon54
type	export/include/raceman.h	/^    int			type;		\/**< Race type *\/$/;"	m	struct:__anon206
type	export/include/tgfclient.h	/^    int		type;$/;"	m	struct:__anon212
type	export/include/track.h	/^	int type;		\/**< Type of Pit:$/;"	m	struct:__anon183
type	export/include/track.h	/^    int		type;		\/**< Type of description:$/;"	m	struct:__anon182
type	export/include/track.h	/^    int type;			\/**< Geometrical type:$/;"	m	struct:trackSeg
type	src/drivers/berniw/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	src/drivers/berniw2/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	src/drivers/berniw3/trackdesc.h	/^		int type;				\/* physical type (eg. straight, left or right) *\/$/;"	m	class:TrackSegment
type	src/drivers/human/pref.h	/^    int		type;		\/* Type of control (analog, joy button, keyboard) *\/$/;"	m	struct:__anon144
type	src/interfaces/raceman.h	/^    int			type;		\/**< Race type *\/$/;"	m	struct:__anon165
type	src/interfaces/track.h	/^	int type;		\/**< Type of Pit:$/;"	m	struct:__anon150
type	src/interfaces/track.h	/^    int		type;		\/**< Type of description:$/;"	m	struct:__anon149
type	src/interfaces/track.h	/^    int type;			\/**< Geometrical type:$/;"	m	struct:trackSeg
type	src/libs/tgf/hash.cpp	/^    int		type;$/;"	m	struct:HashHeader	file:
type	src/libs/tgf/params.cpp	/^    int					type;$/;"	m	struct:param	file:
type	src/libs/tgfclient/tgfclient.h	/^    int		type;$/;"	m	struct:__anon56
type	src/libs/txml/xmltok.c	/^  unsigned char type[256];$/;"	m	struct:normal_encoding	file:
type	src/modules/graphic/ssggraph/grloadsgi.h	/^		char           type ;$/;"	m	class:ssgSGIHeader
type	src/modules/simu/simuv2/SOLID-2.0/src/Response.h	/^  DtResponseType type;$/;"	m	class:Response
type	src/modules/simu/simuv2/SOLID-2.0/src/Transform.h	/^  unsigned int type;$/;"	m	class:Transform
type	src/modules/simu/simuv2/differential.h	/^    int		type;$/;"	m	struct:__anon20
type	src/modules/simu/simuv2/transmission.h	/^    int		type;$/;"	m	struct:__anon28
type	src/tools/accc/accc.h	/^  char * type ;$/;"	m	struct:ob
type	src/tools/trackgen/easymesh.cpp	/^    int s0, s1, type;$/;"	m	struct:chai	file:
type	src/windows/include/plib/ssg.h	/^  int   type  ;$/;"	m	class:ssgBase
type2	export/include/track.h	/^    int type2;			\/**< Position type:$/;"	m	struct:trackSeg
type2	src/interfaces/track.h	/^    int type2;			\/**< Position type:$/;"	m	struct:trackSeg
typeConvertion	src/tools/accc/mainaccc.cpp	/^int typeConvertion =0;$/;"	v
tyre_src	src/modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource tyre_src[4];$/;"	m	class:OpenalSoundInterface
tyre_src	src/modules/graphic/ssggraph/SoundInterface.h	/^	SoundSource tyre_src[4];$/;"	m	class:PlibSoundInterface
u	src/drivers/olethros/learn.h	/^	float u; \/\/\/< speed$/;"	m	class:olethros::SegLearn
u	src/libs/tgfclient/gui.h	/^    } u;$/;"	m	struct:GfuiObject	typeref:union:GfuiObject::__anon67
u	src/modules/graphic/ssggraph/CarSoundData.h	/^	sgVec3 u; \/\/\/< speed$/;"	m	struct:WheelSoundData_
u	src/tools/accc/accc.h	/^  double u;$/;"	m	struct:tcoord
u	src/tools/trackgen/easymesh.cpp	/^    double	u;$/;"	m	struct:ref	file:
uInt	src/windows/include/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t
uInt	src/windows/include/zconf.h	40;"	d
uIntf	src/windows/include/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t
uIntf	src/windows/include/zconf.h	45;"	d
uLong	src/windows/include/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t
uLong	src/windows/include/zconf.h	41;"	d
uLongf	src/windows/include/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	src/windows/include/zconf.h	46;"	d
u_lis	src/modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 u_lis; \/\/\/< listener velocity for this source$/;"	m	class:SoundSource
u_src	src/modules/graphic/ssggraph/TorcsSound.h	/^	sgVec3 u_src; \/\/\/< source velocity;$/;"	m	class:SoundSource
u_toleft	src/drivers/olethros/driver.h	/^	float u_toleft; \/\/\/< speed to left side$/;"	m	class:olethros::Driver
u_toright	src/drivers/olethros/driver.h	/^	float u_toright; \/\/\/< speed to right side$/;"	m	class:olethros::Driver
uchar	src/windows/osspec.h	38;"	d
ugly	src/tools/trackgen/easymesh.cpp	/^int ugly;                       \/* mora li biti globalna ??? *\/$/;"	v
uint	src/modules/simu/simuv2/SOLID-2.0/src/C-api.cpp	63;"	d	file:
uint	src/windows/osspec.h	37;"	d
ulClock	src/windows/include/plib/ul.h	/^  ulClock () { reset () ; }$/;"	f	class:ulClock
ulClock	src/windows/include/plib/ul.h	/^class ulClock$/;"	c
ulClock	src/windows/include/ul.h	/^  ulClock () { reset () ; }$/;"	f	class:ulClock
ulClock	src/windows/include/ul.h	/^class ulClock$/;"	c
ulCompareFunc	src/windows/include/plib/ul.h	/^typedef int  (*ulCompareFunc)( const void *data1, const void *data2 ) ;$/;"	t
ulCompareFunc	src/windows/include/ul.h	/^typedef int  (*ulCompareFunc)( const void *data1, const void *data2 ) ;$/;"	t
ulDir	src/windows/include/plib/ul.h	/^typedef struct _ulDir ulDir ;$/;"	t	typeref:struct:_ulDir
ulDir	src/windows/include/ul.h	/^typedef struct _ulDir ulDir ;$/;"	t	typeref:struct:_ulDir
ulDirEnt	src/windows/include/plib/ul.h	/^struct ulDirEnt$/;"	s
ulDirEnt	src/windows/include/ul.h	/^struct ulDirEnt$/;"	s
ulDynamicLibrary	src/windows/include/plib/ul.h	/^    ulDynamicLibrary ( const char *libname )$/;"	f	class:ulDynamicLibrary
ulDynamicLibrary	src/windows/include/plib/ul.h	/^  ulDynamicLibrary ( const char *libname )$/;"	f	class:ulDynamicLibrary
ulDynamicLibrary	src/windows/include/plib/ul.h	/^class ulDynamicLibrary$/;"	c
ulDynamicLibrary	src/windows/include/ul.h	/^    ulDynamicLibrary ( const char *libname )$/;"	f	class:ulDynamicLibrary
ulDynamicLibrary	src/windows/include/ul.h	/^  ulDynamicLibrary ( const char *libname )$/;"	f	class:ulDynamicLibrary
ulDynamicLibrary	src/windows/include/ul.h	/^class ulDynamicLibrary$/;"	c
ulEndianBig16	src/windows/include/plib/ul.h	/^inline unsigned short ulEndianBig16(unsigned short x) {$/;"	f
ulEndianBig16	src/windows/include/ul.h	/^inline unsigned short ulEndianBig16(unsigned short x) {$/;"	f
ulEndianBig32	src/windows/include/plib/ul.h	/^inline unsigned int ulEndianBig32(unsigned int x) {$/;"	f
ulEndianBig32	src/windows/include/ul.h	/^inline unsigned int ulEndianBig32(unsigned int x) {$/;"	f
ulEndianBigArray16	src/windows/include/plib/ul.h	/^inline void ulEndianBigArray16(unsigned short *x, int length) {$/;"	f
ulEndianBigArray16	src/windows/include/ul.h	/^inline void ulEndianBigArray16(unsigned short *x, int length) {$/;"	f
ulEndianBigArray32	src/windows/include/plib/ul.h	/^inline void ulEndianBigArray32(unsigned int *x, int length) {$/;"	f
ulEndianBigArray32	src/windows/include/ul.h	/^inline void ulEndianBigArray32(unsigned int *x, int length) {$/;"	f
ulEndianBigArrayFloat	src/windows/include/plib/ul.h	/^inline void ulEndianBigArrayFloat(float *x, int length) {$/;"	f
ulEndianBigArrayFloat	src/windows/include/ul.h	/^inline void ulEndianBigArrayFloat(float *x, int length) {$/;"	f
ulEndianBigFloat	src/windows/include/plib/ul.h	/^inline float ulEndianBigFloat(float x) {$/;"	f
ulEndianBigFloat	src/windows/include/ul.h	/^inline float ulEndianBigFloat(float x) {$/;"	f
ulEndianLittle16	src/windows/include/plib/ul.h	/^inline unsigned short ulEndianLittle16(unsigned short x) {$/;"	f
ulEndianLittle16	src/windows/include/ul.h	/^inline unsigned short ulEndianLittle16(unsigned short x) {$/;"	f
ulEndianLittle32	src/windows/include/plib/ul.h	/^inline unsigned int ulEndianLittle32(unsigned int x) {$/;"	f
ulEndianLittle32	src/windows/include/ul.h	/^inline unsigned int ulEndianLittle32(unsigned int x) {$/;"	f
ulEndianLittleArray16	src/windows/include/plib/ul.h	/^inline void ulEndianLittleArray16(unsigned short *x, int length) {$/;"	f
ulEndianLittleArray16	src/windows/include/ul.h	/^inline void ulEndianLittleArray16(unsigned short *x, int length) {$/;"	f
ulEndianLittleArray32	src/windows/include/plib/ul.h	/^inline void ulEndianLittleArray32(unsigned int *x, int length) {$/;"	f
ulEndianLittleArray32	src/windows/include/ul.h	/^inline void ulEndianLittleArray32(unsigned int *x, int length) {$/;"	f
ulEndianLittleArrayFloat	src/windows/include/plib/ul.h	/^inline void ulEndianLittleArrayFloat(float *x, int length) {$/;"	f
ulEndianLittleArrayFloat	src/windows/include/ul.h	/^inline void ulEndianLittleArrayFloat(float *x, int length) {$/;"	f
ulEndianLittleFloat	src/windows/include/plib/ul.h	/^inline float ulEndianLittleFloat(float x) {$/;"	f
ulEndianLittleFloat	src/windows/include/ul.h	/^inline float ulEndianLittleFloat(float x) {$/;"	f
ulEndianReadBig16	src/windows/include/plib/ul.h	/^inline unsigned short ulEndianReadBig16(FILE *f) {$/;"	f
ulEndianReadBig16	src/windows/include/ul.h	/^inline unsigned short ulEndianReadBig16(FILE *f) {$/;"	f
ulEndianReadBig32	src/windows/include/plib/ul.h	/^inline unsigned int ulEndianReadBig32(FILE *f) {$/;"	f
ulEndianReadBig32	src/windows/include/ul.h	/^inline unsigned int ulEndianReadBig32(FILE *f) {$/;"	f
ulEndianReadBigFloat	src/windows/include/plib/ul.h	/^inline float ulEndianReadBigFloat(FILE *f) {$/;"	f
ulEndianReadBigFloat	src/windows/include/ul.h	/^inline float ulEndianReadBigFloat(FILE *f) {$/;"	f
ulEndianReadLittle16	src/windows/include/plib/ul.h	/^inline unsigned short ulEndianReadLittle16(FILE *f) {$/;"	f
ulEndianReadLittle16	src/windows/include/ul.h	/^inline unsigned short ulEndianReadLittle16(FILE *f) {$/;"	f
ulEndianReadLittle32	src/windows/include/plib/ul.h	/^inline unsigned int ulEndianReadLittle32(FILE *f) {$/;"	f
ulEndianReadLittle32	src/windows/include/ul.h	/^inline unsigned int ulEndianReadLittle32(FILE *f) {$/;"	f
ulEndianReadLittleFloat	src/windows/include/plib/ul.h	/^inline float ulEndianReadLittleFloat(FILE *f) {$/;"	f
ulEndianReadLittleFloat	src/windows/include/ul.h	/^inline float ulEndianReadLittleFloat(FILE *f) {$/;"	f
ulEndianSwap	src/windows/include/plib/ul.h	/^inline void ulEndianSwap(float *x) { ulEndianSwap((unsigned int   *)x); }$/;"	f
ulEndianSwap	src/windows/include/plib/ul.h	/^inline void ulEndianSwap(int   *x) { ulEndianSwap((unsigned int   *)x); }$/;"	f
ulEndianSwap	src/windows/include/plib/ul.h	/^inline void ulEndianSwap(short *x) { ulEndianSwap((unsigned short *)x); }$/;"	f
ulEndianSwap	src/windows/include/plib/ul.h	/^inline void ulEndianSwap(unsigned int *x)$/;"	f
ulEndianSwap	src/windows/include/plib/ul.h	/^inline void ulEndianSwap(unsigned short *x)$/;"	f
ulEndianSwap	src/windows/include/ul.h	/^inline void ulEndianSwap(float *x) { ulEndianSwap((unsigned int   *)x); }$/;"	f
ulEndianSwap	src/windows/include/ul.h	/^inline void ulEndianSwap(int   *x) { ulEndianSwap((unsigned int   *)x); }$/;"	f
ulEndianSwap	src/windows/include/ul.h	/^inline void ulEndianSwap(short *x) { ulEndianSwap((unsigned short *)x); }$/;"	f
ulEndianSwap	src/windows/include/ul.h	/^inline void ulEndianSwap(unsigned int *x)$/;"	f
ulEndianSwap	src/windows/include/ul.h	/^inline void ulEndianSwap(unsigned short *x)$/;"	f
ulEndianWriteBig16	src/windows/include/plib/ul.h	/^inline size_t ulEndianWriteBig16(FILE *f, unsigned short x) {$/;"	f
ulEndianWriteBig16	src/windows/include/ul.h	/^inline size_t ulEndianWriteBig16(FILE *f, unsigned short x) {$/;"	f
ulEndianWriteBig32	src/windows/include/plib/ul.h	/^inline size_t ulEndianWriteBig32(FILE *f, unsigned int x) {$/;"	f
ulEndianWriteBig32	src/windows/include/ul.h	/^inline size_t ulEndianWriteBig32(FILE *f, unsigned int x) {$/;"	f
ulEndianWriteBigFloat	src/windows/include/plib/ul.h	/^inline size_t ulEndianWriteBigFloat(FILE *f, float x) {$/;"	f
ulEndianWriteBigFloat	src/windows/include/ul.h	/^inline size_t ulEndianWriteBigFloat(FILE *f, float x) {$/;"	f
ulEndianWriteLittle16	src/windows/include/plib/ul.h	/^inline size_t ulEndianWriteLittle16(FILE *f, unsigned short x) {$/;"	f
ulEndianWriteLittle16	src/windows/include/ul.h	/^inline size_t ulEndianWriteLittle16(FILE *f, unsigned short x) {$/;"	f
ulEndianWriteLittle32	src/windows/include/plib/ul.h	/^inline size_t ulEndianWriteLittle32(FILE *f, unsigned int x) {$/;"	f
ulEndianWriteLittle32	src/windows/include/ul.h	/^inline size_t ulEndianWriteLittle32(FILE *f, unsigned int x) {$/;"	f
ulEndianWriteLittleFloat	src/windows/include/plib/ul.h	/^inline size_t ulEndianWriteLittleFloat(FILE *f, float x) {$/;"	f
ulEndianWriteLittleFloat	src/windows/include/ul.h	/^inline size_t ulEndianWriteLittleFloat(FILE *f, float x) {$/;"	f
ulErrorCallback	src/windows/include/plib/ul.h	/^typedef void (*ulErrorCallback) ( enum ulSeverity severity, char* msg ) ;$/;"	t
ulErrorCallback	src/windows/include/ul.h	/^typedef void (*ulErrorCallback) ( enum ulSeverity severity, char* msg ) ;$/;"	t
ulIsBigEndian	src/windows/include/plib/ul.h	324;"	d
ulIsBigEndian	src/windows/include/ul.h	324;"	d
ulIsLittleEndian	src/windows/include/plib/ul.h	323;"	d
ulIsLittleEndian	src/windows/include/ul.h	323;"	d
ulIterateFunc	src/windows/include/plib/ul.h	/^typedef bool (*ulIterateFunc)( const void *data, void *user_data ) ;$/;"	t
ulIterateFunc	src/windows/include/ul.h	/^typedef bool (*ulIterateFunc)( const void *data, void *user_data ) ;$/;"	t
ulLinkedList	src/windows/include/plib/ul.h	/^  ulLinkedList ()$/;"	f	class:ulLinkedList
ulLinkedList	src/windows/include/plib/ul.h	/^class ulLinkedList$/;"	c
ulLinkedList	src/windows/include/ul.h	/^  ulLinkedList ()$/;"	f	class:ulLinkedList
ulLinkedList	src/windows/include/ul.h	/^class ulLinkedList$/;"	c
ulList	src/windows/include/plib/ul.h	/^class ulList$/;"	c
ulList	src/windows/include/ul.h	/^class ulList$/;"	c
ulMilliSecondSleep	src/windows/include/plib/ul.h	/^inline void ulMilliSecondSleep ( int milliseconds )$/;"	f
ulMilliSecondSleep	src/windows/include/ul.h	/^inline void ulMilliSecondSleep ( int milliseconds )$/;"	f
ulSeverity	src/windows/include/plib/ul.h	/^enum ulSeverity$/;"	g
ulSeverity	src/windows/include/ul.h	/^enum ulSeverity$/;"	g
ulSleep	src/windows/include/plib/ul.h	/^inline void ulSleep ( int seconds )$/;"	f
ulSleep	src/windows/include/ul.h	/^inline void ulSleep ( int seconds )$/;"	f
unRef	src/windows/include/plib/sl.h	/^  void unRef () { ref_count-- ; }$/;"	f	class:slEnvelope
unRef	src/windows/include/plib/sl.h	/^  void unRef () { ref_count-- ; }$/;"	f	class:slSample
uncompress	src/windows/include/zconf.h	34;"	d
undamaged	src/drivers/berniw/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	src/drivers/berniw2/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	src/drivers/berniw3/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	src/drivers/inferno/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	src/drivers/lliaw/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
undamaged	src/drivers/tita/mycar.h	/^		int undamaged;$/;"	m	class:MyCar
unicode_byte_type	src/libs/txml/xmltok.c	/^static int unicode_byte_type(char hi, char lo)$/;"	f	file:
unique	src/windows/include/plib/ssg.h	/^  int   unique ;  \/* A unique number for this node *\/$/;"	m	class:ssgBase
unit	src/libs/tgf/params.cpp	/^    char				*unit;		\/* for output only *\/$/;"	m	struct:param	file:
unit	src/modules/graphic/ssggraph/grshadow.h	/^  float unit;$/;"	m	class:ssgVtxTableShadow
unknown	src/tools/nfs2ac/mainnfs2ac.cpp	/^    char  unknown [12];$/;"	m	struct:__anon33	file:
unknownEncodingData	src/libs/txml/xmlparse.c	/^  void *unknownEncodingData;$/;"	m	struct:__anon82	file:
unknownEncodingData	src/libs/txml/xmlparse.c	273;"	d	file:
unknownEncodingHandler	src/libs/txml/xmlparse.c	/^  XML_UnknownEncodingHandler unknownEncodingHandler;$/;"	m	struct:__anon82	file:
unknownEncodingHandler	src/libs/txml/xmlparse.c	269;"	d	file:
unknownEncodingHandlerData	src/libs/txml/xmlparse.c	/^  void *unknownEncodingHandlerData;$/;"	m	struct:__anon82	file:
unknownEncodingHandlerData	src/libs/txml/xmlparse.c	274;"	d	file:
unknownEncodingMem	src/libs/txml/xmlparse.c	/^  void *unknownEncodingMem;$/;"	m	struct:__anon82	file:
unknownEncodingMem	src/libs/txml/xmlparse.c	272;"	d	file:
unknownEncodingRelease	src/libs/txml/xmlparse.c	/^  void (*unknownEncodingRelease)(void *);$/;"	m	struct:__anon82	file:
unknownEncodingRelease	src/libs/txml/xmlparse.c	276;"	d	file:
unknown_chunks	src/windows/include/png.h	/^   png_unknown_chunkp unknown_chunks;$/;"	m	struct:png_info_struct
unknown_chunks_num	src/windows/include/png.h	/^   png_size_t unknown_chunks_num;$/;"	m	struct:png_info_struct
unknown_encoding	src/libs/txml/xmltok.c	/^struct unknown_encoding {$/;"	s	file:
unknown_isInvalid	src/libs/txml/xmltok.c	/^int unknown_isInvalid(const ENCODING *enc, const char *p)$/;"	f	file:
unknown_isName	src/libs/txml/xmltok.c	/^int unknown_isName(const ENCODING *enc, const char *p)$/;"	f	file:
unknown_isNmstrt	src/libs/txml/xmltok.c	/^int unknown_isNmstrt(const ENCODING *enc, const char *p)$/;"	f	file:
unknown_toUtf16	src/libs/txml/xmltok.c	/^void unknown_toUtf16(const ENCODING *enc,$/;"	f	file:
unknown_toUtf8	src/libs/txml/xmltok.c	/^void unknown_toUtf8(const ENCODING *enc,$/;"	f	file:
unparsedEntityDeclHandler	src/libs/txml/xmlparse.c	/^  XML_UnparsedEntityDeclHandler unparsedEntityDeclHandler;$/;"	m	struct:__anon82	file:
unparsedEntityDeclHandler	src/libs/txml/xmlparse.c	266;"	d	file:
unselectedScrollList	src/libs/racescreens/driverselect.cpp	/^static int		selectedScrollList, unselectedScrollList;$/;"	v	file:
up	export/include/xml.h	/^    struct xmlElement	*up;		\/* upper element *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
up	src/libs/txml/xml.h	/^    struct xmlElement	*up;		\/* upper element *\/$/;"	m	struct:xmlElement	typeref:struct:xmlElement::xmlElement
up	src/modules/graphic/ssggraph/grcam.h	/^    sgVec3 up;$/;"	m	class:cGrCamera
up_row	src/windows/include/png.h	/^   png_bytep up_row;          \/* buffer to save "up" row when filtering *\/$/;"	m	struct:png_struct_def
update	export/include/simu.h	/^    tfSimUpdate   update;$/;"	m	struct:__anon204
update	export/include/telemetry.h	/^    tftlmUpdate			update;			\/* Update telemetry *\/$/;"	m	struct:__anon215
update	src/drivers/berniw/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	src/drivers/berniw/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	src/drivers/berniw2/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	src/drivers/berniw2/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	src/drivers/berniw3/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	src/drivers/berniw3/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	src/drivers/bt/cardata.cpp	/^void Cardata::update()$/;"	f	class:Cardata
update	src/drivers/bt/cardata.cpp	/^void SingleCardata::update()$/;"	f	class:SingleCardata
update	src/drivers/bt/driver.cpp	/^void Driver::update(tSituation *s)$/;"	f	class:Driver
update	src/drivers/bt/learn.cpp	/^void SegLearn::update(tSituation *s, tTrack *t, tCarElt *car, int alone, float offset, float outside, float *r)$/;"	f	class:SegLearn
update	src/drivers/bt/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:Opponent
update	src/drivers/bt/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:Opponents
update	src/drivers/bt/pit.cpp	/^void Pit::update()$/;"	f	class:Pit
update	src/drivers/bt/strategy.cpp	/^void SimpleStrategy2::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
update	src/drivers/bt/strategy.cpp	/^void SimpleStrategy::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
update	src/drivers/damned/cardata.cpp	/^void Cardata::update()$/;"	f	class:Cardata
update	src/drivers/damned/cardata.cpp	/^void SingleCardata::update()$/;"	f	class:SingleCardata
update	src/drivers/damned/driver.cpp	/^void Driver::update(tSituation *s)$/;"	f	class:Driver
update	src/drivers/damned/learn.cpp	/^void SegLearn::update(tSituation *s, tTrack *t, tCarElt *car, int alone, float offset, float outside, float *r)$/;"	f	class:SegLearn
update	src/drivers/damned/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:Opponent
update	src/drivers/damned/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:Opponents
update	src/drivers/damned/pit.cpp	/^void Pit::update()$/;"	f	class:Pit
update	src/drivers/damned/strategy.cpp	/^void SimpleStrategy2::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
update	src/drivers/damned/strategy.cpp	/^void SimpleStrategy::update(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy
update	src/drivers/inferno/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	src/drivers/inferno/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	src/drivers/lliaw/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	src/drivers/lliaw/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	src/drivers/olethros/cardata.cpp	/^void Cardata::update()$/;"	f	class:olethros::Cardata
update	src/drivers/olethros/cardata.cpp	/^void SingleCardata::update()$/;"	f	class:olethros::SingleCardata
update	src/drivers/olethros/driver.cpp	/^    void Driver::update(tSituation *s)$/;"	f	class:olethros::Driver
update	src/drivers/olethros/learn.cpp	/^void SegLearn::update(tSituation *s, tTrack *t, tCarElt *car, int alone, float offset, float outside, float *r, float alpha, float speed, float limit)$/;"	f	class:SegLearn
update	src/drivers/olethros/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:olethros::Opponent
update	src/drivers/olethros/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:olethros::Opponents
update	src/drivers/olethros/pit.cpp	/^void Pit::update()$/;"	f	class:olethros::Pit
update	src/drivers/olethros/strategy.cpp	/^void SimpleStrategy::update(tCarElt* car, tSituation *s)$/;"	f	class:olethros::SimpleStrategy
update	src/drivers/sparkle/driver.cpp	/^void Driver::update(tSituation *s)$/;"	f	class:Driver
update	src/drivers/sparkle/opponent.cpp	/^void Opponent::update(tSituation *s, Driver *driver)$/;"	f	class:Opponent
update	src/drivers/sparkle/opponent.cpp	/^void Opponents::update(tSituation *s, Driver *driver)$/;"	f	class:Opponents
update	src/drivers/sparkle/pit.cpp	/^void Pit::update()$/;"	f	class:Pit
update	src/drivers/tita/mycar.cpp	/^void MyCar::update(TrackDesc* track, tCarElt* car, tSituation *situation)$/;"	f	class:MyCar
update	src/drivers/tita/mycar.cpp	/^void OtherCar::update()$/;"	f	class:OtherCar
update	src/interfaces/simu.h	/^    tfSimUpdate   update;$/;"	m	struct:__anon164
update	src/interfaces/telemetry.h	/^    tftlmUpdate			update;			\/* Update telemetry *\/$/;"	m	struct:__anon170
update	src/modules/graphic/ssggraph/CarSoundData.cpp	/^void CarSoundData::update (tCarElt* car)$/;"	f	class:CarSoundData
update	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^void OpenalSoundInterface::update(CarSoundData** car_sound_data, int n_cars, sgVec3 p_obs, sgVec3 u_obs, sgVec3 c_obs, sgVec3 a_obs)$/;"	f	class:OpenalSoundInterface
update	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^void PlibSoundInterface::update(CarSoundData** car_sound_data, int n_cars, sgVec3 p_obs, sgVec3 u_obs, sgVec3 c_obs, sgVec3 a_obs)$/;"	f	class:PlibSoundInterface
update	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual void update(CarSoundData** car_sound_data,$/;"	f	class:SoundInterface
update	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void OpenalTorcsSound::update ()$/;"	f	class:OpenalTorcsSound
update	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void PlibTorcsSound::update()$/;"	f	class:PlibTorcsSound
update	src/modules/graphic/ssggraph/TorcsSound.cpp	/^void SoundSource::update()$/;"	f	class:SoundSource
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamBehind
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamBehind2
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamCenter
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamFront
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamInside
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamInsideFixedCar
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamLookAt
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadFly
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadNoZoom
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadZoom
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamRoadZoomTVD
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamSide
update	src/modules/graphic/ssggraph/grcam.cpp	/^    void update(tCarElt *car, tSituation *s) {$/;"	f	class:cGrCarCamUp
update	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrBackgroundCam::update(cGrCamera *curCam)$/;"	f	class:cGrBackgroundCam
update	src/modules/graphic/ssggraph/grcam.cpp	/^void cGrCarCamMirror::update(tCarElt *car, tSituation * \/* s *\/)$/;"	f	class:cGrCarCamMirror
update	src/modules/graphic/ssggraph/grcam.h	/^    void update(tCarElt *car, tSituation *s) { }$/;"	f	class:cGrOrthoCamera
update	src/modules/graphic/ssggraph/grcam.h	/^    void update(tCarElt *car, tSituation *s) {}$/;"	f	class:cGrBackgroundCam
update	src/modules/graphic/ssggraph/grscreen.cpp	/^void cGrScreen::update(tSituation *s, float Fps)$/;"	f	class:cGrScreen
update	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.cpp	/^inline void update(const Endpoint& a, const Endpoint& b) {$/;"	f
update	src/windows/include/plib/sg.h	/^  void update ( float dt )$/;"	f	class:sgParticle
update	src/windows/include/plib/sg.h	/^  void update ()$/;"	f	class:sgSpringDamper
update	src/windows/include/plib/sl.h	/^  void update     () { realUpdate ( SL_FALSE ) ; }$/;"	f	class:slScheduler
update	src/windows/include/plib/ssgaParticleSystem.h	/^  void update ( float dt )$/;"	f	class:ssgaParticle
updateAccel	src/drivers/olethros/learn.cpp	/^float SegLearn::updateAccel (tSituation* s, tCarElt* car, float taccel, float derr, float dtm)$/;"	f	class:SegLearn
updateButtonText	src/libs/confscreens/controlconfig.cpp	/^updateButtonText(void)$/;"	f	file:
updateCa	src/drivers/berniw/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	src/drivers/berniw2/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	src/drivers/berniw3/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	src/drivers/inferno/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	src/drivers/lliaw/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCa	src/drivers/tita/mycar.cpp	/^void MyCar::updateCa()$/;"	f	class:MyCar
updateCompressARBEnabled	src/libs/tgfclient/glfeatures.cpp	/^void updateCompressARBEnabled(void)$/;"	f
updateDError	src/drivers/berniw/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	src/drivers/berniw2/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	src/drivers/berniw3/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	src/drivers/inferno/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	src/drivers/lliaw/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDError	src/drivers/tita/mycar.cpp	/^void MyCar::updateDError()$/;"	f	class:MyCar
updateDir	src/drivers/berniw/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	src/drivers/berniw2/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	src/drivers/berniw3/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); dir.z = 0.0; }$/;"	f	class:AbstractCar
updateDir	src/drivers/inferno/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); }$/;"	f	class:AbstractCar
updateDir	src/drivers/lliaw/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); }$/;"	f	class:AbstractCar
updateDir	src/drivers/tita/mycar.h	/^		inline void updateDir() { dir.x = cos(me->_yaw); dir.y = sin(me->_yaw); }$/;"	f	class:AbstractCar
updateFuelStrategy	src/drivers/bt/strategy.cpp	/^void SimpleStrategy2::updateFuelStrategy(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
updateFuelStrategy	src/drivers/damned/strategy.cpp	/^void SimpleStrategy2::updateFuelStrategy(tCarElt* car, tSituation *s)$/;"	f	class:SimpleStrategy2
updateKeys	src/drivers/human/human.cpp	/^updateKeys(void)$/;"	f	file:
updateLabelText	src/libs/tgfclient/screen.cpp	/^updateLabelText(void)$/;"	f	file:
updateOCar	src/drivers/berniw/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	src/drivers/berniw2/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	src/drivers/berniw3/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	src/drivers/inferno/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	src/drivers/lliaw/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOCar	src/drivers/tita/pathfinder.cpp	/^inline int Pathfinder::updateOCar(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o)$/;"	f	class:Pathfinder
updateOverlapTimer	src/drivers/berniw/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	src/drivers/berniw2/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	src/drivers/berniw3/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	src/drivers/bt/opponent.cpp	/^void Opponent::updateOverlapTimer(tSituation *s, tCarElt *mycar)$/;"	f	class:Opponent
updateOverlapTimer	src/drivers/damned/opponent.cpp	/^void Opponent::updateOverlapTimer(tSituation *s, tCarElt *mycar)$/;"	f	class:Opponent
updateOverlapTimer	src/drivers/inferno/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	src/drivers/lliaw/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updateOverlapTimer	src/drivers/olethros/opponent.cpp	/^void Opponent::updateOverlapTimer(tSituation *s, tCarElt *mycar)$/;"	f	class:olethros::Opponent
updateOverlapTimer	src/drivers/tita/pathfinder.cpp	/^inline void Pathfinder::updateOverlapTimer(int trackSegId, tSituation *s, MyCar* myc, OtherCar* ocar, tOCar* o, tOverlapTimer* ov)$/;"	f	class:Pathfinder
updatePos	src/drivers/berniw/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	src/drivers/berniw2/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	src/drivers/berniw3/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; currentpos.z = me->_pos_Z - cgh; }$/;"	f	class:AbstractCar
updatePos	src/drivers/inferno/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; }$/;"	f	class:AbstractCar
updatePos	src/drivers/lliaw/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; }$/;"	f	class:AbstractCar
updatePos	src/drivers/tita/mycar.h	/^		inline void updatePos() { currentpos.x = me->_pos_X; currentpos.y = me->_pos_Y; }$/;"	f	class:AbstractCar
updatePosition	src/libs/txml/xmltok.h	/^  void (*updatePosition)(const ENCODING *,$/;"	m	struct:encoding
updatePosition	src/libs/txml/xmltok_impl.c	/^void PREFIX(updatePosition)(const ENCODING *enc,$/;"	f	file:
updateSpeed	src/drivers/berniw/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	src/drivers/berniw2/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	src/drivers/berniw3/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	src/drivers/inferno/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	src/drivers/lliaw/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeed	src/drivers/tita/mycar.h	/^		inline void updateSpeed() { speed = sqrt(speedsqr); }$/;"	f	class:AbstractCar
updateSpeedSqr	src/drivers/berniw/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	src/drivers/berniw2/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	src/drivers/berniw3/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	src/drivers/inferno/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	src/drivers/lliaw/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpeedSqr	src/drivers/tita/mycar.h	/^		inline void updateSpeedSqr() { speedsqr = (me->_speed_x)*(me->_speed_x) + (me->_speed_y)*(me->_speed_y) + (me->_speed_z)*(me->_speed_z); }$/;"	f	class:AbstractCar
updateSpool	src/modules/simu/simuv2/differential.cpp	/^static void updateSpool(tCar *car, tDifferential *differential, int first)$/;"	f	file:
updateTransform	src/windows/include/plib/ssg.h	/^  void updateTransform ()$/;"	f	class:ssgBaseTransform
updateUserTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^void updateUserTextureMaxSize(void)$/;"	f
updateid	src/drivers/bt/learn.h	/^		int *updateid;$/;"	m	class:SegLearn
updateid	src/drivers/damned/learn.h	/^		int *updateid;$/;"	m	class:SegLearn
updateid	src/drivers/olethros/learn.h	/^	int *updateid; \/\/\/< Array holding the segments to be update$/;"	m	class:olethros::SegLearn
updatepath	installer/loki/setup.data/scripts/tools_finalize.sh	/^function updatepath () {$/;"	f
updt_bbox	src/tools/texmapper/maintexmapper.cpp	/^void updt_bbox(ssgEntity *start, sgVec3 min, sgVec3 max)$/;"	f
upper	src/modules/simu/simuv2/SOLID-2.0/src/Object.h	/^  Endpoint upper[3];$/;"	m	class:Object
upward_speed	src/windows/include/plib/ssgaFire.h	/^  float upward_speed ;$/;"	m	class:ssgaFire
urandom	src/libs/learning/Distribution.cpp	/^real urandom()$/;"	f
urandom	src/libs/learning/Distribution.cpp	/^real urandom(real min, real max)$/;"	f
urandom	src/modules/graphic/ssggraph/grmain.h	/^inline float urandom() {$/;"	f
urandom	src/modules/simu/simuv2/sim.h	/^inline float urandom() {$/;"	f
usage	robotgen	/^function usage() {$/;"	f
usage	src/misc/png2jpg/png2jpg.c	/^static void usage(void)$/;"	f	file:
usage	src/tools/accc/mainaccc.cpp	/^void usage(void)$/;"	f
usage	src/tools/nfsperf/mainnfsperf.cpp	/^void usage(void)$/;"	f
usage	src/tools/texmapper/maintexmapper.cpp	/^void usage(void)$/;"	f
usage	src/tools/trackgen/maintrackgen.cpp	/^void usage(void)$/;"	f
useConfidenceEstimates	src/libs/learning/ann_policy.cpp	/^bool ANN_Policy::useConfidenceEstimates (bool confidence, real zeta) {$/;"	f	class:ANN_Policy
useConfidenceEstimates	src/libs/learning/policy.cpp	/^bool DiscretePolicy::useConfidenceEstimates (bool confidence, real zeta, bool confidence_eligibility) {$/;"	f	class:DiscretePolicy
useGibbsConfidence	src/libs/learning/policy.cpp	/^void DiscretePolicy::useGibbsConfidence (bool gibbs)$/;"	f	class:DiscretePolicy
useReliabilityEstimate	src/libs/learning/policy.cpp	/^void DiscretePolicy::useReliabilityEstimate (bool ri)$/;"	f	class:DiscretePolicy
useSoftmax	src/libs/learning/policy.cpp	/^void DiscretePolicy::useSoftmax (bool softmax) $/;"	f	class:DiscretePolicy
useStrip	src/tools/accc/mainaccc.cpp	/^int useStrip=0;$/;"	v
used	src/libs/txml/hashtable.h	/^  size_t used;$/;"	m	struct:__anon73
usedFG	src/libs/tgfclient/screen.cpp	/^static int usedFG = 0;$/;"	v	file:
usedGM	src/libs/tgfclient/screen.cpp	/^static int usedGM = 0;$/;"	v	file:
usedLim	src/libs/txml/hashtable.h	/^  size_t usedLim;$/;"	m	struct:__anon73
usegroup	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              usegroup=TRUE;$/;"	v	file:
usenormal	src/modules/graphic/ssggraph/grloadac.cpp	/^static int		usenormal = 0;$/;"	v	file:
userActData	src/libs/tgfclient/gui.h	/^    void		*userActData;$/;"	m	struct:__anon68
userData	export/include/tgf.h	/^    void		*userData;	\/**< User data *\/$/;"	m	struct:FList
userData	export/include/tgfclient.h	/^    void	*userData;	\/**< Associated user data *\/$/;"	m	struct:ScrollBarInfo
userData	src/libs/tgf/tgf.h	/^    void		*userData;	\/**< User data *\/$/;"	m	struct:FList
userData	src/libs/tgfclient/gui.h	/^    void			*userData;$/;"	m	struct:GfuiListElement
userData	src/libs/tgfclient/gui.h	/^    void		*userData;$/;"	m	struct:GfuiKey
userData	src/libs/tgfclient/gui.h	/^    void		*userData;$/;"	m	struct:__anon64
userData	src/libs/tgfclient/tgfclient.h	/^    void	*userData;	\/**< Associated user data *\/$/;"	m	struct:ScrollBarInfo
userData	src/libs/txml/xmlparse.c	/^  void *userData;$/;"	m	struct:__anon82	file:
userData	src/libs/txml/xmlparse.c	259;"	d	file:
userData	src/libs/txml/xmltok.c	/^  void *userData;$/;"	m	struct:unknown_encoding	file:
userData	src/windows/include/plib/ssgaParticleSystem.h	/^  void *userData ;$/;"	m	class:ssgaParticle
userDataOnFocus	src/libs/tgfclient/gui.h	/^    void		*userDataOnFocus;$/;"	m	struct:__anon61
userDataOnFocus	src/libs/tgfclient/gui.h	/^    void		*userDataOnFocus;$/;"	m	struct:__anon62
userDataOnFocus	src/libs/tgfclient/gui.h	/^    void		*userDataOnFocus;$/;"	m	struct:__anon65
userDataOnPush	src/libs/tgfclient/gui.h	/^    void		*userDataOnPush;$/;"	m	struct:__anon61
userDataOnPush	src/libs/tgfclient/gui.h	/^    void		*userDataOnPush;$/;"	m	struct:__anon62
userDataOnSelect	src/libs/tgfclient/gui.h	/^    void		*userDataOnSelect;$/;"	m	struct:__anon63
userDeactData	src/libs/tgfclient/gui.h	/^    void		*userDeactData;$/;"	m	struct:__anon68
userKeys	src/libs/tgfclient/gui.h	/^    tGfuiKey		*userKeys;$/;"	m	struct:__anon68
userSpecKeys	src/libs/tgfclient/gui.h	/^    tGfuiKey		*userSpecKeys;$/;"	m	struct:__anon68
userTextureMaxSize	src/libs/tgfclient/glfeatures.cpp	/^static int userTextureMaxSize;$/;"	v	file:
user_chunk_ptr	src/windows/include/png.h	/^   png_voidp user_chunk_ptr;$/;"	m	struct:png_struct_def
user_data	src/windows/include/plib/ssg.h	/^  ssgBase *user_data ;$/;"	m	class:ssgBase
user_input	src/linux/main.cpp	/^double *user_input;$/;"	v
user_transform_channels	src/windows/include/png.h	/^   png_byte user_transform_channels; \/* channels in user transformed pixels *\/$/;"	m	struct:png_struct_def
user_transform_depth	src/windows/include/png.h	/^   png_byte user_transform_depth;    \/* bit depth of user transformed pixels *\/$/;"	m	struct:png_struct_def
user_transform_ptr	src/windows/include/png.h	/^   png_voidp user_transform_ptr; \/* user supplied struct for user transform *\/$/;"	m	struct:png_struct_def
usestrip	src/modules/graphic/ssggraph/grloadac.cpp	/^static int              usestrip=TRUE;$/;"	v	file:
usr_bit_depth	src/windows/include/png.h	/^   png_byte usr_bit_depth;    \/* bit depth of users row *\/$/;"	m	struct:png_struct_def
usr_channels	src/windows/include/png.h	/^   png_byte usr_channels;     \/* channels at start of write *\/$/;"	m	struct:png_struct_def
usr_width	src/windows/include/png.h	/^   png_uint_32 usr_width;     \/* width of row at start of write *\/$/;"	m	struct:png_struct_def
utf16	src/libs/txml/xmltok.c	/^  unsigned short utf16[256];$/;"	m	struct:unknown_encoding	file:
utf16Convert	src/libs/txml/xmltok.h	/^  void (*utf16Convert)(const ENCODING *enc,$/;"	m	struct:encoding
utf8	src/libs/txml/xmltok.c	/^  char utf8[256][4];$/;"	m	struct:unknown_encoding	file:
utf8Convert	src/libs/txml/xmltok.h	/^  void (*utf8Convert)(const ENCODING *enc,$/;"	m	struct:encoding
utf8_encoding	src/libs/txml/xmltok.c	/^static const struct normal_encoding utf8_encoding = {$/;"	v	typeref:struct:normal_encoding	file:
utf8_isInvalid2	src/libs/txml/xmltok.c	116;"	d	file:
utf8_isInvalid3	src/libs/txml/xmltok.c	/^int utf8_isInvalid3(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isInvalid4	src/libs/txml/xmltok.c	/^int utf8_isInvalid4(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isName2	src/libs/txml/xmltok.c	/^int utf8_isName2(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isName3	src/libs/txml/xmltok.c	/^int utf8_isName3(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isName4	src/libs/txml/xmltok.c	100;"	d	file:
utf8_isNmstrt2	src/libs/txml/xmltok.c	/^int utf8_isNmstrt2(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isNmstrt3	src/libs/txml/xmltok.c	/^int utf8_isNmstrt3(const ENCODING *enc, const char *p)$/;"	f	file:
utf8_isNmstrt4	src/libs/txml/xmltok.c	114;"	d	file:
utf8_toUtf16	src/libs/txml/xmltok.c	/^void utf8_toUtf16(const ENCODING *enc,$/;"	f	file:
utf8_toUtf8	src/libs/txml/xmltok.c	/^void utf8_toUtf8(const ENCODING *enc,$/;"	f	file:
v	export/include/learning/ANN.h	/^	real v; \/\/\/<variance estimate$/;"	m	struct:Connection_
v	src/libs/learning/ANN.h	/^	real v; \/\/\/<variance estimate$/;"	m	struct:Connection_
v	src/libs/txml/hashtable.h	/^  NAMED **v;$/;"	m	struct:__anon73
v	src/modules/simu/simuv2/susp.h	/^    tdble v; \/* suspension travel speed *\/$/;"	m	struct:Suspension
v	src/tools/accc/accc.h	/^  double v;$/;"	m	struct:tcoord
v	src/tools/texmapper/ssgSaveAC.cpp	/^  int    v [ 3 ] ;$/;"	m	struct:saveTriangle	file:
v	src/tools/trackgen/easymesh.cpp	/^    double	v;$/;"	m	struct:ref	file:
v	src/tools/trackgen/objects.cpp	/^  int    v[3];$/;"	m	struct:saveTriangle	file:
v0	src/windows/include/plib/ssgaLensFlare.h	/^  ssgVertexArray   *v0 ;$/;"	m	class:ssgaLensFlare
v1	src/modules/simu/simuv2/susp.h	/^    tdble C1, b1, v1; \/* coefs for slow *\/$/;"	m	struct:__anon15
v2d	src/drivers/olethros/linalg.h	/^		v2d() {}$/;"	f	class:v2d
v2d	src/drivers/olethros/linalg.h	/^		v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	src/drivers/olethros/linalg.h	/^		v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	src/drivers/olethros/linalg.h	/^class v2d {$/;"	c
v2d	src/drivers/sparkle/linalg.h	/^        v2d() {}$/;"	f	class:v2d
v2d	src/drivers/sparkle/linalg.h	/^        v2d(const v2d &src) { this->x = src.x; this->y = src.y; }$/;"	f	class:v2d
v2d	src/drivers/sparkle/linalg.h	/^        v2d(float x, float y) { this->x = x; this->y = y; }$/;"	f	class:v2d
v2d	src/drivers/sparkle/linalg.h	/^class v2d {$/;"	c
v2t	export/include/tmath/v2_t.h	/^		v2t() {}$/;"	f	class:v2t
v2t	export/include/tmath/v2_t.h	/^		v2t(const T s):x(s), y(s) {}$/;"	f	class:v2t
v2t	export/include/tmath/v2_t.h	/^		v2t(const T x, const T y):x(x), y(y) {}$/;"	f	class:v2t
v2t	export/include/tmath/v2_t.h	/^		v2t(const v2t<T> &src):x(src.x), y(src.y) {}$/;"	f	class:v2t
v2t	export/include/tmath/v2_t.h	/^template<class T> class v2t {$/;"	c
v2t	src/libs/math/v2_t.h	/^		v2t() {}$/;"	f	class:v2t
v2t	src/libs/math/v2_t.h	/^		v2t(const T s):x(s), y(s) {}$/;"	f	class:v2t
v2t	src/libs/math/v2_t.h	/^		v2t(const T x, const T y):x(x), y(y) {}$/;"	f	class:v2t
v2t	src/libs/math/v2_t.h	/^		v2t(const v2t<T> &src):x(src.x), y(src.y) {}$/;"	f	class:v2t
v2t	src/libs/math/v2_t.h	/^template<class T> class v2t {$/;"	c
v3d	src/drivers/berniw/linalg.h	/^		v3d() {}$/;"	f	class:v3d
v3d	src/drivers/berniw/linalg.h	/^		v3d(const v3d &src) { this->x = src.x; this->y = src.y; this->z = src.z; }$/;"	f	class:v3d
v3d	src/drivers/berniw/linalg.h	/^		v3d(double x, double y, double z) { this->x = x; this->y = y; this->z = z; }$/;"	f	class:v3d
v3d	src/drivers/berniw/linalg.h	/^class v3d {$/;"	c
v3d	src/drivers/berniw2/linalg.h	/^		v3d() {}$/;"	f	class:v3d
v3d	src/drivers/berniw2/linalg.h	/^		v3d(const v3d &src) { this->x = src.x; this->y = src.y; this->z = src.z; }$/;"	f	class:v3d
v3d	src/drivers/berniw2/linalg.h	/^		v3d(double x, double y, double z) { this->x = x; this->y = y; this->z = z; }$/;"	f	class:v3d
v3d	src/drivers/berniw2/linalg.h	/^class v3d {$/;"	c
v3d	src/drivers/berniw3/linalg.h	/^		v3d() {}$/;"	f	class:v3d
v3d	src/drivers/berniw3/linalg.h	/^		v3d(const v3d &src) { this->x = src.x; this->y = src.y; this->z = src.z; }$/;"	f	class:v3d
v3d	src/drivers/berniw3/linalg.h	/^		v3d(double x, double y, double z) { this->x = x; this->y = y; this->z = z; }$/;"	f	class:v3d
v3d	src/drivers/berniw3/linalg.h	/^class v3d {$/;"	c
v3t	export/include/tmath/v3_t.h	/^		v3t() {}$/;"	f	class:v3t
v3t	export/include/tmath/v3_t.h	/^		v3t(const T s):x(s), y(s), z(s) {}$/;"	f	class:v3t
v3t	export/include/tmath/v3_t.h	/^		v3t(const T x, const T y, const T z):x(x), y(y), z(z) {}$/;"	f	class:v3t
v3t	export/include/tmath/v3_t.h	/^		v3t(const v3t<T> &src):x(src.x), y(src.y), z(src.z) {}$/;"	f	class:v3t
v3t	export/include/tmath/v3_t.h	/^template<class T> class v3t {$/;"	c
v3t	src/libs/math/v3_t.h	/^		v3t() {}$/;"	f	class:v3t
v3t	src/libs/math/v3_t.h	/^		v3t(const T s):x(s), y(s), z(s) {}$/;"	f	class:v3t
v3t	src/libs/math/v3_t.h	/^		v3t(const T x, const T y, const T z):x(x), y(y), z(z) {}$/;"	f	class:v3t
v3t	src/libs/math/v3_t.h	/^		v3t(const v3t<T> &src):x(src.x), y(src.y), z(src.z) {}$/;"	f	class:v3t
v3t	src/libs/math/v3_t.h	/^template<class T> class v3t {$/;"	c
v4t	export/include/tmath/v4_t.h	/^		v4t() {}$/;"	f	class:v4t
v4t	export/include/tmath/v4_t.h	/^		v4t(const T s):x(s), y(s), z(s), w(s) {}$/;"	f	class:v4t
v4t	export/include/tmath/v4_t.h	/^		v4t(const T x, const T y, const T z, const T w):x(x), y(y), z(z), w(w) {}$/;"	f	class:v4t
v4t	export/include/tmath/v4_t.h	/^		v4t(const v4t<T> &src):x(src.x), y(src.y), z(src.z), w(src.w) {}$/;"	f	class:v4t
v4t	export/include/tmath/v4_t.h	/^template<class T> class v4t {$/;"	c
v4t	src/libs/math/v4_t.h	/^		v4t() {}$/;"	f	class:v4t
v4t	src/libs/math/v4_t.h	/^		v4t(const T s):x(s), y(s), z(s), w(s) {}$/;"	f	class:v4t
v4t	src/libs/math/v4_t.h	/^		v4t(const T x, const T y, const T z, const T w):x(x), y(y), z(z), w(w) {}$/;"	f	class:v4t
v4t	src/libs/math/v4_t.h	/^		v4t(const v4t<T> &src):x(src.x), y(src.y), z(src.z), w(src.w) {}$/;"	f	class:v4t
v4t	src/libs/math/v4_t.h	/^template<class T> class v4t {$/;"	c
vQ	export/include/learning/policy.h	/^	real** vQ; \/\/\/< variance estimate for Q$/;"	m	class:DiscretePolicy
vQ	src/libs/learning/policy.h	/^	real** vQ; \/\/\/< variance estimate for Q$/;"	m	class:DiscretePolicy
vSpace	export/include/track.h	/^    tdble	vSpace;$/;"	m	struct:__anon184
vSpace	src/interfaces/track.h	/^    tdble	vSpace;$/;"	m	struct:__anon151
v_index	src/windows/include/plib/ssg.h	/^  sgVec3 *vertices  ; int num_vertices  ; unsigned short *v_index ;$/;"	m	class:ssgVTable
va	src/tools/accc/accc.h	/^  int      * va;$/;"	m	struct:ob
val	export/include/tgf.h	/^    tdble	val[GF_MEAN_MAX_VAL+1];$/;"	m	struct:__anon194
val	src/drivers/human/pref.h	/^    int		val;		\/* control index *\/$/;"	m	struct:__anon144
val	src/libs/tgf/params.cpp	/^	char *val;$/;"	m	struct:parmHandle	file:
val	src/libs/tgf/params.cpp	/^    char				*val;$/;"	m	struct:within	file:
val	src/libs/tgf/tgf.h	/^    tdble	val[GF_MEAN_MAX_VAL+1];$/;"	m	struct:__anon52
val	src/libs/tgfclient/control.cpp	/^    int		val;$/;"	m	struct:__anon59	file:
val	src/modules/telemetry/telemetry.cpp	/^    tdble		*val;	\/* monitored value *\/$/;"	m	struct:Channel	file:
valid	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^inline bool valid(int s) {  $/;"	f
valid	src/windows/include/png.h	/^   png_uint_32 valid;       \/* valid chunk data (see PNG_INFO_ below) *\/$/;"	m	struct:png_info_struct
valnum	src/libs/tgf/params.cpp	/^    tdble				valnum;$/;"	m	struct:param	file:
value	export/include/xml.h	/^    char		*value;$/;"	m	struct:xmlAttribute
value	src/libs/tgf/params.cpp	/^    char				*value;		\/**< Value of the parameter *\/$/;"	m	struct:param	file:
value	src/libs/txml/xml.h	/^    char		*value;$/;"	m	struct:xmlAttribute
value	src/libs/txml/xmlparse.c	/^  const XML_Char *value;$/;"	m	struct:__anon79	file:
value	src/windows/include/plib/sl.h	/^  float        *value          ;$/;"	m	class:slEnvelope
valueEnd	src/libs/txml/xmltok.h	/^  const char *valueEnd;$/;"	m	struct:__anon69
valuePtr	src/libs/txml/xmltok.h	/^  const char *valuePtr;$/;"	m	struct:__anon69
valuebuf	src/libs/confscreens/openglconfig.cpp	/^static char valuebuf[10];$/;"	v	file:
vcount	src/tools/texmapper/ssgSaveAC.cpp	/^static int vcount ;$/;"	v	file:
vec	export/include/tmath/v2_t.h	/^			T vec[2];$/;"	m	union:v2t::__anon218
vec	export/include/tmath/v3_t.h	/^			T vec[3];$/;"	m	union:v3t::__anon220
vec	export/include/tmath/v4_t.h	/^			T vec[4];$/;"	m	union:v4t::__anon216
vec	src/libs/math/v2_t.h	/^			T vec[2];$/;"	m	union:v2t::__anon89
vec	src/libs/math/v3_t.h	/^			T vec[3];$/;"	m	union:v3t::__anon91
vec	src/libs/math/v4_t.h	/^			T vec[4];$/;"	m	union:v4t::__anon87
vec2d	export/include/tmath/linalg_t.h	/^typedef v2t<double> vec2d;$/;"	t
vec2d	src/libs/math/linalg_t.h	/^typedef v2t<double> vec2d;$/;"	t
vec2f	export/include/tmath/linalg_t.h	/^typedef v2t<float> vec2f;$/;"	t
vec2f	src/libs/math/linalg_t.h	/^typedef v2t<float> vec2f;$/;"	t
vec3d	export/include/tmath/linalg_t.h	/^typedef v3t<double> vec3d;$/;"	t
vec3d	src/libs/math/linalg_t.h	/^typedef v3t<double> vec3d;$/;"	t
vec3f	export/include/tmath/linalg_t.h	/^typedef v3t<float> vec3f;$/;"	t
vec3f	src/libs/math/linalg_t.h	/^typedef v3t<float> vec3f;$/;"	t
vec4d	export/include/tmath/linalg_t.h	/^typedef v4t<double> vec4d;$/;"	t
vec4d	src/libs/math/linalg_t.h	/^typedef v4t<double> vec4d;$/;"	t
vec4f	export/include/tmath/linalg_t.h	/^typedef v4t<float> vec4f;$/;"	t
vec4f	src/libs/math/linalg_t.h	/^typedef v4t<float> vec4f;$/;"	t
vecProfiles	export/include/tgf.h	/^  std::vector<ProfileInstance *> vecProfiles;$/;"	m	class:Profiler
vecProfiles	src/libs/tgf/tgf.h	/^  std::vector<ProfileInstance *> vecProfiles;$/;"	m	class:Profiler
vectEnd	src/modules/simu/simuv2/simu.cpp	/^t3Dd vectEnd[16];$/;"	v
vectStart	src/modules/simu/simuv2/simu.cpp	/^t3Dd vectStart[16];$/;"	v
vel	export/include/tgf.h	/^    tPosd vel; \/**< velocity *\/$/;"	m	struct:__anon192
vel	src/libs/tgf/tgf.h	/^    tPosd vel; \/**< velocity *\/$/;"	m	struct:__anon50
vel	src/windows/include/plib/sg.h	/^  sgVec3 vel   ;$/;"	m	class:sgParticle
vel	src/windows/include/plib/ssgaParticleSystem.h	/^  sgVec3 vel ;$/;"	m	class:ssgaParticle
verb	src/tools/accc/ac3dload.cpp	/^    char * verb;$/;"	m	struct:verbaction	file:
verbTab	src/tools/accc/ac3dload.cpp	/^verbaction_t verbTab[]={$/;"	v
verbaction	src/tools/accc/ac3dload.cpp	/^typedef struct verbaction {$/;"	s	file:
verbaction_t	src/tools/accc/ac3dload.cpp	/^} verbaction_t;$/;"	t	typeref:struct:verbaction	file:
version	export/include/track.h	/^    int		  version;	\/**< Version of the track type *\/$/;"	m	struct:__anon186
version	src/interfaces/track.h	/^    int		  version;	\/**< Version of the track type *\/$/;"	m	struct:__anon153
version_1_2_2beta1	src/windows/include/png.h	/^typedef png_structp version_1_2_2beta1;$/;"	t
vert	src/tools/accc/ac3dload.cpp	/^int  vert;$/;"	v
vertex	export/include/track.h	/^    t3Dd vertex[4];		\/**< Coord of the 4 corners of the segment.$/;"	m	struct:trackSeg
vertex	src/interfaces/track.h	/^    t3Dd vertex[4];		\/**< Coord of the 4 corners of the segment.$/;"	m	struct:trackSeg
vertex	src/tools/accc/accc.h	/^  point_t  * vertex;$/;"	m	struct:ob
vertex	src/windows/include/plib/ssg.h	/^  sgVec3 vertex ;$/;"	m	struct:ssgInterleavedArrayElement
vertex_count	src/windows/include/plib/ssg.h	/^  int vertex_count ;$/;"	m	class:ssgStatistics
vertexarray	src/tools/accc/accc.h	/^  tcoord_t      * vertexarray;$/;"	m	struct:ob
vertexarray1	src/tools/accc/accc.h	/^  tcoord_t      * vertexarray1;$/;"	m	struct:ob
vertexarray2	src/tools/accc/accc.h	/^  tcoord_t      * vertexarray2;$/;"	m	struct:ob
vertexarray3	src/tools/accc/accc.h	/^  tcoord_t      * vertexarray3;$/;"	m	struct:ob
vertices	src/tools/trackgen/easymesh.cpp	/^    struct vtx	*vertices;$/;"	m	struct:group	typeref:struct:group::vtx	file:
vertices	src/windows/include/plib/ssg.h	/^  sgVec3 *vertices  ; int num_vertices  ; unsigned short *v_index ;$/;"	m	class:ssgVTable
vertices	src/windows/include/plib/ssg.h	/^  ssgVertexArray   *vertices  ;$/;"	m	class:ssgVtxTable
vertices	src/windows/include/plib/ssgaWaveSystem.h	/^  sgVec3 *vertices  ;$/;"	m	class:ssgaWaveSystem
vertlist	src/modules/graphic/ssggraph/grloadac.cpp	/^static ssgIndexArray    *vertlist=NULL;$/;"	v	file:
vexp	src/modules/graphic/ssggraph/grsmoke.h	/^  tdble vexp;$/;"	m	class:ssgVtxTableSmoke
vfov	src/windows/include/plib/sg.h	/^  SGDfloat vfov ;    \/* Vertical   Field of View  -or-  Orthographic Height *\/$/;"	m	class:sgdFrustum
vfov	src/windows/include/plib/sg.h	/^  SGfloat vfov ;    \/* Vertical   Field of View  -or-  Orthographic Height *\/$/;"	m	class:sgFrustum
viewCam	src/modules/graphic/ssggraph/grcam.h	/^    cGrOrthoCamera *viewCam;$/;"	m	class:cGrCarCamMirror
viewRatio	src/modules/graphic/ssggraph/grscreen.h	/^		float viewRatio;$/;"	m	class:cGrScreen
viewable	src/modules/graphic/ssggraph/grcam.cpp	/^    int		viewable;$/;"	m	struct:__anon6	file:
viewmode	src/modules/graphic/ssggraph/grtrackmap.h	/^		int viewmode;$/;"	m	class:cGrTrackMap
viscomax	src/modules/simu/simuv2/differential.h	/^    tdble	viscomax;$/;"	m	struct:__anon20
viscosity	src/modules/simu/simuv2/differential.h	/^    tdble	viscosity;$/;"	m	struct:__anon20
visible	src/libs/tgfclient/gui.h	/^    int		visible;$/;"	m	struct:GfuiObject
visualAttr	export/include/car.h	/^    tVisualAttributes visualAttr; 	\/**< Visual attributes *\/$/;"	m	struct:__anon197
visualAttr	src/interfaces/car.h	/^    tVisualAttributes visualAttr; 	\/**< Visual attributes *\/$/;"	m	struct:__anon157
vlist	src/tools/texmapper/ssgSaveAC.cpp	/^static sgVec3       *vlist ;$/;"	v	file:
voidp	src/windows/include/zconf.h	/^   typedef Byte     *voidp;$/;"	t
voidp	src/windows/include/zconf.h	/^   typedef void     *voidp;$/;"	t
voidp	src/windows/include/zconf.h	48;"	d
voidpf	src/windows/include/zconf.h	/^   typedef Byte FAR *voidpf;$/;"	t
voidpf	src/windows/include/zconf.h	/^   typedef void FAR *voidpf;$/;"	t
voidpf	src/windows/include/zconf.h	47;"	d
volume	src/modules/graphic/ssggraph/TorcsSound.h	/^	float volume; \/\/\/< Current volume$/;"	m	class:TorcsSound
volume_env	src/modules/graphic/ssggraph/TorcsSound.h	/^	slEnvelope* volume_env; \/\/\/< volume envelope$/;"	m	class:PlibTorcsSound
vph	src/modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vpw	src/modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vpx	src/modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vpy	src/modules/graphic/ssggraph/grcam.h	/^    int		vpx, vpy, vpw, vph;	\/* viewport size *\/$/;"	m	class:cGrCarCamMirror
vsnprintf	export/include/portability.h	62;"	d
vsnprintf	src/libs/portability/portability.h	62;"	d
vt	src/modules/simu/simuv2/wheel.h	/^    tdble	vt;$/;"	m	struct:__anon21
vt	src/windows/include/plib/ssgaLensFlare.h	/^  ssgVtxTable      *vt ;$/;"	m	class:ssgaLensFlare
vta	src/modules/graphic/ssggraph/grskidmarks.h	/^  ssgVtxTableShadow	**vta;$/;"	m	struct:__anon2
vtab	src/modules/graphic/ssggraph/grloadac.cpp	/^static sgVec3		*vtab  = NULL ;$/;"	v	file:
vtx	src/modules/graphic/ssggraph/grskidmarks.h	/^  ssgVertexArray	**vtx; \/* the strips *\/$/;"	m	struct:__anon2
vtx	src/tools/trackgen/easymesh.cpp	/^struct vtx$/;"	s	file:
vtxidx	src/tools/trackgen/easymesh.cpp	/^    int		vtxidx;$/;"	m	struct:ref	file:
vvx	src/modules/graphic/ssggraph/grsmoke.h	/^  tdble vvx, vvy,vvz;$/;"	m	class:ssgVtxTableSmoke
vvy	src/modules/graphic/ssggraph/grsmoke.h	/^  tdble vvx, vvy,vvz;$/;"	m	class:ssgVtxTableSmoke
vvz	src/modules/graphic/ssggraph/grsmoke.h	/^  tdble vvx, vvy,vvz;$/;"	m	class:ssgVtxTableSmoke
w	export/include/learning/ANN.h	/^	real w; \/\/\/< weight (=\\f$1\/\\sigma\\f$)$/;"	m	struct:RBFConnection_
w	export/include/learning/ANN.h	/^	real w; \/\/\/< weight$/;"	m	struct:Connection_
w	export/include/tmath/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon216::__anon217
w	src/drivers/olethros/Trajectory.h	/^    std::vector<float> w; \/\/\/< parameters$/;"	m	class:Trajectory
w	src/libs/learning/ANN.h	/^	real w; \/\/\/< weight (=\\f$1\/\\sigma\\f$)$/;"	m	struct:RBFConnection_
w	src/libs/learning/ANN.h	/^	real w; \/\/\/< weight$/;"	m	struct:Connection_
w	src/libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon87::__anon88
waitToTurn	src/drivers/berniw/berniw.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	src/drivers/berniw2/berniw2.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	src/drivers/berniw3/berniw3.cpp	/^static const tdble waitToTurn = 1.0; \/* how long should i wait till i try to turn backwards *\/$/;"	v	file:
waitToTurn	src/drivers/inferno/inferno.cpp	/^static const tdble waitToTurn = 1.0; \/\/ How long should i wait till i try to turn backwards.$/;"	v	file:
waitToTurn	src/drivers/lliaw/lliaw.cpp	/^static const tdble waitToTurn = 1.0; \/\/ How long should i wait till i try to turn backwards.$/;"	v	file:
waitToTurn	src/drivers/tita/tita.cpp	/^static const tdble waitToTurn = 1.0; \/\/ How long should i wait till i try to turn backwards.$/;"	v	file:
warning_fn	src/windows/include/png.h	/^   png_error_ptr warning_fn;  \/* function for printing warnings *\/$/;"	m	struct:png_struct_def
wavehdr	src/windows/include/plib/sl.h	/^   WAVEHDR       *wavehdr[ BUFFER_COUNT ];  \/\/ for round robin ..$/;"	m	class:slDSP
weight	src/drivers/berniw/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight	src/drivers/berniw2/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight	src/drivers/berniw3/pathfinder.h	/^		tdble weight;	\/* weight function value for superposition *\/$/;"	m	class:PathSeg
weight0	src/modules/simu/simuv2/wheel.h	/^    tdble  	weight0;	\/* initial weight on this wheel *\/$/;"	m	struct:__anon21
wheel	export/include/car.h	/^    tWheelSpec	wheel[4];		\/**< Wheels specifications *\/$/;"	m	struct:__anon197
wheel	export/include/car.h	/^    tWheelState	wheel[4];$/;"	m	struct:__anon201
wheel	src/interfaces/car.h	/^    tWheelSpec	wheel[4];		\/**< Wheels specifications *\/$/;"	m	struct:__anon157
wheel	src/interfaces/car.h	/^    tWheelState	wheel[4];$/;"	m	struct:__anon161
wheel	src/modules/graphic/ssggraph/CarSoundData.h	/^	WheelSoundData wheel[4];$/;"	m	class:CarSoundData
wheel	src/modules/simu/simuv2/carstruct.h	/^    tWheel		wheel[4];$/;"	m	struct:__anon18
wheelPos	src/modules/graphic/ssggraph/grcar.h	/^    ssgTransform	*wheelPos[4];$/;"	m	struct:__anon5
wheelRadius	export/include/car.h	/^    tdble	wheelRadius;	\/**< Overall wheel radius *\/$/;"	m	struct:__anon195
wheelRadius	src/interfaces/car.h	/^    tdble	wheelRadius;	\/**< Overall wheel radius *\/$/;"	m	struct:__anon155
wheelRot	src/modules/graphic/ssggraph/grcar.h	/^    ssgTransform	*wheelRot[4];$/;"	m	struct:__anon5
wheelTexture	src/modules/graphic/ssggraph/grcar.h	/^    ssgState		*wheelTexture;$/;"	m	struct:__anon5
wheelbase	src/drivers/berniw/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	src/drivers/berniw2/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	src/drivers/berniw3/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	src/drivers/inferno/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	src/drivers/lliaw/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	src/drivers/tita/mycar.h	/^		double wheelbase;$/;"	m	class:MyCar
wheelbase	src/modules/simu/simuv2/carstruct.h	/^    tdble	wheelbase;$/;"	m	struct:__anon18
wheelselector	src/modules/graphic/ssggraph/grcar.h	/^    ssgSelector		*wheelselector[4];$/;"	m	struct:__anon5
wheeltrack	src/drivers/berniw/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	src/drivers/berniw2/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	src/drivers/berniw3/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	src/drivers/inferno/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	src/drivers/lliaw/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	src/drivers/tita/mycar.h	/^		double wheeltrack;$/;"	m	class:MyCar
wheeltrack	src/modules/simu/simuv2/carstruct.h	/^    tdble	wheeltrack;$/;"	m	struct:__anon18
wheight0	src/modules/simu/simuv2/axle.h	/^    tdble	wheight0;$/;"	m	struct:__anon22
white	src/libs/raceengineclient/racegl.cpp	/^static float white[4]   = {1.0, 1.0, 1.0, 1.0};$/;"	v	file:
white	src/libs/racescreens/loadingscreen.cpp	/^float	white[TEXTLINES][4];$/;"	v
widget	src/libs/tgfclient/gui.h	/^    int		widget;$/;"	m	struct:GfuiObject
width	export/include/track.h	/^	tdble width;				\/**< Width of each pit stop *\/$/;"	m	struct:__anon183
width	export/include/track.h	/^    tdble		width;	\/**< Barrier width *\/$/;"	m	struct:trackBarrier
width	export/include/track.h	/^    tdble	  width;	\/**< main track width *\/$/;"	m	struct:__anon186
width	export/include/track.h	/^    tdble	width;$/;"	m	struct:__anon184
width	export/include/track.h	/^    tdble width;		\/**< Width of the segment (if constant width) *\/$/;"	m	struct:trackSeg
width	src/drivers/berniw/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	src/drivers/berniw2/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	src/drivers/berniw3/trackdesc.h	/^		tdble width;			\/* width of the track segment*\/$/;"	m	class:TrackSegment
width	src/drivers/bt/cardata.h	/^		float width;		\/\/ the cars needed width on the track.$/;"	m	class:SingleCardata
width	src/drivers/damned/cardata.h	/^		float width;		\/\/ the cars needed width on the track.$/;"	m	class:SingleCardata
width	src/drivers/inferno/pathfinder.h	/^	double width;			\/\/ Width of the car in track direction.$/;"	m	struct:__anon136
width	src/drivers/inferno/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment
width	src/drivers/inferno/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment2D
width	src/drivers/lliaw/pathfinder.h	/^	double width;			\/\/ Width of the car in track direction.$/;"	m	struct:__anon129
width	src/drivers/lliaw/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment
width	src/drivers/lliaw/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment2D
width	src/drivers/olethros/cardata.h	/^	float width;		\/\/ the cars needed width on the track.$/;"	m	class:olethros::SingleCardata
width	src/drivers/sparkle/opponent.h	/^		float width;		\/* the cars needed width on the track *\/$/;"	m	class:Opponent
width	src/drivers/tita/pathfinder.h	/^	double width;			\/\/ Width of the car in track direction.$/;"	m	struct:__anon102
width	src/drivers/tita/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment
width	src/drivers/tita/trackdesc.h	/^		tdble width;			\/\/ Width of the track segment.$/;"	m	class:TrackSegment2D
width	src/interfaces/track.h	/^	tdble width;				\/**< Width of each pit stop *\/$/;"	m	struct:__anon150
width	src/interfaces/track.h	/^    tdble		width;	\/**< Barrier width *\/$/;"	m	struct:trackBarrier
width	src/interfaces/track.h	/^    tdble	  width;	\/**< main track width *\/$/;"	m	struct:__anon153
width	src/interfaces/track.h	/^    tdble	width;$/;"	m	struct:__anon151
width	src/interfaces/track.h	/^    tdble width;		\/**< Width of the segment (if constant width) *\/$/;"	m	struct:trackSeg
width	src/libs/tgfclient/gui.h	/^    float		width, height;$/;"	m	struct:__anon68
width	src/libs/tgfclient/gui.h	/^    int			width, height;$/;"	m	struct:__anon62
width	src/tools/trackgen/elevation.cpp	/^static int	width, height;$/;"	v	file:
width	src/windows/include/plib/ssg.h	/^	unsigned int width ;$/;"	m	struct:ssgTextureInfo
width	src/windows/include/png.h	/^   png_uint_32 width;         \/* width of image in pixels *\/$/;"	m	struct:png_struct_def
width	src/windows/include/png.h	/^   png_uint_32 width;       \/* width of image in pixels (from IHDR) *\/$/;"	m	struct:png_info_struct
width	src/windows/include/png.h	/^   png_uint_32 width; \/* width of row *\/$/;"	m	struct:png_row_info_struct
width_l	src/drivers/olethros/TrackData.h	/^    float width_l;$/;"	m	class:TrackData
width_r	src/drivers/olethros/TrackData.h	/^    float width_r;$/;"	m	class:TrackData
win32-bin	doc/website/download_and_install.html	/^    <h2><a name="win32-bin"><\/a>Binary Installer Package For Windows<\/h2>$/;"	a
windHeading	src/windows/include/plib/ssgaWaveSystem.h	/^  float windHeading ;$/;"	m	class:ssgaWaveSystem
windSpeed	src/windows/include/plib/ssgaWaveSystem.h	/^  float windSpeed   ;$/;"	m	class:ssgaWaveSystem
windowsDirGetList	src/windows/windowsspec.cpp	/^windowsDirGetList(char *dir)$/;"	f	file:
windowsDirGetListFiltered	src/windows/windowsspec.cpp	/^windowsDirGetListFiltered(char *dir, char *suffix)$/;"	f	file:
windowsModFreeInfoList	src/windows/windowsspec.cpp	/^windowsModFreeInfoList(tModList **modlist)$/;"	f	file:
windowsModInfo	src/windows/windowsspec.cpp	/^windowsModInfo(unsigned int gfid, char *sopath, tModList **modlist)$/;"	f	file:
windowsModInfoDir	src/windows/windowsspec.cpp	/^windowsModInfoDir(unsigned int gfid, char *dir, int level, tModList **modlist)$/;"	f	file:
windowsModLoad	src/windows/windowsspec.cpp	/^windowsModLoad(unsigned int gfid, char *sopath, tModList **modlist)$/;"	f	file:
windowsModLoadDir	src/windows/windowsspec.cpp	/^windowsModLoadDir(unsigned int gfid, char *dir, tModList **modlist)$/;"	f	file:
windowsModUnloadList	src/windows/windowsspec.cpp	/^windowsModUnloadList(tModList **modlist)$/;"	f	file:
windowsTimeClock	src/windows/windowsspec.cpp	/^windowsTimeClock(void)$/;"	f	file:
wing	src/modules/simu/simuv2/carstruct.h	/^    tWing		wing[2];$/;"	m	struct:__anon18
within	src/libs/tgf/params.cpp	/^struct within$/;"	s	file:
withinList	src/libs/tgf/params.cpp	/^    struct withinHead			withinList;$/;"	m	struct:param	typeref:struct:param::withinHead	file:
wpos	src/windows/include/plib/sl.h	/^  char           *wpos ;          \/\/ write position for buffer$/;"	m	class:slDSP
wr	src/libs/txml/xml.cpp	/^wr(int indent, char *buf, FILE *out)$/;"	f	file:
wrapu	src/windows/include/plib/ssg.h	/^	int wrapu, wrapv, mipmap ;$/;"	m	class:ssgTexture
wrapv	src/windows/include/plib/ssg.h	/^	int wrapu, wrapv, mipmap ;$/;"	m	class:ssgTexture
writeKarma	src/drivers/bt/learn.cpp	/^void SegLearn::writeKarma()$/;"	f	class:SegLearn
writeKarma	src/drivers/damned/learn.cpp	/^void SegLearn::writeKarma()$/;"	f	class:SegLearn
writeTextureWithoutPath	src/tools/trackgen/objects.cpp	/^static const int writeTextureWithoutPath = TRUE;$/;"	v	file:
write_JPEG_file	src/misc/png2jpg/png2jpg.c	/^write_JPEG_file (FILE *outfile, unsigned char *image_buffer, int image_width, int image_height, int quality)$/;"	f
write_data_fn	src/windows/include/png.h	/^   png_rw_ptr write_data_fn;  \/* function for writing output data *\/$/;"	m	struct:png_struct_def
write_row_fn	src/windows/include/png.h	/^   png_write_status_ptr write_row_fn; \/* called after each row is encoded *\/$/;"	m	struct:png_struct_def
write_user_transform_fn	src/windows/include/png.h	/^   png_user_transform_ptr write_user_transform_fn; \/* user write transform *\/$/;"	m	struct:png_struct_def
written	src/windows/include/plib/sl.h	/^   DWORD          written;       \/\/ counter-written samples$/;"	m	class:slDSP
wrrec	src/libs/txml/xml.cpp	/^wrrec(txmlElement *startElt, FILE *out)$/;"	f	file:
x	export/include/js.h	/^         int x ;$/;"	m	struct:JS_DATA_TYPE
x	export/include/learning/ANN.h	/^	real* x; \/\/\/< inputs;$/;"	m	struct:Layer_
x	export/include/learning/ANN.h	/^	real* x; \/\/\/< unit inputs$/;"	m	struct:ANN_
x	export/include/tgf.h	/^    float	x;$/;"	m	struct:__anon188
x	export/include/tgf.h	/^    int		x;$/;"	m	struct:__anon190
x	export/include/tgf.h	/^    tdble	x;		\/**< x coordinate *\/$/;"	m	struct:__anon189
x	export/include/tgf.h	/^    tdble	x;		\/**< x coordinate *\/$/;"	m	struct:__anon191
x	export/include/tmath/v2_t.h	/^			struct { T x, y; };$/;"	m	struct:v2t::__anon218::__anon219
x	export/include/tmath/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon220::__anon221
x	export/include/tmath/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon216::__anon217
x	src/drivers/berniw/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
x	src/drivers/berniw/pathfinder.h	/^	double x;$/;"	m	struct:__anon118
x	src/drivers/berniw2/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
x	src/drivers/berniw2/pathfinder.h	/^	double x;$/;"	m	struct:__anon93
x	src/drivers/berniw3/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
x	src/drivers/berniw3/pathfinder.h	/^	double x;$/;"	m	struct:__anon109
x	src/drivers/bt/spline.h	/^		float x;	\/\/ x coordinate.$/;"	m	class:SplinePoint
x	src/drivers/damned/spline.h	/^		float x;	\/\/ x coordinate.$/;"	m	class:SplinePoint
x	src/drivers/olethros/TrackData.h	/^    float x;$/;"	m	class:Point
x	src/drivers/olethros/geometry.h	/^	float* x;$/;"	m	class:Vector
x	src/drivers/olethros/linalg.h	/^		float x;$/;"	m	class:v2d
x	src/drivers/olethros/spline.h	/^		float x;	\/\/ x coordinate.$/;"	m	class:SplinePoint
x	src/drivers/sparkle/linalg.h	/^        float x;$/;"	m	class:v2d
x	src/drivers/sparkle/spline.h	/^		float x;	\/* x coordinate *\/$/;"	m	class:SplinePoint
x	src/interfaces/js.h	/^         int x ;$/;"	m	struct:JS_DATA_TYPE
x	src/libs/learning/ANN.h	/^	real* x; \/\/\/< inputs;$/;"	m	struct:Layer_
x	src/libs/learning/ANN.h	/^	real* x; \/\/\/< unit inputs$/;"	m	struct:ANN_
x	src/libs/math/v2_t.h	/^			struct { T x, y; };$/;"	m	struct:v2t::__anon89::__anon90
x	src/libs/math/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon91::__anon92
x	src/libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon87::__anon88
x	src/libs/tgf/tgf.h	/^    float	x;$/;"	m	struct:__anon46
x	src/libs/tgf/tgf.h	/^    int		x;$/;"	m	struct:__anon48
x	src/libs/tgf/tgf.h	/^    tdble	x;		\/**< x coordinate *\/$/;"	m	struct:__anon47
x	src/libs/tgf/tgf.h	/^    tdble	x;		\/**< x coordinate *\/$/;"	m	struct:__anon49
x	src/libs/tgfclient/gui.h	/^    int		x, y;		\/* label position *\/$/;"	m	struct:__anon60
x	src/modules/simu/simuv2/susp.h	/^    tdble x; \/* suspension travel *\/$/;"	m	struct:Suspension
x	src/tools/accc/accc.h	/^  double x;$/;"	m	struct:point
x	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float x;$/;"	m	struct:__anon31	file:
x	src/tools/trackgen/easymesh.cpp	/^    double	x;$/;"	m	struct:vtx	file:
x	src/tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
x0	src/modules/simu/simuv2/susp.h	/^    tdble x0;         \/* initial suspension travel *\/$/;"	m	struct:__anon17
x1	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
x1	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
x1	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
x1	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
x1	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
x1	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
x2	src/drivers/berniw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon126
x2	src/drivers/berniw2/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon101
x2	src/drivers/berniw3/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon117
x2	src/drivers/inferno/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon142
x2	src/drivers/lliaw/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon135
x2	src/drivers/tita/spline.h	/^	double a, b, c, d, h, x1, x2;$/;"	m	struct:__anon108
xMax	src/modules/simu/simuv2/susp.h	/^    tdble xMax;       \/* maxi suspension travel *\/$/;"	m	struct:__anon17
x_blue	src/windows/include/png.h	/^   float x_blue;$/;"	m	struct:png_info_struct
x_green	src/windows/include/png.h	/^   float x_green;$/;"	m	struct:png_info_struct
x_max	src/tools/accc/accc.h	/^  double x_max;$/;"	m	struct:ob
x_min	src/tools/accc/accc.h	/^  double x_min;$/;"	m	struct:ob
x_offset	src/windows/include/png.h	/^   png_int_32 x_offset; \/* x offset on page *\/$/;"	m	struct:png_info_struct
x_pixels_per_unit	src/windows/include/png.h	/^   png_uint_32 x_pixels_per_unit; \/* horizontal pixel density *\/$/;"	m	struct:png_info_struct
x_red	src/windows/include/png.h	/^   float x_red;$/;"	m	struct:png_info_struct
x_white	src/windows/include/png.h	/^   float x_white;$/;"	m	struct:png_info_struct
xform	src/tools/texmapper/maintexmapper.cpp	/^    sgCoord	xform;$/;"	m	struct:Face	file:
xin	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
xmax	src/libs/tgfclient/gui.h	/^    int		xmax, ymax;$/;"	m	struct:GfuiObject
xmax	src/modules/track/track1.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmax	src/modules/track/track2.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmax	src/modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmax	src/modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmax	src/tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
xmin	src/libs/tgfclient/gui.h	/^    int		xmin, ymin;	\/* bounding box for focus *\/$/;"	m	struct:GfuiObject
xmin	src/modules/track/track1.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmin	src/modules/track/track2.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmin	src/modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmin	src/modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
xmin	src/tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
xmlAttribute	export/include/xml.h	/^typedef struct xmlAttribute {$/;"	s
xmlAttribute	src/libs/txml/xml.h	/^typedef struct xmlAttribute {$/;"	s
xmlElement	export/include/xml.h	/^typedef struct xmlElement {$/;"	s
xmlElement	src/libs/txml/xml.h	/^typedef struct xmlElement {$/;"	s
xmlEndElement	src/libs/tgf/params.cpp	/^xmlEndElement (void *userData, const XML_Char *name)$/;"	f	file:
xmlExternalEntityRefHandler	src/libs/tgf/params.cpp	/^xmlExternalEntityRefHandler (XML_Parser mainparser,$/;"	f	file:
xmlFindEltAttr	src/libs/txml/xml.cpp	/^xmlFindEltAttr(txmlElement *startElt, char *name, char *attrname, char *attrvalue)$/;"	f
xmlFindNextElt	src/libs/txml/xml.cpp	/^xmlFindNextElt(txmlElement *startElt, char *name)$/;"	f
xmlGetAttr	src/libs/txml/xml.cpp	/^xmlGetAttr(txmlElement *curElt, char *attrname)$/;"	f
xmlGetOuputLine	src/libs/tgf/params.cpp	/^xmlGetOuputLine (struct parmHandle *parmHandle, char *buffer, int \/* size *\/)$/;"	f	file:
xmlInsertElt	src/libs/txml/xml.cpp	/^xmlInsertElt(txmlElement *curElt, const char *name, const char **atts)$/;"	f
xmlNextElt	src/libs/txml/xml.cpp	/^xmlNextElt(txmlElement *startElt)$/;"	f
xmlReadFile	src/libs/txml/xml.cpp	/^xmlReadFile(const char *file)$/;"	f
xmlStartElement	src/libs/tgf/params.cpp	/^static void xmlStartElement (void *userData , const char *name, const char **atts)$/;"	f	file:
xmlSubElt	src/libs/txml/xml.cpp	/^xmlSubElt(txmlElement *startElt)$/;"	f
xmlWalkElt	src/libs/txml/xml.cpp	/^xmlWalkElt(txmlElement *startElt)$/;"	f
xmlWalkSubElt	src/libs/txml/xml.cpp	/^xmlWalkSubElt(txmlElement *startElt, txmlElement *topElt)$/;"	f
xmlWriteFile	src/libs/txml/xml.cpp	/^xmlWriteFile(const char *file, txmlElement *startElt, char *dtd)$/;"	f
xpos	src/modules/simu/simuv2/axle.h	/^    tdble xpos;$/;"	m	struct:__anon22
xsize	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short xsize ;$/;"	m	class:ssgSGIHeader
xv	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
xyz	src/windows/include/plib/sg.h	/^  sgVec3 xyz ;$/;"	m	struct:sgCoord
xyz	src/windows/include/plib/sg.h	/^  sgdVec3 xyz ;$/;"	m	struct:sgdCoord
y	export/include/js.h	/^         int y ;$/;"	m	struct:JS_DATA_TYPE
y	export/include/learning/ANN.h	/^	real* y; \/\/\/< outputs$/;"	m	struct:Layer_
y	export/include/learning/ANN.h	/^	real* y; \/\/\/< unit activations$/;"	m	struct:ANN_
y	export/include/tgf.h	/^    float	y;$/;"	m	struct:__anon188
y	export/include/tgf.h	/^    int		y;$/;"	m	struct:__anon190
y	export/include/tgf.h	/^    tdble	y;		\/**< y coordinate *\/$/;"	m	struct:__anon189
y	export/include/tgf.h	/^    tdble	y;		\/**< y coordinate *\/$/;"	m	struct:__anon191
y	export/include/tmath/v2_t.h	/^			struct { T x, y; };$/;"	m	struct:v2t::__anon218::__anon219
y	export/include/tmath/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon220::__anon221
y	export/include/tmath/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon216::__anon217
y	src/drivers/berniw/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
y	src/drivers/berniw2/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
y	src/drivers/berniw3/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
y	src/drivers/bt/spline.h	/^		float y;	\/\/ y coordinate.$/;"	m	class:SplinePoint
y	src/drivers/damned/spline.h	/^		float y;	\/\/ y coordinate.$/;"	m	class:SplinePoint
y	src/drivers/olethros/TrackData.h	/^    float y;$/;"	m	class:Point
y	src/drivers/olethros/linalg.h	/^		float y;$/;"	m	class:v2d
y	src/drivers/olethros/spline.h	/^		float y;	\/\/ y coordinate.$/;"	m	class:SplinePoint
y	src/drivers/sparkle/linalg.h	/^        float y;$/;"	m	class:v2d
y	src/drivers/sparkle/spline.h	/^		float y;	\/* y coordinate *\/$/;"	m	class:SplinePoint
y	src/interfaces/js.h	/^         int y ;$/;"	m	struct:JS_DATA_TYPE
y	src/libs/learning/ANN.h	/^	real* y; \/\/\/< outputs$/;"	m	struct:Layer_
y	src/libs/learning/ANN.h	/^	real* y; \/\/\/< unit activations$/;"	m	struct:ANN_
y	src/libs/math/v2_t.h	/^			struct { T x, y; };$/;"	m	struct:v2t::__anon89::__anon90
y	src/libs/math/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon91::__anon92
y	src/libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon87::__anon88
y	src/libs/tgf/tgf.h	/^    float	y;$/;"	m	struct:__anon46
y	src/libs/tgf/tgf.h	/^    int		y;$/;"	m	struct:__anon48
y	src/libs/tgf/tgf.h	/^    tdble	y;		\/**< y coordinate *\/$/;"	m	struct:__anon47
y	src/libs/tgf/tgf.h	/^    tdble	y;		\/**< y coordinate *\/$/;"	m	struct:__anon49
y	src/libs/tgfclient/gui.h	/^    int		x, y;		\/* label position *\/$/;"	m	struct:__anon60
y	src/modules/simu/simuv2/SOLID-2.0/src/Convex.cpp	/^static Vector y[4];   \/\/ support points of A - B in world coordinates$/;"	v	file:
y	src/tools/accc/accc.h	/^  double y;$/;"	m	struct:point
y	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float y;$/;"	m	struct:__anon31	file:
y	src/tools/trackgen/easymesh.cpp	/^    double	y;$/;"	m	struct:vtx	file:
y	src/tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
y_blue	src/windows/include/png.h	/^   float y_blue;$/;"	m	struct:png_info_struct
y_green	src/windows/include/png.h	/^   float y_green;$/;"	m	struct:png_info_struct
y_max	src/tools/accc/accc.h	/^  double y_max;$/;"	m	struct:ob
y_min	src/tools/accc/accc.h	/^  double y_min;$/;"	m	struct:ob
y_offset	src/windows/include/png.h	/^   png_int_32 y_offset; \/* y offset on page *\/$/;"	m	struct:png_info_struct
y_pixels_per_unit	src/windows/include/png.h	/^   png_uint_32 y_pixels_per_unit; \/* vertical pixel density *\/$/;"	m	struct:png_info_struct
y_red	src/windows/include/png.h	/^   float y_red;$/;"	m	struct:png_info_struct
y_white	src/windows/include/png.h	/^   float y_white;$/;"	m	struct:png_info_struct
year	src/windows/include/png.h	/^   png_uint_16 year; \/* full year, as in, 1995 *\/$/;"	m	struct:png_time_struct
yin	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
ymax	src/libs/tgfclient/gui.h	/^    int		xmax, ymax;$/;"	m	struct:GfuiObject
ymax	src/modules/telemetry/telemetry.cpp	/^    tdble	ymax;$/;"	m	struct:Tlm	file:
ymax	src/modules/track/track1.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymax	src/modules/track/track2.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymax	src/modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymax	src/modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymax	src/tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
ymin	src/libs/tgfclient/gui.h	/^    int		xmin, ymin;	\/* bounding box for focus *\/$/;"	m	struct:GfuiObject
ymin	src/modules/telemetry/telemetry.cpp	/^    tdble	ymin;$/;"	m	struct:Tlm	file:
ymin	src/modules/track/track1.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymin	src/modules/track/track2.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymin	src/modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymin	src/modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
ymin	src/tools/trackgen/easymesh.cpp	/^double xmax, xmin, ymax, ymin;$/;"	v
ysize	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short ysize ;$/;"	m	class:ssgSGIHeader
yv	src/tools/trackgen/easymesh.cpp	/^    double xv, yv, xin, yin, R, r, Det;$/;"	m	struct:ele	file:
z	export/include/learning/ANN.h	/^	real* z; \/\/\/< activation$/;"	m	struct:Layer_
z	export/include/tgf.h	/^    float	z;$/;"	m	struct:__anon188
z	export/include/tgf.h	/^    int		z;$/;"	m	struct:__anon190
z	export/include/tgf.h	/^    tdble	z;		\/**< z coordinate *\/$/;"	m	struct:__anon189
z	export/include/tgf.h	/^    tdble	z;		\/**< z coordinate *\/$/;"	m	struct:__anon191
z	export/include/tmath/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon220::__anon221
z	export/include/tmath/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon216::__anon217
z	src/drivers/berniw/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
z	src/drivers/berniw2/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
z	src/drivers/berniw3/linalg.h	/^		double x, y, z;		\/* coordinates *\/$/;"	m	class:v3d
z	src/drivers/olethros/TrackData.h	/^    float z;$/;"	m	class:Point
z	src/libs/learning/ANN.h	/^	real* z; \/\/\/< activation$/;"	m	struct:Layer_
z	src/libs/math/v3_t.h	/^			struct { T x, y, z; };$/;"	m	struct:v3t::__anon91::__anon92
z	src/libs/math/v4_t.h	/^			struct { T x, y, z, w; };$/;"	m	struct:v4t::__anon87::__anon88
z	src/libs/tgf/tgf.h	/^    float	z;$/;"	m	struct:__anon46
z	src/libs/tgf/tgf.h	/^    int		z;$/;"	m	struct:__anon48
z	src/libs/tgf/tgf.h	/^    tdble	z;		\/**< z coordinate *\/$/;"	m	struct:__anon47
z	src/libs/tgf/tgf.h	/^    tdble	z;		\/**< z coordinate *\/$/;"	m	struct:__anon49
z	src/tools/accc/accc.h	/^  double z;$/;"	m	struct:point
z	src/tools/nfs2ac/mainnfs2ac.cpp	/^    float z;$/;"	m	struct:__anon31	file:
z	src/tools/trackgen/easymesh.cpp	/^    double	z;$/;"	m	struct:vtx	file:
z	src/tools/trackgen/easymesh.h	/^    double x, y, z, F;$/;"	m	struct:nod
zOffset	src/modules/graphic/ssggraph/grcam.cpp	/^    float zOffset;$/;"	m	class:cGrCarCamRoadFly	file:
zRoad	src/modules/simu/simuv2/wheel.h	/^    tdble	zRoad;		\/* z of the road *\/$/;"	m	struct:__anon21
z_max	src/tools/accc/accc.h	/^  double z_max;$/;"	m	struct:ob
z_min	src/tools/accc/accc.h	/^  double z_min;$/;"	m	struct:ob
z_off_t	src/windows/include/zconf.h	241;"	d
z_off_t	src/windows/include/zconf.h	249;"	d
z_stream	src/windows/include/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	src/windows/include/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	src/windows/include/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t
zalloc	src/windows/include/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zbuf	src/windows/include/png.h	/^   png_bytep zbuf;            \/* buffer for zlib *\/$/;"	m	struct:png_struct_def
zbuf_size	src/windows/include/png.h	/^   png_size_t zbuf_size;      \/* size of zbuf *\/$/;"	m	struct:png_struct_def
zeroForce	src/windows/include/plib/sg.h	/^  void zeroForce   ()           { sgZeroVec3   ( force ) ; }$/;"	f	class:sgParticle
zeroes	src/modules/graphic/ssggraph/TorcsSound.h	/^	ALfloat zeroes[3]; \/\/\/< just a vector of 0s$/;"	m	class:OpenalTorcsSound
zeta	export/include/learning/ANN.h	/^	real zeta; \/\/\/< variance update smoothness$/;"	m	struct:ANN_
zeta	export/include/learning/ANN.h	/^	real zeta; \/\/\/< variance update smoothness.$/;"	m	struct:Layer_
zeta	export/include/learning/policy.h	/^	real zeta; \/\/\/< Confidence smoothing$/;"	m	class:DiscretePolicy
zeta	src/libs/learning/ANN.h	/^	real zeta; \/\/\/< variance update smoothness$/;"	m	struct:ANN_
zeta	src/libs/learning/ANN.h	/^	real zeta; \/\/\/< variance update smoothness.$/;"	m	struct:Layer_
zeta	src/libs/learning/policy.h	/^	real zeta; \/\/\/< Confidence smoothing$/;"	m	class:DiscretePolicy
zfree	src/windows/include/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zlib_level	src/windows/include/png.h	/^   int zlib_level;            \/* holds zlib compression level *\/$/;"	m	struct:png_struct_def
zlib_mem_level	src/windows/include/png.h	/^   int zlib_mem_level;        \/* holds zlib compression memory level *\/$/;"	m	struct:png_struct_def
zlib_method	src/windows/include/png.h	/^   int zlib_method;           \/* holds zlib compression method *\/$/;"	m	struct:png_struct_def
zlib_strategy	src/windows/include/png.h	/^   int zlib_strategy;         \/* holds zlib compression strategy *\/$/;"	m	struct:png_struct_def
zlib_version	src/windows/include/zlib.h	166;"	d
zlib_window_bits	src/windows/include/png.h	/^   int zlib_window_bits;      \/* holds zlib compression window bits *\/$/;"	m	struct:png_struct_def
zmax	src/modules/track/track1.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmax	src/modules/track/track2.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmax	src/modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmax	src/modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmin	src/modules/track/track1.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmin	src/modules/track/track2.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmin	src/modules/track/track3.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zmin	src/modules/track/track4.cpp	/^static tdble	xmin, xmax, ymin, ymax, zmin, zmax;$/;"	v	file:
zsize	src/modules/graphic/ssggraph/grloadsgi.h	/^		unsigned short zsize ;$/;"	m	class:ssgSGIHeader
zstream	src/windows/include/png.h	/^   z_stream zstream;          \/* pointer to decompression structure (below) *\/$/;"	m	struct:png_struct_def
~ANN_Policy	src/libs/learning/ann_policy.cpp	/^ANN_Policy::~ANN_Policy()$/;"	f	class:ANN_Policy
~AbstractCar	src/drivers/berniw/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	src/drivers/berniw2/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	src/drivers/berniw3/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	src/drivers/inferno/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	src/drivers/lliaw/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractCar	src/drivers/tita/mycar.h	/^		~AbstractCar() {};$/;"	f	class:AbstractCar
~AbstractStrategy	src/drivers/bt/strategy.h	/^		virtual ~AbstractStrategy() {}$/;"	f	class:AbstractStrategy
~AbstractStrategy	src/drivers/damned/strategy.h	/^		virtual ~AbstractStrategy() {}$/;"	f	class:AbstractStrategy
~AbstractStrategy	src/drivers/olethros/strategy.h	/^	virtual ~AbstractStrategy() {};$/;"	f	class:olethros::AbstractStrategy
~Cardata	src/drivers/bt/cardata.cpp	/^Cardata::~Cardata()$/;"	f	class:Cardata
~Cardata	src/drivers/damned/cardata.cpp	/^Cardata::~Cardata()$/;"	f	class:Cardata
~Cardata	src/drivers/olethros/cardata.cpp	/^Cardata::~Cardata()$/;"	f	class:olethros::Cardata
~Complex	src/modules/simu/simuv2/SOLID-2.0/src/Complex.cpp	/^Complex::~Complex() {$/;"	f	class:Complex
~Convex	src/modules/simu/simuv2/SOLID-2.0/src/Convex.h	/^  virtual ~Convex() {}$/;"	f	class:Convex
~DiscreteDistribution	src/libs/learning/Distribution.cpp	/^DiscreteDistribution::~DiscreteDistribution() {$/;"	f	class:DiscreteDistribution
~DiscretePolicy	src/libs/learning/policy.cpp	/^DiscretePolicy::~DiscretePolicy()$/;"	f	class:DiscretePolicy
~Distribution	export/include/learning/Distribution.h	/^	virtual ~Distribution() {}$/;"	f	class:Distribution
~Distribution	src/libs/learning/Distribution.h	/^	virtual ~Distribution() {}$/;"	f	class:Distribution
~Driver	src/drivers/bt/driver.cpp	/^Driver::~Driver()$/;"	f	class:Driver
~Driver	src/drivers/damned/driver.cpp	/^Driver::~Driver()$/;"	f	class:Driver
~Driver	src/drivers/olethros/driver.cpp	/^    Driver::~Driver()$/;"	f	class:olethros::Driver
~Driver	src/drivers/sparkle/driver.cpp	/^Driver::~Driver()$/;"	f	class:Driver
~Endpoint	src/modules/simu/simuv2/SOLID-2.0/src/Endpoint.h	/^  ~Endpoint() { if (objPtr) remove(); }$/;"	f	class:Endpoint
~ExponentialDistribution	export/include/learning/Distribution.h	/^	virtual ~ExponentialDistribution() {}$/;"	f	class:ExponentialDistribution
~ExponentialDistribution	src/libs/learning/Distribution.h	/^	virtual ~ExponentialDistribution() {}$/;"	f	class:ExponentialDistribution
~GfuiFontClass	src/libs/tgfclient/guifont.cpp	/^GfuiFontClass::~GfuiFontClass()$/;"	f	class:GfuiFontClass
~IndexArray	src/modules/simu/simuv2/SOLID-2.0/src/IndexArray.h	/^  ~IndexArray() { delete [] indices; }$/;"	f	class:IndexArray
~LaplacianDistribution	export/include/learning/Distribution.h	/^	virtual ~LaplacianDistribution() {}$/;"	f	class:LaplacianDistribution
~LaplacianDistribution	src/libs/learning/Distribution.h	/^	virtual ~LaplacianDistribution() {}$/;"	f	class:LaplacianDistribution
~ManagedStrategy	src/drivers/olethros/strategy.cpp	/^ManagedStrategy::~ManagedStrategy()$/;"	f	class:olethros::ManagedStrategy
~MultinomialGaussian	export/include/learning/Distribution.h	/^	virtual ~MultinomialGaussian() {}$/;"	f	class:MultinomialGaussian
~MultinomialGaussian	src/libs/learning/Distribution.h	/^	virtual ~MultinomialGaussian() {}$/;"	f	class:MultinomialGaussian
~MyCar	src/drivers/berniw/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	src/drivers/berniw2/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	src/drivers/berniw3/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	src/drivers/inferno/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	src/drivers/lliaw/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~MyCar	src/drivers/tita/mycar.cpp	/^MyCar::~MyCar()$/;"	f	class:MyCar
~NormalDistribution	export/include/learning/Distribution.h	/^	virtual ~NormalDistribution() {std::cout << "Normal dist destroyed\\n";}$/;"	f	class:NormalDistribution
~NormalDistribution	src/libs/learning/Distribution.h	/^	virtual ~NormalDistribution() {std::cout << "Normal dist destroyed\\n";}$/;"	f	class:NormalDistribution
~OpenalSoundInterface	src/modules/graphic/ssggraph/OpenalSoundInterface.cpp	/^OpenalSoundInterface::~OpenalSoundInterface()$/;"	f	class:OpenalSoundInterface
~OpenalTorcsSound	src/modules/graphic/ssggraph/TorcsSound.cpp	/^OpenalTorcsSound::~OpenalTorcsSound()$/;"	f	class:OpenalTorcsSound
~Opponents	src/drivers/bt/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:Opponents
~Opponents	src/drivers/damned/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:Opponents
~Opponents	src/drivers/olethros/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:olethros::Opponents
~Opponents	src/drivers/sparkle/opponent.cpp	/^Opponents::~Opponents()$/;"	f	class:Opponents
~ParametricDistribution	export/include/learning/Distribution.h	/^	virtual ~ParametricDistribution() {}$/;"	f	class:ParametricDistribution
~ParametricDistribution	src/libs/learning/Distribution.h	/^	virtual ~ParametricDistribution() {}$/;"	f	class:ParametricDistribution
~ParametricLine	src/drivers/olethros/geometry.cpp	/^ParametricLine::~ParametricLine()$/;"	f	class:ParametricLine
~ParametricSphere	src/drivers/olethros/geometry.cpp	/^ParametricSphere::~ParametricSphere()$/;"	f	class:ParametricSphere
~PathSeg	src/drivers/inferno/pathfinder.h	/^		~PathSeg() { delete [] ps; }$/;"	f	class:PathSeg
~PathSeg	src/drivers/lliaw/pathfinder.h	/^		~PathSeg() { delete [] ps; }$/;"	f	class:PathSeg
~PathSeg	src/drivers/tita/pathfinder.h	/^		~PathSeg() { delete [] ps; }$/;"	f	class:PathSeg
~PathSegOpt	src/drivers/inferno/pathfinder.h	/^		~PathSegOpt() { delete [] o; delete [] tr; delete [] length; delete [] disttomiddle; delete [] nextborderseg; }$/;"	f	class:PathSegOpt
~PathSegOpt	src/drivers/lliaw/pathfinder.h	/^		~PathSegOpt() { delete [] o; delete [] tr; delete [] length; delete [] disttomiddle; delete [] nextborderseg; }$/;"	f	class:PathSegOpt
~PathSegOpt	src/drivers/tita/pathfinder.h	/^		~PathSegOpt() { delete [] o; delete [] tr; delete [] length; delete [] disttomiddle; delete [] nextborderseg; }$/;"	f	class:PathSegOpt
~PathSegPit	src/drivers/inferno/pathfinder.h	/^		~PathSegPit() { delete [] l; }$/;"	f	class:PathSegPit
~PathSegPit	src/drivers/lliaw/pathfinder.h	/^		~PathSegPit() { delete [] l; }$/;"	f	class:PathSegPit
~PathSegPit	src/drivers/tita/pathfinder.h	/^		~PathSegPit() { delete [] l; }$/;"	f	class:PathSegPit
~Pathfinder	src/drivers/berniw/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	src/drivers/berniw2/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	src/drivers/berniw3/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	src/drivers/inferno/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	src/drivers/lliaw/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pathfinder	src/drivers/tita/pathfinder.cpp	/^Pathfinder::~Pathfinder()$/;"	f	class:Pathfinder
~Pit	src/drivers/bt/pit.cpp	/^Pit::~Pit()$/;"	f	class:Pit
~Pit	src/drivers/damned/pit.cpp	/^Pit::~Pit()$/;"	f	class:Pit
~Pit	src/drivers/olethros/pit.cpp	/^Pit::~Pit()$/;"	f	class:olethros::Pit
~Pit	src/drivers/sparkle/pit.cpp	/^Pit::~Pit()$/;"	f	class:Pit
~PlibSoundInterface	src/modules/graphic/ssggraph/PlibSoundInterface.cpp	/^PlibSoundInterface::~PlibSoundInterface()$/;"	f	class:PlibSoundInterface
~PlibTorcsSound	src/modules/graphic/ssggraph/TorcsSound.cpp	/^PlibTorcsSound::~PlibTorcsSound()$/;"	f	class:PlibTorcsSound
~Polyhedron	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Polyhedron::~Polyhedron() {$/;"	f	class:Polyhedron
~Polyhedron	src/modules/simu/simuv2/SOLID-2.0/src/Polyhedron.cpp	/^Polyhedron::~Polyhedron() {}$/;"	f	class:Polyhedron
~Polytope	src/modules/simu/simuv2/SOLID-2.0/src/Polytope.h	/^  virtual ~Polytope() {}$/;"	f	class:Polytope
~Profiler	src/libs/tgf/profiler.cpp	/^Profiler::~Profiler() {$/;"	f	class:Profiler
~SegLearn	src/drivers/bt/learn.cpp	/^SegLearn::~SegLearn()$/;"	f	class:SegLearn
~SegLearn	src/drivers/damned/learn.cpp	/^SegLearn::~SegLearn()$/;"	f	class:SegLearn
~SegLearn	src/drivers/olethros/learn.cpp	/^SegLearn::~SegLearn()$/;"	f	class:SegLearn
~Shape	src/modules/simu/simuv2/SOLID-2.0/src/Shape.h	/^  virtual ~Shape() {}$/;"	f	class:Shape
~SharedSourcePool	src/modules/graphic/ssggraph/SoundInterface.h	/^		virtual ~SharedSourcePool() {$/;"	f	class:SharedSourcePool
~SimpleStrategy	src/drivers/bt/strategy.cpp	/^SimpleStrategy::~SimpleStrategy()$/;"	f	class:SimpleStrategy
~SimpleStrategy	src/drivers/damned/strategy.cpp	/^SimpleStrategy::~SimpleStrategy()$/;"	f	class:SimpleStrategy
~SimpleStrategy	src/drivers/olethros/strategy.cpp	/^SimpleStrategy::~SimpleStrategy()$/;"	f	class:olethros::SimpleStrategy
~SimpleStrategy2	src/drivers/bt/strategy.cpp	/^SimpleStrategy2::~SimpleStrategy2()$/;"	f	class:SimpleStrategy2
~SimpleStrategy2	src/drivers/damned/strategy.cpp	/^SimpleStrategy2::~SimpleStrategy2()$/;"	f	class:SimpleStrategy2
~SoundInterface	src/modules/graphic/ssggraph/SoundInterface.h	/^	virtual ~SoundInterface() {}$/;"	f	class:SoundInterface
~TorcsSound	src/modules/graphic/ssggraph/TorcsSound.h	/^	virtual ~TorcsSound() {}$/;"	f	class:TorcsSound
~TrackDesc	src/drivers/berniw/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	src/drivers/berniw2/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	src/drivers/berniw3/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	src/drivers/inferno/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	src/drivers/lliaw/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackDesc	src/drivers/tita/trackdesc.cpp	/^TrackDesc::~TrackDesc()$/;"	f	class:TrackDesc
~TrackSegment	src/drivers/berniw/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	src/drivers/berniw2/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	src/drivers/berniw3/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	src/drivers/inferno/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	src/drivers/lliaw/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment	src/drivers/tita/trackdesc.cpp	/^TrackSegment::~TrackSegment()$/;"	f	class:TrackSegment
~TrackSegment2D	src/drivers/inferno/trackdesc.cpp	/^TrackSegment2D::~TrackSegment2D()$/;"	f	class:TrackSegment2D
~TrackSegment2D	src/drivers/lliaw/trackdesc.cpp	/^TrackSegment2D::~TrackSegment2D()$/;"	f	class:TrackSegment2D
~TrackSegment2D	src/drivers/tita/trackdesc.cpp	/^TrackSegment2D::~TrackSegment2D()$/;"	f	class:TrackSegment2D
~UniformDistribution	export/include/learning/Distribution.h	/^	virtual ~UniformDistribution() {}$/;"	f	class:UniformDistribution
~UniformDistribution	src/libs/learning/Distribution.h	/^	virtual ~UniformDistribution() {}$/;"	f	class:UniformDistribution
~Vector	src/drivers/olethros/geometry.cpp	/^Vector::~Vector()$/;"	f	class:Vector
~cGrBoard	src/modules/graphic/ssggraph/grboard.cpp	/^cGrBoard::~cGrBoard () {$/;"	f	class:cGrBoard
~cGrCamera	src/modules/graphic/ssggraph/grcam.h	/^    virtual ~cGrCamera() {};$/;"	f	class:cGrCamera
~cGrCarCamMirror	src/modules/graphic/ssggraph/grcam.cpp	/^cGrCarCamMirror::~cGrCarCamMirror ()$/;"	f	class:cGrCarCamMirror
~cGrCarCamRoadZoomTVD	src/modules/graphic/ssggraph/grcam.cpp	/^    ~cGrCarCamRoadZoomTVD() { free(schedView); }$/;"	f	class:cGrCarCamRoadZoomTVD
~cGrScreen	src/modules/graphic/ssggraph/grscreen.cpp	/^cGrScreen::~cGrScreen()$/;"	f	class:cGrScreen
~cGrTrackMap	src/modules/graphic/ssggraph/grtrackmap.cpp	/^cGrTrackMap::~cGrTrackMap()$/;"	f	class:cGrTrackMap
~grMultiTexState	src/modules/graphic/ssggraph/grmultitexstate.h	/^		~grMultiTexState() {}$/;"	f	class:grMultiTexState
~grVtxTable	src/modules/graphic/ssggraph/grvtxtable.cpp	/^grVtxTable::~grVtxTable ()$/;"	f	class:grVtxTable
~jsJoystick	export/include/js.h	/^  ~jsJoystick ()$/;"	f	class:jsJoystick
~jsJoystick	src/interfaces/js.h	/^  ~jsJoystick ()$/;"	f	class:jsJoystick
~slDSP	src/windows/include/plib/sl.h	/^ ~slDSP () { close () ; }$/;"	f	class:slDSP
~slEnvelope	src/windows/include/plib/sl.h	/^ ~slEnvelope ()$/;"	f	class:slEnvelope
~slSample	src/windows/include/plib/sl.h	/^ ~slSample ()$/;"	f	class:slSample
~ssgLoaderOptions	src/windows/include/plib/ssg.h	/^  virtual ~ssgLoaderOptions()$/;"	f	class:ssgLoaderOptions
~ssgSimpleList	src/windows/include/plib/ssg.h	/^  virtual ~ssgSimpleList (void)$/;"	f	class:ssgSimpleList
~ssgVtxTableCarlight	src/modules/graphic/ssggraph/grcarlight.cpp	/^ssgVtxTableCarlight::~ssgVtxTableCarlight ()$/;"	f	class:ssgVtxTableCarlight
~ssgVtxTableShadow	src/modules/graphic/ssggraph/grshadow.cpp	/^ssgVtxTableShadow::~ssgVtxTableShadow ()$/;"	f	class:ssgVtxTableShadow
~ssgVtxTableSmoke	src/modules/graphic/ssggraph/grsmoke.cpp	/^ssgVtxTableSmoke::~ssgVtxTableSmoke ()$/;"	f	class:ssgVtxTableSmoke
~ulDynamicLibrary	src/windows/include/plib/ul.h	/^    ~ulDynamicLibrary ()$/;"	f	class:ulDynamicLibrary
~ulDynamicLibrary	src/windows/include/plib/ul.h	/^  ~ulDynamicLibrary ()$/;"	f	class:ulDynamicLibrary
~ulDynamicLibrary	src/windows/include/ul.h	/^    ~ulDynamicLibrary ()$/;"	f	class:ulDynamicLibrary
~ulDynamicLibrary	src/windows/include/ul.h	/^  ~ulDynamicLibrary ()$/;"	f	class:ulDynamicLibrary
~ulLinkedList	src/windows/include/plib/ul.h	/^  ~ulLinkedList () { empty () ; }$/;"	f	class:ulLinkedList
~ulLinkedList	src/windows/include/ul.h	/^  ~ulLinkedList () { empty () ; }$/;"	f	class:ulLinkedList
